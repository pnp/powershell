{
  "articles/authentication.html": {
    "href": "articles/authentication.html",
    "title": "Authentication | PnP PowerShell",
    "keywords": "Authentication Before you can authenticate using PnP PowerShell, you need to ensure you have created your own application registration first and that you have set the proper permissions on the application registration. PnP PowerShell offers many different ways to authenticate to your tenant. Based on what you would like to achieve, pick the method that best suits your needs below. Instead of having to provide -ClientId on every connect, you can also opt to configure a default Client ID that will be used if -ClientID is not being specified in your Connect-PnPOnline. Interactive Authentication This is the easiest method to authenticate, but it requires you to enter your credentials and go through multi factor authentication and conditional access policy steps, if applicable, each time you connect. This works perfectly well if your intend is to manually run scripts, but is not suitable to run unattended scripts at i.e. timed intervals. Connecting can be done using: Connect-PnPOnline [yourtenant].sharepoint.com -Interactive -ClientId <client id of your Entra ID Application Registration> This will show a popup window which will allow to authenticate and step through the multi-factor authentication flow. Ensure you provide the Client ID of your own Entra ID Application Registration with the -ClientId parameter. Authenticating from another device or specific browser In some scenarios it can happen that you need to authenticate to PnP PowerShell from a different device or through a specific browser. In these cases you can use the -DeviceLogin method to connect. A sample scenario could for example be when running PnP PowerShell scripts on a Raspberry Pi without a desktop environment installed on it. In this case there is no browser to authenticate through on the device itself. Connecting can be done using: Connect-PnPOnline [yourtenant].sharepoint.com -DeviceLogin -Tenant <tenant>.onmicrosoft.com -ClientId <client id of your Entra ID Application Registration> When running this line, it will prompt in text to go to https://microsoft.com/devicelogin on any device and log in using a specific code which will be shown in the text. You can perform this step on any device. This does not have to be the same device as you're using PnP PowerShell on. After going to that website and entering the code shown in the text, you can complete the interactive login process as normal, including any multi factor authentication requirements that might have been set up for your account. Once the authentication completes, PnP PowerShell will automatically detect this and will be ready to be used. Authenticating using Web Account Manager Another option to authenticate is using Web Account Manager (WAM). WAM is a more secure & faster way of authenticating in Windows OS. It supports Windows Hello, FIDO keys, single sign on, conditional access policies, and more. It only works on Windows 10 (Version 1703 - Creators Update) and above, as well as Windows Server 2019 and above. Connecting can be done using: Connect-PnPOnline [yourtenant].sharepoint.com -OSLogin -ClientId <client id of your Entra ID Application Registration> Non interactive Authentication If your goal is to automatically connect to PnP PowerShell without user intervention of having to enter credentials or perform multi factor authentication steps, this is the method to go with. Ensure you have gone through the steps to set up an App Only application registration first. Your application registration needs to use a public/private key pair certificate to authenticate. A client secret is not supported. The public key (.cer) goes into your application registration in Entra ID, the private key (.pfx) will be used to connect using PnP PowerShell. Depending on how you have the certificate available, choose the section below that matches your scenario. Non interactive Authentication using a certificate file If you have the private key certificate (.pfx) stored as a physical file on your machine, you can connecting using: Connect-PnPOnline [yourtenant].sharepoint.com -ClientId <client id of your Entra ID Application Registration> -Tenant <tenant>.onmicrosoft.com -CertificatePath <path to your .pfx certificate> If your private key (.pfx) certificate has a password on it, add -CertificatePassword (ConvertTo-SecureString -AsPlainText 'myprivatekeypassword' -Force) to the parameters. Non interactive Authentication using a certificate in the Windows Certificate Store If you have the private key certificate (.pfx) added to the Windows Certificate Store (certmgr. msc) in the Personal > Certificates branch on your machine, you can connecting using: Connect-PnPOnline [yourtenant].sharepoint.com -ClientId <client id of your Entra ID Application Registration> -Tenant <tenant>.onmicrosoft.com -Thumbprint <thumbprint that can be found in the certificate> Non interactive Authentication using a base64 representation of the certificate This scenario is typically used when having the private key certificate (.pfx) stored as base64. This can for example be the case when using PnP PowerShell within Azure Functions. In this case you can connect using: Connect-PnPOnline [yourtenant].sharepoint.com -ClientId <client id of your Entra ID Application Registration> -Tenant <tenant>.onmicrosoft.com -CertificateBase64Encoded <base64 encoded pfx certificate> If your private key (.pfx) certificate has a password on it, add -CertificatePassword (ConvertTo-SecureString -AsPlainText 'myprivatekeypassword' -Force) to the parameters. If you wish to convert a private key certificate file to its Base64 encoded equivalent, you can use: $bytes = Get-Content '.\\PnPPowerShell.pfx' -AsByteStream $encodedPfx = [System.Convert]::ToBase64String($bytes) Authenticating by providing an access token A really specific and limited scenario is where you provide the oAuth JWT access token yourself that needs to be used to access resources. You can only pass in one access token and you need to ensure the token is still within its validity period and has the proper audience and scopes for the cmdlets you are going to execute. I.e. if you pass in an access token for your SharePoint Online tenant, you can only execute cmdlets that will directly target your SharePoint Online environment. If you would use a cmdlet that communicates with Microsoft Graph behind the scenes, it will throw an access denied exception. Connecting can be done using: Connect-PnPOnline [yourtenant].sharepoint.com -AccessToken <oAuth JWT access token> Authenticating with Credentials This method allows you to connect by just providing your username and password. It will not work with multi factor authentication. Therefore this method is less recommended. Connecting can be done using: Connect-PnPOnline [yourtenant].sharepoint.com -ClientId <client id of your Entra ID Application Registration> -Credentials (Get-Credential) and you will be prompted for credentials. Ensure you provide the Client ID of your own Entra ID Application Registration with the -ClientId parameter. Authenticating with pre-stored credentials using the Windows Credential Manager (Windows only) This method can be used if you just intend to use PnP PowerShell on a Windows device, you want to use just a username and password for an account that does not require multi factor authentication, and you wish to store these credentials in the Windows Credential Manager so you don't have to enter them every time you connect. As this will not work with multi factor authentication, this method is less recommended. Adding your credentials to the Windows Credential Manager, which is a one time operation, can be done using: Add-PnPStoredCredential -Name \"yourlabel\" -Username youruser@domain.com You will be prompted to provide a password. After that you can login using: Connect-PnPOnline [yourtenant].sharepoint.com -ClientId <client id of your Entra ID Application Registration> -Credentials \"yourlabel\" When you create the stored credentials (with Add-PnPStoredCredential or any other tool) if the Name you give it is the URL for your tenant you can omit the -Credentials parameter with Connect-PnPOnline. Using the example above create your stored credential with this command: Add-PnPStoredCredential -Name \"https://[yourtenant].sharepoint.com\" -Username youruser@contoso.com When connecting to https://yourtenant.sharepoint.com you can use this command: Connect-PnPOnline [yourtenant].sharepoint.com -ClientId <client id of your Entra ID Application Registration> Connect-PnPOnline will look through the Windows Credential Manager for a credential matching the URL. If it finds one it will use it. It will also match that credential with deeper connection URLs like https://yourtenant.sharepoint.com/sites/IT. You can create additional stored credentials for deeper sites if you routinely connect to them with different credentials. If you want to connect with a different set of credentials you can use the -Credentials parameter to specify them. A stored credential can be used for other URLs, like the Admin site: Connect-PnPOnline [yourtenant]-admin.sharepoint.com -ClientId <client id of your Entra ID Application Registration> -Credentials https://[yourtenant].sharepoint.com Authenticating with pre-stored credentials using the Secrets Management Module from Microsoft (Multi-Platform) This method can be used if you just intend to use PnP PowerShell on a Windows, Linux or iOS device, you want to use just a username and password for an account that does not require multi factor authentication, and you wish to store these credentials in the a Credential Manager so you don't have to enter them every time you connect. As this will not work with multi factor authentication, this method is less recommended. Adding your credentials to the Credential Manager, which is a one time operation, can be done using: Install-Module -Name Microsoft.PowerShell.SecretManagement -AllowPrerelease Install-Module -Name Microsoft.PowerShell.SecretStore -AllowPrerelease Set-SecretStoreConfiguration Set-Secret -Name \"yourlabel\" -Secret (Get-Credential) This creates a new secret vault on your computer. You will be asked to provide a password to access the vault. If you access the vault you will be prompted for that password. In case you want to want to write automated scripts you will have to turn off this password prompt as follows: Set-SecretStoreConfiguration -Authentication None For more information about these cmdlets, check out the github repositories: https://github.com/powershell/secretmanagement and https://github.com/powershell/secretstore. After you set up the vault and you added a credential, you can connect using: Connect-PnPOnline [yourtenant].sharepoint.com -ClientId <client id of your Entra ID Application Registration> -Credentials (Get-Secret -Name \"yourlabel\") Authentication to GCC or National Cloud environments In order to connect to a GCC or a national cloud environment, ensure you have followed the specific steps for setting up the application registration for national clouds. Connecting can be done using: Connect-PnPOnline [yourtenant].sharepoint.com -Interactive -ClientId [clientid] -Tenant [yourtenant].onmicrosoft.com -AzureEnvironment [USGovernment|USGovernmentHigh|USGovernmentDoD|Germany|China] The AzureEnvironment parameter only allows one value. Select the correct one that matches your cloud deployment. Silent Authentication with Credentials for running in Pipelines For running Connect-PnPOnline with user credentials in Azure DevOps pipeline, you need to make sure that authentication in your Entra ID application is configured to allow public client. Public client can be configured from the Azure portal from the Authentication Blade in the application or by setting the allowPublicClient property in the application's manifest to true. username and password for service account can be stored as secret pipeline variables and can be referenced in the script to achieve complete automation. Silent Authentication with Credentials and MFA for running in Azure DevOps Pipelines with Microsoft Hosted Agents Identify the possible IP ranges for Microsoft-hosted agents Identify the region for your organization in Organization settings. Identify the Azure Geography for your organization's region. Map the names of the regions in your geography to the format used in the weekly file, following the format of AzureCloud., such as AzureCloud.westus. You can map the names of the regions from the Azure Geography list to the format used in the weekly file. You can find the weekly IP file at the following URL: https://www.microsoft.com/en-us/download/details.aspx?id=56519 For example, if your organization is located in the South East Asia region, you would map it to the format AzureCloud.SouthEastAsia. Create a named location in Entra ID conditional access Go to Entra ID conditional access Open named location blade, click on + IP Ranges Location Enter the IP ranges for Microsoft Hosted Agents, Mark as trusted location should be checked. Create a conditional access policy Go to Entra ID conditional access, click on +New Policy. Give a meaningful name, click on Users and Groups -> Include select users and groups, select the user with which you want to run your pipeline. Include all cloud apps. Under conditions -> locations include any locations and exclude the recently created named location. Under grant -> choose grant access. Only require multifactor authentication needs to be checked. Enable the policy and click on Save. Important You need to make sure that the new policy does not conflicts with any other policy in your tenant, otherwise make the changes accordingly. Powershell script to be run in pipeline $creds = New-Object System.Management.Automation.PSCredential -ArgumentList ($username, $password) Connect-PnPOnline -Url <site url> -Credentials $creds -ClientId <Application/Client ID of Entra ID app>"
  },
  "articles/azure.html": {
    "href": "articles/azure.html",
    "title": "Using PnP PowerShell in Azure | PnP PowerShell",
    "keywords": "Using PnP PowerShell in Azure PnP PowerShell can perfectly be used in various Azure components such as: Azure Functions Azure Automation Runbooks Azure Cloud Shell Click on the link for the Azure component you wish to use to learn more about how to set it up to be used with PnP PowerShell."
  },
  "articles/azureautomationrunbook.html": {
    "href": "articles/azureautomationrunbook.html",
    "title": "Using PnP PowerShell in Azure Automation Runbooks | PnP PowerShell",
    "keywords": "Using PnP PowerShell in Azure Automation Runbooks In this article we will setup an Azure Automation Rubook to use PnP PowerShell. Create the Azure Automation Runbook As the UI in the Azure Portal changes every now and then, but the principles stay the same, follow the following steps: Go to the Azure Portal and login with your Azure credentials Create a new Azure Automation Account using the Create a resource button and searching for Automation or use this direct link to locate it Fill out the details for the Azure Automation Account as desired and click Review + Create at the bottom left followed by clicking on Create on the review screen Once the resource has been created, click on Go to resource to open the Azure Automation resource Configure the Azure Automation Account Now your Azure Automation Account has been created, proceed with the next paragraphs to configure it for using PnP PowerShell. Add the PnP PowerShell module to the Azure Automation Account To add PnP PowerShell to the Azure Automation Account, follow these steps: Navigate to Modules which is located the left side menu of the function app under the Shared Resources header. Click on Add a module at the top of the screen Choose from the following options: Specific stable version Important Currently the only stable PnP PowerShell version that works with Azure Automation 7.2 Runbooks is 2.12.0. Later versions are currently not supported. If you would like to use a latest nightly build instead, use the below instructions Select Browse from gallery, Runtime version 7.2 (recommended) and click on the Click here to browse from gallery link Search for PnP PowerShell and select the first result. Click on Select to confirm. Click on Import to start the download and importing process. It will take up to 10 minutes for the import to complete. You can check the import status by changing the Module type filter to Custom. Once it's done, it will show the status Available Latest prerelease version If you wish to use the latest prerelease/nightly build version, open up a PowerShell 7 console and execute: Save-Module PnP.PowerShell -AllowPrerelease -Path c:\\temp Using Windows File Explorer, go to the folder where you downloaded the PnP PowerShell package. You should see a folder called PnP.PowerShell in there. Right click on it and choose the option Compress to ZIP file. Select Browse for file, Runtime version 7.2 (recommended) and click on the folder icon next to Powershell module file and select the zipped up PnP.PowerShell.zip file generated in the previous step. Click on Import to start the download and importing process. It will take up to 10 minutes for the import to complete. You can check the import status by changing the Module type filter to Custom. Once it's done, it will show the status Available Decide how you want to authenticate in your Azure Automation Runbooks By using a Managed Identity The recommended option is to use a managed identity in Azure to allow your Azure Automation Runbook to connect to Microsoft Graph or SharePoint Online using PnP PowerShell. Using this method, you specifically grant permissions for your Azure Runbook to access these permissions, without having any client secret or certificate pair that potentially could fall into wrong hands. This makes this option the most secure option by far. Since version 1.11.95-nightly, Managed Identities are both supported against SharePoint Online as well as Microsoft Graph cmdlets. Before this version, only Microsoft Graph was being supported. Enabling the managed identity for an Azure Automation Runbook In your Azure Automation account, in the left menu, go to Identity under Account Settings Ensure you are on the System assigned tab and flip the switch for Status to On, if not already done Click the Save button and confirm your action in the dialog box that will be shown A new entry will now automatically be created in your Azure Active Directory for this app having the same name as your Azure Function and the Object (principal) ID shown on this page. Take notice of the Object (principal) ID. We will need it in the next section to assign permissions to. Assigning permissions to the managed identity Next step is to assign permissions to this managed identity so it is authorized to access the Microsoft Graph and/or SharePoint Online. If you don't know which permissions exist yet, you can use the below sample to get a list of all available permissions: Get-PnPAzureADServicePrincipal -BuiltInType MicrosoftGraph | Get-PnPAzureADServicePrincipalAvailableAppRole Get-PnPAzureADServicePrincipal -BuiltInType SharePointOnline | Get-PnPAzureADServicePrincipalAvailableAppRole Once you know which permissions you would like to assign, you can use the below samples. Note that the Principal requires the object Id (not the application/client id) or the application name. Add-PnPAzureADServicePrincipalAppRole -Principal \"62614f96-cb78-4534-bf12-1f6693e8237c\" -AppRole \"Group.Read.All\" -BuiltInType MicrosoftGraph Add-PnPAzureADServicePrincipalAppRole -Principal \"mymanagedidentity\" -AppRole \"Sites.FullControl.All\" -BuiltInType SharePointOnline Create a Runbook We're now ready to create a Runbook in which your PnP PowerShell script will run. In the Azure Portal, in the left menu, click on Runbooks under Process Automation Click on Create a runbook at the top of the screen Give the Runbook a name, select the Runbook type PowerShell and for the Runtime version choose 7.2 (recommended) and click on Create at the bottom left. On the Edit PowerShell Runbook page, enter your PnP PowerShell code in the large white area, i.e.: Connect-PnPOnline -ManagedIdentity Get-PnPMicrosoft365Group Once done, click on Save at the top of the screen and then on Test pane to test your Runbook. Click on Start to start testing the Runbook. It might take a few minutes for the Runbook to start. Once it's done, you will see the output of your PnP PowerShell script in the large black output section."
  },
  "articles/azurecloudshell.html": {
    "href": "articles/azurecloudshell.html",
    "title": "Using PnP PowerShell in Azure Cloud Shell | PnP PowerShell",
    "keywords": "Using PnP PowerShell in Azure Cloud Shell In this article we will explain how to use PnP PowerShell inside Azure Cloud Shell. Using Azure Cloud Shell can come in handy in several scenarios. For example if policies on your local machine block you from installing PowerShell modules, you're behind a proxy which causes problems for your requests or you're on a shared machine which you don't want to pollute. With Azure Cloud Shell you open a PowerShell session which runs within Azure and outputs to you through i.e. a normal web browser via shell.azure.com, Windows Terminal or using any of the growing numbers of locations throughout the Microsoft products where the Azure Cloud Shell icon is visible (Microsoft 365 Admin Center, Teams Admin Center, Azure Portal, etc.). Requirements You need to have access to an Azure Subscription. The usage of Azure Cloud Shell itself is free, however it requires an Azure File Share with Storage Account behind it to store files, which is billed against normal rates. A Visual Studio subscription with Azure Benefits is ideal to use for this. Set up Azure Cloud Shell If you haven't used Azure Cloud Shell yet, follow these steps to get it going: Open a web browser and go to https://shell.azure.com Follow the steps on the screen. When asked to choose between Bash or PowerShell, choose PowerShell. When asked to create a new storage account, use the default or go for advanced if you wish to specify the names of the components yourself. Once done, you should be seeing a blue PowerShell like environment running from your browser. Add PnP PowerShell to your Azure Cloud Shell After completing the steps of the previous paragraph to get Azure Cloud Shell set up for your account, you can now add PnP PowerShell to your environment. You only need to do this once. Every time you return to Azure Cloud Shell, it will still have the module available to be used. You still have to manually update it to a newer version of PnP PowerShell, once one will be released, though, just like locally. In the Azure Cloud Shell, on the prompt, enter Install-Module PnP.PowerShell -AllowPrerelease If asked to confirm that you wish to install the module from an untrusted repository, respond with Y Connecting to your Microsoft 365 Environment from Azure Cloud Shell Not every available option within PnP PowerShell to authenticate will work due to the Azure Cloud Shell not being able to show a visual login screen. Choose below how you will authenticate. By using Device Login Using the Device Login option will allow you to use any browser session on any device to authenticate your Azure Cloud Shell connection attempt. Follow these steps to do so. In Azure Cloud Shell, enter: Connect-PnPOnline https://yourtenant.sharepoint.com -DeviceLogin Open a web browser on any device and navigate to https://microsoft.com/devicelogin Type over or copy/paste the code shown in the yellow area of the Azure Cloud Shell Log in with the account you wish to connect the Azure Cloud Shell with to your Microsoft 365 environment Click on Continue to confirm you are logging on to the PnP Management Shell You can now safely close the browser you have used to perform the device login Return to the Azure Cloud Shell. If it shows the prompt again, you have successfully been signed in to your Microsoft 365 tenant and can now perform PnP PowerShell cmdlets like you're used to. Important There is one final important remark to make. When connecting using the -DeviceLogin option, PnP PowerShell cannot automatically switch to the yourtenant-admin.sharepoint.com context, meaning any cmdlets you try to run that require being connected to the admin portal, will need you to use Connect-PnPOnline https://yourtenant-admin.sharepoint.com -DeviceLogin yourself first to authenticate specifically to the admin site before you can use them. By using a Managed Identity Important The current versions of PnP PowerShell and Azure Cloud Shell do not support Managed Identity authentication. This is a known issue and we are working on a solution. In the meantime, you can use the Device Login option to authenticate to your Microsoft 365 environment."
  },
  "articles/azurefunctions.html": {
    "href": "articles/azurefunctions.html",
    "title": "Using PnP PowerShell in Azure Functions | PnP PowerShell",
    "keywords": "Using PnP PowerShell in Azure Functions In this article we will setup an Azure Function to use PnP PowerShell Important Notice that the Azure Function scripts in this article run in a separate thread/job. We do this because of possible conflicts between assemblies of already loaded PowerShell modules and PnP PowerShell (for instance, the Az cmdlets that get loaded by default use some of the same assemblies as PnP PowerShell but in different versions which can cause conflicts). By running the script in a separate thread we will not have these conflicts. If PnP PowerShell is the only module currently being used and loaded in your Azure Function you don't need the Start-ThreadJob construct and you can simply write the script as usual. Create the Azure Function App As the UI in the Azure Portal changes every now and then, but the principles stay the same, follow the following steps: Go to the Azure Portal and login with your Azure credentials Create a new Function App using the Create a resource button and searching for Function App or use this direct link to locate it Choose runtime stack PowerShell Core and version 7.4 (7.0 is not longer an option as of December 3rd, 2022) Select Windows as the operating system or else you will not be able to perform the following steps from your browser. Complete the creation of the Azure Function Once the resource has been created, click on Go to resource to open the Azure Function Configure the Azure Function Now your Azure Function has been created, proceed with the next paragraphs to configure it for using PnP PowerShell. Disable the Azure cmdlets in the Azure Function The Azure Function comes with the Azure cmdlets pre-installed. If you don't need them, you can disable them to save some memory and processing time. It will also avoid version conflicts with PnP PowerShell, so it is highly recommended to disable them. Navigate to App files which is located the left side menu of the function app under the Functions header. To disable the Az cmdlets, save and edit the profile.psd file. Mark out the following block in the file as follows, if not already done: # if ($env:MSI_SECRET) { # Disable-AzContextAutosave -Scope Process | Out-Null # Connect-AzAccount -Identity # } Save the profile.ps1 file. If you don't do this and enable a managed identity on the Azure Function, it will throw an exception. Make PnP PowerShell available to all functions in the Azure function App Navigate to App files which is located the left side menu of the function app under the Functions header. In the dropdown presented near the top, select requirements.psd1. You'll notice that the function app wants to provide the Azure cmdlets. If you do not need those, keep the Az entry presented commented out. Add a new entry or replace the whole contents of the file with one of the following and remember to save the requirements.psd1 file: Specific stable version Important PnP PowerShell version 2 or later is required for this to work @{ 'PnP.PowerShell' = '2.12.0' } The version that will be installed will be the specified specific build, which is generally recommended. You build and test your Azure Function against this specific PnP PowerShell version. Future releases may work differently and cause issues, therefore it is generally recommended to specify a specific version here. Latest stable version Important PnP PowerShell version 2 or later is required for this to work If, for some reason, you would like to ensure it is always using the latest available PnP PowerShell version, you can also specify a wildcard in the version (not recommended): @{ 'PnP.PowerShell' = '2.*' } This will then automatically download any minor version of the major 1 release when available. Note that wildcards will always take the latest stable version and not the nightly build/prerelease versions. Specific prerelease version If you wish to use a specific prerelease/nightly build version, go to the overview of available versions and literally copy/paste the version in the definition, i.e.: @{ 'PnP.PowerShell' = '2.99.50-nightly' } Decide how you want to authenticate in your Azure Function By using a Managed Identity The recommended option is to use a managed identity in Azure to allow your Azure Function to connect to Microsoft Graph or SharePoint Online using PnP PowerShell. Using this method, you specifically grant permissions for your Azure Function or Runbook to access these permissions, without having any client secret or certificate pair that potentially could fall into wrong hands. This makes this option the most secure option by far. Since version 1.11.95-nightly, Managed Identities are both supported against SharePoint Online as well as Microsoft Graph cmdlets. Before this version, only Microsoft Graph was being supported. Enabling the managed identity for an Azure Function In your Azure Function, in the left menu, go to Identity Ensure you are on the System assigned tab and flip the switch for Status to On Click the save button and confirm your action in the dialog box that will be shown A new entry will now automatically be created in your Azure Active Directory for this app having the same name as your Azure Function and the Object (principal) ID shown on this page. Take notice of the Object (principal) ID. We will need it in the next section to assign permissions to. Assigning permissions to the managed identity Next step is to assign permissions to this managed identity so it is authorized to access the Microsoft Graph and/or SharePoint Online. If you don't know which permissions exist yet, you can use the below sample to get a list of all available permissions: Get-PnPAzureADServicePrincipal -BuiltInType MicrosoftGraph | Get-PnPAzureADServicePrincipalAvailableAppRole Get-PnPAzureADServicePrincipal -BuiltInType SharePointOnline | Get-PnPAzureADServicePrincipalAvailableAppRole Once you know which permissions you would like to assign, you can use the below samples. Note that the Principal requires the object Id (not the application/client id) or the application name. Add-PnPAzureADServicePrincipalAppRole -Principal \"62614f96-cb78-4534-bf12-1f6693e8237c\" -AppRole \"Group.Read.All\" -BuiltInType MicrosoftGraph Add-PnPAzureADServicePrincipalAppRole -Principal \"mymanagedidentity\" -AppRole \"Sites.FullControl.All\" -BuiltInType SharePointOnline Create the Azure Function for managed identity authentication Create a new function and replace the function code with the following example: using namespace System.Net param($Request, $TriggerMetadata) Connect-PnPOnline -ManagedIdentity Get-PnPMicrosoft365Group Push-OutputBinding -Name Response -Value ([HttpResponseContext]@{ StatusCode = [HttpStatusCode]::OK }) Notice the super clean and simple Connect-PnPOnline. Nothing that could fall into wrong hands, no client secret or certificate that could expire. Based on the permissions assigned to the managed identity, it will be able to authenticate and authorize access to the Microsoft Graph APIs used behind the cmdlet to fetch the data. By using a certificate Create your certificate In this following example we create a new Azure AD Application registration which creates your certificates. You can also use a private/public certificate key pair you already have. $password = Read-Host -Prompt \"Enter certificate password\" -AsSecureString Register-PnPAzureADApp -ApplicationName \"MyDemoApp\" -Tenant [yourtenant.onmicrosoft.com] -CertificatePassword $password -Interactive You will be asked to authenticate. Log in using an account that has the permissions to create an app registration in your Azure Active Directory. After logging in, the following actions will automatically be taken: An app registration will be created using the provided name A self signed certificate will be generated which includes a pfx and a cer file (private/public key pair) The public key of the certificate (cer) will be configured as a valid certificate to authenticate with for the app registration A basic set of permissions will be assigned to the app registration. These can freely be changed at will at a later time. Admin consent will be given to the given set of permissions Make a note of the clientid shown and proceed with the steps in the following section. Apply your certificate Once you have an Azure Active Directory application set up and the public key certificate uploaded to its registration, proceed with configuring the Azure Function to make use of the private key of this certificate pair: In your function app, navigate to Certificates under Settings, switch to the Bring your own certificates (.pfx) section and click on Add certificate. In the panel that appears from the side, select Upload certificate (.pfx) and select the \"MyDemoApp.pfx\" file that has been created for you in the Create your certificate step above. Enter the password you used when creating the certificate. The certificate friendly name can be anything you would like. After the certificate has been uploaded, copy the thumbprint value shown. Navigate to Configuration, ensure you are on the Application settings tab and click on New application setting Call the setting WEBSITE_LOAD_CERTIFICATES and set the thumbprint as a value. To make all the certificates you uploaded available use * as the value. See https://learn.microsoft.com/azure/app-service/configure-ssl-certificate-in-code for more information. Click on OK at the bottom and then on Save at the top. Click Continue to confirm your changes. Create the Azure Function for certificate authentication Create a new function and replace the function code with the following example: using namespace System.Net # Input bindings are passed in via param block. param($Request, $TriggerMetadata) # Write to the Azure Functions log stream. Write-Host \"PowerShell HTTP trigger function processed a request.\" $script = { Connect-PnPOnline tenant.sharepoint.com/sites/demo -ClientId [the clientid created earlier] -Thumbprint [the thumbprint you copied] -Tenant [tenant.onmicrosoft.com] $web = Get-PnPWeb $web.Title } $webTitle = Start-ThreadJob -Script $script | Receive-Job -Wait $body = \"The title of the web is $($webTitle)\" # Associate values to output bindings by calling 'Push-OutputBinding'. Push-OutputBinding -Name Response -Value ([HttpResponseContext]@{ StatusCode = [HttpStatusCode]::OK Body = $body }) By using Credentials This method is not recommended as it requires you to have an account without MFA of which its credentials will be stored in Azure. Create your credentials Navigate to Configuration under Settings and create a new Application Setting. Enter tenant_user and enter the username you want to authenticate with as the user Enter tenant_pwd and enter the password you want to use for that user Create the function Create a new function and replace the function code with following example: using namespace System.Net # Input bindings are passed in via param block. param($Request, $TriggerMetadata) # Write to the Azure Functions log stream. Write-Host \"PowerShell HTTP trigger function processed a request.\" $script = { $securePassword = ConvertTo-SecureString $env:tenant_pwd -AsPlainText -Force $credentials = New-Object PSCredential ($env:tenant_user, $securePassword) Connect-PnPOnline yourtenant.sharepoint.com/sites/demo -Credentials $credentials $web = Get-PnPWeb $web.Title } $webTitle = Start-ThreadJob -Script $script | Receive-Job -Wait $body = \"The title of the web is $($webTitle)\" # Associate values to output bindings by calling 'Push-OutputBinding'. Push-OutputBinding -Name Response -Value ([HttpResponseContext]@{ StatusCode = [HttpStatusCode]::OK Body = $body }) In the example above we are retrieving the username and password from the settings as environment variables. We then create a new credentials object which we pass in to the Connect-PnPOnline cmdlet. After connecting to SharePoint we output the title of the web through the function."
  },
  "articles/batching.html": {
    "href": "articles/batching.html",
    "title": "Batching in PnP PowerShell | PnP PowerShell",
    "keywords": "Batching in PnP PowerShell Some cmdlets support batching, but there are a few things to point out here. Let me first explain the difference between a normal request and a batched request. Adding items without batching (CSOM) 1..100 | ForEach-Object{ Add-PnPListItem -List \"ItemTest\" -Values @{\"Title\" = \"Test Item $_\"} } If you add a list item with Add-PnPListItem without batching, the following happens behind the scenes: We retrieve the list and make sure we retrieve all the fields used in that list. (a least one request to the server but usually a few more CSOM requests) We add a new item to the list We loop through the values you specified to set on the item and depending on the type of field we format the value ready to be added to the item (this can introduce additional CSOM requests in the case of taxonomy fields for instance) We update the item (this will be a CSOM request to the server) All in all you see we make around 6 requests, although the exact number depends a bit on what type of fields you are setting. So if you loop through 100 items, you get at least 600 requests. Adding an item with batching (REST) $batch = New-PnPBatch 1..100 | ForEach-Object{ Add-PnPListItem -List \"ItemTest\" -Values @{\"Title\"=\"Test Item Batched $_\"} -Batch $batch } Invoke-PnPBatch -Batch $batch When you use batching, these number of requests are much lower. This is what happens when you use batching We retrieve the list and make sure we retrieve all the fields used in that list. We then, and that's important, add that list to a cache in the batch. That means that every subsequent request for the fields of that list will be coming from the cache. We loop through the values you specified to set on the item. This most of the time does not cause any additional request, with the exception of taxonomy fields. Due to limitations of the REST apis available to use we have to fallback to a CSOM request to format the value. We add the item with the new values to the list (creating a batched request) This means that for every new item there is one request + a few initial request to retrieve the list. Then when you execute Invoke-Batch we will check out how many items there are in the batch and will split them up accordingly to follow the request limits provided. You'll see that large batches are split up in chunks of 100 requests. This means that if you, say add 100 items, you will issue around 6 requests in total. Large batches and exceptions Depending on the type of requests you are making batches can be split up in 'chunks'. For instance, if the tasks you perform are towards SharePoint and behind the scenes use the REST api of SharePoint a batch larger then 100 requests will be split up in chunks of 100 requests. When behind the scenes the Microsoft Graph is being called then the batch requests will be split up in chunks of 20 requests. For instance, removing 520 list items will result in 6 separate requests, the first 5 containing 100 remove requests, the last one containing 20 remove requests. If during one of these chunks an exception occurs (for instance you are trying to delete an item that does not exist), by default we will continue processing the remaining batch chunks. If you want to stop processing these remaining batches immediately after an exception occurs, use the -StopOnException switch on Invoke-PnPBatch cmdlet. Cmdlets that support batching The following cmdlets support batching. (This support began with the 1.7.63-nightly release.) All cmdlets which support batching display the badge, linking to this article. Add-PnPListItem Set-PnPListItem Remove-PnPListItem Publish-PnPSyntexModel Unpublish-PnPSyntexModel Request-PnPSyntexClassifyAndExtract"
  },
  "articles/buildingdocker.html": {
    "href": "articles/buildingdocker.html",
    "title": "Docker with Linux/Mac OS/WSL | PnP PowerShell",
    "keywords": "Docker with Linux/Mac OS/WSL Use this guidance if you plan on using docker containers to work with PnP PowerShell. Build a Docker Image docker build . -f ./pages/Dockerfile-Linux -t pnp.powershell-pages-build Build Documentation docker run --rm -it -v $(pwd)/pages:/home pnp.powershell-pages-build /usr/bin/mono /usr/local/lib/docfx/docfx.exe build /home/docfx.json Clean documentation sudo rm -rf ./pages/_site sudo rm -rf ./pages/obj Docker with Windows CMD Build a Docker Image docker build . -f ./pages/Dockerfile-Windows -t pnp.powershell-pages-build Build Documentation docker run --rm -it -v %cd%\\pages:C:\\workplace pnp.powershell-pages-build powershell -c Start-Process -NoNewWindow -FilePath $env:TEMP\\docfx\\docfx.exe -ArgumentList build, C:\\workplace\\docfx.json -Wait Clean documentation rmdir /s /q pages\\_site rmdir /s /q pages\\obj Docker with Windows PowerShell Build a Docker Image docker build . -f ./pages/Dockerfile-Windows -t pnp.powershell-pages-build Build Documentation docker run --rm -it -v ${pwd}\\pages:C:\\workplace pnp.powershell-pages-build powershell -c \"Start-Process -NoNewWindow -FilePath `$env:TEMP\\docfx\\docfx.exe -ArgumentList build, C:\\workplace\\docfx.json -Wait\" Clean documentation Remove-Item pages\\_site -Recurse Remove-Item pages\\obj -Recurse"
  },
  "articles/buildingfolderstructure.html": {
    "href": "articles/buildingfolderstructure.html",
    "title": "Folder Structure | PnP PowerShell",
    "keywords": "Folder Structure Once you have gone through the steps to setup your development environment, you will see a folder structure cloned to your machine. In this folder you'll find the following folder structure: - build - documentation - pages - resources - samples - src/ALC /Commands /Resources /Tests Build folder The build folder contains scripts used to build the project, build the Helpfile, etc. While debugging locally the Build-Debug.ps1 script is the script to use to build the project and copy the correct files to the correct location on your machine. The other build scripts are used in GitHub actions to automate the nightly builds etc. Documentation folder The documentation folder contains the markdown files all describing every single cmdlet available. If you create a new cmdlet we require you to also provide a documentation file. Notice that the documentation files require a front-matters yaml header as specified in the other files. Updated accordingly. Pages folder The pages folder contains the structure which is published to https://pnp.github.io/powershell. We automatically copy the cmdlet documentation in there at build time, but you can create PRs on the 'articles' folder if you want. Resources The resources folder contains an XML file which is copied into the output folder of the build. This file defines how PowerShell should parse and render the objects shown as output from the PnP PowerShell cmdlets src/ALC Due to possible conflicts with already loaded assemblies in PowerShell we create an Assembly Load Context for a specific assembly. See https://learn.microsoft.com/dotnet/core/dependency-loading/understanding-assemblyloadcontext for more information about ALCs. src/Commands This is the main location of all the cmdlet code. src/Resources Any resources used by cmdlets go into this folder src/Tests This is where the the unit/integration tests reside. See Running test for more information."
  },
  "articles/buildinglocalpnpbuild.html": {
    "href": "articles/buildinglocalpnpbuild.html",
    "title": "Running against a local copy of the PnP Framework | PnP PowerShell",
    "keywords": "Running against a local copy of the PnP Framework If your code changes require changes to the PnP Framework you might want to use a local version of the PnP Framework which you modified. In order to do this you will need to have both the PnP.PowerShell repository (https://github.com/pnp/powershell) and the PnP.Framework repository (https://github.com/pnp/pnpframework) locally on your computer. Make sure that both repositories are located at the same folder level. E.g.: c:\\repos\\powershell c:\\repos\\pnpframework When using Visual Studio Code Build the PnP Framework code by opening the folder containing the code in Visual Studio Code and hitting CTRL+SHIFT+B. It may take a few minutes to complete. After its done, simply hit CTRL+SHIFT+B in the Visual Studio Code instance in which you have opened PnP PowerShell and at the top select the option to Build with local copy of PnP Framework When using the full Visual Studio Build the PnP Framework by navigating to the build folder in the pnpframework folder and run Build-Debug.ps1. This will compile the PnP Framework. Navigate to the build folder of the powershell folder and run Build-Debug.ps1 -LocalPnPFramework. This will compile PnP PowerShell and refer to the -locally- compiled version of the PnP Framework. If you do not specify the -LocalPnPFramework switch it will refer to the latest nightly build available on NuGet.org instead. Running against a local copy of the PnP Core SDK If your code changes require changes to the PnP Core SDK (meaning any of the PnP Core SDK libraries like: PnP.Core, PnP.Core.Auth, PnP.Core.Admin, PnP.Core.Transformation, or PnP.Core.Transformation.SharePoint) you might want to use a local version of the PnP Core SDK which you modified. In order to do this you will need to have both the PnP.PowerShell repository (https://github.com/pnp/powershell) and the PnP.Core repository (https://github.com/pnp/pnpcore) locally on your computer. Make sure that both repositories are located at the same folder level. E.g.: c:\\repos\\powershell c:\\repos\\pnpcore When using Visual Studio Code Build the PnP Core SDK by navigating to the build folder in the pnpcore folder and run Build-Debug.ps1. This will compile the whole PnP Core SDK solution, including PnP.Core.Auth, PnP.Core.Admin, PnP.Core.Transformation, and PnP.Core.Transformation.SharePoint. After its done, simply hit CTRL+SHIFT+B in the Visual Studio Code and at the top select the option to Build with local copy of PnP Core When using the full Visual Studio Build the PnP Core SDK by navigating to the build folder in the pnpcore folder and run Build-Debug.ps1. This will compile the whole PnP Core SDK solution, including PnP.Core.Auth, PnP.Core.Admin, PnP.Core.Transformation, and PnP.Core.Transformation.SharePoint. Navigate to the build folder of the powershell folder and run Build-Debug.ps1 -LocalPnPCore. This will compile PnP PowerShell and refer to the -locally- compiled version of the PnP Core SDK. If you do not specify the -LocalPnPCore switch it will refer to the latest nightly build available on NuGet.org instead."
  },
  "articles/credentialmanagement.html": {
    "href": "articles/credentialmanagement.html",
    "title": "Credential Management | PnP PowerShell",
    "keywords": "Credential Management PnP PowerShell is the ultimate library to execute cmdlets unattended in scripts, Azure Functions or Azure Automation. However, in order to automate authentication you need to safely store these credentials. You should -never- store them in your scripts. We currently recommend the Microsoft provided Secret Management and Secret Store modules to set up a vault which PnP PowerShell can use to store and retrieve credentials. Install the required modules Install-Module -Name \"Microsoft.PowerShell.SecretManagement\" Install-Module -Name \"Microsoft.PowerShell.SecretStore\" Configuring the vault After installing the module, create and register a vault: Register-SecretVault -Name \"SecretStore\" -ModuleName \"Microsoft.PowerShell.SecretStore\" -DefaultVault Set-SecretStoreConfiguration -Authentication None The last cmdlet, where you set the authentication to None means that you will allow access to the secret store without requiring you to enter a password to unlock the vault. This is optional. Notice that you will be asked several times to provide a password the moment you create a new vault. If you intend to use the native out of the box functionality of PnP PowerShell with the Secret Management modules, notice that the authentication is required to set to None. Adding a secret Secret Management Module Set-Secret -Name [yourlabel] -Secret (Get-Credential) PnP PowerShell Add-PnPStoredCredential -Name [yourlabel] -Username [username] You will be prompted to provide a password. Retrieving a secret Secret Management Module Connect-PnPOnline -Url https://yourtenant.sharepoint.com -Credentials (Get-Secret -Name [yourlabel]) PnP PowerShell Connect-PnPOnline -Url https://yourtenant.sharepoint.com -Credentials [yourlabel] Advanced usage of secrets You can add a secret with a label that reflects your tenant url, e.g. Set-Secret -Name \"https://yourtenant.sharepoint.com\" -Secret (Get-Credential) Now you can simply do this: Connect-PnPOnline -Url \"https://yourtenant.sharepoint.com\" PnP PowerShell will check the vault if a secret is present with the label matching the URL and it will use those credentials. Notice that a URL like https://yourtenant.sharepoint.com/sites/demo will also match the secret. You can create multiple secrets too. PnP PowerShell will then try to match the most complete label first, e.g. a secret ending on /sites/demo1 will proceed the one without that ending. Removing a secret Secret Management Remove-Secret -Name [yourlabel] -Vaultname [VaultName] PnP PowerShell Remove-PnPStoredCredential -Name [yourlabel]"
  },
  "articles/defaultclientid.html": {
    "href": "articles/defaultclientid.html",
    "title": "Set a default Client ID | PnP PowerShell",
    "keywords": "Set a default Client ID As of September 9th, 2024, it is no longer possible to use PnP PowerShell with -Interactive without providing your own Entra ID App Registration by passing in -ClientId as well. To avoid having to add -ClientId on every connect, you can also perform the below task to set the default ClientId for your environment. This avoids you having to update all of your scripts to include -ClientId in the Connect-PnPOnline statements, making the impact of this change smaller by not having to update existing scripts. By storing a client id for a tenant Note This functionality is only available in the versions newer than 2.12.0 This options allows you to have different client ids for different tenant. To set this use the Set-PnPManagedAppId cmdlet. You do not have to be connected to a tenant for this. To set a client id for tenant with url https://yourtenant.sharepoint.com, you enter: Set-PnPManagedAppId -Url https://yourtenant.sharepoint.com -AppId f0e2b362-8973-4fc7-a293-3c73e2677e79 This will add an entry to your Windows Credential Manager or the MacOS keychain if your are on MacOS. Connect-PnPOnline will use this value to match the correct client id with the url you are connecting to and it is not needed use -ClientId anymore, e.g. Connect-PnPOnline -Url https://yourtenant.sharepoint.com -Interactive You can manage entries using the Get-PnPManagedAppId and Remove-PnPManagedAppId cmdlets. Using these cmdlets it is possible to have different client/app ids for different tenants, which is usefull if you are a consultant serving multiple customers for instance. By setting an environment variable You can set an environment variable on your machine or in your profile to default to the ClientId you configure in it. The name of the environment variable should be either: ENTRAID_APP_ID, or ENTRAID_CLIENT_ID, or AZURE_CLIENT_ID. You only need one of these, not all of them. They will be used in the order shown, i.e. if you set a value for AZURE_CLIENT_ID and another one for ENTRAID_APP_ID, the ENTRAID_APP_ID entry will be used and the other will be ignored. As the value for the environment variable, set the GUID of the Client Id / App Id from Entra ID of your own App Registration. Steps for Windows using PowerShell Simply run this line: [System.Environment]::SetEnvironmentVariable('ENTRAID_CLIENT_ID', '<client id of your Entra ID App Registration>', [EnvironmentVariableTarget]::User) Steps for Windows using the user interface To create a persistent environment variable on a Windows machine, follow the below steps. Open the Windows start menu and search for Environment variables and click on Edit the system environment variables Click on Environment Variables Under User variables for <username>, click the New button. As the Variable name, enter: ENTRAID_CLIENT_ID As the Variable value enter the Client ID of your Entra ID application registration which you would like to use as the default for all Connect-PnPOnline executions. Close all open dialog boxes by clicking on OK Steps for Linux To create a persistent environment variable on a Linux machine, follow the below steps. Connect to your Linux machine Execute: nano ~/.bashrc Hit CTRL+END to jump to the end of the file and add the line: export ENTRAID_CLIENT_ID=<client id of your Entra ID App Registration> Hit CTRL+X, type Y to save and close the file Execute: source ~/.bashrc This will load the newly added system variable into the current session. To validate that the environment variable is there, execute: echo $ENTRAID_CLIENT_ID Troubleshooting In case you want to validate which ClientID is being used to connect, simply add -Verbose to your Connect-PnPOnline statement to see which ClientID is used to make the connection."
  },
  "articles/determinepermissions.html": {
    "href": "articles/determinepermissions.html",
    "title": "How to determine which permissions you need | PnP PowerShell",
    "keywords": "How to determine which permissions you need Note As of September 9th, 2024, it is required to use your own Entra ID Application Registration to use PnP PowerShell. This introduces the complexity of trying to determine the minimum set of permissions you will need to be able to execute your script. This article aims to help you in determining the permissions you need to set on your Entra ID Application Registration. Creating an Entra ID Application Registration In case you're starting from the beginning and you do not have your own Entra ID Application Registration yet to use with PnP Powershell, which is mandatory, you can follow these steps to create your Entra ID Application Registration. Starting with minimal permissions It is highly recommended to keep the permissions on your Entra ID Application Registration to a minimum to avoid risks when access through your application registration would somehow fall in the wrong hands. As PnP PowerShell always starts with connecting to SharePoint Online, you will at least need permissions to access SharePoint Online, regardless of whatever else you plan on doing with PnP PowerShell. When using a delegate login A delegate login means you will be interactively logging in to your tenant using PnP PowerShell by providing your credentials. There are several ways of connecting in this way. Always remember that in this scenario, regardless of which permissions you assign to your Entra ID Application Registration, the user logging in through PnP PowerShell must also have the permissions for whatever the user is trying to do. I.e. if you would assign AllSites.FullControl permissions on your application registration, the user still can only access those SharePoint Online sites to which the user has been granted permissions directly to that site as well and will only have those permissions assigned to it (i.e. read or write). The lowest permission you can set on a delegate login will be AllSites.Read on the delegate scope of SharePoint: When using an app only context An app only context is being used when your intend is to run a script that does not require any user intervention to connect and authenticate to your tenant. There are several ways of connecting in this way. In this scenario, exactly those permissions you assign to your Entra ID Application Registration are the ones the script that runs will have. Therefore, be extra careful in this scenario not to set too high permissions. The lowest permission you can set on an app only scenario will be Sites.Selected on the application scope of SharePoint: When using the Sites.Selected permission, you still must assign permissions to one or more sites where the script will have access to. Ensure you will assign at least Read permissions on the site of which you will use the URL in your Connect-PnPOnline <url> statement in your script. You can easily do so by utilizing the PnP PowerShell cmdlet Grant-PnPAzureADAppSitePermission as shown here: Grant-PnPAzureADAppSitePermission -AppId \"<Client ID of your Entra ID applicarion registration>\" -DisplayName \"PnP PowerShell\" -Permissions Read -Site <url of the SharePoint Online site to which you will connect> In order to be able to run this cmdlet, you will need to connect to PnP PowerShell using preferably another Entra ID application registration which will have the AllSites.FullControl permission on the delegate scope on SharePoint set to it and being logged on with a Global Administrator or SharePoint Administrator priviledged account. Adding additional permissions as needed Once you've se the minimum permissions as described above, you can go ahead and test using your Entra ID application registration to connect to SharePoint Online using one of the available connect options. You can add -ValidateConnection -Verbose to your Connect-PnPOnline cmdlet to instruct it to test the connection once established. Now you likely want to perform more than just a simple read using PnP PowerShell. Read on below to find out what you can do to find out about the additional permissions your application registration might need to operate correctly. When using a delegate login When planning to use your app registration for delegates, you could opt for simply starting to use it. Once you execute a cmdlet that requires more permissions, a dialog will pop up asking you to consent to these additional permissions being assigned to the application registration. An example of this is shown on the following screenshot: What technically happens here when you provide consent through this dialog is that in the Entra ID Enterprise Application connected to your Entra ID application registration, the permission gets added. This means that on subsequent requests of this cmdlet using this client id, even in new sessions, these permissions will then be granted already. You can visualize this by going to Entra ID > Identity > Applications > Enterprise applications and looking for the registration with the same name as your Entra ID application registration. Once found, open it, in the menu click on Permissions, go to the User consent tab and look at the assigned permissions: When using an app only context For an app only scenario, you will have to follow a different approach, as there is no way for it to interactively request for more permissions. If you try to execute a cmdlet for which the Entra ID application registration does not have permissions, it will return you an access denied notice. What you could try if you run into this, is to add -Verbose to your cmdlet. For many, but unfortunately not all, cmdlets, this will reveal which permissions it receives through the application registration and which permissions it actually needs to be able to execute properly. See the following example: In this scenario, you now know you need to add Application.Read.All on the applications scope of Microsoft Graph in your application registration in order to give it sufficient rights to execute this cmdlet. Help, I can't figure out which permissions I need As mentioned above, unfortunately, not for all cmdlets it will be clear which exact (minimum) permissions will be needed. Not even when using -Verbose. To give some guidance which permissions you could try for a minimum permissions approach, follow the table below. What are you trying to do Permission type Permission(s) likely needed from least to most priviledged Interact with SharePoint Delegate AllSites.Read / AllSites.Write / AllSites.Manage / AllSites.FullControl Interact with SharePoint App Only Sites.Selected / Sites.Read.All / Sites.ReadWrite.All / Sites.Manage.All / Sites.FullControl .All Interact with Microsoft Graph Delegate \\ App Only Use -Verbose or look at the documentation to find the permissions needed Interact with Power Platform Delegate Azure Service Management\\user_impersonation AND Dynamics CRM\\user_impersonation AND PowerApps Service\\User (the last one you can find on the second tab: APIs that my organization uses)"
  },
  "articles/dev-containers.html": {
    "href": "articles/dev-containers.html",
    "title": "Using PnP.PowerShell in Visual Studio Development Containers | PnP PowerShell",
    "keywords": "Using PnP.PowerShell in Visual Studio Development Containers Visual Studio Code development containers allows you to work with PnP.PowerShell commands in containers that Visual Studio will run automatically for you so you don't need to care running docker run. In this way it is also easier to make sure that all members of the project are using the same development environment, with the same versions of the prerequisites installed. If you want to learn more about this Visual Studio Code feature, you can start here. Prerequisites There might be two options of using Visual Studio Code development containers with PnP.PowerShell: Using locally installed Docker, on your desktop/laptop. Running containers in cloud using GitHub CodeSpaces (requires a paid GitHub plan) When you run in a development container in GitHub CodeSpaces, you do NOT need to install any version of the PnP.PowerShell directly on your laptop/desktop. What you will need locally is only Visual Studio Code! Locally Installed Docker For using that option you need to have locally installed the following software: Visual Studio Code Visual Studio Code extension, Remote - Containers Docker Engine. Kindly use Installing Docker locally section of the Using PnP PowerShell in Docker containers article for installation instructions. GitHub CodeSpaces This option requires the following: Git repository in a GitHub organization with enabled CodeSpaces Defining Development Containers for the Project In the root folder of the source code, create the folder called .devcontainer. In this folder, create the devcontainer.json file with the following contents: { \"name\": \"PnP 2.4.0\", \"image\": \"m365pnp/powershell:2.4.0-alpine-3.16.5\", \"customizations\": { \"vscode\": { \"settings\": { \"terminal.integrated.defaultProfile.linux\": \"pwsh\" }, \"extensions\": [ \"ms-vscode.powershell\" ] } }, \"extensions\": [ \"editorconfig.editorconfig\", \"dbaeumer.vscode-eslint\", \"ms-vscode.PowerShell\" ], \"postCreateCommand\": \"apk add git; git config --global --add safe.directory /workspaces\" } Starting working with PnP.PowerShell when you run Docker locally Open the folder in Visual Studio Code Click in the bottom left corner: Select Reopen in Container: Open a new Visual Studio terminal and run Connect-PnPOnline -Url https://<your-tenant-name>.sharepoint.com The command should work even if you don't have PnP.PowerShell module installed locally on your laptop. Starting working with PnP.PowerShell when you run containers remotely in GitHub CodeSpaces Open the project in GitHub site. Click Code button: Click Create codespace on ... button: Run Connect-PnPOnline -Url https://<your-tenant-name>.sharepoint.com in the Visual Studio Code terminal The command should work even if you don't have PnP.PowerShell module installed locally on your laptop."
  },
  "articles/docker.html": {
    "href": "articles/docker.html",
    "title": "Using PnP PowerShell in Docker containers | PnP PowerShell",
    "keywords": "Using PnP PowerShell in Docker containers Using Docker allows you to use any software inside virtual environments, without having to install this software directly on your laptop or server. These virtual environments are containers, which might be imagined as lightweight virtual machines. Having their own virtual disks, memory and processes, containers are rationally isolated from your laptop operating system, providing you a great way of experimenting and using any version of PnP.PowerShell without installing it. The good news is that you will not even need to install PnP.PowerShell in containers by your own: PnP team is already publishing Docker container images for each supported and nightly release, here. You will however need to install docker runtime. If you use Windows, we would recommend you using Linux containers with help of WSL. Alternatively, even though it is not the most common way, you might want to run PnP.PowerShell in Windows containers. Mind you that some use cases might be limited when using Windows containers. If you use Mac OS or Linux, the easiest way is to use Linux containers. Play with PnP.PowerShell online You can try using m365pnp/powershell Docker containers online, without installing anything on your desktop/laptop. Open https://labs.play-with-docker.com/ Login Click Start Click + ADD NEW INSTANCE Run in the online console: docker run --rm -it m365pnp/powershell After that you can start running commands like Connect-PnPOnline. Installing Docker locally Mac OS: Install brew install --cask docker Launch Docker: Press ⌘ + Space to bring up Spotlight Search and enter Docker to launch Docker. In the Docker needs privileged access dialog box, click OK. Enter password and click OK. Linux: bash <(curl -s https://get.docker.com/) sudo usermod -aG docker $USER newgrp docker Linux containers on Windows (using WSL): Start installing WSL: Enable-WindowsOptionalFeature -Online -FeatureName \"Microsoft-Windows-Subsystem-Linux\", \"VirtualMachinePlatform\" -NoRestart Invoke-WebRequest -Uri https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi -OutFile wsl_update_x64.msi -UseBasicParsing Start-Process msiexec.exe -Wait -ArgumentList \"/I $((Get-Location).Path)\\wsl_update_x64.msi /quiet\" Reboot the machine before you continue Finish installing WSL: wsl --set-default-version 2 wsl --install --distribution Ubuntu Install docker in WSL: bash <(curl -s https://get.docker.com/) sudo usermod -aG docker $USER newgrp docker Windows: iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')) choco install -y docker-engine Using PnP.PowerShell Sometimes you want to run inline PnP.PowerShell commands. Linux/WSL/Mac OS: docker run --rm -it m365pnp/powershell Windows (run in PowerShell console): docker run --rm -it m365pnp/powershell:1.10.0-nanoserver-1809 After that you can start running commands like Connect-PnPOnline. Mind you that in the case above, the container will have an isolated disk system so the commands that you run inside the container will not be able to access files from your host machine. However, sometimes you might want to run a script or use some files from your host OS (for example, when you have a ps1 file in a git repository that you cloned to your laptop). In this case you will need to mount a directory on your host as a volume inside the container. See the following examples. Linux/WSL/Mac OS: docker run --rm -it -v \"$(pwd):/home\" -w /home m365pnp/powershell Windows (run in PowerShell console): docker run --rm -it -v \"${pwd}:C:\\workplace\" -w C:\\workplace m365pnp/powershell:1.10.0-nanoserver-1809 In such container you can run Get-ChildItem and see the contents of the current directory. The examples above start new container and allow you to interactively use container, running inline commands. In other cases however, you might want to just start a container for a short time (a few seconds maybe) and run a ps1 script unattended and then automatically terminate the container. Here is how you can do it. Linux/WSL/Mac OS: docker run --rm -v \"$(pwd):/home\" -w /home m365pnp/powershell pwsh test.ps1 Windows (run in PowerShell console): docker run --rm -v \"${pwd}:C:\\workplace\" -w C:\\workplace m365pnp/powershell:1.10.0-nanoserver-1809 pwsh test.ps1 Finally, your scripts might have parametrization so that you can run the same code in different cases/environments. This is the way to provide variable values. Linux/WSL/Mac OS: ParameterValue=\"test\" docker run --rm -v \"$(pwd):/home\" -w /home m365pnp/powershell pwsh -c \"./test.ps1 -Parameter1 $ParameterValue\" Windows (run in PowerShell console): $ParameterValue=\"test\" docker run --rm -v \"${pwd}:C:\\workplace\" -w C:\\workplace m365pnp/powershell:1.10.0-nanoserver-1809 pwsh -c \"./test.ps1 -Parameter1 $ParameterValue\" Please see Docker documentation to see arguments for docker run command. Featured tags Latest latest: The latest stable image alpine-3.16.5 docker pull m365pnp/powershell or docker pull m365pnp/powershell:latest Nightly nightly: The latest night image alpine-3.16.5 docker pull m365pnp/powershell:nightly Tag explanation Tags names mean the following: <version>(-nightly)-<platform> Currently supported platforms: nanoserver-ltsc2022 nanoserver-1809 alpine-3.16.5 Tag name examples: 1.8.0-nanoserver-ltsc2022 1.9.0-nanoserver-ltsc2022 1.10.0-nanoserver-1809 1.10.0-alpine-3.16.5 1.10.26-nightly-nanoserver-ltsc2022 To find the version numbers please visit https://www.powershellgallery.com/packages/PnP.PowerShell"
  },
  "articles/environmentvariables.html": {
    "href": "articles/environmentvariables.html",
    "title": "Environment variables | PnP PowerShell",
    "keywords": "Environment variables PnP PowerShell supports a few environment variables you can set to control some of its behaviour. Besides environment variables you can set, PnP PowerShell will also set a few environments for you to use. Environment variables you can set Environment variable Description MicrosoftGraphEndPoint Overrides the default Microsoft Graph endpoint (https://graph.microsoft.com) to use ENTRAID_APP_ID When set Connect-PnPOnline will use this value for authentication. See more info at Set a default Client ID ENTRAID_CLIENT_ID See ENTRAID_APP_ID AZURE_USERNAME A way to set the username to use when authenticating with Connect-PnPOnline -EnvironmentVariable AZURE_PASSWORD A way to set the password to use when authenticating with Connect-PnPOnline -EnvironmentVariable AZURE_CLIENT_ID A way to set the application registration id/client id to use when authenticating with Connect-PnPOnline -EnvironmentVariable AZURE_CLIENT_CERTIFICATE_PATH Allows you to set the path to the certificate to use to authenticate with Connect-PnPOnline -EnvironmentVariable AZURE_CLIENT_CERTIFICATE_PASSWORD Allows you to set the password to access the certificate to use to authenticate with Connect-PnPOnline -EnvironmentVariable PNPPOWERSHELL_DISABLETELEMETRY Set to 'false' (lowercase) to disable telemetry PNPPSCOMPLETERTIMEOUT Defines the timeout to use when using << tab >> completion with PnP PowerShell (available in version 2.99.45 and higher). Tab completion defaults to 2 seconds timeout. The environment variable expects a value in milliseconds. E.g. 1000 equals 1 second. Set the value to 0 to disable tab completion. Environment variables set for you Environment variable Description PNPPSHOST The fully qualified hostname of the tenant you are connected to, e.g. yourtenant.sharepoint.com PNPPSSITE The server relative path to the site you are connected to, e.g. /sites/yoursite"
  },
  "articles/gettingstartedcontributing.html": {
    "href": "articles/gettingstartedcontributing.html",
    "title": "Contribution guidance | PnP PowerShell",
    "keywords": "Contribution guidance Sharing is caring! All contributions to this repository are very welcome. This guidance should help you getting started contributing to PnP PowerShell by just following some easy steps. There are various ways to accomplish the same goal. We'll go through a process here that should be easy to follow and accomplish for anyone. If you prefer using other tools over the ones mentioned here, such as using the cloning feature within Visual Studio, of course, feel free to use that instead. Getting started Follow the paragraphs below to get yourself started with contributing to PnP PowerShell. Installing Git Tools We'll be using the command line Git Tools to complete the steps. If you prefer using other tools, such as Visual Studio or the desktop client of Git, feel free to use that instead. If you haven't got them already, install the Git Tools for your environment. They're available for Windows, Linux and Mac. Simply download the latest installer from: https://git-scm.com/downloads And click on the Click here to download link There will be a scary amount of questions asked during the installer. Just use all defaults and next-next-finish through the installation process Installing PowerShell 7 PnP PowerShell only runs on PowerShell 7. If you don't have it installed yet, follow the steps below to install it. If you already have it installed, you can skip to the next paragraph. Navigate to the PowerShell 7 download page and download the latest version of PowerShell 7. It is available for Windows, Linux and Mac. You can accept all the defaults and just do a next-next-finish installation. Installing the .NET SDK 8 To be able to compile the PnP PowerShell code, you need to have the .NET SDK 8 installed. If you don't have it installed yet, follow the steps below to install it. If you already have it installed, you can skip to the next paragraph. Navigate to the .NET SDK 8 download page and download the latest version of the .NET SDK 8. It is available for Windows, Linux and Mac. You can accept all the defaults and just do a next-next-finish installation. Create your own Fork To contribute to a GitHub project, what you do first, is create a thing called a fork. Basically it means you will get your own copy of the sourcecode. To do so, follow the steps below. Go to the PnP PowerShell repository on GitHub Make sure you're logged on to GitHub. If you dont have a GitHub account yet, create one and log on first before you continue. Click the Fork button in the top right corner of the page or use this direct link instead If it shows you a notice like this, you already have a fork. Continue with the next paragraph. If it instead shows something like this, click on Create fork to create your own fork. You can leave all the defaults. Updating your Fork Now that you have your own fork, you need to make sure it's up to date with the latest changes from the main repository. Do this every time before you start working on a change. If you don't do so, it will become much harder for us to review and merge your changes. To update your fork, follow the steps below. First identify if your fork is already up to date. If it is, it will show you a message like this and you're good to continue with the next paragraph. If it instead shows something like this, showing that you're a certain amount of commits behind on pnp:dev, you need to update your fork first by continueing with the next step. Click on the Sync fork button and in the flyout that appears click on Update branch It should now show the above message that your branch is up to date. You can now continue with the next paragraph. If it instead shows that you're a certain number of comits ahead, it means your dev branch got polluted by changes you have pushed to it and you need to reset it first. Read up under Troubleshooting for more information on how to resolve this situation. Cloning the repository to your local file system The next step is to download, or clone, your copy/fork of the repository to your local machine so you can work on updating it. Follow these steps to do so. Open a command prompt or PowerShell window and navigate to the folder where you want to clone the repository to. For example, if you want to clone it to your C:\\Source folder, you would do the following: cd C:\\Source Look up the URL of your fork. You can find it by clicking on the Code button on your forked repository on GitHub In the command prompt or PowerShell window, type the following command and replace the URL with the URL of your fork: git clone <URL of repository> It may be that it asks you to log on to GitHub. If so, do so and it will continue with the clone. You should now have a copy of the PnP PowerShell code on your local machine in the subfolder named similarly to your fork name, typically powershell. If you want to read up on an explanation what each of these folders are for, read the folder structure article. Add a reference to the upstream repository. This will allow you to pull in changes from the main repository to your local copy. To do so, type the command below. This time you can execute it exactly as shown here, you don't need to replace it with the URL of your own repository. git remote add upstream https://github.com/pnp/powershell.git You can validate if the upstream has been added successfully by executing: git remote -v If it shows entries for upstream, it worked. Making changes to the code You are now ready to start making changes to the code! Use your favorite code editor to make changes to the code. If you don't have a favorite code editor yet, we recommend you use Visual Studio Code. It's free, open source and cross platform. It's also the editor some of us use ourselves. You can also use the full version of Visual Studio. The next steps will assume Visual Studio Code has been installed and will be used. Open Visual Studio Code and using the File menu go to Open Folder... Navigate to the folder where you cloned the repository to and select the folder named powershell. Click Select Folder to open the folder in Visual Studio Code. If a dialog pops up asking if you trust the authors of the files in the folder, click Yes, I trust the authors. Before starting to make changes, to avoid polution your dev branch as it needs to stay up to date with the PnP PowerShell dev branch, create a new branch for your changes. To do so, click on dev at the bottom left and in the flyout menu that appears on the top, click on Create new branch... Enter any name for the new branch you would like. It helps giving it a distinctive name that makes it easy to identify the changes you're making. For example, if you're going to be working on a new cmdlet which allows to retrieve sites, you could name it RetrieveFilesCmdlet. Hit enter to create the new branch. At the bottom left of Visual Studio Code, it should now show the new branch name you have created. You're now good to go and start making your changes to the code. Once you're done making your changes, proceed with the next paragraph on how to test your changes. Some hints on how to work with Visual Studio Code to find the files in PnP PowerShell more easily: Use CTRL+P to easily search for existing files. If you're looking for an existing cmdlet to update, you can type its name without -PnP to find it easily. I.e. for Get-PnPSite, type GetSite and it will show you the file where the cmdlet is defined. You can then open that file by hitting enter and make your changes. You can also use CTRL+P to easily search for existing documentation on cmdlets. This time you will enter the full cmdlet name to find the documentation. I.e. for Get-PnPSite, type Get-PnPSite and it will show you the file where the documentation for the cmdlet is defined. You can then open that file by hitting enter and make your changes. Its easier to copy than to reinvent! If you're going to add a new cmdlet, look for one that does something close to what you want to do and make a copy of it to function as a starter. You can then rename the cmdlet and update the code to do what you want it to do. Please only submit one (type of) change per pull request. If you want to submit multiple changes, please submit them as separate pull requests. This makes it easier for us to review, understand and merge your changes. Testing your changes If you have only updated documentation, so called .md files, there's no need to test your changes. Just read up on your changes once more to ensure there are no typos. If you have updated code, you need to test your changes to make sure they work as expected. To do so, you need to build the code and then test your changes. Follow these steps to do so. Ensure you do not have any PowerShell window open on your machine in which you have loaded PnP PowerShell. If you do, close them all before proceeding. In Visual Studio Code, hit CTRL+SHIFT+B to open the build menu. In the menu that appears on the top, choose the option Build with nugets. In the terminal window that appears at the bottom, you should see the build process start. It might take a few minutes to complete. Once it's done, you should see a message that the build succeeded. Be sure that it shows Build succeeded and no errors around copying the files to your local PowerShell modules folder. If it instead shows an error like the one below, it means you still have a PowerShell session open somewhere your machine which has PnP PowerShell loaded and which blocks the build process to update the files. It can be frustrating at times to find the PowerShell session that is blocking the build process. If you're not sure which session is blocking the build process, you can try to close all PowerShell sessions and try again. If that doesn't work, you can try restarting Visual Studio Code. If it you get the error \"Path to shell executable \"pwsh.exe\" does not exist\", open tasks.json file and change executable path \"pwsh.exe\" to the full path of your \"C:\\Program Files\\PowerShell\\7\\pwsh.exe\". You can now use PnP PowerShell as normal, but this time it will use your own build instead of the official PnP PowerShell build. To test your changes, you can use the cmdlets you have created or updated. Ensure you will use a PowerShell 7 session and not a PowerShell 5 session. If you wish to step through your code debugging it, in your PowerShell 7 window, type the following command to reveal the process ID it runs under: $PID Back in Visual Studio Code, hit F5 If it asks you to install the coreclr component, follow these steps. In Visual Studio Code, at the top a flyout menu should appear with the currently running processes on your machine. Start typing in the process ID you revealed in the step above and select the process that matches your PowerShell 7 session. Note that this does not work if you have installed PowerShell 7 through the Microsoft Store. If that's the case, uninstall it again from your Windows start menu by right clicking on PowerShell 7 and choosing Uninstall and reinstall PowerShell 7 using any of the other options. You can now set breakpoints as you are used to in your code and use the PowerShell 7 session you connected to to run the cmdlet and hit the breakpoints you have set. Submitting your changes for review Once you're done making and testing your changes, you need to submit them for review and submission in what we call a Pull Request, or PR in short. Follow these steps to do so. Within Visual Studio Code, go to the Source Control section on the left. You will see all of the changes you have made. Once again, ensure with the branch name at the bottom, in this case MyAwesomeUpdate that you are working off of your own branch and not the dev branch. Enter a meaningful commit message in which you very briefly describe what you have changed. Then click the Commit button to commit your changes. If Visual Studio Code shows a dialog mentioning that there are no staged changes to commit, just proceed by clicking Yes or Always based on your personal preference. If Visual Studio Code shows a dialog mentioning Make sure you configure your \"user.name\" and \"user.email\" in git., follow these steps. Now click the Publish Branch option that should appear under the Source Control section of Visual Studio Code to push your branch to GitHub. If it asks for the remote to publish it to, pick Origin. Open your browser and go to the PnP PowerShell repository on GitHub. You should see a message that you have pushed a new branch to your fork. Click the Compare & pull request button to proceed. Provide a meaningful title for your pull request and a description that explains what you have changed and why. Then click the Create pull request button. Please ensure you leave the Allow edits from maintainers option checked so we can provide you with feedback on your pull request. Your pull request has now been created! Please be patient while someone from the PnP PowerShell team will review your suggested changes and potentially provide you with feedback. This may take some time, as all of us are doing this in our spare time. Thanks for contributing! Troubleshooting My local fork is ahead of pnp:dev First proceed with the steps in the Cloning the repository to your local file system section to make sure you have a local copy of your version of the code. After you've set up a local copy of the code, in a command prompt or PowerShell window, navigate to the folder where you cloned the repository to and execute the following command: git fetch upstream Now execute the following command to reset your local dev branch to the upstream dev branch: git checkout dev git reset --hard upstream/dev git push origin dev --force If you now return to GitHub in your webbrowser into your own fork, it should show that your dev branch is up to date with the upstream dev branch. How do I build against a local version of PnP Core and/or PnP Framework? If your change also requires updates to PnP Core and/or PnP Framework, you need to build PnP PowerShell against your locally built version of PnP Core and/or PnP Framework. To do so, follow the steps in this article. If your changes just require updates to PnP PowerShell, you don't need to do this and can just follow the steps outlined on this page. Visual Studio Code shows a dialog mentioning Make sure you configure your \"user.name\" and \"user.email\" in git. If Visual Studio Code shows a dialog mentioning Make sure you configure your \"user.name\" and \"user.email\" in git., click Cancel in that dialog and open a PowerShell 7 window and execute the following commands, replacing the values with your information: git config --global user.name \"John Doe\" git config --global user.email \"johndoe@outlook.com\" You only need to do this once on your machine. Visual Studio shows a dialog asking to install the coreclr component If Visual Studio Code asks you to install the coreclr component, click Cancel as it won't work trying to install from that dialog. Instead go to the extensions tab on the left in Visual Studio, use the search box to search for c#, click on the result that states C# for Visual Studio Code (powered by OmniSharp) and then click Install. How do I know the process ID to attach to for debugging? If you wish to step through your code debugging it, in your PowerShell 7 window, type the following command to reveal the process ID it runs under: $PID Alternatively, if you wish the process ID to be shown in the title of the window to make it a little easier to find the process ID, in a PowerShell 7 window, type the following command: notepad $profile If it states it cannot find the file and asks you if it should create a new file, answer with Yes. In the profile file, add the following line: $Host.UI.RawUI.WindowTitle = \"[PID: $PID] : PowerShell $($PSVersionTable.PSVersion)\" Save notepad and open a new PowerShell 7 window. It should now show the process ID in the title of the window."
  },
  "articles/handlingmultitenantauth.html": {
    "href": "articles/handlingmultitenantauth.html",
    "title": "How to handle authenticating to multiple tenants | PnP PowerShell",
    "keywords": "How to handle authenticating to multiple tenants One question that may come up when working with multiple tenants is how to handle authenticating to multiple tenants, especially since we now require you to register your own Entra ID Application Registration. This is a common scenario when you have a separate development, test and production tenant setup. Or if you are working with multiple customers' tenants. This can be challenging because each tenant requires its own application registration, having it's own application ID / Client ID and may have different authentication requirements, such as different identity providers or different authentication mechanisms. In this article, we will try to inspire you on some methods you could apply to handle authenticating to multiple tenants in more convient ways. How could this be a challenge? One might wonder why this could even be a challenge. After all, you could just create an application registration in each tenant and use the corresponding application ID / Client ID when authenticating. Let's suppose you do so and say we have created these: Client ID Tenant Purpose 12345678-1234-1234-1234-123456789012 contosodev.onmicrosoft.com Development Tenant 23456789-2345-2345-2345-234567890123 contosotest.onmicrosoft.com Test Tenant 34567890-3456-3456-3456-345678901234 contoso.onmicrosoft.com Production Tenant You now have multiple application registrations, each with its own application ID / Client ID. This means you need to keep track of all these application IDs / Client IDs and use the correct one when authenticating. This can be cumbersome and error-prone, especially if you have many tenants. When connecting to one of these tenants, you will need to connect like this: Connect-PnPOnline contosodev.sharepoint.com -Interactive -ClientId 12345678-1234-1234-1234-123456789012 Connect-PnPOnline contosotest.sharepoint.com -Interactive -ClientId 23456789-2345-2345-2345-234567890123 Connect-PnPOnline contoso.sharepoint.com -Interactive -ClientId 34567890-3456-3456-3456-345678901234 This could lead to mistakes, such as using the wrong application ID / Client ID when connecting to a tenant. This could lead to authentication errors, which might lead to confusion and frustration. Idea 1: Create your own function to encapsulate the connection logic Content to follow Idea 2: Create your own multi tenant application registration Content to follow Idea 3: Utilize the credential manager to store your client IDs Content to follow"
  },
  "articles/index.html": {
    "href": "articles/index.html",
    "title": "Articles | PnP PowerShell",
    "keywords": "Articles Here you will find various articles, ranging from installing, upgrading, advanced topics and how to build the source code. Navigate the articles in the menu at the left."
  },
  "articles/installation.html": {
    "href": "articles/installation.html",
    "title": "Installing PnP PowerShell | PnP PowerShell",
    "keywords": "Installing PnP PowerShell You need PowerShell 7.4.4 or later to use PnP PowerShell. It is available for Windows, Linux and Mac and can be installed through here. Stable build You can run the following commands to install the latest stable PowerShell cmdlets for the current user: Install-Module PnP.PowerShell -Scope CurrentUser Nightly build If you want to install the latest nightly build prerelease of PnP PowerShell for the current user, run: Install-Module PnP.PowerShell -Scope CurrentUser -AllowPrerelease -SkipPublisherCheck Use in Docker To use PnP.PowerShell in a Windows container: docker run -it m365pnp/powershell:2.12.0-nanoserver-1809 To use PnP.PowerShell in a Linux container: docker run -it m365pnp/powershell Updating PnP PowerShell If you already have PnP PowerShell installed and just want to update to the latest version you can follow these steps. If you're not sure if your version is already up to date, it does no harm to run it anyway. If there's no new version available, it will not do anything. You need PowerShell 7.4.4 or later to use PnP PowerShell. It is available for Windows, Linux and Mac and can be installed through here. Stable build You can run the following commands to update to the latest stable PowerShell cmdlets for the current user: Update-Module PnP.PowerShell -Scope CurrentUser Nightly build If you want to update to the latest nightly built prerelease of PnP PowerShell for the current user, run: Update-Module PnP.PowerShell -Scope CurrentUser -AllowPrerelease -Force Uninstalling PnP PowerShell In case you would like to remove PnP PowerShell, you can run: Uninstall-Module PnP.PowerShell -AllVersions"
  },
  "articles/microsoftsearch.html": {
    "href": "articles/microsoftsearch.html",
    "title": "Using PnP PowerShell with Microsoft Search | PnP PowerShell",
    "keywords": "Using PnP PowerShell with Microsoft Search Note On August 18th, 2024, Microsoft has announced through Message Center Announcement MC865187 that it will no longer charge extra for adding items to the Microsoft Search index. 50 million items can be added to the Microsoft Search index for free on any tenant having at least one of these licenses: Office 365 E1, Office 365 E3, Office 365 E5, Microsoft 365 E3, Microsoft 365 E5, Microsoft 365 F1, Microsoft 365 F3, Office 365 F3, Microsoft 365 Business Basic, Microsoft 365 Business Standard, Microsoft 365 Business Premium, Office 365 G1, Office 365 G3, Office 365 G5, Microsoft 365 G3, Microsoft 365 G5, Office 365 A3, Office 365 A5, Microsoft 365 A3, Microsoft 365 A5. More about this in this blogpost. Adding your own content to the Microsoft Search index can be a very interesting option for a lot of organizations. Ingesting content coming from other applications used within the organization allows for one search engine, Microsoft Search, to return results even beyond the Microsoft landscape scope. Users will no longer have to consult several search engines or will have to think where they would be able to find the content they look for. Instead, the search results will point them to where they can find it, regardless of the source it can be found in. Tip Optionally combine this with Microsoft Copilot for Microsoft 365 and leverage the full strength of AI that \"knows\" about your organizational data and is able to answer questions from employees in natural language, saving a lot of valuable time for not having to search for exact phrases that exist in indexed content. Which content can I add to the Microsoft Search Index First, think of which data in your organization could be useful to add to the Microsoft Search index. Examples could be your corporate intranet, if it doesn't run on SharePoint Online, documentation sites, archives, databases, fileshares, non-Microsoft cloud storage platforms, helpdesk ticketing systems or more. It does not even have to be content that can directly be linked to, but rather could be informational to people looking for it. As long as you have a way to access the data in the system you want to index, PnP PowerShell can assist you in easily adding this content to the Microsoft Search index. Where do I start After defining one or more content sources you would like to add to the Microsoft Search Index, first check if there is an existing connector for that content source already. After all, there's no need to reinvent the wheel. Microsoft has created and is offering connectors to various popular platforms for free. You can find them here. Next to that, Microsoft partners have also created over 100 connectors that can be used. Sometimes against a fee. Check this page to see which ones are available. If the content source you want to index does not have a connector yet, or for some reason the connector offered doesn't exactly do what you want it to do, you can also easily add the content to the Microsoft Search Index yourself, using PnP PowerShell. How can I leverage PnP PowerShell to get my content into the Microsoft Search Index PnP PowerShell can play a great role in adding your organization's content to the Microsoft Search index. Setting this up can be accomplished well under 30 minutes. Just follow the steps below to make it happen. Warning You need to have the Search Administrator or Global Administrator role to perform the following tasks. Step 1: Creating a new custom connector In this step we're going to create a new custom connector. A custom connector is going to represent the data source we're going to ingest items from into the Microsoft Search Index. Although the web interface of the Microsoft 365 Admin Center has an option to create a new Custom connector, it cannot be used for this purpose. Instead, we'll use PnP PowerShell to create our custom connector. Open a new PowerShell 7 session and connect to your tenant using an account that has the Search Administrator or Global Administrator role Connect-PnPOnline [yourtenant].sharepoint.com -Interactive -ClientId <client id of your Entra ID Application Registration> Use the New-PnPSearchExternalConnection cmdlet to create the new custom connector to your data. Be sure to replace the identity, name and description values with something meaningful that indicates the source of the data you're going to add to the index. New-PnPSearchExternalConnection -Identity \"mycustomdatasource\" -Name \"My custom data source\" -Description \"External content ingested using PnP PowerShell\" You can optionally validate that the custom connector has been created by going to the Microsoft 365 Admin Center > Settings > Search & intelligence > Data sources (direct link) where it should now show up. Step 2: Creating a search schema The second step consists out of creating a search schema for your custom connector. The search schema simply tells Microsoft Search what kind of data it can expect and through which of this data it can search to look for matches to what end users will be searching for. I.e. will it have a title, description, person last modifying the content, priority, or other fields. This is totally up to you to define based on what makes sense with regards to the data source you're going to be indexing from. In the PowerShell session we still have open from the first step, we're going to use the Set-PnPSearchExternalSchema cmdlet to create the schema. If you later on want to update it, you can use the same cmdlet with the same parameters, hence the Set verb and not the New verb being used. The schema in the below sample is defined as JSON in text, so you can easily modify it to match your scenario. Ensure that the name for ConnectionId matches with the value you have used for Identity when creating the connection. Set-PnPSearchExternalSchema -ConnectionId \"mycustomdatasource\" -SchemaAsText '{ \"baseType\": \"microsoft.graph.externalItem\", \"properties\": [ { \"name\": \"title\", \"type\": \"String\", \"isSearchable\": \"true\", \"isRetrievable\": \"true\", \"labels\": [ \"title\" ] }, { \"name\": \"url\", \"type\": \"String\", \"isSearchable\": \"false\", \"isRetrievable\": \"true\", \"labels\": [ \"url\" ] }, { \"name\": \"iconUrl\", \"type\": \"String\", \"isSearchable\": \"false\", \"isRetrievable\": \"true\", \"labels\": [ \"iconUrl\" ] }, { \"name\": \"description\", \"type\": \"String\", \"isSearchable\": \"true\", \"isRetrievable\": \"true\" } ] }' -Wait In this JSON schema you will notice isSearchable and isRetrievable. The first means that Microsoft Search is allowed to use the content provided in that field to look for a match with what the user is searching for. The latter means the value of this field will be returned in the search results and can be used to display it to the user in the search results. The script will wait and validate if the schema change has been applied and return to the prompt when it's ready to be used. If you don't want to wait and just let it create or update the schema in the background, remove the -Wait parameter. If you receive a response stating \"The specified resource name already exists\", it means that the connector is currently still busy updating its schema from a previous instruction. Wait a couple of minutes and try it again. You can optionally validate that the custom connector has recieved a schema by going to the Microsoft 365 Admin Center > Settings > Search & intelligence > Data sources (direct link) where it should show a Connection state of Ready to indicate that it's ready to receive ingested items. It may take 10 minutes or more for it to reach the Ready state. If it's showing the Connection state Preparing to sync, it means it is still applying the schema. Step 3: Configure where your search results should be shown Ingesting items into the Microsoft Search index will only prove to be useful if they show up somewhere in search results. In this step we're going to take care of that. For this you have two options: have the results show up under the All vertical along with all the other items it matches with or give the results its own so called vertical. The latter means it will have its own tab in Microsoft 365 Search and only when clicked on that tab, it will show results from this source and this source only, so not mixed up with other results from other sources it may find. Tip Once the schema has been defined and the data is starting to show up in the Microsoft Search index, you have a choice to make on how you want to show the results. One option is to read on and follow the steps below to surface the results in the out of the box search. Another option is to use PnP Modern Search, which allows you to show the results in a SharePoint Online search results page or in Microsoft Teams. It is absolutely possible to use both PnP Modern Search and standard Microsoft Search at the same time. PnP Modern Search will provide you with a lot more flexibility in how you want to show the results, including custom display templates, custom refiners, custom sorting options, and more. If you decide to go with the results showing up in the All tab, so along with results from other sources, simply go to the Microsoft 365 Admin Center > Settings > Search & intelligence > Data sources (direct link) and click on the link next to your custom connector that reads Include Connector Results. Important If you want your ingested search items to be shown in Microsoft 365 Copilot results, at present you must add your content to the All vertical, or else Copilot will be unable to find your content. In the popup that appears after doing so, click OK to confirm having items from this index show up in the All tab. If you decide to (also?) give it its own tab in the Microsoft 365 Search instead, navigate to the Microsoft 365 Admin Center > Settings > Search & intelligence > Customizations > Verticals (direct link). Click on + Add Enter the Name you would like to show up as the tab in Microsoft 365 Search for this source and click Next Click on Connectors to expand the list with available connectors Check the box in front of the connector you have created in step 1 above. Click Next to continue. The Add a query step you can skip by clicking on Next at the bottom. The Filters step you can also skip by clicking on Next at the bottom. Click on Add Vertical at the bottom of the Review the vertical settings step to continue once again. Click on Enable vertical to enable it. Once it's done spinning, click on Done at the bottom to finalize adding the vertical. It may take up to an hour before the vertical/tab starts showing up in the Microsoft 365 Search results. To validate if the vertical has been added, go to https://www.microsoft365.com/search and check if it shows a tab with the name you have used to create the vertical in this step at the top of the search results. Step 4: Configure how the search results should be shown You can define how the items coming from your custom source will be shown in the Microsoft 365 Search results. In this step we will take care of this. In some scenarios you could skip this entire step and let it try to render the results using a default visualization. In some scenarios however you will notice that it will show an error when it tries to render the results coming from your indexed items. To play on the safe side, it is recommended to always provide your custom display template that it can use to render the results. Navigate to the Microsoft 365 Admin Center > Settings > Search & intelligence > Customizations > Result types (direct link). Click on + Add to add a new result type Provide any Name you would like for the result type and click Next at the bottom. At the Select a content source step, select the content source you have added in step 1 and click Next at the bottom. Skip the Set rules for the result type step by clicking Next at the bottom. In the Design your layout step, notice the properties shown at the bottom of this step under Available properties and click on the Launch Layout Designer button. In the Search Layout designer website that opens, pick a design that you like best for rendering the search results coming from your custom connector, i.e. the first one, and click Get Started at the bottom. Click on each element in the visual sample of the search result and ensure that each element gets a property mapping. You can find which ones you can use back in the wizard we just came from, under the Available properties section. Just type over the name of the property you would like to link to each element in the result. If there's an element in the result you don't want to map or use, you must delete it by clicking on the Edit layout button at the top, selecting the element to remove, and clicking on the circle with the X next to it to remove it. Only after you provided a property mapping for each of the elements, the Create layout button at the bottom will become available and you can continue by clicking on that button. Click on Okay in the dialog that will show to confirm. Return back to your browser tab with the Design your layout step in the wizard. Paste the contents of your clipboard (CTRL+V) into the Paste the JSON script that you created with Layout Designer field and click Next at the bottom. Alternatively, if you're having problems creating your own design layout, if you stuck with the samples used above, you can use this schema which maps all the fields used in the sample above to the layout: { \"type\": \"AdaptiveCard\", \"version\": \"1.3\", \"body\": [ { \"type\": \"ColumnSet\", \"columns\": [ { \"type\": \"Column\", \"width\": \"auto\", \"items\": [ { \"type\": \"Image\", \"url\": \"${iconUrl}\", \"horizontalAlignment\": \"Center\", \"size\": \"Small\" } ], \"horizontalAlignment\": \"Center\" }, { \"type\": \"Column\", \"width\": \"stretch\", \"items\": [ { \"type\": \"ColumnSet\", \"columns\": [ { \"type\": \"Column\", \"width\": \"auto\", \"items\": [ { \"type\": \"TextBlock\", \"text\": \"[${title}](${url})\", \"weight\": \"Bolder\", \"size\": \"Medium\", \"maxLines\": 3, \"color\": \"Accent\" } ], \"spacing\": \"None\" } ], \"spacing\": \"Small\" }, { \"type\": \"TextBlock\", \"text\": \"[${url}](${url})\", \"spacing\": \"Small\", \"weight\": \"Bolder\", \"color\": \"Dark\" }, { \"type\": \"TextBlock\", \"text\": \"${description}\", \"maxLines\": 2, \"wrap\": true, \"spacing\": \"Small\" } ], \"spacing\": \"Medium\" } ] } ], \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\", \"$data\": {} } Click on Add result type at the bottom Click on Done on the Your result type is added page to complete this step. Step 5: Ingesting content into Microsoft 365 Search Now we're finally ready to start ingesting our content into the Microsoft 365 Search index. How or where you get the actual content from varies largely on the system you wish to pull the data from and is therefore out of scope of this article. Once you have the content, you can create new items into the Microsoft 365 Search Index by executing the cmdlet Set-PnPSearchExternalItem: Set-PnPSearchExternalItem -ConnectionId \"mycustomdatasource\" -ItemId \"1\" -Properties @{ \"title\"=\"Test of this PnP PowerShell Connector\"; \"description\"=\"This is a sample item\"; \"url\"=\"https://microsoft.com/articlexyz\"; \"iconUrl\"=\"https://raw.githubusercontent.com/pnp/media/40e7cd8952a9347ea44e5572bb0e49622a102a12/parker/ms/300w/parker-ms-300.png\" } -ContentValue \"This is sample content that will be indexed. By searching for something that appears in this content, it should be returned by Microsoft 365 Search.\" -ContentType Text -GrantEveryone Few things to notice with this cmdlet: Ensure the -ConnectionId matches the -Identity name you have used for your custom connector in step 1. The -ItemId is unique for this result. You can pick whatever you wish, but you need this exact same Id again to update or remove this result. At present, there is no cmdlet or API to retrieve all Ids of all items that are in the Microsoft 365 Search index already, so you may even want to keep a record of this somewhere yourself. The Properties match with the property names you have used in the schema in step 2. These values are mapped to the elemets you defined in step 4. The ContentValue is the content of the item you are indexing. Microsoft Search uses this content to try to match this as a result when searching for something. It will take up to an hour before ingested items will start to appear in search or Copilot results. Be patient. You can restrict who can see the result with the grant options. Check the documentation of the cmdlet for all possibilities. This sample sets it so that any user in the tenant can see the result. The end result After giving it some time to process and index the content you have ingested, depending on the options you have chosen above, you will see the results popping up in the All vertical, designated vertical and in Microsoft 365 Copilot. What's next Once you have the basics in place, give it some time to index and content to start showing up in Microsoft Search and Microsoft Copilot. It typically should not take more than a few hours and very likely will take much less for it to appear. Once you have items in your index, you can utilize PnP PowerShell to see all the items you have indexed using Get-PnPSearchExternalItem and use Remove-PnPSearchExternalItem to remove specific items from the index. It's up to you to define the content freshness by utilizing the Set-PnPSearchExternalItem cmdlet to add new or update existing items as often as you would like to. Can be for example every hour, every day, every month or at any interval you think makes sense for your use case. It's totally up to you to ensure the index stays actual and correct."
  },
  "articles/permissionattributes.html": {
    "href": "articles/permissionattributes.html",
    "title": "Working with permission attributes | PnP PowerShell",
    "keywords": "Working with permission attributes All cmdlet classes in code can be decorated with permission attributes. These attributes are used to define the permissions required to run the cmdlet. The permissions are checked before the cmdlet is executed. If the user does not have the required permissions, the cmdlet will throw a warning. It will still attempt to execute the cmdlet, but it will not be able to complete the operation if the user does not have the required permissions. This has been done in case the permissions defined in the attribute are not accurate, so that it will still work. Types of permissions that can be used in the permission attributes are: ApiNotAvailableUnderApplicationPermissions ApiNotAvailableUnderDelegatedPermissions RequiredApiApplicationPermissions RequiredApiDelegatedPermissions RequiredApiDelegatedOrApplicationPermissions The attributes can be applied to the cmdlet class. The RequiredApi attributes take a string array as a parameter. The string array contains the permissions required to run the cmdlet. The permissions are defined in the format resource/scope. The resource is the resource that the permission is required for, and the permission is the permission that is required. You can use the below table to find the supported resources you can use and what they map to in an Entra ID Application Registration: Resource Entra ID API permission Microsoft APIs APIs my organization uses sharepoint SharePoint X graph Microsoft Graph X exchangeonline Office 365 Exchange Online X azure Azure Service Management X flow Power Automate X powerapps PowerApps Service X dynamics Dynamics CRM X You can combine multiple permissions in the same attribute. They can be from the same resource or from different resources. The syntax how to apply them would be like: [RequiredApiApplicationPermissions(\"sharepoint/Sites.Read.All\", \"graph/Group.Read.All\")] This sample would require both the Sites.Read.All on SharePoint and the Group.Read.All on Microsoft Graph permissions to be present in the application registration under the application permissions type. If multiple attributes are defined on a cmdlet, the cmdlet will require only one of the permissions defined in the attributes to run. They are treated as an OR condition towards eachother. I.e. the following permission attributes would define that only one of the permissions is required to run the cmdlet: [RequiredApiDelegatedOrApplicationPermissions(\"graph/GroupMember.Read.All\")] [RequiredApiDelegatedOrApplicationPermissions(\"graph/Group.Read.All\")] [RequiredApiDelegatedOrApplicationPermissions(\"graph/Directory.Read.All\")] [RequiredApiDelegatedOrApplicationPermissions(\"graph/Group.ReadWrite.All\")] [RequiredApiDelegatedOrApplicationPermissions(\"graph/Directory.ReadWrite.All\")] These attributes should be added starting with the least priviledged one at the top going down towards the most priviledged permission. If you have a scenario that a combination of permissions is required, you can define multiple permissions in the same attribute to have them be handled as an AND. I.e. the following permission attributes would define that all of the permissions are required to run the cmdlet: [RequiredApiDelegatedOrApplicationPermissions(\"graph/GroupMember.Read.All\", \"graph/Group.Read.All\")] ApiNotAvailableUnderApplicationPermissions This attribute indicates that the cmdlet cannot be run in the context of an application. If the cmdlet is run in the context of an application, a warning will be thrown. Sample of where application permissions are not allowed: Sample of how the attribute can be applied: ApiNotAvailableUnderDelegatedPermissions This attribute indicates that the cmdlet cannot be run in the delegated context. If the cmdlet is run in a delegated context, a warning will be thrown. RequiredApiApplicationPermissions This attribute indicates that the cmdlet requires specific application permissions to run. If the application does not have the required permissions, a warning will be thrown. Sample of how the attribute can be applied: RequiredApiDelegatedPermissions This attribute indicates that the cmdlet requires specific delegated permissions to run. If the delegate does not have the required permissions, a warning will be thrown. Sample of how the attribute can be applied: RequiredApiDelegatedOrApplicationPermissions This attribute indicates that the cmdlet requires specific permissions to run, which are the same for a delegate and an application context. If the delegate or application does not have the required permissions, a warning will be thrown. Sample of how the attribute can be applied:"
  },
  "articles/powershellpredictor.html": {
    "href": "articles/powershellpredictor.html",
    "title": "PnP PowerShell predictor | PnP PowerShell",
    "keywords": "PnP PowerShell predictor The PnP PowerShell predictor is easy to install and use. It provides great help in finding the cmdlet within PnP PowerShell you need and which parameters to provide to get the job done. It will show handy autocomplete options which are automatically generated each night based on the samples provided with each cmdlet in our documentation. This allows you to quickly pick not just the cmdlet you need, but also have all the parameters you need showing up already. You would then only still need to change the values of the parameters to match your scenario. PnP PowerShell predictor can be installed as an add-on module to PnP PowerShell. More information on how to set it up and to download it can be found on the PnP PowerShell Predictor GitHub page."
  },
  "articles/registerapplication.html": {
    "href": "articles/registerapplication.html",
    "title": "Register an Entra ID Application to use with PnP PowerShell | PnP PowerShell",
    "keywords": "Register an Entra ID Application to use with PnP PowerShell Note It has always been a recommended practise to register your own Entra ID Application to use with PnP PowerShell. As of September 9th, 2024, this has become mandatory step. This article will guide you through how to do so. The first decision you will have to make is whether you are going to interactively log on through PnP PowerShell to your tenant by providing your credentials, Interactive Login, or if you are aiming to write a script that will log on without requiring any user intervention, App Only Access. Depending on your scenario, continue reading in the appropriate section below. Setting up access to your own Entra ID App for Interactive Login In this scenario, you will be creating an application registration in Entra ID which will allow you to interactively log on to your tenant using PnP PowerShell. This means that each time you use PnP PowerShell, you will need to enter your credentials and comply with any multi factor authentication and conditional access policies that may have been set up on your tenant. There are two methods to create your application registration for this scenario: creating it automatically (easiest) or creating it manually. Both will require you to have at least the Application Developer permission role or the Global Administrator permission role. The first should be enough to create the application registration in Entra ID, whenever this has been disabled for normal users, but Global Administrator permissions might be needed after this to set the desired permissions on the application registration. See determining which permissions you need for more information. Proceed in the section below which matches with your desired option for creating the application registration, automatically or manually. Automatically create an app registration for interactive login PnP PowerShell has a cmdlet that allows you to register a new Entra ID Application specifically for interactive login. Notice that you need to be able to create App registrations in your Entra ID. Register-PnPEntraIDAppForInteractiveLogin -ApplicationName \"PnP Rocks\" -Tenant [yourtenant].onmicrosoft.com -Interactive When you run the cmdlet above you will be asked to authenticate with your username, password and an optional second factor. After that a new app will be registered in the Entra ID (make sure you have the rights to do this). By default a limited set of permissions scopes is added, but you can provide the one of the permission parameters (GraphApplicationPermissions, GraphDelegatePermissions, SharePointApplicationPermissions, SharePointDelegatePermissions) to provide your own permission scopes. After the app has been registered you will be asked to provide consent for the application. Alternatively you can ask someone with the appropriate access rights to navigate to the app registration in the Entra ID portal to add them for you. See determining which permissions you need for more information. Manually create an app registration for interactive login Another option is to manually create the application registration in Entra ID. While the automatic method above is by far the easiest and quickest, for those that like to fully understand each step of the process, can follow this steps in this paragraph in order to create it manually. Navigate to the Entra ID portal and authenticate with an account that has permissions to create application registrations Using the menu on the left, go to Identity > Applications > App registrations At the top, click on New registration In the Name field, enter any name you would like which indicates to you what the purpose of this script is. Leave the rest of the fields as they are and click on Register at the bottom of the page. Take note of the Application (client) ID value, as you will use this to connect to PnP PowerShell using the application registration you have just created In the menu, look for Manage and click on Authentication Under Platform configurations on the page, click on Add a platform In the panel that shows up on the right, click on Mobile and desktop applications Leave the three boxes shown in the panel on the right unchecked and in the Custom redirect URIs field, enter: http://localhost Note that this should really be http and not https Click on Configure at the bottom Under Manage go to API permissions In the Configured permissions section, click on the three dots in the line that reads Microsoft Graph (1) and click on Remove all permissions and click on Yes, remove in the confirmation dialog that will show up. In the Configured permissions section, click on Add a permission In the panel on the right, stay in the Microsoft APIs category and scroll down to SharePoint and click on it Click on Delegated permissions Expand AllSites and check the box for AllSites.Read or any other permission you wish to use with your application registration and click on Add permissions at the bottom Under Configured permissions click on Grant admin consent for -organization name- If this button is greyed out, it means you do not have the proper permissions to provide the consent. Log in using an account or ask someone having the Global Administrator role to perform this step for you if this is the case. In the panel on the right, select No, remove other granted permissions and click on Grant admin consent at the bottom. In the confirmation dialog that appears, click Yes. The Configured permissions section should now look similar to the screenshot below. You can now use this application to connect to PnP PowerShell or add additional permissions to this application registration as necessary. Setting up access to your own Entra ID App for App Only Access If you're looking to register an application in Entra ID to use PnP PowerShell with a script that will run without requiring user interaction, App Only described in this section is what you want to go with. PnP PowerShell has a cmdlet that allows you to register a new Entra ID App, and optionally generate the certificates for you to use to login with that app. $result = Register-PnPEntraIDApp -ApplicationName \"PnP Rocks\" -Tenant [yourtenant].onmicrosoft.com -OutPath c:\\mycertificates -DeviceLogin $result When you run the cmdlet above you will be asked to navigate to the shown url and enter the code shown. After that a new app will be registered in the Entra ID (make sure you have the rights to do this), and a certificate will be generated and uploaded to that app. After this a URL will be shown which you have to navigate to to provide consent for this application. By default a limited set of permissions scopes is added, but you can provide the one of the permission parameters (GraphApplicationPermissions, GraphDelegatePermissions, SharePointApplicationPermissions, SharePointDelegatePermissions) to provide your own permission scopes. It also returns the private key certificate encoded in base64 encoding. As it spans multiple lines, it is recommended to assign the outcome of Register-PnPEntraIDApp to a variable so you have access to this value more easily. The Base64 encoded private key certificate can be used in your Connect-PnPOnline voiding the need to have access to the physical file: Connect-PnPOnline [yourtenant].sharepoint.com -ClientId [clientid] -Tenant [yourtenant].onmicrosoft.com -CertificateBase64Encoded [pfx base64 encoded] The cmdlet will also save both the CER and PFX files to the location specified with the -Outpath parameter. The names of the files will be matching the -ApplicationName parameter, e.g. in the example above the files will be called PnP Rocks.cer and PnP Rocks.pfx. The output of the cmdlet will show the clientid. After all is set up and consent has been provided you can login using: Connect-PnPOnline [yourtenant].sharepoint.com -ClientId [clientid] -Tenant [yourtenant].onmicrosoft.com -CertificatePath [certificate.pfx] Special instructions for GCC or National Cloud environments In order to set up your application registration on a GCC or a national cloud environment, you will have to take a few extra steps. In the two methods described above for interactive login and App Only access, you will have to add -AzureEnvironment [USGovernment|USGovernmentHigh|USGovernmentDoD|Germany|China] to the cmdlet picking the one that applies to your environment to register your application in Entra ID. I.e. for an application registration meand for interactive login, use: Register-PnPEntraIDAppForInteractiveLogin -ApplicationName \"PnP Rocks\" -Tenant [yourtenant].onmicrosoft.com -Interactive -AzureEnvironment [USGovernment|USGovernmentHigh|USGovernmentDoD|Germany|China] And for an App Only application registration, use: $result = Register-PnPEntraIDApp -ApplicationName \"PnP Rocks\" -Tenant [yourtenant].onmicrosoft.com -OutPath c:\\mycertificates -DeviceLogin -AzureEnvironment [USGovernment|USGovernmentHigh|USGovernmentDoD|Germany|China] $result The above statement grants a few permission scopes. You might want to add more if you want to. Alternatively, after registering the application, navigate to Entra ID, locate the app registration, and grant more permissions and consent to them. Optionally modify the manifest for the app There is a limitation in the Entra ID for national cloud environments where you cannot select permission scopes for SharePoint Online. In order to add specific SharePoint rights you will have to manually add them to the manifest that you can edit in Entra ID: Locate the requiredResourceAccess section and add to or modify the existing entries. See the example below (notice, this is an example, do not copy and paste this as is as it will limit the permissions to only AllSites.FullControl): \"requiredResourceAccess\": [ { \"resourceAppId\": \"00000003-0000-0ff1-ce00-000000000000\", \"resourceAccess\": [ { \"id\": \"56680e0d-d2a3-4ae1-80d8-3c4f2100e3d0\", \"type\": \"Scope\" } ] } You can add more permissions by using the following values: The resourceAppId for SharePoint = \"00000003-0000-0ff1-ce00-000000000000\" Permission Permission type Id Type Sites.FullControl.All Application 678536fe-1083-478a-9c59-b99265e6b0d3 Role AllSites.FullControl Delegate 56680e0d-d2a3-4ae1-80d8-3c4f2100e3d0 Scope"
  },
  "articles/runningtests.html": {
    "href": "articles/runningtests.html",
    "title": "Running the Unit Tests | PnP PowerShell",
    "keywords": "Running the Unit Tests Effectively the unit tests are not unit tests but should be more thought of as an integration test as we run the cmdlets against an actual site. Note These unit tests are not actively being used at the moment. Please ensure you test your cmdlets manually before submitting a PR. We do have a build process that verifies if your PR will compile, but it will not test if your submission leads to the expected result. Setting up your environment Create a (modern) site collection at any location in your tenant. This site collection will be used for testing. Running the test script In the build folder of this project you'll find a Run-Tests.ps1 file. This script allows you to run the tests With a Stored Credential (Recommended) You can use a stored credential to authenticate to your site. We recommend using the Microsoft.PowerShell.SecretsManagement module. For more information about setting that one up see Authentication ./Run-Tests.ps1 -SiteUrl \"https://yourtenant.sharepoint.com/sites/yoursite\" -CredentialManagerLabel \"yourlabel\" With credentials $password = ConvertTo-SecureString \"P@ssW0rD!\" -AsPlainText -Force $username = \"yourname@domain.com\" ./Run-Tests.ps1 -SiteUrl \"https://yourtenant.sharepoint.com/sites/yoursite\" -Username $username -Password $password If you do not specify the password parameter you will be prompted to enter the password: $username = \"yourname@domain.com\" ./Run-Tests.ps1 -SiteUrl \"https://yourtenant.sharepoint.com/sites/yoursite\" -Username $username Enter password:"
  },
  "articles/scriptsamples.html": {
    "href": "articles/scriptsamples.html",
    "title": "Script Samples | PnP PowerShell",
    "keywords": "Script Samples If you are looking for examples on using the PnP PowerShell cmdlets, there are a wide range of samples on PnP Script Samples. You can search by the cmdlets used in the samples. Note: We importing scripts into PnP Script Samples from this repository. Imported Scripts Get Site Ids to URL | PnP Script Samples Find Links in Canvas | PnP Script Samples"
  },
  "articles/telemetry.html": {
    "href": "articles/telemetry.html",
    "title": "Disable or Enable telemetry | PnP PowerShell",
    "keywords": "Disable or Enable telemetry By default PnP PowerShell will report its usage anonymously to the PnP team. We collection information about the version of PnP PowerShell, the operation system version and the cmdlet executed. Notice that we will not include parameters used and we will not include any values of parameters. We will also not be able to trace the execution back to the specific tenant it ran on, the organization it was used for or the person it was run by. Having telemtry in place allows us to get insight in the usage of cmdlets and thereby prioritize work towards the most popular cmdlets. To query if in a connected PnP PowerShell session the telemetry is enabled, use Get-PnPPowerShellTelemetryEnabled. If you wish to control telemetry to be sent, you can use one of the below options. By using PnP PowerShell You can disable telemetry to be sent by using Disable-PnPPowerShellTelemetry. You can enable telemetry to be sent by using Enable-PnPPowerShellTelemetry. By setting an environment variable To disable telemetry, set the PNPPOWERSHELL_DISABLETELEMETRY environment variable to true, i.e. by using $env:PNPPOWERSHELL_DISABLETELEMETRY=$true. Remove the entry again or set it to false to enable telemetry to be sent again. By adding a file in your user profile folder Alternatively, you can create an empty file called .pnppowershelltelemetry inside your home directory ($env:UserProfile on Windows, $env:HOME on Linux) not needing any content inside of the file to disable telemetry. Remove the file again to enable telemetry to be sent."
  },
  "articles/updatenotifications.html": {
    "href": "articles/updatenotifications.html",
    "title": "Update notifications | PnP PowerShell",
    "keywords": "Update notifications One time per PowerShell session, PnP PowerShell will check for new versions when you execute Connect-PnPOnline. To turn off this update check set the PNPPOWERSHELL_UPDATECHECK environment variable to false. Any other value will still continue to check for versions. If you have a script and want to turn off the update check, simply set the following as the first line of your script: $env:PNPPOWERSHELL_UPDATECHECK=\"false\" When do you receive an update notification If the major version of your current version is lower than the currently available major version. If the major versions are the same, but the minor version is lower than the currently available minor version. If you are running a nightly build on PowerShell 7 Besides the above rules, you will also receive a notification if the major and minor versions are the same, but the patch level is lower than the currently available version."
  },
  "articles/upgrading.html": {
    "href": "articles/upgrading.html",
    "title": "Upgrading from the Legacy version of PnP PowerShell | PnP PowerShell",
    "keywords": "Upgrading from the Legacy version of PnP PowerShell First make sure to uninstall any edition of PnP PowerShell that runs on the Windows PowerShell version (the one with the blue background). Uninstall-Module -Name \"SharePointPnPPowerShellOnline\" -AllVersions -Force Now install the new module: Install-Module -Name \"PnP.PowerShell\" Setup authentication. The way PnP PowerShell authenticates you to your tenant has changed. We now use OAuth behind the scenes to authenticate you. We support username/password auth, device code auth and app-only authentication. If you were using Connect-PnPOnline with the -Credentials you will have to register first an Azure AD application on your tenant. This is very straightforward and simple: Register-PnPManagementShellAccess This cmdlet will ask you to authenticate, and then provide consent to the PnP Management Shell application. A registration will be added to the Azure AD of your tenant. This is a one-time action per tenant. After you provided consent you will be able to authenticate using: Connect-PnPOnline -Url https://[tenant].sharepoint.com -Credentials (Get-Credential) Read more information about authentication. Changes Check your scripts. As this is a major release, we have deprecated cmdlets, renamed cmdlets, and we marked some parameters as obsolete. Important We marked the -Web parameter as obsolete on many cmdlets. The -Web parameter allows you to execute cmdlets to a subweb underneath the current web. Due to API changes under the hood of PnP Powershell we marked this parameter as obsolete. The parameter will be removed in a future release. Notice though that it is still fully possible to connect to a subweb by using the full url to the subweb with Connect-PnPOnline. Old New/Replaced with Notes Apply-PnPProvisioningTemplate Invoke-PnPSiteTemplate Get-PnPProvisioningTemplate Get-PnPSiteTemplate Add-PnPDataRowsToProvisioningTemplate Add-PnPDataRowsToSiteTemplate Add-PnPFileToProvisioningTemplate Add-PnPFileToSiteTemplate Add-PnPListFoldersToProvisioningTemplate Add-PnPListFoldersToSiteTemplate Convert-PnPFolderToProvisioningTemplate Convert-PnPFolderToSiteTemplate Convert-PnPProvisioningTemplate Convert-PnPSiteTemplate Export-PnPListToProvisioningTemplate Export-PnPListToSiteTemplate New-PnPProvisioningTemplate New-PnPSiteTemplate New-PnPProvisioningTemplateFromFolder New-PnPSiteTemplateFromFolder Read-PnPProvisioningTemplate Read-PnPSiteTemplate Remove-PnPFileFromProvisioningTemplate Remove-PnPFileFromSiteTemplate Save-PnPProvisioningTemplate Save-PnPSiteTemplate Set-PnPProvisioningTemplateMetadata Set-PnPSiteTemplateMetadata Add-PnPProvisioningTemplate Add-PnPSiteTemplate Apply-PnPTenantTemplate Invoke-PnPTenantTemplate Get-PnPAppInstance Get-PnPApp Different parameters Import-PnPAppPackage Install-PnPApp Different parameters Uninstall-PnPAppInstance Uninstall-PnPApp Different parameters Get-PnPHealthScore Deprecated Enable-PnPResponsiveUI Deprecated Disabled-PnPResponsiveUI Deprecated Disable-PnPInplaceRecordsManagementForSite Set-PnPInPlaceRecordsManagement -Enabled $false Enable-PnPInplaceRecordsManagementForSite Set-PnPInPlaceRecordsManagement -Enabled $true Measure-PnPResponseTime Deprecated. Consider using Fiddler for more detailed data Get-PnPManagementApiAccessToken Connect-PnPOnline -Scopes [scopes] Connect-PnPHubSite Add-PnPHubSiteAssociation Removed alias Disconnect-PnPHubSite Remove-PnPHubSiteAssociation Removed alias Add-PnPOffice365GroupToSite Add-PnPMicrosoft365GroupToSite Removed alias Add-PnPUnifiedGroupMember Add-PnPMicrosoft365GroupMember Removed alias Add-PnPUnifiedGroupOwner Add-PnPMicrosoft365GroupOwner Removed alias Clear-PnPUnifiedGroupMember Clear-PnPMicrosoft365GroupMember Removed alias Clear-PnPUnifiedGroupOwner Clear-PnPMicrosoft365GroupOwner Removed alias Get-PnPDeletedUnifiedGroup Get-PnPDeletedMicrosoft365Group Removed alias Get-PnPUnifiedGroup Get-PnPMicrosoft365Group Removed alias Get-PnPUnifiedGroupMembers Get-PnPMicrosoft365GroupMembers Removed alias Get-PnPUnifiedGroupOwners Get-PnPMicrosoft365GroupOwners Removed alias New-PnPUnifiedGroup New-PnPMicrosoft365Group Removed alias Remove-PnPDeletedUnifiedGroup Remove-PnPDeletedMicrosoft365Group Removed alias Remove-PnPUnifiedGroup Remove-PnPMicrosoft365Group Removed alias Remove-PnPUnifiedGroupMember Remove-PnPMicrosoft365GroupMember Removed alias Remove-PnPUnifiedGroupOwner Remove-PnPMicrosoft365GroupOwner Removed alias Restore-PnPDeletedUnifiedGroup Restore-PnPDeletedMicrosoft365Group Removed alias Set-PnPUnifiedGroup Set-PnPMicrosoft365Group Removed alias Execute-PnPQuery Invoke-PnPQuery Removed alias Ensure-PnPFolder Resolve-PnPFolder Removed alias Install-PnPSolution Deprecated Add-PnPWorkflowDefinition Deprecated Add-PnPWorkflowSubscription Deprecated Get-PnPWorkflowDefinition Deprecated Get-PnPWorkflowInstances Deprecated Get-PnPWorkflowSubscription Deprecated Remove-PnPWorkflowDefinition Deprecated Remove-PnPWorkflowSubscription Deprecated Resume-PnPWorkflowInstance Deprecated Start-PnPWorkflowInstance Deprecated Stop-PnPWorkflowInstance Deprecated Test-PnPOffice365AliasIsUsed Test-PnPMicrosoft365AliasIsUsed Parameter Changes Cmdlet Parameter Changes Register-PnPManagementShell SiteUrl Removed. Not required anymore Connect-PnPOnline MinimalHealthScore Removed. Not applicable anymore Connect-PnPOnline SkipTenantAdminCheck Removed. Remove-PnPTenantSite FromRecycleBin Use Clear-PnPTenantRecycleBinItem Set-PnPTenantSite UserCodeMaximumLevel Sandbox solutions have been deprecated, no more applicable Set-PnPTenantSite UserCodeWarningLevel Sandbox solutions have been deprecated, no more applicable New-PnPAzureCertificate Out Use OutPfx instead Get-PnPAvailableLanguage Identity Removed as it does not apply to SharePoint Online"
  },
  "articles/vscodeextension.html": {
    "href": "articles/vscodeextension.html",
    "title": "Visual Studio Code Extension | PnP PowerShell",
    "keywords": "Visual Studio Code Extension If you like using Visual Studio Code to develop your PnP PowerShell scripts, you might want to try the PnP PowerShell extension to boost your productivity. It provides various features that may be helpful when creating scripts using PnP PowerShell. Currently, the extension provides the following: full docs for every PnP PowerShell command directly in VS Code samples gallery with samples from PnP script sample repo snippets with all possible commands Check out the PnP PowerShell Visual Studio Code Extension page for more information."
  },
  "cmdlets/Add-PnPAdaptiveScopeProperty.html": {
    "href": "cmdlets/Add-PnPAdaptiveScopeProperty.html",
    "title": "Add-PnPAdaptiveScopeProperty | PnP PowerShell",
    "keywords": "Add-PnPAdaptiveScopeProperty SYNOPSIS This is an alias for Set-PnPAdaptiveScopeProperty. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPAlert.html": {
    "href": "cmdlets/Add-PnPAlert.html",
    "title": "Add-PnPAlert | PnP PowerShell",
    "keywords": "Add-PnPAlert SYNOPSIS Adds an alert for a user to a list SYNTAX Add-PnPAlert [-List] <ListPipeBind> [-Title <String>] [-User <UserPipeBind>] [-DeliveryMethod <AlertDeliveryChannel>] [-ChangeType <AlertEventType>] [-Frequency <AlertFrequency>] [-Filter <AlertFilter>] [-Time <DateTime>] [-AlertTemplateName <string>] [-Connection <PnPConnection>] DESCRIPTION This cmdlets allows to add an alert for a user to a list. EXAMPLES EXAMPLE 1 Add-PnPAlert -List \"Demo List\" Adds a new alert to the \"Demo List\" for the current user. EXAMPLE 2 Add-PnPAlert -Title \"Daily summary\" -List \"Demo List\" -Frequency Daily -ChangeType All -Time (Get-Date -Hour 11 -Minute 00 -Second 00) Adds a daily alert for the current user at the given time to the \"Demo List\". Note: a timezone offset might be applied so please verify on your tenant that the alert indeed got the right time. EXAMPLE 3 Add-PnPAlert -Title \"Alert for user\" -List \"Demo List\" -User \"i:0#.f|membership|Alice@contoso.onmicrosoft.com\" Adds a new alert for user \"Alice\" to the \"Demo List\". Note: Only site owners and admins are permitted to set alerts for other users. EXAMPLE 4 Add-PnPAlert -Title \"Alert for user\" -List \"Demo List\" -User \"i:0#.f|membership|Alice@contoso.onmicrosoft.com\" -Frequency Daily -Time ((Get-Date).AddDays(1)) Adds a new weekly alert for user \"Alice\" to the \"Demo List\". The moment the alert will be sent out is based on the Date passed in through -Time. It will take the date and time you pass in and make that the day and time of the week to send out the alert. I.e. if today is a Friday at it is 5.00 PM and you provide (Get-Date).AddDays(1), it will schedule the alert to be sent out on Saturdays at 5.00 PM. Through the web interface of SharePoint Online, the date and time shown with the alert will be converted to its equivalent in PST (Redmond time zone), regardless of the region configuration of the site. PARAMETERS -ChangeType Alert change type Type: AlertEventType Parameter Sets: (All) Accepted values: AddObject, ModifyObject, DeleteObject, Discussion, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DeliveryMethod Alert delivery method Type: AlertDeliveryChannel Parameter Sets: (All) Accepted values: Email, Sms Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Filter Alert filter Type: AlertFilter Parameter Sets: (All) Accepted values: AnythingChanges, SomeoneElseChangesAnItem, SomeoneElseChangesItemCreatedByMe, SomeoneElseChangesItemLastModifiedByMe Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Frequency Alert frequency For daily: Use the -Time parameter to specify the time of the day the alert should be sent out. I.e. pass in -Time (Get-Date -Hour 11 -Minute 00 -Second 00) to have the alerts sent every day at 11 AM. For weekly: It will take the date and time you pass in and make that the day and time of the week to send out the alert. I.e. if today is a Friday at it is 5.00 PM and you provide (Get-Date).AddDays(1), it will schedule the alert to be sent out on Saturdays at 5.00 PM. Through the web interface of SharePoint Online, the date and time shown with the alert will be converted to its equivalent in PST (Redmond time zone), regardless of the region configuration of the site. Type: AlertFrequency Parameter Sets: (All) Accepted values: Immediate, Daily, Weekly Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Time Alert time (if frequency is not immediate). See additional notes on how to use this parameter under -Frequency. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Alert title Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User User to create the alert for (User ID, login name or actual User object). Skip this parameter to create an alert for the current user. Note: Only site owners can create alerts for other users. Type: UserPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AlertTemplateName To define a particular alert template. Refer this link to specify the template value name. Type: string Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPApp.html": {
    "href": "cmdlets/Add-PnPApp.html",
    "title": "Add-PnPApp | PnP PowerShell",
    "keywords": "Add-PnPApp SYNOPSIS Add/uploads an available app to the app catalog SYNTAX Add-PnPApp [-Path] <String> [-Scope <AppCatalogScope>] [-Overwrite] [-Timeout <Int32>] [-Publish [-SkipFeatureDeployment]] [-Connection <PnPConnection>] [-Force <SwitchParameter>] DESCRIPTION Allows to upload an app to the app catalog at tenant or site collection level. By specifying -Publish option it is possible to deploy/trust it at the same time. EXAMPLES EXAMPLE 1 Add-PnPApp -Path ./myapp.sppkg This will upload the specified app package to the tenant app catalog EXAMPLE 2 Add-PnPApp -Path ./myapp.sppkg -Publish This will upload the specified app package to the tenant app catalog and deploy/trust it at the same time. EXAMPLE 3 Add-PnPApp -Path ./myapp.sppkg -Scope Site -Publish This will upload the specified app package to the site collection app catalog and deploy/trust it at the same time. EXAMPLE 4 Add-PnPApp -Path ./myapp.sppkg -Publish -SkipFeatureDeployment This will upload the specified app package to the tenant app catalog, deploy/trust it and make it globally available on all site collections. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Overwrite When provided, it will overwrite the existing app package if it already exists Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path The path to the app package to deploy to the App Catalog Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Publish This will deploy/trust an app into the App Catalog Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Defines which app catalog to use: the site collection scoped App Catalog or the tenant wide App Catalog. Defaults to Tenant. Type: AppCatalogScope Parameter Sets: (All) Accepted values: Tenant, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SkipFeatureDeployment When provided, the solution will be globally deployed, meaning one does not have to go into every site to add it as an app to have its components available. Instead they will be available rightaway. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Timeout Specifies the timeout in seconds. Defaults to 200. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to change no-script setting. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPApplicationCustomizer.html": {
    "href": "cmdlets/Add-PnPApplicationCustomizer.html",
    "title": "Add-PnPApplicationCustomizer | PnP PowerShell",
    "keywords": "Add-PnPApplicationCustomizer SYNOPSIS Adds a SharePoint Framework client side extension application customizer to a specific site collection or web SYNTAX Add-PnPApplicationCustomizer [-Title <String>] [-Description <String>] [-Sequence <Int32>] [-Scope <CustomActionScope>] -ClientSideComponentId <Guid> [-ClientSideComponentProperties <String>] [-ClientSideHostProperties <String>] [-Connection <PnPConnection>] DESCRIPTION Adds a SharePoint Framework client side extension application customizer by registering a user custom action to a web or sitecollection. This can be useful in the scenario where you have a SPFx Application Customizer whcih you decide to deploy to the global app catalog, checking the box to deploy it to the entire tenant. If you then go to the Tenant Wide Extensions list inside the tenant app catalog and set the SPFx Application Customizer its Disabled property to be Yes, you can use this cmdlet to add the functionality of that SPFx component to specific site collections manually. This voids having to add it as an app to every site collection and it being visible in the site contents, yet you having full control over where it should be ran and where not. EXAMPLES EXAMPLE 1 Add-PnPApplicationCustomizer -Title \"CollabFooter\" -ClientSideComponentId c0ab3b94-8609-40cf-861e-2a1759170b43 -ClientSideComponentProperties \"{`\"sourceTermSet`\":`\"PnP-CollabFooter-SharedLinks`\",`\"personalItemsStorageProperty`\":`\"PnP-CollabFooter-MyLinks`\"} Adds a new application customizer to the current web. This requires that a SharePoint Framework solution has been deployed containing the application customizer specified in its manifest. Be sure to run Install-PnPApp before trying this cmdlet on a site. PARAMETERS -ClientSideComponentId The Client Side Component Id of the SharePoint Framework client side extension application customizer found in the manifest Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSideComponentProperties The Client Side Component Properties of the application customizer. Specify values as a json string : \"{Property1 : 'Value1', Property2: 'Value2'}\" Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSideHostProperties The Client Side Host Properties of the application customizer. Specify values as a json string : \"{'preAllocatedApplicationCustomizerTopHeight': '50', 'preAllocatedApplicationCustomizerBottomHeight': '50'}\" Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the application customizer Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope The scope of the CustomAction to add to. Either Web or Site; defaults to Web. 'All' is not valid for this command. Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Sequence Sequence of this application customizer being injected. Use when you have a specific sequence with which to have multiple application customizers being added to the page. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the application customizer Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPAvailableSiteClassification.html": {
    "href": "cmdlets/Add-PnPAvailableSiteClassification.html",
    "title": "Add-PnPAvailableSiteClassification | PnP PowerShell",
    "keywords": "Add-PnPAvailableSiteClassification SYNOPSIS Required Permissions Microsoft Graph API: Directory.ReadWrite.All Adds one or more classic site classification values to the list of possible values. SYNTAX Add-PnPAvailableSiteClassification -Classifications <System.Collections.Generic.List`1[System.String]> [-Connection <PnPConnection>] DESCRIPTION Allows to add classic site classification values. EXAMPLES EXAMPLE 1 Add-PnPAvailableSiteClassification -Classifications \"Top Secret\" Adds the \"Top Secret\" classification to the already existing classification values. EXAMPLE 2 Add-PnPAvailableSiteClassification -Classifications \"Top Secret\",\"HBI\" Adds the \"Top Secret\" and the \"HBI\" classifications to the already existing classification values. PARAMETERS -Classifications Classic classifications values to add. Type: System.Collections.Generic.List`1[System.String] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPAzureADGroupMember.html": {
    "href": "cmdlets/Add-PnPAzureADGroupMember.html",
    "title": "Add-PnPAzureADGroupMember | PnP PowerShell",
    "keywords": "Add-PnPAzureADGroupMember SYNOPSIS Required Permissions Microsoft Graph API: All of Group.ReadWrite.All, User.ReadWrite.All Adds members to a particular Azure Active Directory Group. This can be a security, distribution or Microsoft 365 group. SYNTAX Add-PnPAzureADGroupMember -Identity <AzureADGroupPipeBind> -Users <String[]> [-RemoveExisting] [-Connection <PnPConnection>] DESCRIPTION Allows to add users to Azure Active Directory Group. This can be a security, distribution or Microsoft 365 group. By specifying -RemoveExisting option it is possible to first clear the group of all existing members. EXAMPLES EXAMPLE 1 Add-PnPAzureADGroupMember -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" Adds the provided two users as additional members to the Azure Active Directory Group named \"Project Team\". EXAMPLE 2 Add-PnPAzureADGroupMember -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" -RemoveExisting Sets the provided two users as the only members of the Azure Active Directory group named \"Project Team\" by removing any current existing members first. EXAMPLE 3 Add-PnPAzureADGroupMember -Identity \"Project Team\" -Users \"125eaa87-7b54-41fd-b30f-2adfa68c4afe\" Sets the provided security group as a member of the Azure Active Directory group name \"Project Team\". PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Identity of the Azure Active Directory group to add members to. Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -RemoveExisting If provided, all existing members will be removed and only those provided through Users will become members. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Users The UPN(s) of the user(s) to add to the Azure Active Directory group as a member. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Add-PnPAzureADGroupOwner.html": {
    "href": "cmdlets/Add-PnPAzureADGroupOwner.html",
    "title": "Add-PnPAzureADGroupOwner | PnP PowerShell",
    "keywords": "Add-PnPAzureADGroupOwner SYNOPSIS Required Permissions Microsoft Graph API: All of Group.ReadWrite.All, User.ReadWrite.All Adds users to the owners of an Azure Active Directory group. This can be a security or Microsoft 365 group. Distribution lists are not currently supported by Graph API. SYNTAX Add-PnPAzureADGroupOwner -Identity <AzureADGroupPipeBind> -Users <String[]> [-RemoveExisting] [-Connection <PnPConnection>] DESCRIPTION Allows to add users to owners of an Azure Active Directory Group. This can be a security, distribution or Microsoft 365 group. By specifying -RemoveExisting option it is possible to first clear the group of all existing members. EXAMPLES EXAMPLE 1 Add-PnPAzureADGroupOwner -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" Adds the provided two users as additional owners to the Azure Active Directory group named \"Project Team\". EXAMPLE 2 Add-PnPAzureADGroupOwner -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" -RemoveExisting Sets the provided two users as the only owners of the Azure Active Directory group named \"Project Team\" by removing any current existing members first. EXAMPLE 3 Add-PnPAzureADGroupOwner -Identity \"Project Team\" -Users \"125eaa87-7b54-41fd-b30f-2adfa68c4afe\" Sets the provided security group as owner of the Azure Active Directory group name \"Project Team\". PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Identity of the Azure Active Directory group to add owners to. Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -RemoveExisting If provided, all existing members will be removed and only those provided through Users will become members. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Users The UPN(s) of the user(s) to add to the Azure Active Directory group as a member. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Add-PnPAzureADServicePrincipalAppRole.html": {
    "href": "cmdlets/Add-PnPAzureADServicePrincipalAppRole.html",
    "title": "Add-PnPAzureADServicePrincipalAppRole | PnP PowerShell",
    "keywords": "Add-PnPAzureADServicePrincipalAppRole SYNOPSIS Required Permissions Microsoft Graph API: AppRoleAssignment.ReadWrite.All and Application.Read.All or AppRoleAssignment.ReadWrite.All and Directory.Read.All Adds an app role to a service principal/application registration in Azure Active Directory. SYNTAX By built in type Add-PnPAzureADServicePrincipalAppRole -Principal <ServicePrincipalPipeBind> -AppRole <ServicePrincipalAppRoleBind> -BuiltInType <ServicePrincipalBuiltInType> [-Connection <PnPConnection>] By resource Add-PnPAzureADServicePrincipalAppRole -Principal <ServicePrincipalPipeBind> -AppRole <ServicePrincipalAppRoleBind> -Resource <ServicePrincipalPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows adding of an app role such as Sites.FullControl.All to a service principal/application registration in Azure Active Directory. This can be used to grant permissions to a service principal/application registration, such as a Managed Identity. EXAMPLES EXAMPLE 1 Add-PnPAzureADServicePrincipalAppRole -Principal \"62614f96-cb78-4534-bf12-1f6693e8237c\" -AppRole \"Directory.Read.All\" -BuiltInType MicrosoftGraph Adds the permission Directory.Read.All for Microsoft Graph to the service principal with the object id 62614f96-cb78-4534-bf12-1f6693e8237c EXAMPLE 2 Get-PnPAzureADServicePrincipal -BuiltInType SharePointOnline | Get-PnPAzureADServicePrincipalAvailableAppRole -Identity \"Sites.FullControl.All\" | Add-PnPAzureADServicePrincipalAppRole -Principal \"62614f96-cb78-4534-bf12-1f6693e8237c\" Adds the permission Site.FullControl.All for SharePoint Online to the service principal with the object id 62614f96-cb78-4534-bf12-1f6693e8237c EXAMPLE 3 Get-PnPAzureADServicePrincipal -BuiltInType MicrosoftGraph | Get-PnPAzureADServicePrincipalAvailableAppRole -Identity \"Group.ReadWrite.All\" | Add-PnPAzureADServicePrincipalAppRole -Principal \"mymanagedidentity\" Adds the permission Group.ReadWrite.All for Microsoft Graph to the service principal with the name mymanagedidentity. EXAMPLE 4 Add-PnPAzureADServicePrincipalAppRole -Principal \"62614f96-cb78-4534-bf12-1f6693e8237c\" -AppRole \"MyApplication.Read\" -Resource \"b8c2a8aa-33a0-43f4-a9d3-fe2851c5293e\" Adds the permission MyApplication.Read for the application registration with object id b8c2a8aa-33a0-43f4-a9d3-fe2851c5293e to the service principal with the object id 62614f96-cb78-4534-bf12-1f6693e8237c PARAMETERS -Principal The object id, name or instance of the service principal/application registration to add the app role to. Type: ServicePrincipalPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -AppRole The object id, name or instance of the application role to add to the service principal/application registration. Type: ServicePrincipalAppRoleBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -BuiltInType The built in application type to use for the app role. This can be MicrosoftGraph or SharePointOnline. Type: ServicePrincipalAppRoleBind Parameter Sets: By built in type Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Resource The object id, name or instance of the application to which the role belongs you wish to add to the service principal/application registration. If omitted, it will try to define the owning service principal from the passed in AppRole. Type: ServicePrincipalAppRoleBind Parameter Sets: By resource Required: False Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Add-PnPContentType.html": {
    "href": "cmdlets/Add-PnPContentType.html",
    "title": "Add-PnPContentType | PnP PowerShell",
    "keywords": "Add-PnPContentType SYNOPSIS Adds a new content type. SYNTAX Add-PnPContentType -Name <String> [-ContentTypeId <String>] [-Description <String>] [-Group <String>] [-ParentContentType <ContentType>] [-Connection <PnPConnection>] DESCRIPTION Adds a new content type to a site. To create a content type in the modern Content Type Gallery, first connect to the content type hub site for the tenant. EXAMPLES EXAMPLE 1 Add-PnPContentType -Name \"Project Document\" -Description \"Use for Contoso projects\" -Group \"Contoso Content Types\" -ParentContentType $ct This will add a new content type based on the parent content type stored in the $ct variable. EXAMPLE 2 Add-PnPContentType -Name \"Project Document\" -Description \"Use for Contoso projects\" -Group \"Contoso Content Types\" -ParentContentType (Get-PnPContentType -Identity 0x0101) -DocumentTemplate \"/_cts/Project Document/template.docx\" This will add a new content type based on the standard document content type and assigns the document template template.docx to it. EXAMPLE 3 Add-PnPContentType -Name \"Project Item\" -Description \"Use for Contoso projects\" -Group \"Contoso Content Types\" This will add a new content type based on the item content type. EXAMPLE 4 Add-PnPContentType -Name \"Project Item\" This will add a new content type based on the item content type to a group \"Custom Content Types\". EXAMPLE 5 Add-PnPContentType -Name \"Project Document\" -Description \"Use for Contoso projects\" -Group \"Contoso Content Types\" -ContentTypeId 0x010100CD5BDB7DDE03324794E155CE37E4B6BB This will add a new content type to a group \"Contoso Content Types\". The content type will be based on the standard document content type, and with the specified content type id. Mind the content type id format: https://learn.microsoft.com/en-us/previous-versions/office/developer/sharepoint-2010/aa543822(v=office.14) PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentTypeId If specified, in the format of 0x0100233af432334r434343f32f3, will create a content type with the specific ID. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Specifies the description of the new content type. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Specifies the group of the new content type. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Specify the name of the new content type. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ParentContentType Specifies the parent of the new content type. Type: ContentType Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DocumentTemplate Allows providing a server relative path to a file which should be used as the document template for this content type. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPContentTypeToDocumentSet.html": {
    "href": "cmdlets/Add-PnPContentTypeToDocumentSet.html",
    "title": "Add-PnPContentTypeToDocumentSet | PnP PowerShell",
    "keywords": "Add-PnPContentTypeToDocumentSet SYNOPSIS Adds a content type to a document set. SYNTAX Add-PnPContentTypeToDocumentSet -ContentType <ContentTypePipeBind[]> -DocumentSet <DocumentSetPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to add a content type to a document set. EXAMPLES EXAMPLE 1 Add-PnPContentTypeToDocumentSet -ContentType \"Test CT\" -DocumentSet \"Test Document Set\" This will add the content type called 'Test CT' to the document set called 'Test Document Set'. EXAMPLE 2 $docset = Get-PnPDocumentSetTemplate -Identity \"Test Document Set\" $ct = Get-PnPContentType -Identity \"Test CT\" Add-PnPContentTypeToDocumentSet -ContentType $ct -DocumentSet $docset This will add the content type called 'Test CT' to the document set called 'Test Document Set'. EXAMPLE 3 Add-PnPContentTypeToDocumentSet -ContentType 0x0101001F1CEFF1D4126E4CAD10F00B6137E969 -DocumentSet 0x0120D520005DB65D094035A241BAC9AF083F825F3B This will add the content type called 'Test CT' to the document set called 'Test Document Set'. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The content type object, name or id to add. Either specify name, an id, or a content type object. Type: ContentTypePipeBind[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DocumentSet The document set object or id to add the content type to. Either specify a name, a document set template object, an id, or a content type object. Type: DocumentSetPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPContentTypeToList.html": {
    "href": "cmdlets/Add-PnPContentTypeToList.html",
    "title": "Add-PnPContentTypeToList | PnP PowerShell",
    "keywords": "Add-PnPContentTypeToList SYNOPSIS Adds a new content type to a list SYNTAX Add-PnPContentTypeToList -List <ListPipeBind> -ContentType <ContentTypePipeBind> [-DefaultContentType] [-Connection <PnPConnection>] DESCRIPTION Allows to add content type to list. By specifying -DefaultContentType option it is possible set the newly added content type as default. EXAMPLES EXAMPLE 1 Add-PnPContentTypeToList -List \"Documents\" -ContentType \"Project Document\" -DefaultContentType This will add an existing content type to a list and sets it as the default content type PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType Specifies the content type that needs to be added to the list Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultContentType Specify if the content type needs to be the default content type or not Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List Specifies the list to which the content type needs to be added Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPContentTypesFromContentTypeHub.html": {
    "href": "cmdlets/Add-PnPContentTypesFromContentTypeHub.html",
    "title": "Add-PnPContentTypesFromContentTypeHub | PnP PowerShell",
    "keywords": "Add-PnPContentTypesFromContentTypeHub SYNOPSIS Required Permissions ManageLists permission on the current site or the content type hub site. Adds published content types from content type hub site to current site. If the content type already exists on the current site then the latest published version of the content type will be synced to the site. SYNTAX Add-PnPContentTypesFromContentTypeHub -ContentTypes List<String> [-Site <SitePipeBind>] [-Connection <PnPConnection>] DESCRIPTION Allows to add content types from content type hub site to current site. In case the same content type is already present on the current site then the latest published version will be used. EXAMPLES EXAMPLE 1 Add-PnPContentTypesFromContentTypeHub -ContentTypes \"0x0101\", \"0x01\" This will add the content types with the ids '0x0101' and '0x01' to the current site. Latest published version of these content types will be synced if they were already present in the current site. There's an issue with this cmdlet if you use it on private channel sites. The workaround for that is to execute the below command: Enable-PnPFeature -Identity 73ef14b1-13a9-416b-a9b5-ececa2b0604c -Scope Site -Force EXAMPLE 2 Add-PnPContentTypesFromContentTypeHub -ContentTypes \"0x010057C83E557396744783531D80144BD08D\" -Site https://tenant.sharepoint.com/sites/HR This will add the content type with the id '0x010057C83E557396744783531D80144BD08D' to the site with the provided URL. Latest published version of these content types will be synced if they were already present in the current site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentTypes The list of content type ids present in content type hub site that are required to be added/synced to the current site. Type: List<String> Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site The site to which to add the content types coming from the hub. If omitted, it will be applied to the currently connected site. Type: SitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: Currently connected site Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPCustomAction.html": {
    "href": "cmdlets/Add-PnPCustomAction.html",
    "title": "Add-PnPCustomAction | PnP PowerShell",
    "keywords": "Add-PnPCustomAction SYNOPSIS Adds a custom action SYNTAX Default Add-PnPCustomAction -Name <String> -Title <String> -Description <String> -Group <String> -Location <String> [-Sequence <Int32>] [-Url <String>] [-ImageUrl <String>] [-CommandUIExtension <String>] [-RegistrationId <String>] [-Rights <PermissionKind[]>] [-RegistrationType <UserCustomActionRegistrationType>] [-Scope <CustomActionScope>] [-Connection <PnPConnection>] Client Side Component Id Add-PnPCustomAction -Name <String> -Title <String> -Location <String> [-Sequence <Int32>] [-RegistrationId <String>] [-RegistrationType <UserCustomActionRegistrationType>] [-Scope <CustomActionScope>] -ClientSideComponentId <Guid> [-ClientSideComponentProperties <String>] [-ClientSideHostProperties <String>] [-Connection <PnPConnection>] DESCRIPTION Adds a user custom action to a web or sitecollection. EXAMPLES EXAMPLE 1 $cUIExtn = \"<CommandUIExtension><CommandUIDefinitions><CommandUIDefinition Location=\"\"Ribbon.List.Share.Controls._children\"\"><Button Id=\"\"Ribbon.List.Share.GetItemsCountButton\"\" Alt=\"\"Get list items count\"\" Sequence=\"\"11\"\" Command=\"\"Invoke_GetItemsCountButtonRequest\"\" LabelText=\"\"Get Items Count\"\" TemplateAlias=\"\"o1\"\" Image32by32=\"\"_layouts/15/images/placeholder32x32.png\"\" Image16by16=\"\"_layouts/15/images/placeholder16x16.png\"\" /></CommandUIDefinition></CommandUIDefinitions><CommandUIHandlers><CommandUIHandler Command=\"\"Invoke_GetItemsCountButtonRequest\"\" CommandAction=\"\"javascript: alert('Total items in this list: '+ ctx.TotalListItems);\"\" EnabledScript=\"\"javascript: function checkEnable() { return (true);} checkEnable();\"\"/></CommandUIHandlers></CommandUIExtension>\" Add-PnPCustomAction -Name 'GetItemsCount' -Title 'Invoke GetItemsCount Action' -Description 'Adds custom action to custom list ribbon' -Group 'SiteActions' -Location 'CommandUI.Ribbon' -CommandUIExtension $cUIExtn Adds a new custom action to the custom list template, and sets the Title, Name and other fields with the specified values. On click it shows the number of items in that list. Notice: escape quotes in CommandUIExtension. EXAMPLE 2 Add-PnPCustomAction -Title \"CollabFooter\" -Name \"CollabFooter\" -Location \"ClientSideExtension.ApplicationCustomizer\" -ClientSideComponentId c0ab3b94-8609-40cf-861e-2a1759170b43 -ClientSideComponentProperties \"{`\"sourceTermSet`\":`\"PnP-CollabFooter-SharedLinks`\",`\"personalItemsStorageProperty`\":`\"PnP-CollabFooter-MyLinks`\"}\" Adds a new application customizer to the site. This requires that an SPFX solution has been deployed containing the application customizer specified. Be sure to run Install-PnPApp before trying this cmdlet on a site. PARAMETERS -ClientSideComponentId The Client Side Component Id of the custom action Type: Guid Parameter Sets: Client Side Component Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSideComponentProperties The Client Side Component Properties of the custom action. Specify values as a json string : \"{Property1 : 'Value1', Property2: 'Value2'}\" Type: String Parameter Sets: Client Side Component Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSideHostProperties The Client Side Host Properties of the custom action. Specify values as a json string : \"{'preAllocatedApplicationCustomizerTopHeight': '50', 'preAllocatedApplicationCustomizerBottomHeight': '50'}\" Type: String Parameter Sets: Client Side Component Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommandUIExtension XML fragment that determines user interface properties of the custom action Type: String Parameter Sets: Default Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the custom action Type: String Parameter Sets: Default Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The group where this custom action needs to be added like 'SiteActions' Type: String Parameter Sets: Default Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ImageUrl The URL of the image associated with the custom action Type: String Parameter Sets: Default Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Location The actual location where this custom action need to be added like 'CommandUI.Ribbon' Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The name of the custom action Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RegistrationId The identifier of the object associated with the custom action. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RegistrationType Specifies the type of object associated with the custom action Type: UserCustomActionRegistrationType Parameter Sets: (All) Accepted values: None, List, ContentType, ProgId, FileType Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Rights A string array that contain the permissions needed for the custom action Type: PermissionKind[] Parameter Sets: Default Accepted values: EmptyMask, ViewListItems, AddListItems, EditListItems, DeleteListItems, ApproveItems, OpenItems, ViewVersions, DeleteVersions, CancelCheckout, ManagePersonalViews, ManageLists, ViewFormPages, AnonymousSearchAccessList, Open, ViewPages, AddAndCustomizePages, ApplyThemeAndBorder, ApplyStyleSheets, ViewUsageData, CreateSSCSite, ManageSubwebs, CreateGroups, ManagePermissions, BrowseDirectories, BrowseUserInfo, AddDelPrivateWebParts, UpdatePersonalWebParts, ManageWeb, AnonymousSearchAccessWebLists, UseClientIntegration, UseRemoteAPIs, ManageAlerts, CreateAlerts, EditMyUserInfo, EnumeratePermissions, FullMask Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope The scope of the CustomAction to add to. Either Web or Site; defaults to Web. 'All' is not valid for this command. Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Sequence Sequence of this CustomAction being injected. Use when you have a specific sequence with which to have multiple CustomActions being added to the page. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the custom action Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The URL, URI or ECMAScript (JScript, JavaScript) function associated with the action Type: String Parameter Sets: Default Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices UserCustomAction BasePermissions"
  },
  "cmdlets/Add-PnPDataRowsToSiteTemplate.html": {
    "href": "cmdlets/Add-PnPDataRowsToSiteTemplate.html",
    "title": "Add-PnPDataRowsToSiteTemplate | PnP PowerShell",
    "keywords": "Add-PnPDataRowsToSiteTemplate SYNOPSIS Adds datarows to a list inside a PnP Provisioning Template SYNTAX Add-PnPDataRowsToSiteTemplate [-Path] <String> -List <ListPipeBind> [-Query <String>] [-Fields <String[]>] [-IncludeSecurity] [[-TemplateProviderExtensions] <ITemplateProviderExtension[]>] [-TokenizeUrls] [-Connection <PnPConnection>] DESCRIPTION Allows to add datarows to list inside a PnP Provisioning Template. The command allows to specify the fields which should be retrieved using -Fields option and filter the datarows to be used by using -Query option. EXAMPLES EXAMPLE 1 Add-PnPDataRowsToSiteTemplate -Path template.pnp -List 'PnPTestList' -Fields 'Title','Choice' Adds datarows from the provided list to the PnP Provisioning Template at the provided location EXAMPLE 2 Add-PnPDataRowsToSiteTemplate -Path template.pnp -List 'PnPTestList' -Query '<Query><Where><Geq><FieldRef Name=\"Modified\"/><Value Type=\"DateTime\"><Today OffsetDays=\"-7\" /></Value></Geq></Where></Query>' -Fields 'Title','Choice' -IncludeSecurity Adds datarows from the provided list to the PnP Provisioning Template at the provided location, only the items that have changed since a week ago PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Fields The fields to retrieve. If not specified all fields will be loaded in the returned list object. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSecurity A switch to include ObjectSecurity information. Type: SwitchParameter Parameter Sets: (All) Required: False Position: 5 Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list to query Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Filename of the .PNP Open XML site template to read from, optionally including full path. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Query The CAML query to execute against the list. Defaults to all items. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while loading the template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: 4 Default value: None Accept pipeline input: False Accept wildcard characters: False -TokenizeUrls If set, this switch will try to tokenize the values with web and site related tokens Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPDocumentSet.html": {
    "href": "cmdlets/Add-PnPDocumentSet.html",
    "title": "Add-PnPDocumentSet | PnP PowerShell",
    "keywords": "Add-PnPDocumentSet SYNOPSIS Creates a new document set in a library. SYNTAX Add-PnPDocumentSet [-List] <ListPipeBind> [-Name] <String> [-ContentType <ContentTypePipeBind>] [-Folder <FolderPipeBind>] [-Connection <PnPConnection>] DESCRIPTION Allows to add new document set to the library. EXAMPLES EXAMPLE 1 Add-PnPDocumentSet -List \"Documents\" -ContentType \"Test Document Set\" -Name \"Test\" EXAMPLE 2 Add-PnPDocumentSet -List \"Documents\" -ContentType \"Test Document Set\" -Name \"Test\" -Folder \"Documents/Projects/Europe\" This will add a new document set based upon the 'Test Document Set' content type to a list called 'Documents'. The document set will be named 'Test' and will be added to the 'Europe' folder, which is located in the 'Projects' folder. Folders will be created if needed. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The name of the content type, its ID, or an actual content object referencing the document set Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The folder in the site/list where the document set needs to be created. Type: FolderPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The name of the list, its ID, or an actual list object from where the document set needs to be added Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The name of the document set Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPEntraIDGroupMember.html": {
    "href": "cmdlets/Add-PnPEntraIDGroupMember.html",
    "title": "Add-PnPEntraIDGroupMember | PnP PowerShell",
    "keywords": "Add-PnPEntraIDGroupMember SYNOPSIS This is an alias for Add-PnPAzureADGroupMember. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPEntraIDGroupOwner.html": {
    "href": "cmdlets/Add-PnPEntraIDGroupOwner.html",
    "title": "Add-PnPEntraIDGroupOwner | PnP PowerShell",
    "keywords": "Add-PnPEntraIDGroupOwner SYNOPSIS This is an alias for Add-PnPAzureADGroupOwner. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPEntraIDServicePrincipalAppRole.html": {
    "href": "cmdlets/Add-PnPEntraIDServicePrincipalAppRole.html",
    "title": "Add-PnPEntraIDServicePrincipalAppRole | PnP PowerShell",
    "keywords": "Add-PnPEntraIDServicePrincipalAppRole SYNOPSIS This is an alias for Add-PnPAzureADServicePrincipalAppRole. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPEventReceiver.html": {
    "href": "cmdlets/Add-PnPEventReceiver.html",
    "title": "Add-PnPEventReceiver | PnP PowerShell",
    "keywords": "Add-PnPEventReceiver SYNOPSIS Adds a new remote event receiver SYNTAX Add-PnPEventReceiver [-List <ListPipeBind>] [-Scope <EventReceiverScope>] -Name <String> -Url <String> -EventReceiverType <EventReceiverType> -Synchronization <EventReceiverSynchronization> [-SequenceNumber <Int32>] [-Force] [-Connection <PnPConnection>] DESCRIPTION This cmdlet adds a new remote event receiver. EXAMPLES EXAMPLE 1 Add-PnPEventReceiver -List \"ProjectList\" -Name \"TestEventReceiver\" -Url https://yourserver.azurewebsites.net/eventreceiver.svc -EventReceiverType ItemAdded -Synchronization Asynchronous This will add a new remote event receiver that is executed after an item has been added to the ProjectList list EXAMPLE 2 Add-PnPEventReceiver -Name \"TestEventReceiver\" -Url https://yourserver.azurewebsites.net/eventreceiver.svc -EventReceiverType WebAdding -Synchronization Synchronous This will add a new remote event receiver that is executed before a new subsite is being created EXAMPLE 3 Add-PnPEventReceiver -Name \"TestEventReceiver\" -Url https://yourserver.azurewebsites.net/eventreceiver.svc -EventReceiverType ListAdding -Synchronization Synchronous -Scope Site This will add a new remote event receiver that is executed before a new list is being created inside the site collection scope EXAMPLE 4 Add-PnPEventReceiver -Name \"TestEventReceiver\" -Url https://yourserver.azurewebsites.net/eventreceiver.svc -EventReceiverType ListDeleted -Synchronization Asynchronous -Scope Web This will add a new remote event receiver that is executed after a list has been deleted from the current site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EventReceiverType The type of the event receiver like ItemAdded, ItemAdding. See https://learn.microsoft.com/previous-versions/office/sharepoint-server/jj167297(v=office.15) for the full list of available types. Type: EventReceiverType Parameter Sets: (All) Aliases: Type Accepted values: ItemAdding, ItemUpdating, ItemDeleting, ItemCheckingIn, ItemCheckingOut, ItemUncheckingOut, ItemAttachmentAdding, ItemAttachmentDeleting, ItemFileMoving, ItemVersionDeleting, FieldAdding, FieldUpdating, FieldDeleting, ListAdding, ListDeleting, SiteDeleting, WebDeleting, WebMoving, WebAdding, SiteMovingFromGeoLocation, GroupAdding, GroupUpdating, GroupDeleting, GroupUserAdding, GroupUserDeleting, RoleDefinitionAdding, RoleDefinitionUpdating, RoleDefinitionDeleting, RoleAssignmentAdding, RoleAssignmentDeleting, InheritanceBreaking, InheritanceResetting, WorkflowStarting, ItemAdded, ItemUpdated, ItemDeleted, ItemCheckedIn, ItemCheckedOut, ItemUncheckedOut, ItemAttachmentAdded, ItemAttachmentDeleted, ItemFileMoved, ItemFileConverted, ItemVersionDeleted, FieldAdded, FieldUpdated, FieldDeleted, ListAdded, ListDeleted, SiteDeleted, WebDeleted, WebMoved, WebProvisioned, WebRestored, GroupAdded, GroupUpdated, GroupDeleted, GroupUserAdded, GroupUserDeleted, RoleDefinitionAdded, RoleDefinitionUpdated, RoleDefinitionDeleted, RoleAssignmentAdded, RoleAssignmentDeleted, InheritanceBroken, InheritanceReset, WorkflowStarted, WorkflowPostponed, WorkflowCompleted, EntityInstanceAdded, EntityInstanceUpdated, EntityInstanceDeleted, AppInstalled, AppUpgraded, AppUninstalling, EmailReceived, ContextEvent, InvalidReceiver Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name where the remote event receiver needs to be added. If omitted, the remote event receiver will be added to the web. Type: ListPipeBind Parameter Sets: List Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope The scope of the EventReceiver to add to. Either Web or Site; defaults to Web. 'All' is not valid for this command. Type: EventReceiverScope Parameter Sets: Scope Accepted values: Web, Site, All Required: False Position: Named Default value: Web Accept pipeline input: False Accept wildcard characters: False -Name The name of the remote event receiver Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SequenceNumber The sequence number where this remote event receiver should be placed Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Synchronization The synchronization type: Asynchronous or Synchronous Type: EventReceiverSynchronization Parameter Sets: (All) Aliases: Sync Accepted values: DefaultSynchronization, Synchronous, Asynchronous Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The URL of the remote event receiver web service Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPField.html": {
    "href": "cmdlets/Add-PnPField.html",
    "title": "Add-PnPField | PnP PowerShell",
    "keywords": "Add-PnPField SYNOPSIS Add a field SYNTAX Add field to list (Default) Add-PnPField [-List <ListPipeBind>] -DisplayName <String> -InternalName <String> -Type <FieldType> [-Id <Guid>] [-Formula <String>] [-Choices <String>] [-AddToDefaultView] [-Required] [-Group <String>] [-ClientSideComponentId <Guid>] [-ClientSideComponentProperties <String>] [-AddToAllContentTypes] [-Connection <PnPConnection>] Add field reference to list Add-PnPField -List <ListPipeBind> -Field <FieldPipeBind> [-Connection <PnPConnection>] Add field to web Add-PnPField -DisplayName <String> -InternalName <String> -Type <FieldType> [-Id <Guid>] [-Formula <String>] [-Choices <String>] [-ClientSideComponentId <Guid>] [-ClientSideComponentProperties <String>] [-Connection <PnPConnection>] DESCRIPTION Adds a field (a column) to a list or as a site column. To add a column of type Managed Metadata use the Add-PnPTaxonomyField cmdlet. EXAMPLES EXAMPLE 1 Add-PnPField -Type Calculated -InternalName \"C1\" -DisplayName \"C1\" -Formula \"=[Title]\" Adds a new calculated site column with the formula specified EXAMPLE 2 Add-PnPField -List \"Demo list\" -DisplayName \"Location\" -InternalName \"SPSLocation\" -Type Choice -Group \"Demo Group\" -AddToDefaultView -Choices \"Stockholm\",\"Helsinki\",\"Oslo\" This will add a field of type Choice to the list \"Demo List\". EXAMPLE 3 Add-PnPField -List \"Demo list\" -DisplayName \"Speakers\" -InternalName \"SPSSpeakers\" -Type MultiChoice -Group \"Demo Group\" -AddToDefaultView -Choices \"Obiwan Kenobi\",\"Darth Vader\", \"Anakin Skywalker\" This will add a field of type Multiple Choice to the list \"Demo List\". (you can pick several choices for the same item) EXAMPLE 4 Add-PnPField -List \"Demo List\" -Field \"MyTestCol\" This will add an existing site column called \"MyTestCol\" to the list \"Demo List\". EXAMPLE 5 Add-PnPField -Type Choice -Choices \"PnP\",\"Parker\",\"Sharing Is Caring\" -DisplayName \"My Test Column\" -InternalName \"MyTestCol\" This will add a site column of type Choice (only one choice value can be chosen at the same time) called \"My Test Column\" with three choice values. EXAMPLE 6 Add-PnPField -Type Calculated -ResultType Number -DisplayName \"My Calculated Column\" -InternalName \"MyCalcCol\" -Formula \"=Today()\" This will add a site column of type Calculated called \"My Calculated Column\" which contains todays date. PARAMETERS -AddToDefaultView Switch Parameter if this field must be added to the default view Type: SwitchParameter Parameter Sets: Add field to list, Add field to web Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AddToAllContentTypes Switch Parameter if this field must be added to all content types Type: SwitchParameter Parameter Sets: Add field to list, Add field to web Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Choices The Choice values when field type is Choice or MultiChoice Type: String[] Parameter Sets: Add field to list (Choice or MultiChoice Field Chosen), Add field to web (Choice or MultiChoice Field Chosen) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSideComponentId The Client Side Component Id to set to the field Type: Guid Parameter Sets: Add field to list, Add field to web Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSideComponentProperties The Client Side Component Properties to set to the field Type: String Parameter Sets: Add field to list, Add field to web Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The display name of the field Type: String Parameter Sets: Add field to list, Add field to web Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Field The name of the field, its ID or an actual field object that needs to be added Type: FieldPipeBind Parameter Sets: Add field reference to list Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Formula The Formula when Calculated column is chosen. Type: String[] Parameter Sets: Add field to list (Calculated Field), Add field to web (Calculated Field) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The group name to where this field belongs to Type: String Parameter Sets: Add field to list, Add field by XML to list Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id The ID of the field, must be unique Type: Guid Parameter Sets: Add field to list, Add field to web Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InternalName The internal name of the field Type: String Parameter Sets: Add field to list, Add field to web Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The name of the list, its ID or an actual list object where this field needs to be added Type: ListPipeBind Parameter Sets: Add field to list Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False Type: ListPipeBind Parameter Sets: Add field reference to list Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Required Switch Parameter if the field is a required field Type: SwitchParameter Parameter Sets: Add field to list, Add field to web Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Type The type of the field like Choice, Note, Calculate, MultiChoice. For a complete list of field types visit https://learn.microsoft.com/dotnet/api/microsoft.sharepoint.client.fieldtype Type: FieldType Parameter Sets: Add field to list, Add field to web Accepted values: Invalid, Integer, Text, Note, DateTime, Counter, Choice, Lookup, Boolean, Number, Currency, URL, Computed, Threading, Guid, MultiChoice, GridChoice, Calculated, File, Attachments, User, Recurrence, CrossProjectLink, ModStat, Error, ContentTypeId, PageSeparator, ThreadIndex, WorkflowStatus, AllDayEvent, WorkflowEventType, Geolocation, OutcomeChoice, Location, Thumbnail, MaxItems Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFieldFromXml.html": {
    "href": "cmdlets/Add-PnPFieldFromXml.html",
    "title": "Add-PnPFieldFromXml | PnP PowerShell",
    "keywords": "Add-PnPFieldFromXml SYNOPSIS Adds a field to a list or as a site column based upon a CAML/XML field definition SYNTAX Add-PnPFieldFromXml [-List <ListPipeBind>] [-FieldXml] <String> [-Connection <PnPConnection>] DESCRIPTION Allows to add new field by specifying its definition in CAML/XML format to list or site columns. EXAMPLES EXAMPLE 1 $xml = '<Field Type=\"Text\" Name=\"PSCmdletTest\" DisplayName=\"PSCmdletTest\" ID=\"{27d81055-f208-41c9-a976-61c5473eed4a}\" Group=\"Test\" Required=\"FALSE\" StaticName=\"PSCmdletTest\" />' Add-PnPFieldFromXml -FieldXml $xml Adds a field with the specified field CAML code to the site. EXAMPLE 2 $xml = '<Field Type=\"Text\" Name=\"PSCmdletTest\" DisplayName=\"PSCmdletTest\" ID=\"{27d81055-f208-41c9-a976-61c5473eed4a}\" Group=\"Test\" Required=\"FALSE\" StaticName=\"PSCmdletTest\" />' Add-PnPFieldFromXml -List \"Demo List\" -FieldXml $xml Adds a field with the specified field CAML code to the list \"Demo List\". PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FieldXml CAML snippet containing the field definition. See https://learn.microsoft.com/sharepoint/dev/schema/field-element-list Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -List The name of the list, its ID or an actual list object where this field needs to be added Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Field CAML documentation"
  },
  "cmdlets/Add-PnPFieldToContentType.html": {
    "href": "cmdlets/Add-PnPFieldToContentType.html",
    "title": "Add-PnPFieldToContentType | PnP PowerShell",
    "keywords": "Add-PnPFieldToContentType SYNOPSIS Adds an existing site column to a content type SYNTAX Add-PnPFieldToContentType -Field <FieldPipeBind> -ContentType <ContentTypePipeBind> [-Required] [-Hidden] [-Connection <PnPConnection>] DESCRIPTION Allows to add a field from site columns to an existing content type. EXAMPLES EXAMPLE 1 Add-PnPFieldToContentType -Field \"Project_Name\" -ContentType \"Project Document\" This will add an existing site column with an internal name of \"Project_Name\" to a content type called \"Project Document\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType Specifies which content type a field needs to be added to Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Field Specifies the field that needs to be added to the content type Type: FieldPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Hidden Specifies whether the field should be hidden or not Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Required Specifies whether the field is required or not Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UpdateChildren Specifies whether the field needs to be pushed to child content types. Default value is true. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: True Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFile.html": {
    "href": "cmdlets/Add-PnPFile.html",
    "title": "Add-PnPFile | PnP PowerShell",
    "keywords": "Add-PnPFile SYNOPSIS Uploads a file to Web SYNTAX Upload file Add-PnPFile -Path <String> -Folder <FolderPipeBind> [-NewFileName <String>] [-Checkout] [-CheckInComment <String>] [-CheckinType <CheckinType>] [-Approve] [-ApproveComment <String>] [-Publish] [-PublishComment <String>] [-UseWebDav] [-Values <Hashtable>] [-ContentType <ContentTypePipeBind>] [-Connection <PnPConnection>] Upload file from stream Add-PnPFile -Folder <FolderPipeBind> -FileName <String> -Stream <Stream> [-Checkout] [-CheckInComment <String>] [-CheckinType <CheckinType>] [-Approve] [-ApproveComment <String>] [-Publish] [-PublishComment <String>] [-UseWebDav] [-Values <Hashtable>] [-ContentType <ContentTypePipeBind>] [-Connection <PnPConnection>] Create or update file from text Add-PnPFile -Folder <FolderPipeBind> -FileName <String> -Content <text> [-Checkout] [-CheckInComment <String>] [-CheckinType <CheckinType>] [-Approve] [-ApproveComment <String>] [-Publish] [-PublishComment <String>] [-UseWebDav] [-Values <Hashtable>] [-ContentType <ContentTypePipeBind>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet uploads a local file, file from a stream or plain text to the specified folder. EXAMPLES EXAMPLE 1 Add-PnPFile -Path c:\\temp\\company.master -Folder \"_catalogs/masterpage\" This will upload the file company.master to the masterpage catalog EXAMPLE 2 Add-PnPFile -Path .\\displaytemplate.html -Folder \"_catalogs/masterpage/display templates/test\" This will upload the file displaytemplate.html to the test folder in the display templates folder. If the test folder does not exist it will create it. EXAMPLE 3 Add-PnPFile -Path .\\sample.doc -Folder \"Shared Documents\" -Values @{Modified=\"12/28/2023\"} This will upload the file sample.doc to the Shared Documents folder. After uploading it will set the Modified date to 12/28/2023. EXAMPLE 4 Add-PnPFile -FileName sample.doc -Folder \"Shared Documents\" -Stream $fileStream -Values @{Modified=\"12/28/2023\"} This will add a file sample.doc with the contents of the stream into the Shared Documents folder. After adding it will set the Modified date to 12/28/2023. EXAMPLE 5 Add-PnPFile -Path sample.doc -Folder \"Shared Documents\" -ContentType \"Document\" -Values @{Modified=\"12/28/2023\"} This will add a file sample.doc to the Shared Documents folder, with a ContentType of 'Documents'. After adding it will set the Modified date to 12/28/2023. EXAMPLE 6 Add-PnPFile -Path sample.docx -Folder \"Documents\" -Values @{Modified=\"12/28/2016\"; Created=\"12/28/2023\"; Editor=23} This will add a file sample.docx to the Documents folder and will set the Modified date to 12/28/2016, Created date to 12/28/2023 and the Modified By field to the user with ID 23. To find out about the proper user ID to relate to a specific user, use Get-PnPUser. EXAMPLE 7 Add-PnPFile -Path sample.docx -Folder \"Documents\" -NewFileName \"differentname.docx\" This will upload a local file sample.docx to the Documents folder giving it the filename differentname.docx on SharePoint EXAMPLE 8 Add-PnPFile -FileName sample.txt -Folder \"Shared Documents\" -Content '{ \"Test\": \"Value\" }' This will create a file sample.docx in the Documents library inserting the provided plain text into it. If a similarly file already exists at this location, its contents will be overwritten. PARAMETERS -Approve Will auto approve the uploaded file Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ApproveComment The comment added to the approval Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CheckInComment The comment added to the checkin Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CheckinType Specifies the type of check-in for a file. Type: Enum (Microsoft.SharePoint.Client.CheckinType) Parameter Sets: (All) Required: False Position: Named Default value: MinorCheckIn Accept pipeline input: False Accept wildcard characters: False -Checkout If versioning is enabled, this will check out the file first if it exists, upload the file, then check it in again Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType Use to assign a ContentType to the file Type: ContentTypePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FileName Name for file Type: String Parameter Sets: Upload file from stream Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The destination folder in the site Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NewFileName Filename to give the file on SharePoint Type: String Parameter Sets: Upload file Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path The local file path Type: String Parameter Sets: Upload file Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Publish Will auto publish the file Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PublishComment The comment added to the publish action Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Stream Stream with the file contents Type: Stream Parameter Sets: Upload file from stream Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UseWebDav Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Content Content to add to the file to create or overwrite on SharePoint. It will blindly overwrite the contents of the file if it already exists. Type: String Parameter Sets: ASTEXT Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Values Use the internal names of the fields when specifying field names. Single line of text: -Values @{\"Title\" = \"Title New\"} Multiple lines of text: -Values @{\"MultiText\" = \"New text\\n\\nMore text\"} Rich text: -Values @{\"MultiText\" = \"<strong>New</strong> text\"} Choice: -Values @{\"Choice\" = \"Value 1\"} Number: -Values @{\"Number\" = \"10\"} Currency: -Values @{\"Number\" = \"10\"} Currency: -Values @{\"Currency\" = \"10\"} Date and Time: -Values @{\"DateAndTime\" = \"04/20/2023 14:16\"} (use mm/dd/yyyy) Lookup (id of lookup value): -Values @{\"Lookup\" = \"2\"} Multi value lookup (id of lookup values as array 1): -Values @{\"MultiLookupField\" = \"1\",\"2\"} Multi value lookup (id of lookup values as array 2): -Values @{\"MultiLookupField\" = 1,2} Multi value lookup (id of lookup values as string): -Values @{\"MultiLookupField\" = \"1,2\"} Yes/No: -Values @{\"YesNo\" = $false} Person/Group (id of user/group in Site User Info List or email of the user, separate multiple values with a comma): -Values @{\"Person\" = \"user1@domain.com\",\"21\"} Managed Metadata (single value with path to term): -Values @{\"MetadataField\" = \"CORPORATE|DEPARTMENTS|FINANCE\"} Managed Metadata (single value with id of term): -Values @{\"MetadataField\" = \"fe40a95b-2144-4fa2-b82a-0b3d0299d818\"} with Id of term Managed Metadata (multiple values with paths to terms): -Values @{\"MetadataField\" = \"CORPORATE|DEPARTMENTS|FINANCE\",\"CORPORATE|DEPARTMENTS|HR\"} Managed Metadata (multiple values with ids of terms): -Values @{\"MetadataField\" = \"fe40a95b-2144-4fa2-b82a-0b3d0299d818\",\"52d88107-c2a8-4bf0-adfa-04bc2305b593\"} Hyperlink or Picture: -Values @{\"Hyperlink\" = \"https://github.com/OfficeDev/, OfficePnP\"} Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFileAnonymousSharingLink.html": {
    "href": "cmdlets/Add-PnPFileAnonymousSharingLink.html",
    "title": "Add-PnPFileAnonymousSharingLink | PnP PowerShell",
    "keywords": "Add-PnPFileAnonymousSharingLink SYNOPSIS Creates an anonymous sharing link to share a file. SYNTAX Add-PnPFileAnonymousSharingLink -FileUrl <String> -Type <PnP.Core.Model.Security.ShareType> -Password <String> -ExpirationDateTime <DateTime> [-Connection <PnPConnection>] DESCRIPTION Creates an anonymous sharing link to share a file. EXAMPLES EXAMPLE 1 Add-PnPFileAnonymousSharingLink -FileUrl \"/sites/demo/Shared Documents/Test.docx\" This will create an anonymous sharing link for Test.docx file in the Shared Documents library which will be viewable. EXAMPLE 2 Add-PnPFileAnonymousSharingLink -FileUrl \"/sites/demo/Shared Documents/Test.docx\" -Type Edit -Password \"PnPRocks!\" This will create an anonymous sharing link for Test.docx file in the Shared Documents library which will be editable by anonymous users after specifying the password. EXAMPLE 3 Add-PnPFileAnonymousSharingLink -FileUrl \"/sites/demo/Shared Documents/Test.docx\" -Type View -ExpirationDateTime (Get-Date).AddDays(15) This will create an anonymous sharing link for Test.docx file in the Shared Documents library which will be viewable by anonymous users. The link will expire after 15 days. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FileUrl The file in the site Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShareType The type of sharing that you want to, i.e do you want to enable people in your organization to view the shared content or also edit the content? CreateOnly value is not supported. Type: PnP.Core.Model.Security.ShareType Parameter Sets: (All) Required: False Position: Named Default value: View Accept pipeline input: False Accept wildcard characters: False -Password The password to be set for the file to be shared. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExpirationDateTime The expiration date to be after which the file link will expire. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFileOrganizationalSharingLink.html": {
    "href": "cmdlets/Add-PnPFileOrganizationalSharingLink.html",
    "title": "Add-PnPFileOrganizationalSharingLink | PnP PowerShell",
    "keywords": "Add-PnPFileOrganizationalSharingLink SYNOPSIS Creates an organizational sharing link for a file. SYNTAX Add-PnPFileOrganizationalSharingLink -FileUrl <String> -Type <PnP.Core.Model.Security.ShareType> [-Connection <PnPConnection>] DESCRIPTION Creates a new organization sharing link for a file. EXAMPLES EXAMPLE 1 Add-PnPFileOrganizationalSharingLink -FileUrl \"/sites/demo/Shared Documents/Test.docx\" This will create an organization sharing link for Test.docx file in the Shared Documents library which will be viewable by users in the organization. EXAMPLE 2 Add-PnPFileOrganizationalSharingLink -FileUrl \"/sites/demo/Shared Documents/Test.docx\" -Type Edit This will create an organization sharing link for Test.docx file in the Shared Documents library which will be editable by users in the organization. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FileUrl The file in the site Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShareType The type of sharing that you want to, i.e do you want to enable people in your organization to view the shared content or also edit the content? CreateOnly value is not supported. Type: PnP.Core.Model.Security.ShareType Parameter Sets: (All) Required: False Position: Named Default value: View Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFileSensitivityLabel.html": {
    "href": "cmdlets/Add-PnPFileSensitivityLabel.html",
    "title": "Add-PnPFileSensitivityLabel | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Add-PnPFileSensitivityLabel SYNOPSIS Required Permissions Microsoft Graph API : One of Files.ReadWrite.All, Sites.ReadWrite.All Add the sensitivity label information for a file in SharePoint. SYNTAX Add-PnPFileSensitivityLabel -Identity <String> -SensitivityLabelId <Guid> -AssignmentMethod <Enum> -JustificationText <string> DESCRIPTION The Add-PnPFileSensitivityLabel cmdlet adds the sensitivity label information for a file in SharePoint using Microsoft Graph. It takes a URL as input, decodes it, and specifically encodes the '+' character if it is part of the filename. It also takes the sensitivity label Id , assignment method and justification text values as input. EXAMPLES Example 1 This example adds the sensitivity label information for the file at the specified URL. Add-PnPFileSensitivityLabel -Identity \"/sites/Marketing/Shared Documents/Report.pptx\" -SensitivityLabelId \"b5b11b04-05b3-4fe4-baa9-b7f5f65b8b64\" -JustificationText \"Previous label no longer applies\" -AssignmentMethod Privileged Example 2 This example removes the sensitivity label information for the file at the specified URL. Add-PnPFileSensitivityLabel -Identity \"/sites/Marketing/Shared Documents/Report.pptx\" -SensitivityLabelId \"\" -JustificationText \"Previous label no longer applies\" -AssignmentMethod Privileged PARAMETERS -Identity The server relative path to the file, the unique identifier of the file, the listitem representing the file, or the file object itself on which we are adding the sensitivity label. Type: FilePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True Accept wildcard characters: False -SensitivityLabelId ID of the sensitivity label to be assigned, or empty string to remove the sensitivity label. Type: string Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -AssignmentMethod The assignment method of the label on the document. Indicates whether the assignment of the label was done automatically, standard, or as a privileged operation (the equivalent of an administrator operation). Type: Guid Parameter Sets: (All) Accepted values: Standard, Privileged, Auto Required: False Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -JustificationText Justification text for audit purposes, and is required when downgrading/removing a label. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFileSharingInvite.html": {
    "href": "cmdlets/Add-PnPFileSharingInvite.html",
    "title": "Add-PnPFileSharingInvite | PnP PowerShell",
    "keywords": "Add-PnPFileSharingInvite SYNOPSIS Creates an invitation for users to a file. SYNTAX Add-PnPFileSharingInvite -FileUrl <String> -Users <String[]> -Message <String> -RequireSignIn <SwitchParameter> -SendInvitation <SwitchParameter> -Role <PermissionRole> -ExpirationDateTime <DateTime> [-Connection <PnPConnection>] DESCRIPTION Creates an invitation for users to a file. EXAMPLES EXAMPLE 1 Add-PnPFileSharingInvite -FileUrl \"/sites/demo/Shared Documents/Test.docx\" -Users \"john@contoso.onmicrosoft.com\" -RequireSignIn This will invite the user John@contoso.onmicrosoft.com to the Test.docx file with Read permissions and will require that user to sign in before accessing the file. EXAMPLE 2 Add-PnPFileSharingInvite -FileUrl \"/sites/demo/Shared Documents/Test.docx\" -Users \"john@contoso.onmicrosoft.com\" -RequireSignIn -SendInvitation -Role Owner This will invite the user John@contoso.onmicrosoft.com to the Test.docx file with Read permissions and will require that user to sign in before accessing the file. The invitation will be sent and the user will have Owner permissions EXAMPLE 3 Add-PnPFileSharingInvite -FileUrl \"/sites/demo/Shared Documents/Test.docx\" -Users \"john@contoso.onmicrosoft.com\" -RequireSignIn -ExpirationDate (Get-Date).AddDays(15) This will invite the user John@contoso.onmicrosoft.com to the Test.docx file with Read permissions and will require that user to sign in before accessing the file. The link will expire after 15 days. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FileUrl The FileUrl in the site Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Users A collection of recipients who will receive access and the sharing invitation. Currently, only one user at a time is supported. We are planning to add support for multiple users a bit later. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Message A plain text formatted message that is included in the sharing invitation. Maximum length 2000 characters. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequireSignIn Specifies where the recipient of the invitation is required to sign-in to view the shared item Type: SwitchParamter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SendInvitation Specifies if an email or post is generated (false) or if the permission is just created (true). Type: SwitchParamter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Role Specify the role that is to be granted to the recipients of the sharing invitation. Supported values are Owner, Write and Read. Type: PnP.Core.Model.Security.PermissionRole Parameter Sets: (All) Required: False Position: Named Default value: Read Accept pipeline input: False Accept wildcard characters: False -ExpirationDateTime The expiration date for the FileUrl after which the permission expires. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFileToSiteTemplate.html": {
    "href": "cmdlets/Add-PnPFileToSiteTemplate.html",
    "title": "Add-PnPFileToSiteTemplate | PnP PowerShell",
    "keywords": "Add-PnPFileToSiteTemplate SYNOPSIS Adds a file to a PnP Provisioning Template package SYNTAX Local File Add-PnPFileToSiteTemplate [-Path] <String> [-Source] <String> [-Folder] <String> [[-Container] <String>] [[-FileLevel] <FileLevel>] [-FileOverwrite] [[-TemplateProviderExtensions] <ITemplateProviderExtension[]>] [-Connection <PnPConnection>] Remove File Add-PnPFileToSiteTemplate [-Path] <String> [-SourceUrl] <String> [[-Container] <String>] [[-FileLevel] <FileLevel>] [-FileOverwrite] [[-TemplateProviderExtensions] <ITemplateProviderExtension[]>] [-Connection <PnPConnection>] DESCRIPTION Allows adding a file to a PnP Provisioning Template package (.pnp) so that the file will get uploaded to the SharePoint Online site to which the template is being invoked. This allows the file to be referenced in i.e. a document template, site logo or any other component that references a file. EXAMPLES EXAMPLE 1 Add-PnPFileToSiteTemplate -Path template.pnp -Source \"Instructions.docx\" -Folder \"Shared Documents\" Embeds a file named \"Instructions.docx\" located in the current folder on the local machine into the PnP Site Template file \"template.pnp\" located in the current folder on the local machine, instructing it to be uploaded to the default document library when the template is applied to a site. EXAMPLE 2 Add-PnPFileToSiteTemplate -Path c:\\temp\\template.pnp -Source \"c:\\temp\\Sample.pptx\" -Folder \"Shared Documents\\Samples\" Embeds a file named \"Sample.pptx\" located in the c:\\temp on the local machine into the PnP Site Template file located at \"c:\\temp\\template.pnp\" on the local machine, instructing it to be uploaded to the folder Samples located in the default document library when the template is applied to a site. EXAMPLE 3 Add-PnPFileToSiteTemplate -Path template.pnp -Source \"./myfile.png\" -Folder \"folderinsite\" -FileLevel Published -FileOverwrite:$false Adds a file to a PnP Site Template, specifies the level as Published and defines to not overwrite the file if it exists in the site. EXAMPLE 4 Add-PnPFileToSiteTemplate -Path template.pnp -Source $sourceFilePath -Folder $targetFolder -Container $container Adds a file to a PnP Site Template with a custom container for the file EXAMPLE 5 Add-PnPFileToSiteTemplate -Path template.pnp -SourceUrl \"Shared%20Documents/ProjectStatus.docx\" Adds a file to a PnP Provisioning Template retrieved from the currently connected site. The url can be server relative or web relative. If specifying a server relative url has to start with the current site url. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Container The target Container for the file to add to the in-memory template, optional argument. Type: String Parameter Sets: (All) Required: False Position: 3 Default value: None Accept pipeline input: False Accept wildcard characters: False -FileLevel The level of the files to add, defaults to Published. Type: FileLevel Parameter Sets: (All) Required: False Position: 4 Default value: Published Accept pipeline input: False Accept wildcard characters: False -FileOverwrite Set to overwrite in site, defaults to true. Type: SwitchParameter Parameter Sets: (All) Required: False Position: 5 Default value: $true Accept pipeline input: False Accept wildcard characters: False -Folder The target Folder for the file to add to the in-memory template. Type: String Parameter Sets: Local File Required: True Position: 2 Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Filename of the .PNP Open XML site template to read from, optionally including full path. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Source The file to add to the PnP Provisioning Template, optionally including full path. Type: String Parameter Sets: Local File Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceUrl The file to add to the PnP Provisioning Template, specifying its url in the current connected Web. Type: String Parameter Sets: Remove File Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while loading the template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: 4 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFileUserSharingLink.html": {
    "href": "cmdlets/Add-PnPFileUserSharingLink.html",
    "title": "Add-PnPFileUserSharingLink | PnP PowerShell",
    "keywords": "Add-PnPFileUserSharingLink SYNOPSIS Creates a sharing link to share a file with a list of specified users. SYNTAX Add-PnPFileUserSharingLink -FileUrl <String> -Type <PnP.Core.Model.Security.ShareType> -Users <String[]> [-Connection <PnPConnection>] DESCRIPTION Creates a new user sharing link for a file. EXAMPLES EXAMPLE 1 Add-PnPFileUserSharingLink -FileUrl \"/sites/demo/Shared Documents/Test.docx\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" This will create an user sharing link for Test.docx file in the Shared Documents library which will be viewable to specified users in the organization. EXAMPLE 2 Add-PnPFileUserSharingLink -FileUrl \"/sites/demo/Shared Documents/Test.docx\" -Type Edit -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" This will create an user sharing link for Test.docx file in the Shared Documents library which will be editable by specified users in the organization. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FileUrl The file in the site Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShareType The type of sharing that you want to, i.e do you want to enable people in your organization to view the shared content or also edit the content? CreateOnly value is not supported. Type: PnP.Core.Model.Security.ShareType Parameter Sets: (All) Required: False Position: Named Default value: View Accept pipeline input: False Accept wildcard characters: False -Users The UPN(s) of the user(s) to with whom you would like to share the file. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFlowOwner.html": {
    "href": "cmdlets/Add-PnPFlowOwner.html",
    "title": "Add-PnPFlowOwner | PnP PowerShell",
    "keywords": "Add-PnPFlowOwner SYNOPSIS Required Permissions Azure: management.azure.com Assigns/updates permissions to a Power Automate flow SYNTAX Add-PnPFlowOwner [-Environment <PowerAutomateEnvironmentPipeBind>] -Identity <PowerPlatformPipeBind> -User <String> -Role <FlowAccessRole> [-AsAdmin] [-Verbose] DESCRIPTION This cmdlet assigns/updates permissions for a user to a Power Automate flow. EXAMPLES Example 1 Add-PnPFlowOwner -Identity f07c34a9-a586-4e58-91fb-e7ea19741b61 -User username@tenant.onmicrosoft.com -Role CanEdit Assigns the specified user with 'CanEdit' access level to the specified flow in the default environment Example 2 Add-PnPFlowOwner -Identity f07c34a9-a586-4e58-91fb-e7ea19741b61 -User 6844c04a-8ee7-40ad-af66-28f6e948cd04 -Role CanView Assigns the specified user with 'CanView' access level to the specified flow in the default environment Example 3 Add-PnPFlowOwner -Environment (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") -Identity f07c34a9-a586-4e58-91fb-e7ea19741b61 -User 6844c04a-8ee7-40ad-af66-28f6e948cd04 -Role CanViewWithShare Assigns the specified user with 'CanViewWithShare' access level to the specified flow in the specified environment Example 4 Add-PnPFlowOwner -Environment (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") -Identity f07c34a9-a586-4e58-91fb-e7ea19741b61 -User username@tenant.onmicrosoft.com -AsAdmin -Role CanEdit Assigns the specified user with 'CanEdit' access level to the specified flow as admin in the specified environment PARAMETERS -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Identity The Name, Id or instance of the Power Automate Flow to add the permissions to. Type: PowerPlatformPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User The user principal name or Id of the user to assign permissions to the Power Automate Flow. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Role The type of permissions to assign to the user on the Power Automate Flow. Valid values: CanView, CanViewWithShare, CanEdit. Type: FlowUseFlowAccessRolerRoleName Parameter Sets: (All) Required: True Position: Named Default value: CanView Accept pipeline input: False Accept wildcard characters: False -AsAdmin If specified, the permission will be set as an admin. If not specified only the flows to which the current user already has access can be modified. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFolder.html": {
    "href": "cmdlets/Add-PnPFolder.html",
    "title": "Add-PnPFolder | PnP PowerShell",
    "keywords": "Add-PnPFolder SYNOPSIS Creates a folder within a parent folder SYNTAX Add-PnPFolder -Name <String> -Folder <FolderPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to add a new folder. EXAMPLES EXAMPLE 1 Add-PnPFolder -Name NewFolder -Folder _catalogs/masterpage This will create the folder NewFolder in the masterpage catalog EXAMPLE 2 Add-PnPFolder -Name NewFolder -Folder \"Shared Documents\" This will create the folder NewFolder in the Documents library EXAMPLE 3 Add-PnPFolder -Name NewFolder -Folder \"Shared Documents/Folder\" This will create the folder NewFolder in Folder inside the Documents library PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The parent folder in the site Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The folder name Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFolderAnonymousSharingLink.html": {
    "href": "cmdlets/Add-PnPFolderAnonymousSharingLink.html",
    "title": "Add-PnPFolderAnonymousSharingLink | PnP PowerShell",
    "keywords": "Add-PnPFolderAnonymousSharingLink SYNOPSIS Creates an anonymous sharing link to share a folder. SYNTAX Add-PnPFolderAnonymousSharingLink -Folder <FolderPipeBind> -Type <PnP.Core.Model.Security.ShareType> -Password <String> -ExpirationDateTime <DateTime> [-Connection <PnPConnection>] DESCRIPTION Creates a new anonymous sharing link for a folder. EXAMPLES EXAMPLE 1 Add-PnPFolderAnonymousSharingLink -Folder \"/sites/demo/Shared Documents/Test\" This will create an anonymous sharing link for Test folder in the Shared Documents library which will be viewable to anonymous users. EXAMPLE 2 Add-PnPFolderAnonymousSharingLink -Folder \"/sites/demo/Shared Documents/Test\" -Type Edit -Password \"PnPRocks!\" This will create an anonymous sharing link for Test folder in the Shared Documents library which will be editable by anonymous users with the specified password. EXAMPLE 3 Add-PnPFolderAnonymousSharingLink -Folder \"/sites/demo/Shared Documents/Test\" -Type Edit -Password \"PnPRocks!\" -ExpirationDateTime (Get-Date).AddDays(15) This will create an anonymous sharing link for Test folder in the Shared Documents library which will be editable by anonymous users with the specified password. The link will expire after 15 days. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The folder in the site Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShareType The type of sharing that you want to, i.e do you want to enable anonymous users to view the shared content or also edit the content? Review and BlocksDownload values are not supported. Type: PnP.Core.Model.Security.ShareType Parameter Sets: (All) Required: False Position: Named Default value: View Accept pipeline input: False Accept wildcard characters: False -Password The password for the folder which will be shared anonymously. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExpirationDateTime The expiration date for the folder after which the shared link will stop working. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFolderOrganizationalSharingLink.html": {
    "href": "cmdlets/Add-PnPFolderOrganizationalSharingLink.html",
    "title": "Add-PnPFolderOrganizationalSharingLink | PnP PowerShell",
    "keywords": "Add-PnPFolderOrganizationalSharingLink SYNOPSIS Creates an organizational sharing link for a folder. SYNTAX Add-PnPFolderOrganizationalSharingLink -Folder <FolderPipeBind> -Type <PnP.Core.Model.Security.ShareType> [-Connection <PnPConnection>] DESCRIPTION Creates a new organization sharing link for a folder. EXAMPLES EXAMPLE 1 Add-PnPFolderOrganizationalSharingLink -Folder \"/sites/demo/Shared Documents/Test\" This will create an organization sharing link for Test folder in the Shared Documents library which will be viewable by users in the organization. EXAMPLE 2 Add-PnPFolderOrganizationalSharingLink -Folder \"/sites/demo/Shared Documents/Test\" -Type Edit This will create an organization sharing link for Test folder in the Shared Documents library which will be editable by users in the organization. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The folder in the site Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShareType The type of sharing that you want to, i.e do you want to enable people in your organization to view the shared content or also edit the content? Review and BlocksDownload values are not supported. Type: PnP.Core.Model.Security.ShareType Parameter Sets: (All) Required: False Position: Named Default value: View Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFolderSharingInvite.html": {
    "href": "cmdlets/Add-PnPFolderSharingInvite.html",
    "title": "Add-PnPFolderSharingInvite | PnP PowerShell",
    "keywords": "Add-PnPFolderSharingInvite SYNOPSIS Creates an invitation for users to a folder. SYNTAX Add-PnPFolderSharingInvite -Folder <FolderPipeBind> -Users <String[]> -Message <String> -RequireSignIn <SwitchParameter> -SendInvitation <SwitchParameter> -Role <PermissionRole> -ExpirationDateTime <DateTime> [-Connection <PnPConnection>] DESCRIPTION Creates an invitation for user to a folder. EXAMPLES EXAMPLE 1 Add-PnPFolderSharingInvite -Folder \"/sites/demo/Shared Documents/Test\" -Users \"john@contoso.onmicrosoft.com\" -RequireSignIn This will invite the user John@contoso.onmicrosoft.com to the Test folder with Read permissions and will require that user to sign in before accessing the folder. EXAMPLE 2 Add-PnPFolderSharingInvite -Folder \"/sites/demo/Shared Documents/Test\" -Users \"john@contoso.onmicrosoft.com\" -RequireSignIn -SendInvitation -Role Owner This will invite the user John@contoso.onmicrosoft.com to the Test folder with Read permissions and will require that user to sign in before accessing the folder. The invitation will be sent and the user will have Owner permissions EXAMPLE 3 Add-PnPFolderSharingInvite -Folder \"/sites/demo/Shared Documents/Test\" -Users \"john@contoso.onmicrosoft.com\" -RequireSignIn -ExpirationDate (Get-Date).AddDays(15) This will invite the user John@contoso.onmicrosoft.com to the Test folder with Read permissions and will require that user to sign in before accessing the folder. The link will expire after 15 days. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The folder in the site Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Users A collection of recipients who will receive access and the sharing invitation. Currently, only one user at a time is supported. We are planning to add support for multiple users a bit later. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Message A plain text formatted message that is included in the sharing invitation. Maximum length 2000 characters. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequireSignIn Specifies where the recipient of the invitation is required to sign-in to view the shared item Type: SwitchParamter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SendInvitation Specifies if an email or post is generated (false) or if the permission is just created (true). Type: SwitchParamter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Role Specify the role that is to be granted to the recipients of the sharing invitation. Supported values are Owner, Write and Read. Type: PnP.Core.Model.Security.PermissionRole Parameter Sets: (All) Required: False Position: Named Default value: Read Accept pipeline input: False Accept wildcard characters: False -ExpirationDateTime The expiration date for the folder after which the permission expires. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFolderUserSharingLink.html": {
    "href": "cmdlets/Add-PnPFolderUserSharingLink.html",
    "title": "Add-PnPFolderUserSharingLink | PnP PowerShell",
    "keywords": "Add-PnPFolderUserSharingLink SYNOPSIS Creates a sharing link to share a folder with a list of specified users. SYNTAX Add-PnPFolderUserSharingLink -Folder <FolderPipeBind> -ShareType <PnP.Core.Model.Security.ShareType> -Users <String[]> [-Connection <PnPConnection>] DESCRIPTION Creates a new user sharing link for a folder. EXAMPLES EXAMPLE 1 Add-PnPFolderUserSharingLink -Folder \"/sites/demo/Shared Documents/Test\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" This will create an user sharing link for Test folder in the Shared Documents library which will be viewable to specified users in the organization. EXAMPLE 2 Add-PnPFolderUserSharingLink -Folder \"/sites/demo/Shared Documents/Test\" -ShareType Edit -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" This will create an user sharing link for Test folder in the Shared Documents library which will be editable by specified users in the organization. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The folder in the site Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShareType The type of sharing that you want to, i.e do you want to enable people in your organization to view the shared content or also edit the content? Review and BlocksDownload values are not supported. Type: PnP.Core.Model.Security.ShareType Parameter Sets: (All) Required: False Position: Named Default value: View Accept pipeline input: False Accept wildcard characters: False -Users The UPN(s) of the user(s) to with whom you would like to share the folder. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPGroupMember.html": {
    "href": "cmdlets/Add-PnPGroupMember.html",
    "title": "Add-PnPGroupMember | PnP PowerShell",
    "keywords": "Add-PnPGroupMember SYNOPSIS Adds a user to a SharePoint group SYNTAX Internal Add-PnPGroupMember -LoginName <String> -Group <GroupPipeBind> [-Connection <PnPConnection>] External Add-PnPGroupMember -Group <GroupPipeBind> -EmailAddress <String> [-SendEmail] [-EmailBody <String>] [-Connection <PnPConnection>] Batched Add-PnPGroupMember -LoginName <String> -Group <GroupPipeBind> [-Connection <PnPConnection>] -Batch <PnPBatch> DESCRIPTION Allows to add new user to SharePoint group. The SharePoint group may be specified either by id, name or related object. EXAMPLES EXAMPLE 1 Add-PnPGroupMember -LoginName user@company.com -Group 'Marketing Site Members' Add the specified user to the SharePoint group \"Marketing Site Members\" EXAMPLE 2 Add-PnPGroupMember -LoginName user@company.com -Group 5 Add the specified user to the SharePoint group with Id 5 EXAMPLE 3 $batch = New-PnPBatch Add-PnPGroupMember -LoginName user@company.com -Group 5 -Batch $batch Add-PnPGroupMember -LoginName user1@company.com -Group 5 -Batch $batch Invoke-PnPBatch $batch Add the specified users to the SharePoint group with Id 5 in a batch. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EmailAddress The email address of the user Type: String Parameter Sets: External Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EmailBody Type: String Parameter Sets: External Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The SharePoint group id, SharePoint group name or SharePoint group object to add the user to Type: GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -LoginName The login name of the user Type: String Parameter Sets: Internal Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SendEmail Type: SwitchParameter Parameter Sets: External Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Batch Type: PnPBatch Parameter Sets: Batched Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPHomeSite.html": {
    "href": "cmdlets/Add-PnPHomeSite.html",
    "title": "Add-PnPHomeSite | PnP PowerShell",
    "keywords": "Add-PnPHomeSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Adds the home site to your tenant. The home site needs to be a communication site. SYNTAX Add-PnPHomeSite -HomeSiteUrl <String> [-Connection <PnPConnection>] DESCRIPTION Adds a home site to the current tenant. EXAMPLES EXAMPLE 1 Add-PnPHomeSite -HomeSiteUrl \"https://yourtenant.sharepoint.com/sites/myhome\" Adds a home site with the provided site collection url PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HomeSiteUrl The url of the site to set as the home site Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Set up a home site for your organization Customize and edit the Viva Connections home experience"
  },
  "cmdlets/Add-PnPHtmlPublishingPageLayout.html": {
    "href": "cmdlets/Add-PnPHtmlPublishingPageLayout.html",
    "title": "Add-PnPHtmlPublishingPageLayout | PnP PowerShell",
    "keywords": "Add-PnPHtmlPublishingPageLayout SYNOPSIS Adds a HTML based publishing page layout SYNTAX Add-PnPHtmlPublishingPageLayout -SourceFilePath <String> -Title <String> -Description <String> -AssociatedContentTypeID <String> [-DestinationFolderHierarchy <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to add a HTML based publishing page layout. EXAMPLES EXAMPLE 1 Add-PnPHtmlPublishingPageLayout -Title 'Our custom page layout' -SourceFilePath 'customlayout.aspx' -Description 'A custom page layout' -AssociatedContentTypeID 0x01010901 Uploads the pagelayout 'customlayout.aspx' from the current location to the current site as a 'web part page' pagelayout PARAMETERS -AssociatedContentTypeID Associated content type ID Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Description for the page layout Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DestinationFolderHierarchy Folder hierarchy where the HTML page layouts will be deployed Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceFilePath Path to the file which will be uploaded Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Title for the page layout Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPHubSiteAssociation.html": {
    "href": "cmdlets/Add-PnPHubSiteAssociation.html",
    "title": "Add-PnPHubSiteAssociation | PnP PowerShell",
    "keywords": "Add-PnPHubSiteAssociation SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Connects a site to a hubsite. SYNTAX Add-PnPHubSiteAssociation -Site <SitePipeBind> -HubSite <SitePipeBind> [-Connection <PnPConnection>] DESCRIPTION Connects an existing site to a hubsite EXAMPLES EXAMPLE 1 Add-PnPHubSiteAssociation -Site \"https://tenant.sharepoint.com/sites/mysite\" -HubSite \"https://tenant.sharepoint.com/sites/hubsite\" This example adds the specified site to the hubsite. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HubSite The hubsite to connect the site to Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site The site to connect to the hubsite Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPHubToHubAssociation.html": {
    "href": "cmdlets/Add-PnPHubToHubAssociation.html",
    "title": "Add-PnPHubToHubAssociation | PnP PowerShell",
    "keywords": "Add-PnPHubToHubAssociation SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Associates a hub site to another hub site to build a hierarchy of hubs. The association only is a content association, meaning that only the content of the underlying associates sites will surface in webparts such as the news webpart. No other settings will be inherited. At most 3 levels of hubs can be associated with each other. SYNTAX By Id Add-PnPHubToHubAssociation -Source <Guid> -Target <Guid> [-Connection <PnPConnection>] By Url Add-PnPHubToHubAssociation -SourceUrl <string> -TargetUrl <string> [-Connection <PnPConnection>] DESCRIPTION Use this cmdlet to associate a hub site to a hub site. EXAMPLES EXAMPLE 1 Add-PnPHubToHubAssociation -Source 6638bd4c-d88d-447c-9eb2-c84f28ba8b15 -Target 0b70f9de-2b98-46e9-862f-ba5700aa2443 This example associates the source hub site with the HubSiteId 6638bd4c-d88d-447c-9eb2-c84f28ba8b15 with the target hub site with the HubSiteId 0b70f9de-2b98-46e9-862f-ba5700aa2443. EXAMPLE 2 Add-PnPHubToHubAssociation -SourceUrl \"https://yourtenant.sharepoint.com/sites/sourcehub\" -TargetUrl \"https://yourtenant.sharepoint.com/sites/targethub\" This example associates the source hub site with the url https://yourtenant.sharepoint.com/sites/sourcehub with the target hub site with the url https://yourtenant.sharepoint.com/sites/targethub. EXAMPLE 3 Add-PnPHubToHubAssociation -SourceUrl \"https://yourtenant.sharepoint.com/sites/secondlevelhub\" -TargetUrl \"https://yourtenant.sharepoint.com/sites/toplevelhub\" Add-PnPHubToHubAssociation -SourceUrl \"https://yourtenant.sharepoint.com/sites/thirdlevelhub\" -TargetUrl \"https://yourtenant.sharepoint.com/sites/secondlevelhub\" This example associates the source hub site with the url https://yourtenant.sharepoint.com/sites/secondlevelhub with the target hub site with the url https://yourtenant.sharepoint.com/sites/toplevelhub and then associates the source hub site with the url https://yourtenant.sharepoint.com/sites/thirdlevelhub with the target hub site with the url https://yourtenant.sharepoint.com/sites/secondlevelhub to generate a three-level hub site structure. Note that 3 levels of hub site connections is the maximum supported amount. Content on sites beyond level 3 will not appear in search results. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Source HubSiteId of the Source Hub site to be associated with the Target Hub Site. Type: Guid Parameter Sets: By Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Target HubSiteId of the Target Hub to associate the source Hub to. Type: Guid Parameter Sets: By Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceUrl URL of the Source Hub site to be associated with the Target Hub Site. Type: String Parameter Sets: By Url Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TargetUrl URL of the Target Hub to associate the source Hub to. Type: String Parameter Sets: By Url Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPIndexedProperty.html": {
    "href": "cmdlets/Add-PnPIndexedProperty.html",
    "title": "Add-PnPIndexedProperty | PnP PowerShell",
    "keywords": "Add-PnPIndexedProperty SYNOPSIS Marks the value of the propertybag key specified to be indexed by search. SYNTAX Add-PnPIndexedProperty [-Key] <String> [-List <ListPipeBind>] [-Connection <PnPConnection>] DESCRIPTION Allows to set search index on propertybag key. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Key of the property bag value to be indexed Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name where to set the indexed property Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPJavaScriptBlock.html": {
    "href": "cmdlets/Add-PnPJavaScriptBlock.html",
    "title": "Add-PnPJavaScriptBlock | PnP PowerShell",
    "keywords": "Add-PnPJavaScriptBlock SYNOPSIS Adds a link to a JavaScript snippet/block to a web or site collection, valid only for SharePoint classic site experience. SYNTAX Add-PnPJavaScriptBlock -Name <String> -Script <String> [-Sequence <Int32>] [-Scope <CustomActionScope>] [-Connection <PnPConnection>] DESCRIPTION Specify a scope as 'Site' to add the custom action to all sites in a site collection. EXAMPLES EXAMPLE 1 Add-PnPJavaScriptBlock -Name myAction -script '<script>Alert(\"This is my Script block\");</script>' -Sequence 9999 -Scope Site Add a JavaScript code block to all pages within the current site collection under the name myAction and at order 9999 EXAMPLE 2 Add-PnPJavaScriptBlock -Name myAction -script '<script>Alert(\"This is my Script block\");</script>' Add a JavaScript code block to all pages within the current web under the name myAction PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The name of the script block. Can be used to identify the script with other cmdlets or coded solutions Type: String Parameter Sets: (All) Aliases: Key Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope The scope of the script to add to. Either Web or Site, defaults to Web. 'All' is not valid for this command. Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Script The javascript block to add to the specified scope Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Sequence A sequence number that defines the order on the page Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPJavaScriptLink.html": {
    "href": "cmdlets/Add-PnPJavaScriptLink.html",
    "title": "Add-PnPJavaScriptLink | PnP PowerShell",
    "keywords": "Add-PnPJavaScriptLink SYNOPSIS Adds a link to a JavaScript file to a web or sitecollection, valid only for SharePoint classic site experience. SYNTAX Add-PnPJavaScriptLink -Name <String> -Url <String[]> [-Sequence <Int32>] [-Scope <CustomActionScope>] [-Connection <PnPConnection>] DESCRIPTION Creates a custom action that refers to a JavaScript file EXAMPLES EXAMPLE 1 Add-PnPJavaScriptLink -Name jQuery -Url https://code.jquery.com/jquery.min.js -Sequence 9999 -Scope Site Injects a reference to the latest v1 series jQuery library to all pages within the current site collection under the name jQuery and at order 9999 EXAMPLE 2 Add-PnPJavaScriptLink -Name jQuery -Url https://code.jquery.com/jquery.min.js Injects a reference to the latest v1 series jQuery library to all pages within the current web under the name jQuery PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Name under which to register the JavaScriptLink Type: String Parameter Sets: (All) Aliases: Key Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Defines if this JavaScript file will be injected to every page within the current site collection or web. All is not allowed in for this command. Default is web. Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Sequence Sequence of this JavaScript being injected. Use when you have a specific sequence with which to have JavaScript files being added to the page. I.e. jQuery library first and then jQueryUI. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url URL to the JavaScript file to inject Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPListDesign.html": {
    "href": "cmdlets/Add-PnPListDesign.html",
    "title": "Add-PnPListDesign | PnP PowerShell",
    "keywords": "Add-PnPListDesign SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Creates a new List Design on the current tenant SYNTAX By SiteScript Instance (Default) Add-PnPListDesign -Title <String> -SiteScript <TenantSiteScriptPipeBind> [-Description <String>] [-ListColor<TenantListDesignIcon>] [-ListIcon <TenantListDesignColor>] [-ThumbnailUrl <String>] [-Connection <PnPConnection>] By SiteScript Ids Add-PnPListDesign -Title <String> -SiteScriptIds <Guid[]> [-Description <String>] [-ListColor<TenantListDesignIcon>] [-ListIcon <TenantListDesignColor>] [-ThumbnailUrl <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to add new List Design to tenant. EXAMPLES EXAMPLE 1 Add-PnPListDesign -Title \"My Custom List\" -SiteScriptIds \"e84dcb46-3ab9-4456-a136-66fc6ae3d3c5\" Adds a new List Design, with the specified title and description. When applied it will run the scripts as referenced by the IDs. Use Get-PnPSiteScript to receive site Scripts. EXAMPLE 2 Add-PnPListDesign -Title \"My Company Design\" -SiteScriptIds \"6def687f-0e08-4f1e-999c-791f3af9a600\" -Description \"My description\" -ListColor Orange -ListIcon BullseyeTarget -ThumbnailUrl \"https://contoso.sharepoint.com/SiteAssets/site-thumbnail.png\" Adds a new List Design, with the specified title, description and list color, list icon and thumbnail to be shown in the template picker. When applied it will run the scripts as referenced by the IDs. Use Get-PnPSiteScript to receive Site Scripts. EXAMPLE 3 Get-PnPSiteScript -Identity \"My List Script\" | Add-PnPListDesign -Title \"My Custom List\" Adds a new List Design, with the specified title based on a site script with the title \"My List Script\" EXAMPLE 4 Get-PnPList -Identity \"My List\" | Get-PnPSiteScriptFromList | Add-PnPSiteScript -Title \"My List Script\" | Add-PnPListDesign -Title \"My List\" Adds a new List Design and site script based on a list with the title \"My List\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the list design Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteScript An instance, id or title of a site script to use for the list design Type: TenantSiteScriptPipeBind Parameter Sets: By SiteScript Instance Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -SiteScriptIds An array of guids of site scripts to use for the list design Type: Guid[] Parameter Sets: By SiteScript Ids Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the list design Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListColor The list color from the create list experience. Type: TenantListDesignColor Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListIcon The list icon from the create list experience. Type: TenantListDesignIcon Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThumbnailUrl The full URL of a thumbnail image, i.e. https://contoso.sharepoint/siteassets/image.png. If none is specified, SharePoint uses a generic image. This is the image that will be shown in the \"From your organization\" section of the \"Create\" List screen. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPListFoldersToSiteTemplate.html": {
    "href": "cmdlets/Add-PnPListFoldersToSiteTemplate.html",
    "title": "Add-PnPListFoldersToSiteTemplate | PnP PowerShell",
    "keywords": "Add-PnPListFoldersToSiteTemplate SYNOPSIS Adds folders to a list in a PnP Provisioning Template SYNTAX Add-PnPListFoldersToSiteTemplate [-Path] <String> [-List] <ListPipeBind> [-Recursive] [-IncludeSecurity] [[-TemplateProviderExtensions] <ITemplateProviderExtension[]>] [-Connection <PnPConnection>] DESCRIPTION Allows to add folders to a list in a PnP Provisioning Template. EXAMPLES EXAMPLE 1 Add-PnPListFoldersToSiteTemplate -Path template.pnp -List 'PnPTestList' Adds top level folders from a list to an existing template and returns an in-memory PnP Site Template EXAMPLE 2 Add-PnPListFoldersToSiteTemplate -Path template.pnp -List 'PnPTestList' -Recursive Adds all folders from a list to an existing template and returns an in-memory PnP Site Template EXAMPLE 3 Add-PnPListFoldersToSiteTemplate -Path template.pnp -List 'PnPTestList' -Recursive -IncludeSecurity Adds all folders from a list with unique permissions to an in-memory PnP Site Template PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSecurity A switch to include ObjectSecurity information. Type: SwitchParameter Parameter Sets: (All) Required: False Position: 5 Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list to query Type: ListPipeBind Parameter Sets: (All) Required: True Position: 2 Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Filename of the .PNP Open XML site template to read from, optionally including full path. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Recursive A switch parameter to include all folders in the list, or just top level folders. Type: SwitchParameter Parameter Sets: (All) Aliases: Recurse Required: False Position: 4 Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while loading the template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: 6 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPListItem.html": {
    "href": "cmdlets/Add-PnPListItem.html",
    "title": "Add-PnPListItem | PnP PowerShell",
    "keywords": "Add-PnPListItem SYNOPSIS Adds an item to the list and sets the creation time to the current date and time. The author is set to the current authenticated user executing the cmdlet. In order to set the author to a different user, please refer to Set-PnPListItem. SYNTAX Single Add-PnPListItem [-List] <ListPipeBind> [-ContentType <ContentTypePipeBind>] [-Values <Hashtable>] [-Folder <String>] [-Label <String>] [-Connection <PnPConnection>] Batched Add-PnPListItem [-List] <ListPipeBind> -Batch <PnPBatch> [-ContentType <ContentTypePipeBind>] [-Values <Hashtable>] [-Folder <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to add an item to the list and sets the creation time to the current date and time. The author is set to the current authenticated user executing the cmdlet. In order to set the author to a different user, please refer to Set-PnPListItem. EXAMPLES EXAMPLE 1 Add-PnPListItem -List \"Demo List\" -Values @{\"Title\" = \"Test Title\"; \"Category\"=\"Test Category\"} Adds a new list item to the \"Demo List\", and sets both the Title and Category fields with the specified values. Notice, use the internal names of fields. EXAMPLE 2 Add-PnPListItem -List \"Demo List\" -ContentType \"Company\" -Values @{\"Title\" = \"Test Title\"; \"Category\"=\"Test Category\"} Adds a new list item to the \"Demo List\", sets the content type to \"Company\" and sets both the Title and Category fields with the specified values. Notice, use the internal names of fields. EXAMPLE 3 Add-PnPListItem -List \"Demo List\" -Values @{\"MultiUserField\"=\"user1@domain.com\",\"user2@domain.com\"} Adds a new list item to the \"Demo List\" and sets the user field called MultiUserField to 2 users. Separate multiple users with a comma. EXAMPLE 4 Add-PnPListItem -List \"Demo List\" -Values @{\"Title\"=\"Sales Report\"} -Folder \"projects/europe\" Adds a new list item to the \"Demo List\". It will add the list item to the europe folder which is located in the projects folder. Folders will be created if needed. EXAMPLE 5 Add-PnPListItem -List \"Demo List\" -Values @{\"Title\"=\"Sales Report\"} -Label \"Public\" Adds a new list item to the \"Demo List\". Sets the retention label to \"Public\" if it exists on the site. EXAMPLE 6 $batch = New-PnPBatch for($i=0;$i -lt 10;$i++) { Add-PnPListItem -List \"Demo List\" -Values @{\"Title\"=\"Report $i\"} -Batch $batch } Invoke-PnPBatch -Batch $batch This creates 10 list items by using a batched approach. PARAMETERS -Batch Optional batch object used to add items in a batched manner. See examples on how to use this. Type: PnPBatch Parameter Sets: Batched Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType Specify either the name, ID or an actual content type. Type: ContentTypePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The list relative URL of a folder. E.g. \"MyFolder\" for a folder located in the root of the list, or \"MyFolder/SubFolder\" for a folder located in the MyFolder folder which is located in the root of the list. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Label The name of the retention label. Type: String Parameter Sets: Single Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Values Use the internal names of the fields when specifying field names. Single line of text: -Values @{\"Title\" = \"Title New\"} Multiple lines of text: -Values @{\"MultiText\" = \"New text\\n\\nMore text\"} Rich text: -Values @{\"MultiText\" = \"&lt;strong&gt;New&lt;/strong&gt; text\"} Choice: -Values @{\"Choice\" = \"Choice 1\"} Multi-Choice: -Values @{\"MultiChoice\" = \"Choice 1\",\"Choice 2\"} Number: -Values @{\"Number\" = \"10\"} Currency: -Values @{\"Currency\" = \"10\"} Note For numeric and currency fields, when using -Batch, provide the value using the comma and dots matching the regional setting of the site you're adding the listitem to. When not using batch, you must always provide the value in the American notation, so dot for decimals and comma for thousands separators. Date and Time: -Values @{\"DateAndTime\" = \"03/13/2015 14:16\"} Lookup (id of lookup value): -Values @{\"Lookup\" = \"2\"} Multi value lookup (id of lookup values as array 1): -Values @{\"MultiLookupField\" = \"1\",\"2\"} Multi value lookup (id of lookup values as array 2): -Values @{\"MultiLookupField\" = 1,2} Multi value lookup (id of lookup values as string): -Values @{\"MultiLookupField\" = \"1,2\"} Yes/No: -Values @{\"YesNo\" = $false} Person/Group (id of user/group in Site User Info List or email of the user, separate multiple values with a comma): -Values @{\"Person\" = \"user1@domain.com\",\"21\"} If the user is not present, in the site user information list, you need to add that user using New-PnPUser cmdlet. Managed Metadata (single value with path to term): -Values @{\"MetadataField\" = \"CORPORATE|DEPARTMENTS|FINANCE\"} Managed Metadata (single value with id of term): -Values @{\"MetadataField\" = \"fe40a95b-2144-4fa2-b82a-0b3d0299d818\"} with Id of term Managed Metadata (multiple values with paths to terms): -Values @{\"MetadataField\" = \"CORPORATE|DEPARTMENTS|FINANCE\",\"CORPORATE|DEPARTMENTS|HR\"} Managed Metadata (multiple values with ids of terms): -Values @{\"MetadataField\" = \"fe40a95b-2144-4fa2-b82a-0b3d0299d818\",\"52d88107-c2a8-4bf0-adfa-04bc2305b593\"} Hyperlink or Picture: -Values @{\"Hyperlink\" = \"https://github.com/OfficeDev/, OfficePnP\"} Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPListItemAttachment.html": {
    "href": "cmdlets/Add-PnPListItemAttachment.html",
    "title": "Add-PnPListItemAttachment | PnP PowerShell",
    "keywords": "Add-PnPListItemAttachment SYNOPSIS Adds an attachment to the specified list item in the SharePoint list SYNTAX Upload attachment file from path Add-PnPListItemAttachment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-Path <String>] [-NewFileName <String>] [-Connection <PnPConnection>] Upload attachment file from stream Add-PnPListItemAttachment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-FileName <String>] [-Stream <Stream>] [-Connection <PnPConnection>] Create attachment file from text Add-PnPListItemAttachment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-FileName <String>] [-Content <text>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows adding a file as an attachment to a list item in a SharePoint Online list. EXAMPLES EXAMPLE 1 Add-PnPListItemAttachment -List \"Demo List\" -Identity 1 -Path c:\\temp\\test.mp4 Adds a new attachment to the list item with Id \"1\" in the \"Demo List\" SharePoint list with file name as test.mp4 from the specified path. EXAMPLE 2 Add-PnPListItemAttachment -List \"Demo List\" -Identity 1 -FileName \"test.txt\" -Content '{ \"Test\": \"Value\" }' Adds a new attachment to the list item with Id \"1\" in the \"Demo List\" SharePoint list with file name as test.txt and content as specified. EXAMPLE 3 Add-PnPListItemAttachment -List \"Demo List\" -Identity 1 -FileName \"test.mp4\" -Stream $fileStream Adds a new attachment to the list item with Id \"1\" in the \"Demo List\" SharePoint list with file name as test.mp4 and content coming from a stream. PARAMETERS -Content Specify text of the attachment for the list item. Type: String Parameter Sets: (Upload file from text) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path The local file path Type: String Parameter Sets: (Upload file) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NewFileName Filename to give to the attachment file on SharePoint Type: String Parameter Sets: (Upload file) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FileName Filename to give to the attachment file on SharePoint Type: String Parameter Sets: (Upload file from stream, Upload file from text) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Stream Stream with the file contents Type: Stream Parameter Sets: (Upload file from stream) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Note that when providing the name of the list, the name is case-sensitive. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object to add the attachment to. Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPListItemComment.html": {
    "href": "cmdlets/Add-PnPListItemComment.html",
    "title": "Add-PnPListItemComment | PnP PowerShell",
    "keywords": "Add-PnPListItemComment SYNOPSIS Adds a comment to the specified list item in the SharePoint list SYNTAX Single Add-PnPListItemComment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-Text] [-Connection <PnPConnection>] DESCRIPTION Allows to add comment to the specified list item. EXAMPLES EXAMPLE 1 Add-PnPListItemComment -List \"Demo List\" -Identity \"1\" -Text \"Hello world\" Adds a new comment to the list item with Id \"1\" in the \"Demo List\" SharePoint list. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Text Specify text of the comment for the list item. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPMasterPage.html": {
    "href": "cmdlets/Add-PnPMasterPage.html",
    "title": "Add-PnPMasterPage | PnP PowerShell",
    "keywords": "Add-PnPMasterPage SYNOPSIS Adds a Masterpage SYNTAX Add-PnPMasterPage -SourceFilePath <String> -Title <String> -Description <String> [-DestinationFolderHierarchy <String>] [-UIVersion <String>] [-DefaultCssFile <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to add MasterPage. EXAMPLES EXAMPLE 1 Add-PnPMasterPage -SourceFilePath \"page.master\" -Title \"MasterPage\" -Description \"MasterPage for Web\" -DestinationFolderHierarchy \"SubFolder\" Adds a MasterPage from the local file \"page.master\" to the folder \"SubFolder\" in the MasterPage gallery. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultCssFile Default CSS file for the MasterPage, this Url is SiteRelative Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Description for the MasterPage Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DestinationFolderHierarchy Folder hierarchy where the MasterPage will be deployed Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceFilePath Path to the file which will be uploaded Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Title for the MasterPage Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UIVersion UIVersion of the MasterPage. Default = 15 Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPMicrosoft365GroupMember.html": {
    "href": "cmdlets/Add-PnPMicrosoft365GroupMember.html",
    "title": "Add-PnPMicrosoft365GroupMember | PnP PowerShell",
    "keywords": "Add-PnPMicrosoft365GroupMember SYNOPSIS Required Permissions Microsoft Graph API: All of Group.ReadWrite.All, User.ReadWrite.All Adds members to a particular Microsoft 365 Group. SYNTAX Add-PnPMicrosoft365GroupMember -Identity <Microsoft365GroupPipeBind> -Users <String[]> [-RemoveExisting] [-Connection <PnPConnection>] DESCRIPTION Allows to add multiple users to Microsoft 365 Group. EXAMPLES EXAMPLE 1 Add-PnPMicrosoft365GroupMember -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" Adds the provided two users as additional members to the Microsoft 365 Group named \"Project Team\". EXAMPLE 2 Add-PnPMicrosoft365GroupMember -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" -RemoveExisting Sets the provided two users as the only members of the Microsoft 365 Group named \"Project Team\" by removing any current existing members first. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Identity of the Microsoft 365 Group to add members to. Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -RemoveExisting If provided, all existing members will be removed and only those provided through Users will become members. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Users The UPN(s) of the user(s) to add to the Microsoft 365 Group as a member. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Add-PnPMicrosoft365GroupOwner.html": {
    "href": "cmdlets/Add-PnPMicrosoft365GroupOwner.html",
    "title": "Add-PnPMicrosoft365GroupOwner | PnP PowerShell",
    "keywords": "Add-PnPMicrosoft365GroupOwner SYNOPSIS Required Permissions Microsoft Graph API: All of Group.ReadWrite.All, User.ReadWrite.All Adds users to a Microsoft 365 Group as Owners. SYNTAX Add-PnPMicrosoft365GroupOwner -Identity <Microsoft365GroupPipeBind> -Users <String[]> [-RemoveExisting] [-Connection <PnPConnection>] DESCRIPTION Allows to add multiple users to Microsoft 365 Group as owners. EXAMPLES EXAMPLE 1 Add-PnPMicrosoft365GroupOwner -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" Adds the provided two users as additional owners to the Microsoft 365 Group named \"Project Team\". EXAMPLE 2 Add-PnPMicrosoft365GroupOwner -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" -RemoveExisting Sets the provided two users as the only owners of the Microsoft 365 Group named \"Project Team\" by removing any current existing members first. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Identity of the Microsoft 365 Group to add owners to. Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -RemoveExisting If provided, all existing owners will be removed and only those provided through Users parameter will become owners. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Users The UPN(s) of the user(s) to add to the Microsoft 365 Group as an owner. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Add-PnPMicrosoft365GroupToSite.html": {
    "href": "cmdlets/Add-PnPMicrosoft365GroupToSite.html",
    "title": "Add-PnPMicrosoft365GroupToSite | PnP PowerShell",
    "keywords": "Add-PnPMicrosoft365GroupToSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Groupifies a classic team site by creating a Microsoft 365 group for it and connecting the site with the newly created group. SYNTAX Add-PnPMicrosoft365GroupToSite -Url <String> -Alias <String> -DisplayName <String> [-Description <String>] [-Classification <String>] [-IsPublic] [-KeepOldHomePage] [-HubSiteId <Guid>] [-Owners <String[]>] [-Connection <PnPConnection>] DESCRIPTION This command allows you to add a Microsoft 365 Unified group to an existing classic site collection, also known as groupifying. EXAMPLES EXAMPLE 1 Add-PnPMicrosoft365GroupToSite -Url \"https://contoso.sharepoint.com/sites/FinanceTeamsite\" -Alias \"FinanceTeamsite\" -DisplayName \"My finance team site group\" This will groupify the FinanceTeamsite at the provided URL. EXAMPLE 2 Add-PnPMicrosoft365GroupToSite -Alias \"HRTeamsite\" -DisplayName \"My HR team site group\" This will groupify the currently connected site. EXAMPLE 3 Add-PnPMicrosoft365GroupToSite -Url $SiteURL -Alias $GroupAlias -DisplayName $GroupName -IsPublic -KeepOldHomePage This will groupify the $SiteURL site, make the Group public (default is Private) and keep the old Home page as the default homepage. The new Home.aspx is created but not set as default Homepage. PARAMETERS -Alias Specifies the alias of the group. Cannot contain spaces. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Classification Specifies the classification of the group. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The optional description of the group. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The display name of the group. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HubSiteId If specified the site will be associated to the hubsite as identified by this id. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsPublic Specifies if the group is public. Defaults to false. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -KeepOldHomePage Specifies if the current site home page is kept. Defaults to false. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners The array of the UPN values of the group's owners. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Url of the site to be connected to an Microsoft 365 Group. When not provided, the site currently being connected to will be used. Type: String Parameter Sets: (All) Required: False Position: Named Default value: Currently connected site Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPNavigationNode.html": {
    "href": "cmdlets/Add-PnPNavigationNode.html",
    "title": "Add-PnPNavigationNode | PnP PowerShell",
    "keywords": "Add-PnPNavigationNode SYNOPSIS Adds an item to a navigation element SYNTAX Default Add-PnPNavigationNode -Location <NavigationType> -Title <String> [-Url <String>] [-Parent <NavigationNodePipeBind>] [-First] [-External] [-AudienceIds <Guid[]> [-OpenInNewTab <SwitchParameter>] [-Connection <PnPConnection>] Provide PreviousNode Add-PnPNavigationNode -Location <NavigationType> -Title <String> -PreviousNode <NavigationNodePipeBind> [-Url <String>] [-Parent <NavigationNodePipeBind>] [-External] [-AudienceIds <Guid[]>] [-OpenInNewTab <SwitchParameter>] [-Connection <PnPConnection>] DESCRIPTION Adds a menu item to either the quicklaunch, top navigation, search navigation or the footer EXAMPLES EXAMPLE 1 Add-PnPNavigationNode -Title \"Contoso\" -Url \"http://contoso.sharepoint.com/sites/contoso/\" -Location \"QuickLaunch\" Adds a navigation node to the quicklaunch. The navigation node will have the title \"Contoso\" and will link to the url \"http://contoso.sharepoint.com/sites/contoso/\" EXAMPLE 2 Add-PnPNavigationNode -Title \"Contoso USA\" -Url \"http://contoso.sharepoint.com/sites/contoso/usa/\" -Location \"QuickLaunch\" -Parent 2012 Adds a navigation node to the quicklaunch. The navigation node will have the title \"Contoso USA\", will link to the url \"http://contoso.sharepoint.com/sites/contoso/usa/\" and will have the node with id 2012 as a parent navigation node. EXAMPLE 3 Add-PnPNavigationNode -Title \"Contoso\" -Url \"http://contoso.sharepoint.com/sites/contoso/\" -Location \"QuickLaunch\" -First Adds a navigation node to the quicklaunch, as the first item. The navigation node will have the title \"Contoso\" and will link to the url \"http://contoso.sharepoint.com/sites/contoso/\" EXAMPLE 4 Add-PnPNavigationNode -Title \"Contoso Pharmaceuticals\" -Url \"http://contoso.sharepoint.com/sites/contosopharma/\" -Location \"QuickLaunch\" -External Adds a navigation node to the quicklaunch. The navigation node will have the title \"Contoso Pharmaceuticals\" and will link to the external url \"http://contoso.sharepoint.com/sites/contosopharma/\" EXAMPLE 5 Add-PnPNavigationNode -Title \"Wiki\" -Location \"QuickLaunch\" -Url \"wiki/\" Adds a navigation node to the quicklaunch. The navigation node will have the title \"Wiki\" and will link to Wiki library on the selected Web. EXAMPLE 6 Add-PnPNavigationNode -Title \"Label\" -Location \"TopNavigationBar\" -Url \"http://linkless.header/\" Adds a navigation node to the top navigation bar. The navigation node will be created as a label. EXAMPLE 7 Add-PnPNavigationNode -Title \"Wiki\" -Location \"QuickLaunch\" -Url \"wiki/\" -PreviousNode 2012 Adds a navigation node to the quicklaunch. The navigation node will have the title \"Wiki\" and will link to the Wiki library on the selected Web after the node with the ID 2012. EXAMPLE 8 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" Add-PnPNavigationNode -Title \"Marketing\" -Url \"https://contoso.sharepoint.com/sites/Marketing\" -Location TopNavigationBar -External Adds the Marketing navigation node to the top navigation bar on the root site. NOTE that the -External switch is mandatory as the connection is made to the root site. This is currently a CSOM issue but once fixed, it will be fixed in PnP PowerShell automatically. EXAMPLE 9 Add-PnPNavigationNode -Title \"Contoso\" -Url \"http://contoso.sharepoint.com/sites/contoso/\" -Location \"QuickLaunch\" -OpenInNewTab Adds a navigation node to the quicklaunch. The navigation node will have the title \"Contoso\" and will link to the url \"http://contoso.sharepoint.com/sites/contoso/\". It will also open the link in a new tab. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -External Indicates the destination URL is outside of the site collection Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -First Add the new menu item to beginning of the collection Type: SwitchParameter Parameter Sets: Default Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Location The location where to add the navigation node to. Either TopNavigationBar, QuickLaunch, SearchNav or Footer. Type: NavigationType Parameter Sets: (All) Accepted values: TopNavigationBar, QuickLaunch, SearchNav, Footer Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Parent The parent navigation node. Leave empty to add to the top level Type: NavigationNodePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PreviousNode Specifies the navigation node after which the new navigation node will appear in the navigation node collection. Type: NavigationNodePipeBind Parameter Sets: Add node after another node Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the node to add Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The url to navigate to when clicking the new menu item. This can either be absolute or relative to the Web. Fragments are not supported. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AudienceIds The Guids of the groups to which the navigation node should be visible. Leave empty to make the node visible to all users. Type: Guid array Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OpenInNewTab Indicates that the link will be opened in a new browser tab. This will only work if the navigation location is QuickLaunch due to SharePoint API limitation. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPOrgAssetsLibrary.html": {
    "href": "cmdlets/Add-PnPOrgAssetsLibrary.html",
    "title": "Add-PnPOrgAssetsLibrary | PnP PowerShell",
    "keywords": "Add-PnPOrgAssetsLibrary SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Adds a given document library as an organizational asset source SYNTAX Add-PnPOrgAssetsLibrary -LibraryUrl <String> [-ThumbnailUrl <String>] [-CdnType <SPOTenantCdnType>] [-OrgAssetType <OrgAssetType>] [-DefaultOriginAdded <bool>] [-IsCopilotSearchable <bool>] [-Connection <PnPConnection>] DESCRIPTION Adds a given document library as an organizational asset source in your SharePoint Online Tenant. You can specify multiple libraries, but all organizational asset sources you add must reside in the same site collection. Document libraries specified as organizational asset must be enabled as an Office 365 CDN source, either as private or public. The libraries must also have read rights for 'Everyone except external users' enabled on them. Either on library or on the entire site level. Only entire libraries can be configured as an organizational asset, folders cannot. It may take some time before this change will be reflected in the web interface. EXAMPLES EXAMPLE 1 Add-PnPOrgAssetsLibrary -LibraryUrl \"https://yourtenant.sharepoint.com/sites/branding/logos\" Adds the document library with the url \"logos\" located in the sitecollection at \"https://yourtenant.sharepoint.com/sites/branding\" as an organizational asset not specifying a thumbnail image for it and enabling the document library as a public Office 365 CDN source EXAMPLE 2 Add-PnPOrgAssetsLibrary -LibraryUrl \"https://yourtenant.sharepoint.com/sites/branding/logos\" -ThumbnailUrl \"https://yourtenant.sharepoint.com/sites/branding/logos/thumbnail.jpg\" Adds the document library with the url \"logos\" located in the sitecollection at \"https://yourtenant.sharepoint.com/sites/branding\" as an organizational asset specifying the thumbnail image \"thumbnail.jpg\" residing in the same document library for it and enabling the document library as a public Office 365 CDN source EXAMPLE 3 Add-PnPOrgAssetsLibrary -LibraryUrl \"https://yourtenant.sharepoint.com/sites/branding/logos\" -CdnType Private Adds the document library with the url \"logos\" located in the sitecollection at \"https://yourtenant.sharepoint.com/sites/branding\" as an organizational asset not specifying a thumbnail image for it and enabling the document library as a private Office 365 CDN source PARAMETERS -CdnType Indicates what type of Office 365 CDN source the document library will be added to Type: SPOTenantCdnType Parameter Sets: (All) Accepted values: Public, Private Required: False Position: Named Default value: Public Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultOriginAdded Indicates that if the OFfice 365 CDN would not be enabled yet for the tenant, that it should be enabled and the default origins should be added to the tenant. This is only applicable when the CDN has not been enabled yet on the tenant. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: True Accept pipeline input: False Accept wildcard characters: False -IsCopilotSearchable Indicates that the organizational assets library should be searchable in the CoPilot search experience in Office applications to locate corporate images. Only works when the OrgAssetType is set to ImageDocumentLibrary. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: True Accept pipeline input: False Accept wildcard characters: False -LibraryUrl The full url of the document library to be marked as one of organization's assets sources Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OrgAssetType Indicates the type of content in this library. Currently supported values are \"ImageDocumentLibrary\" and \"OfficeTemplateLibrary\". ImageDocumentLibrary is the default OrgAssetType and is best used for images. You can access the contents of this library from any site or page in the SharePoint filepicker. OfficeTemplateLibrary is the suggested type for Office files and will show up in the UI of all Office desktop apps and Office online in the templates section. Type: OrgAssetType Parameter Sets: (All) Accepted values: ImageDocumentLibrary, OfficeTemplateLibrary Required: False Position: Named Default value: ImageDocumentLibrary Accept pipeline input: False Accept wildcard characters: False -ThumbnailUrl The full url to an image that should be used as a thumbnail for showing this source. The image must reside in the same site as the document library you specify. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPOrgNewsSite.html": {
    "href": "cmdlets/Add-PnPOrgNewsSite.html",
    "title": "Add-PnPOrgNewsSite | PnP PowerShell",
    "keywords": "Add-PnPOrgNewsSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Adds the site as an organization news source in your tenant SYNTAX Add-PnPOrgNewsSite -OrgNewsSiteUrl <SitePipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to add site as an organization news source in your tenant. EXAMPLES EXAMPLE 1 Add-PnPOrgNewsSite -OrgNewsSiteUrl \"https://yourtenant.sharepoint.com/sites/news\" Adds the site as one of multiple possible tenant's organizational news sites PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OrgNewsSiteUrl The url of the site to be marked as one of organization's news sites Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPage.html": {
    "href": "cmdlets/Add-PnPPage.html",
    "title": "Add-PnPPage | PnP PowerShell",
    "keywords": "Add-PnPPage SYNOPSIS Creates a new page SYNTAX Add-PnPPage [-Name] <String> [-LayoutType <PageLayoutType>] [-PromoteAs <PagePromoteType>] [-ContentType <ContentTypePipeBind>] [-CommentsEnabled] [-Publish] [-HeaderLayoutType <PageHeaderLayoutType>] [-ScheduledPublishDate <DateTime>] [-Translate][-TranslationLanguageCodes <Int[][]>] [-Connection <PnPConnection>] DESCRIPTION Creates a new page. The page will be located inside the Site Pages library of the site currently connected to. If the library does not exist yet, tries to ensure it is created. EXAMPLES EXAMPLE 1 Add-PnPPage -Name \"NewPage\" Creates a new page named 'NewPage'. The resulting file will accordingly be named 'NewPage.aspx'. If a file with that name already exists, executing the commandlet will fail. EXAMPLE 2 Add-PnPPage -Name \"NewPage\" -Title \"Welcome to my page\" Creates a new page NewPage.aspx with the title as provided. EXAMPLE 3 Add-PnPPage -Name \"NewPage\" -ContentType \"MyPageContentType\" Creates a new page named 'NewPage' and sets the content type to the content type specified. EXAMPLE 4 Add-PnPPage -Name \"NewPageTemplate\" -PromoteAs Template Creates a new page named 'NewPage' and saves as a template to the site. EXAMPLE 5 Add-PnPPage -Name \"Folder/NewPage\" Creates a new page named 'NewPage' under 'Folder' folder and saves as a template to the site. EXAMPLE 6 Add-PnPPage -Name \"NewPage\" -HeaderLayoutType ColorBlock Creates a new page named 'NewPage' using the ColorBlock header layout. EXAMPLE 7 Add-PnPPage -Name \"NewPage\" Article -ScheduledPublishDate (Get-Date).AddHours(1) Creates a new page named 'NewPage' using the article layout and schedule it to be published in 1 hour from now. EXAMPLE 8 Add-PnPPage -Name \"NewPage\" -Translate Creates a new page named 'NewPage' and also creates the necessary translated page for the supported languages in the site collection. EXAMPLE 9 Add-PnPPage -Name \"NewPage\" -Translate -TranslationLanguageCodes 1043 Creates a new page named 'NewPage' and also creates the necessary translated page for the specified language in the site collection. In this case, it will create the translated page for Dutch language. If the Dutch language is not enabled, it will enable the language and then create the translated page. EXAMPLE 10 Add-PnPPage -Name \"NewPage\" -Translate -TranslationLanguageCodes 1043,1035 Creates a new page named 'NewPage' and also creates the necessary translated page for the specified languages in the site collection. In this case, it will create the translated pages for Dutch and Finnish languages. If these languages are not enabled, it will enable these languages and then create the translated pages for the specified languages. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommentsEnabled Enables or Disables the comments on the page. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType Specify either the name, ID or an actual content type. Type: ContentTypePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderLayoutType Type of layout used for the header. Type: PageHeaderLayoutType Parameter Sets: (All) Accepted values: FullWidthImage, NoImage, ColorBlock, CutInShape Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LayoutType Specifies the layout type of the page. Type: PageLayoutType Parameter Sets: (All) Accepted values: Article, Home, SingleWebPartAppPage, RepostPage, HeaderlessSearchResults, Spaces, Topic Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Specifies the name of the page. It will also be used to define the filename. I.e. if you provide MyPage, it will create a page MyPage.aspx inside the Site Pages library. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -PromoteAs Allows to promote the page for a specific purpose (HomePage | NewsPage). Type: PagePromoteType Parameter Sets: (All) Accepted values: None, HomePage, NewsArticle Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Publish Publishes the page once it is saved. Applicable to libraries set to create major and minor versions. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ScheduledPublishDate If provided, the page will be scheduled to be published on the provided date and time. It will enable page scheduling on the Site Pages library if not already enabled. If not provided, the publishing of the page will not be scheduled. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Translate Creates multilingual pages for all the languages specified in the site collection. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TranslationLanguageCodes Creates multilingual pages for specified languages. Type: Integer array Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPageImageWebPart.html": {
    "href": "cmdlets/Add-PnPPageImageWebPart.html",
    "title": "Add-PnPPageImageWebPart | PnP PowerShell",
    "keywords": "Add-PnPPageImageWebPart SYNOPSIS Adds an image element to a client-side page. SYNTAX Default Add-PnPPageImageWebPart [-Page <PagePipeBind>] [-ImageUrl <String>] [-Order <Int32>] [-ImageUrl <String>] [-PageImageAlignment <PageImageAlignment>] [-ImageWidth <Int32>] [-ImageHeight <Int32>] [-Caption <String>] [-AlternativeText <String>] [-Link <String>] [-Connection <PnPConnection>] Positioned Add-PnPPageImageWebPart [-Page <PagePipeBind>] [-ImageUrl <String>] [-Section <Int32>] [-Column <Int32>] [-Order <Int32>] [-PageImageAlignment <PageImageAlignment>] [-ImageWidth <Int32>] [-ImageHeight <Int32>] [-Caption <String>] [-AlternativeText <String>] [-Link <String>] [-Connection <PnPConnection>] DESCRIPTION Adds a new image element to a section on a client-side page. EXAMPLES EXAMPLE 1 Add-PnPPageImageWebPart -Page \"MyPage\" -ImageUrl \"/sites/contoso/siteassets/test.png\" Adds the image with specified URL to the Page 'MyPage' EXAMPLE 2 Add-PnPPageImageWebPart -Page \"MyPage\" -ImageUrl \"/sites/contoso/SiteAssets/test.png\" -ImageWidth 400 -ImageHeight 200 -Caption \"Caption text\" -AlternativeText \"Alt text\" -Link \"https://pnp.github.io\" Adds the image with specified URL to the Page 'MyPage' with width, height, caption, alt text and link parameters. PARAMETERS -Column Sets the column where to insert the image control. Type: Int32 Parameter Sets: Positioned Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Order Sets the order of the image control. (Default = 1) Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Page The name of the page. Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Section Sets the section where to insert the image control. Type: Int32 Parameter Sets: Positioned Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ImageUrl Specifies the image to be added. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PageImageAlignment Specifies the inline image's alignment. Available values are Center, Left and Right. Type: PageImageAlignment Parameter Sets: (All) Required: False Position: Named Default value: Center Accept pipeline input: False Accept wildcard characters: False -ImageWidth Specifies the width of the inline image. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: 150 Accept pipeline input: False Accept wildcard characters: False -ImageHeight Specifies the height of the inline image. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: 150 Accept pipeline input: False Accept wildcard characters: False -Caption Specifies the caption text to display for the image. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AlternativeText Specifies the alt text to display for the image. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Link Specifies the clickable link to display for the image. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPageSection.html": {
    "href": "cmdlets/Add-PnPPageSection.html",
    "title": "Add-PnPPageSection | PnP PowerShell",
    "keywords": "Add-PnPPageSection SYNOPSIS Adds a new section to a page. SYNTAX Add-PnPPageSection [-Page] <PagePipeBind> -SectionTemplate <CanvasSectionTemplate> [-Order <Int32>] [-ZoneEmphasis <Int32>] [-VerticalZoneEmphasis <Int32>] [-Connection <PnPConnection>] DESCRIPTION Allows to add a new section to a page. EXAMPLES EXAMPLE 1 Add-PnPPageSection -Page \"MyPage\" -SectionTemplate OneColumn Adds a new one-column section to the page 'MyPage' EXAMPLE 2 Add-PnPPageSection -Page \"MyPage\" -SectionTemplate ThreeColumn -Order 10 Adds a new Three columns section to the page 'MyPage' with an order index of 10. EXAMPLE 3 $page = Add-PnPPage -Name \"MyPage\" Add-PnPPageSection -Page $page -SectionTemplate OneColumn Adds a new one column section to the page 'MyPage'. EXAMPLE 4 $page = Add-PnPPage -Name \"MyPage\" Add-PnPPageSection -Page $page -SectionTemplate OneColumn -ZoneEmphasis 2 Adds a new one column section to the page 'MyPage' and sets the background to 2 (0 is no background, 3 is highest emphasis). EXAMPLE 5 $page = Add-PnPPage -Name \"MyPage\" Add-PnPPageSection -Page $page -SectionTemplate OneColumnVerticalSection -Order 1 -ZoneEmphasis 2 -VerticalZoneEmphasis 3 Adds a new one column with one vertical section to the page 'MyPage' and sets the zone emphasis to 2 for one column and vertical zone emphasis to 3 for the vertical column. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Order Sets the order of the section. (Default = 1) Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Page The name of the page or the page object. Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -SectionTemplate Specifies the columns template to use for the section. Type: CanvasSectionTemplate Parameter Sets: (All) Accepted values: OneColumn, OneColumnFullWidth, TwoColumn, ThreeColumn, TwoColumnLeft, TwoColumnRight, OneColumnVerticalSection, TwoColumnVerticalSection, ThreeColumnVerticalSection, TwoColumnLeftVerticalSection, TwoColumnRightVerticalSection Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ZoneEmphasis Sets the background of the section (default = 0). Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -VerticalZoneEmphasis Sets the background of the vertical section (default = 0). Works only for vertical column layouts, will be ignored for other layouts. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPageTextPart.html": {
    "href": "cmdlets/Add-PnPPageTextPart.html",
    "title": "Add-PnPPageTextPart | PnP PowerShell",
    "keywords": "Add-PnPPageTextPart SYNOPSIS Adds a text element to a client-side page. SYNTAX Default Add-PnPPageTextPart -Page <PagePipeBind> -Text <String> [-Order <Int32>] [-ImageUrl <String>] [-PageImageAlignment <PageImageAlignment>] [-ImageWidth <Int32>] [-ImageHeight <Int32>] [-Connection <PnPConnection>] Positioned Add-PnPPageTextPart -Page <PagePipeBind> -Text <String> -Section <Int32> -Column <Int32> [-Order <Int32>] [-ImageUrl <String>] [-PageImageAlignment <PageImageAlignment>] [-ImageWidth <Int32>] [-ImageHeight <Int32>] [-Connection <PnPConnection>] DESCRIPTION Adds a new text element to a section on a client-side page. EXAMPLES EXAMPLE 1 Add-PnPPageTextPart -Page \"MyPage\" -Text \"Hello World!\" Adds the text 'Hello World!' to the Page 'MyPage' EXAMPLE 2 Add-PnPPageTextPart -Page \"MyPage\" -Text \"Hello World!\" -ImageUrl \"/sites/contoso/SiteAssets/test.png\" Adds the text 'Hello World!' to the Page 'MyPage' with specified image as inline image. EXAMPLE 3 Add-PnPPageTextPart -Page \"MyPage\" -Text \"Hello World!\" -ImageUrl \"/sites/contoso/SiteAssets/test.png\" -TextBeforeImage \"Text before\" -TextAfterImage \"Text after\" Adds the text 'Hello World!' to the Page 'MyPage' with specified image as inline image with text specified before and after the inline image. PARAMETERS -Column Sets the column where to insert the text control. Type: Int32 Parameter Sets: Positioned Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Order Sets the order of the text control. (Default = 1) Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Page The name of the page. Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Section Sets the section where to insert the text control. Type: Int32 Parameter Sets: Positioned Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Text Specifies the text to display in the text area. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TextBeforeImage Specifies the text to display before the inline image. Type: String Parameter Sets: (All) Required: False Position: Named Default value: 150 Accept pipeline input: False Accept wildcard characters: False -ImageUrl Specifies the inline image to be added. Image will be added after the text content. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PageImageAlignment Specifies the inline image's alignment. Available values are Center, Left and Right. Type: PageImageAlignment Parameter Sets: (All) Required: False Position: Named Default value: Center Accept pipeline input: False Accept wildcard characters: False -ImageWidth Specifies the width of the inline image. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: 150 Accept pipeline input: False Accept wildcard characters: False -ImageHeight Specifies the height of the inline image. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: 150 Accept pipeline input: False Accept wildcard characters: False -TextAfterImage Specifies the text to display after the inline image. Type: String Parameter Sets: (All) Required: False Position: Named Default value: 150 Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPageWebPart.html": {
    "href": "cmdlets/Add-PnPPageWebPart.html",
    "title": "Add-PnPPageWebPart | PnP PowerShell",
    "keywords": "Add-PnPPageWebPart SYNOPSIS Adds a web part to a page SYNTAX Default with built-in web part Add-PnPPageWebPart [-Page] <PagePipeBind> -DefaultWebPartType <DefaultClientSideWebParts> [-WebPartProperties <PropertyBagPipeBind>] [-Order <Int32>] [-Connection <PnPConnection>] Default with 3rd party web part Add-PnPPageWebPart [-Page] <PagePipeBind> -Component <PageComponentPipeBind> [-WebPartProperties <PropertyBagPipeBind>] [-Order <Int32>] [-Connection <PnPConnection>] Positioned with built-in web part Add-PnPPageWebPart [-Page] <PagePipeBind> -DefaultWebPartType <DefaultClientSideWebParts> [-WebPartProperties <PropertyBagPipeBind>] [-Order <Int32>] -Section <Int32> -Column <Int32> [-Connection <PnPConnection>] Positioned with 3rd party web part Add-PnPPageWebPart [-Page] <PagePipeBind> -Component <PageComponentPipeBind> [-WebPartProperties <PropertyBagPipeBind>] [-Order <Int32>] -Section <Int32> -Column <Int32> [-Connection <PnPConnection>] DESCRIPTION Adds a client-side web part to an existing client-side page. EXAMPLES EXAMPLE 1 Add-PnPPageWebPart -Page \"MyPage\" -DefaultWebPartType BingMap Adds a built-in component 'BingMap' to the page called 'MyPage' EXAMPLE 2 Add-PnPPageWebPart -Page \"MyPage\" -Component \"HelloWorld\" Adds a component 'HelloWorld' to the page called 'MyPage' EXAMPLE 3 Add-PnPPageWebPart -Page \"MyPage\" -Component \"HelloWorld\" -Section 1 -Column 2 Adds a component 'HelloWorld' to the page called 'MyPage' in section 1 and column 2 PARAMETERS -Column Sets the column where to insert the web part control. Type: Int32 Parameter Sets: Positioned with built-in web part, Positioned with 3rd party web part Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Component Specifies the component instance or Id to add. Type: PageComponentPipeBind Parameter Sets: Default with 3rd party web part, Positioned with 3rd party web part Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultWebPartType Defines a default web part type to insert. Type: DefaultClientSideWebParts Parameter Sets: Default with built-in web part, Positioned with built-in web part Accepted values: ThirdParty, ContentRollup, BingMap, ContentEmbed, DocumentEmbed, Image, ImageGallery, LinkPreview, NewsFeed, NewsReel, News, PowerBIReportEmbed, QuickChart, SiteActivity, VideoEmbed, YammerEmbed, Events, GroupCalendar, Hero, List, PageTitle, People, QuickLinks, CustomMessageRegion, Divider, MicrosoftForms, Spacer, ClientWebPart, PowerApps, CodeSnippet, PageFields, Weather, YouTube, MyDocuments, YammerFullFeed, CountDown, ListProperties, MarkDown, Planner, Sites, CallToAction, Button Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Order Sets the order of the web part control. (Default = 1) Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Page The name of the page. Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Section Sets the section where to insert the web part control. Type: Int32 Parameter Sets: Positioned with built-in web part, Positioned with 3rd party web part Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebPartProperties The properties of the web part Type: PropertyBagPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPlannerBucket.html": {
    "href": "cmdlets/Add-PnPPlannerBucket.html",
    "title": "Add-PnPPlannerBucket | PnP PowerShell",
    "keywords": "Add-PnPPlannerBucket SYNOPSIS Required Permissions Microsoft Graph API: One of Tasks.ReadWrite, Tasks.ReadWrite.All, Group.ReadWrite.All, Adds a new bucket to a Planner plan SYNTAX By Group Add-PnPPlannerBucket -Group <PlannerGroupPipeBind> -Plan <PlannerPlanPipeBind> -Name <String> By Plan Id Add-PnPPlannerBucket -PlanId <String> -Name <String> DESCRIPTION This cmdlets creates a new bucket for tasks in a Planner plan. EXAMPLES Example 1 Add-PnPPlannerBucket -Group \"My Group\" -Plan \"My Plan\" -Name \"Project Todos\" Adds a new bucket called \"Project Todos\" to the specified plans Example 2 Add-PnPPlannerBucket -PlanId \"QvfkTd1mc02gwxHjHC_43JYABhAy\" -Name \"Project Todos\" Adds a new bucket called \"Project Todos\" to the plan with the specified id. PARAMETERS -Group Specify the group id or group name of the group owning the plan. Type: PlannerGroupPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The name of the bucket to add Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Plan Specify the id or name of the plan to add the tasks to. Type: PlannerPlanPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PlanId A plan id to add the bucket to. Type: String Parameter Sets: By Plan Id Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPlannerRoster.html": {
    "href": "cmdlets/Add-PnPPlannerRoster.html",
    "title": "Add-PnPPlannerRoster | PnP PowerShell",
    "keywords": "Add-PnPPlannerRoster SYNOPSIS Creates a new Microsoft Planner Roster SYNTAX Add-PnPPlannerRoster [-Connection <PnPConnection>] DESCRIPTION Creates a new Microsoft Planner Roster EXAMPLES EXAMPLE 1 Add-PnPPlannerRoster Creates a new Microsoft Planner Roster PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPlannerRosterMember.html": {
    "href": "cmdlets/Add-PnPPlannerRosterMember.html",
    "title": "Add-PnPPlannerRosterMember | PnP PowerShell",
    "keywords": "Add-PnPPlannerRosterMember SYNOPSIS Adds a user to an existing Microsoft Planner Roster SYNTAX Add-PnPPlannerRosterMember -Identity <PlannerRosterPipeBind> -User <String> [-Connection <PnPConnection>] DESCRIPTION Adds a user to an existing Microsoft Planner Roster EXAMPLES EXAMPLE 1 Add-PnPPlannerRosterMember -Identity \"6519868f-868f-6519-8f86-19658f861965\" -User \"johndoe@contoso.onmicrosoft.com\" Creates a new Microsoft Planner Roster PARAMETERS -Identity Identity of the Microsoft Planner Roster to add the member to Type: PlannerRosterPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User User principal name of the user to add as a member Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPlannerTask.html": {
    "href": "cmdlets/Add-PnPPlannerTask.html",
    "title": "Add-PnPPlannerTask | PnP PowerShell",
    "keywords": "Add-PnPPlannerTask SYNOPSIS Required Permissions Microsoft Graph API: One of Tasks.ReadWrite, Tasks.ReadWrite.All, Group.ReadWrite.All Adds a new task to a planner bucket SYNTAX By Group Add-PnPPlannerTask -Group <PlannerGroupPipeBind> -Plan <PlannerPlanPipeBind> -Bucket <PlannerBucketPipeBind> -Title <String> [-PercentComplete <Int32>] [-DueDateTime <DateTime>] [-StartDateTime <DateTime>] [-AssignedTo <String[]] [-Priority <Int32>] [-Description <String>] [-OutputTask] By Plan Id Add-PnPPlannerTask -Bucket <PlannerBucketPipeBind> -PlanId <String> -Title <String> [-PercentComplete <Int32>] [-DueDateTime <DateTime>] [-StartDateTime <DateTime>] [-AssignedTo <String[]] [-Priority <Int32>] [-Description <String>] [-OutputTask] DESCRIPTION This cmdlet adds a new task to Planner bucket EXAMPLES Example 1 Add-PnPPlannerTask -Group \"Marketing\" -Plan \"Conference Plan\" -Bucket \"Todos\" -Title \"Design booth layout\" This cmdlet adds a new task. Example 2 Add-PnPPlannerTask -PlanId \"QvfkTd1mc02gwxHjHC_43JYABhAy\" -Bucket \"Todos\" -Title \"Design booth layout\" This cmdlet adds a new task. Example 3 Add-PnPPlannerTask -Group \"Marketing\" -Plan \"Conference Plan\" -Bucket \"Todos\" -Title \"Design booth layout\" -AssignedTo \"user@contoso.com\",\"manager@contoso.com\" This cmdlet adds a new task and assigns to user@contoso.com and manager@contoso.com Example 4 $task = Add-PnPPlannerTask -Group \"Marketing\" -Plan \"Conference Plan\" -Bucket \"Todos\" -Title \"Design booth layout\" -AssignedTo \"user@contoso.com\",\"manager@contoso.com\" -OutputTask This returns the task as an object to inspect specific values PARAMETERS -Bucket The bucket to add the task too Type: PlannerBucketPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Specify the group id or name of the group owning the plan. Type: PlannerGroupPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Plan Specify the id or name of the plan to add the tasks to. Type: PlannerPlanPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PlanId Specify the id the plan to add the tasks to. Type: String Parameter Sets: By Plan Id Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Specify the title of the task Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AssignedTo Specify the email(s) of the user to assign the task to. Type: String[] Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartDateTime Defines the start date of the task. Type: DateTime Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DueDateTime Specify the due date. Type: DateTime Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PercentComplete Defines the percentage of completeness of the task. Type: Int32 Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Priority Sets the priority of the task. Value should be a number between 0 and 10. values 0 and 1 are interpreted as Urgent values 2, 3 and 4 are interpreted as Important values 5, 6 and 7 are interpreted as Medium values 8, 9 and 10 are interpreted as Low Type: Int32 Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Sets the description (notes) of the task. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OutputTask Returns the just created task as an object to inspect values Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPropertyBagValue.html": {
    "href": "cmdlets/Add-PnPPropertyBagValue.html",
    "title": "Add-PnPPropertyBagValue | PnP PowerShell",
    "keywords": "Add-PnPPropertyBagValue SYNOPSIS This is an alias for Set-PnPPropertyBagValue. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPublishingImageRendition.html": {
    "href": "cmdlets/Add-PnPPublishingImageRendition.html",
    "title": "Add-PnPPublishingImageRendition | PnP PowerShell",
    "keywords": "Add-PnPPublishingImageRendition SYNOPSIS Adds an Image Rendition if the Name of the Image Rendition does not already exist. This prevents creating two Image Renditions that share the same name. SYNTAX Add-PnPPublishingImageRendition -Name <String> -Width <Int32> -Height <Int32> [-Connection <PnPConnection>] DESCRIPTION Allows to add an Image Rendition. EXAMPLES EXAMPLE 1 Add-PnPPublishingImageRendition -Name \"MyImageRendition\" -Width 800 -Height 600 PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Height The height of the Image Rendition. Type: Int32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The display name of the Image Rendition. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Width The width of the Image Rendition. Type: Int32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPublishingPage.html": {
    "href": "cmdlets/Add-PnPPublishingPage.html",
    "title": "Add-PnPPublishingPage | PnP PowerShell",
    "keywords": "Add-PnPPublishingPage SYNOPSIS Adds a publishing page SYNTAX Add-PnPPublishingPage -PageName <String> [-FolderPath <String>] -PageTemplateName <String> [-Title <String>] [-Publish] [-Connection <PnPConnection>] DESCRIPTION Allows to add a publishing page. EXAMPLES EXAMPLE 1 Add-PnPPublishingPage -PageName 'OurNewPage' -Title 'Our new page' -PageTemplateName 'ArticleLeft' Creates a new page based on the pagelayout 'ArticleLeft' EXAMPLE 2 Add-PnPPublishingPage -PageName 'OurNewPage' -Title 'Our new page' -PageTemplateName 'ArticleLeft' -Folder '/Pages/folder' Creates a new page based on the pagelayout 'ArticleLeft' with a site relative folder path PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FolderPath The site relative folder path of the page to be added Type: String Parameter Sets: (All) Aliases: Folder Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PageName The name of the page to be added as an aspx file Type: String Parameter Sets: (All) Aliases: Name Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PageTemplateName The name of the page layout you want to use. Specify without the .aspx extension. So 'ArticleLeft' or 'BlankWebPartPage' Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Publish Publishes the page. Also Approves it if moderation is enabled on the Pages library. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the page Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPublishingPageLayout.html": {
    "href": "cmdlets/Add-PnPPublishingPageLayout.html",
    "title": "Add-PnPPublishingPageLayout | PnP PowerShell",
    "keywords": "Add-PnPPublishingPageLayout SYNOPSIS Adds a publishing page layout SYNTAX Add-PnPPublishingPageLayout -SourceFilePath <String> -Title <String> -Description <String> -AssociatedContentTypeID <String> [-DestinationFolderHierarchy <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to add a publishing page layout and associate it to a content type. EXAMPLES EXAMPLE 1 Add-PnPPublishingPageLayout -Title 'Our custom page layout' -SourceFilePath 'customlayout.aspx' -Description 'A custom page layout' -AssociatedContentTypeID 0x01010901 Uploads the pagelayout 'customlayout.aspx' to the current site as a 'web part page' pagelayout PARAMETERS -AssociatedContentTypeID Associated content type ID Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Description for the page layout Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DestinationFolderHierarchy Folder hierarchy where the html page layouts will be deployed Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceFilePath Path to the file which will be uploaded Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Title for the page layout Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPRoleDefinition.html": {
    "href": "cmdlets/Add-PnPRoleDefinition.html",
    "title": "Add-PnPRoleDefinition | PnP PowerShell",
    "keywords": "Add-PnPRoleDefinition SYNOPSIS Adds a Role Definition (Permission Level) to the site collection in the current context SYNTAX Add-PnPRoleDefinition -RoleName <String> [-Clone <RoleDefinitionPipeBind>] [-Include <PermissionKind[]>] [-Exclude <PermissionKind[]>] [-Description <String>] [-Connection <PnPConnection>] DESCRIPTION This command allows adding a custom Role Definition (Permission Level) to the site collection in the current context. It does not replace or remove existing Role Definitions. EXAMPLES EXAMPLE 1 Add-PnPRoleDefinition -RoleName \"CustomPerm\" Creates additional permission level with no permission flags enabled. EXAMPLE 2 Add-PnPRoleDefinition -RoleName \"NoDelete\" -Clone \"Contribute\" -Exclude DeleteListItems Creates additional permission level by cloning \"Contribute\" and removes flags DeleteListItems EXAMPLE 3 Add-PnPRoleDefinition -RoleName \"AddOnly\" -Clone \"Contribute\" -Exclude DeleteListItems, EditListItems Creates additional permission level by cloning \"Contribute\" and removes flags DeleteListItems and EditListItems EXAMPLE 4 $roleDefinition = Get-PnPRoleDefinition -Identity \"Contribute\" Add-PnPRoleDefinition -RoleName \"AddOnly\" -Clone $roleDefinition -Exclude DeleteListItems, EditListItems Creates additional permission level by cloning \"Contribute\" and removes flags DeleteListItems and EditListItems PARAMETERS -Clone An existing permission level or the name of an permission level to clone as base template. Type: RoleDefinitionPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Optional description for the new permission level. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Exclude Specifies permission flag(s) to disable. Please visit https://learn.microsoft.com/previous-versions/office/sharepoint-csom/ee536458(v%3Doffice.15) for the PermissionKind enum Type: PermissionKind[] Parameter Sets: (All) Accepted values: EmptyMask, ViewListItems, AddListItems, EditListItems, DeleteListItems, ApproveItems, OpenItems, ViewVersions, DeleteVersions, CancelCheckout, ManagePersonalViews, ManageLists, ViewFormPages, AnonymousSearchAccessList, Open, ViewPages, AddAndCustomizePages, ApplyThemeAndBorder, ApplyStyleSheets, ViewUsageData, CreateSSCSite, ManageSubwebs, CreateGroups, ManagePermissions, BrowseDirectories, BrowseUserInfo, AddDelPrivateWebParts, UpdatePersonalWebParts, ManageWeb, AnonymousSearchAccessWebLists, UseClientIntegration, UseRemoteAPIs, ManageAlerts, CreateAlerts, EditMyUserInfo, EnumeratePermissions, FullMask Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Include Specifies permission flag(s) to enable. Please visit https://learn.microsoft.com/previous-versions/office/sharepoint-csom/ee536458(v%3Doffice.15) for the PermissionKind enum Type: PermissionKind[] Parameter Sets: (All) Accepted values: EmptyMask, ViewListItems, AddListItems, EditListItems, DeleteListItems, ApproveItems, OpenItems, ViewVersions, DeleteVersions, CancelCheckout, ManagePersonalViews, ManageLists, ViewFormPages, AnonymousSearchAccessList, Open, ViewPages, AddAndCustomizePages, ApplyThemeAndBorder, ApplyStyleSheets, ViewUsageData, CreateSSCSite, ManageSubwebs, CreateGroups, ManagePermissions, BrowseDirectories, BrowseUserInfo, AddDelPrivateWebParts, UpdatePersonalWebParts, ManageWeb, AnonymousSearchAccessWebLists, UseClientIntegration, UseRemoteAPIs, ManageAlerts, CreateAlerts, EditMyUserInfo, EnumeratePermissions, FullMask Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RoleName Name of new permission level. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPSiteClassification.html": {
    "href": "cmdlets/Add-PnPSiteClassification.html",
    "title": "Add-PnPSiteClassification | PnP PowerShell",
    "keywords": "Add-PnPSiteClassification SYNOPSIS This is an alias for Add-PnPAvailableSiteClassification. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPSiteCollectionAdmin.html": {
    "href": "cmdlets/Add-PnPSiteCollectionAdmin.html",
    "title": "Add-PnPSiteCollectionAdmin | PnP PowerShell",
    "keywords": "Add-PnPSiteCollectionAdmin SYNOPSIS Adds one or more users as site collection administrators to the site collection in the current context SYNTAX Add-PnPSiteCollectionAdmin [-Owners <System.Collections.Generic.List<[PnP.PowerShell.Commands.Base.PipeBinds.UserPipeBind]>>] [-PrimarySiteCollectionAdmin <PnP.PowerShell.Commands.Base.PipeBinds.UserPipeBind>] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This command allows adding one to many users as site collection administrators to the site collection in the current context. It does not replace or remove existing site collection administrators. You must be a Site Collection Admin to run this command. Use Set-PnPTenantSite -Owners if you are not an Admin for the site but have the SharePoint Online admin role. EXAMPLES EXAMPLE 1 Add-PnPSiteCollectionAdmin -Owners \"user@contoso.onmicrosoft.com\" This will add user@contoso.onmicrosoft.com as an additional secondary site collection administrator to the site collection in the current context EXAMPLE 2 Add-PnPSiteCollectionAdmin -Owners @(\"user1@contoso.onmicrosoft.com\", \"user2@contoso.onmicrosoft.com\") This will add user1@contoso.onmicrosoft.com and user2@contoso.onmicrosoft.com as additional secondary site collection administrator to the site collection in the current context EXAMPLE 3 Get-PnPUser | Where-Object Title -Like \"*Doe\" | Add-PnPSiteCollectionAdmin This will add all users with their title ending with \"Doe\" as additional secondary site collection administrators to the site collection in the current context EXAMPLE 4 Add-PnPSiteCollectionAdmin -PrimarySiteCollectionAdmin \"user@contoso.onmicrosoft.com\" This will set user@contoso.onmicrosoft.com as the primary site collection administrator of the site collection in the current context PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners Specifies owner(s) to add as site collection administrators. They will be added as additional secondary site collection administrators to the site in the current context. Existing administrators will stay. Can be both users and groups. Type: System.Collections.Generic.List`1[PnP.PowerShell.Commands.Base.PipeBinds.UserPipeBind] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -PrimarySiteCollectionAdmin The user to set as the primary site collection administrator. This will replace the current primary site collection administrator. To add additional site collection administrators, use the -Owners parameter. Type: PnP.PowerShell.Commands.Base.PipeBinds.UserPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPSiteCollectionAppCatalog.html": {
    "href": "cmdlets/Add-PnPSiteCollectionAppCatalog.html",
    "title": "Add-PnPSiteCollectionAppCatalog | PnP PowerShell",
    "keywords": "Add-PnPSiteCollectionAppCatalog SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Adds a Site Collection scoped App Catalog to a site SYNTAX Add-PnPSiteCollectionAppCatalog [-Site <SitePipeBind>] [-Connection <PnPConnection>] DESCRIPTION Allows to add Site Collection scoped App Catalog. EXAMPLES EXAMPLE 1 Add-PnPSiteCollectionAppCatalog This will add a SiteCollection app catalog to the currently connected to site EXAMPLE 2 Add-PnPSiteCollectionAppCatalog -Site \"https://contoso.sharepoint.com/sites/FinanceTeamsite\" This will add a SiteCollection app catalog to the specified site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Url of the site to add the app catalog to. Type: SitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Add-PnPSiteDesign.html": {
    "href": "cmdlets/Add-PnPSiteDesign.html",
    "title": "Add-PnPSiteDesign | PnP PowerShell",
    "keywords": "Add-PnPSiteDesign SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Creates a new Site Design on the current tenant SYNTAX By SiteScript Instance (Default) Add-PnPSiteDesign -Title <String> -SiteScript <TenantSiteScriptPipeBind> [-Description <String>] [-IsDefault] [-PreviewImageAltText <String>] [-PreviewImageUrl <String>] [-WebTemplate <SiteWebTemplate>] [-ThumbnailUrl <String>] [-DesignPackageId <Guid>] [-Connection <PnPConnection>] By SiteScript Ids Add-PnPSiteDesign -Title <String> -SiteScriptIds <Guid[]> [-Description <String>] [-IsDefault] [-PreviewImageAltText <String>] [-PreviewImageUrl <String>] [-WebTemplate <SiteWebTemplate>] [-ThumbnailUrl <String>] [-DesignPackageId <Guid>] [-Connection <PnPConnection>] DESCRIPTION Allows to add a new Site Design on the current tenant. EXAMPLES EXAMPLE 1 Add-PnPSiteDesign -Title \"My Company Design\" -SiteScriptIds \"e84dcb46-3ab9-4456-a136-66fc6ae3d3c5\",\"6def687f-0e08-4f1e-999c-791f3af9a600\" -Description \"My description\" -WebTemplate TeamSite Adds a new Site Design, with the specified title and description. When applied it will run the scripts as referenced by the IDs. Use Get-PnPSiteScript to receive Site Scripts. The WebTemplate parameter specifies that this design applies to modern Team Sites. EXAMPLE 2 Add-PnPSiteDesign -Title \"My Company Design\" -SiteScriptIds \"e84dcb46-3ab9-4456-a136-66fc6ae3d3c5\",\"6def687f-0e08-4f1e-999c-791f3af9a600\" -Description \"My description\" -WebTemplate TeamSite -ThumbnailUrl https://contoso.sharepoint.com/sites/templates/siteassets/logo.png Adds a new Site Design, with the specified title, description and logo to be shown in the template picker. When applied it will run the scripts as referenced by the IDs. Use Get-PnPSiteScript to receive Site Scripts. The WebTemplate parameter specifies that this design applies to modern Team Sites. EXAMPLE 3 Add-PnPSiteDesign -Title \"My Company Design\" -SiteScriptIds \"e84dcb46-3ab9-4456-a136-66fc6ae3d3c5\",\"6def687f-0e08-4f1e-999c-791f3af9a600\" -Description \"My description\" -WebTemplate TeamSite -ThumbnailUrl \"https://contoso.sharepoint.com/sites/templates/my images/logo.png\" Adds a new Site Design, with the specified title, description and logo to be shown in the template picker. When applied it will run the scripts as referenced by the IDs. Use Get-PnPSiteScript to receive Site Scripts. The WebTemplate parameter specifies that this design applies to modern Team Sites. Notice that when the location for the ThumbnailUrl contains a space, it should be provided URL decoded, so i.e. no %20 for spaces. EXAMPLE 4 Get-PnPSiteScriptFromWeb -IncludeAll | Add-PnPSiteScript -Title \"My Site Script\" | Add-PnPSiteDesign -Title \"My Site Design\" -WebTemplate TeamSite Adds a new Site Design based on the currently connected to site, with the specified title to be shown in the template picker. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site design Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsDefault Specifies that the site design is a default site design Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PreviewImageAltText Sets the text for the preview image. This was used in the old site designs approach and currently has no function anymore. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PreviewImageUrl Sets the url to the preview image. This was used in the old site designs approach and currently has no function anymore. Use ThumbnailUrl instead. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteScript An instance, id or title of a site script to use for the site design Type: TenantSiteScriptPipeBind Parameter Sets: By SiteScript Instance Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -SiteScriptIds An array of guids of site scripts to use for the site design Type: Guid[] Parameter Sets: By SiteScript Ids Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the site design Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebTemplate Specifies the type of site to which this design applies Type: SiteWebTemplate Parameter Sets: (All) Accepted values: TeamSite, CommunicationSite, GrouplessTeamSite, ChannelSite Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThumbnailUrl The full URL of a thumbnail image, i.e. https://contoso.sharepoint/siteassets/image.png. If none is specified, SharePoint uses a generic image. Recommended size is 400 x 300 pixels. This is the image that will be shown when selecting a template through \"Apply a site template\" or \"Browse templates\" shown in \"Start designing your site\" shown when creating a new site. If there are spaces in the URL, do not URL encode them, so i.e. do not use %20 where there is a space, but instead just provide the link with the space inside. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DesignPackageId Sets the design package Id of this site design. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPSiteDesignFromWeb.html": {
    "href": "cmdlets/Add-PnPSiteDesignFromWeb.html",
    "title": "Add-PnPSiteDesignFromWeb | PnP PowerShell",
    "keywords": "Add-PnPSiteDesignFromWeb SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Creates a new Site Design on the current tenant based on the site provided through -Url or the currently connected to site if -Url is omitted SYNTAX Add-PnPSiteDesignFromWeb -Title <String> [-Description <String>] [-IsDefault] [-PreviewImageAltText <String>] [-PreviewImageUrl <String>] [-WebTemplate <SiteWebTemplate>] [-ThumbnailUrl <String>] [-DesignPackageId <Guid>] [-Lists <String[]>] [-IncludeBranding] [-IncludeLinksToExportedItems] [-IncludeRegionalSettings] [-IncludeSiteExternalSharingCapability] [-IncludeTheme] [-Connection <PnPConnection>] DESCRIPTION Creates a new Site Design on the current tenant based on the site provided through -Url or the currently connected to site if -Url is omitted. It combines the steps of Get-PnPSiteScriptFromWeb, Add-PnPSiteScript and Add-PnPSiteDesign into one cmdlet. The information returned from running the cmdlet is the information of the Site Design that has been created. EXAMPLES EXAMPLE 1 Add-PnPSiteDesignFromWeb -Title \"My Company Design\" -Description \"My description\" -WebTemplate TeamSite -IncludeAll Generates a site script based on all the components of the currently connected to site, excluding its lists and libraries and based on the generated script it will create a site script and a site design with the specified title and description for modern team sites. EXAMPLE 2 Add-PnPSiteDesignFromWeb -Title \"My Company Design\" -Description \"My description\" -WebTemplate TeamSite -IncludeAll -Lists (\"/lists/Issue list\", \"Shared Documents) Generates a site script based on all the components of the currently connected to site, including the list \"Issue list\" and the default document library \"Shared Documents\" and based on the generated script it will create a site script and a site design with the specified title and description for modern team sites. EXAMPLE 3 Add-PnPSiteDesignFromWeb -Title \"My Company Design\" -Description \"My description\" -WebTemplate TeamSite -Lists \"/lists/Issue list\" -ThumbnailUrl https://contoso.sharepoint.com/SiteAssets/logo.png Generates a site script based on the list \"Issue list\" in the current site and based on the generated script it will create a site script and a site design with the specified title, description and logo for modern team sites. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site design Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsDefault Specifies if the site design is a default site design Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PreviewImageAltText Sets the text for the preview image. This was used in the old site designs approach and currently has no function anymore. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PreviewImageUrl Sets the url to the preview image. This was used in the old site designs approach and currently has no function anymore. Use ThumbnailUrl instead. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the site design Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebTemplate Specifies the type of site to which this design applies Type: SiteWebTemplate Parameter Sets: (All) Accepted values: TeamSite, CommunicationSite, GrouplessTeamSite, ChannelSite Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThumbnailUrl The full URL of a thumbnail image, i.e. https://contoso.sharepoint/siteassets/image.png. If none is specified, SharePoint uses a generic image. Recommended size is 400 x 300 pixels. This is the image that will be shown when selecting a template through \"Apply a site template\" or \"Browse templates\" shown in \"Start designing your site\" shown when creating a new site. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DesignPackageId Sets the design package Id of this site design Type: SiteWebTemplate Parameter Sets: (All) Accepted values: TeamSite, CommunicationSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeAll If specified will include all supported components into the Site Script except for the lists and document libraries, these need to be explicitly be specified through -Lists Type: SwitchParameter Parameter Sets: All components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeBranding If specified will include the branding of the site into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeLinksToExportedItems If specified will include navigation links into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeRegionalSettings If specified will include the regional settings into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSiteExternalSharingCapability If specified will include the external sharing configuration into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeTheme If specified will include the branding of the site into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lists Allows specifying one or more site relative URLs of lists that should be included into the Site Script, i.e. \"Shared Documents\",\"List\\MyList\" Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPSiteDesignTask.html": {
    "href": "cmdlets/Add-PnPSiteDesignTask.html",
    "title": "Add-PnPSiteDesignTask | PnP PowerShell",
    "keywords": "Add-PnPSiteDesignTask SYNOPSIS This command is used to apply a published site design to a specified site collection target. It schedules the operation, allowing for the application of larger site scripts (Invoke-PnPSiteDesign is limited to 30 actions and subactions). This command is intended to replace Invoke-PnPSiteDesign and is useful when you need to apply a large number of actions or multiple site scripts. SYNTAX Add-PnPSiteDesignTask -SiteDesignId <Guid> [-WebUrl <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to apply a site design to a specified site collection. This command is intended to be used when you need to apply a large number of actions or multiple site scripts. EXAMPLES EXAMPLE 1 Add-PnPSiteDesignTask -SiteDesignId 501z8c32-4147-44d4-8607-26c2f67cae82 This example applies a site design to the currently connected site. Executing the commands will schedule the site design to be queued and run against the designated site collection. EXAMPLE 2 Add-PnPSiteDesignTask -SiteDesignId 501z8c32-4147-44d4-8607-26c2f67cae82 -WebUrl \"https://contoso.sharepoint.com/sites/project\" This example applies a site design to the designated site. Executing the commands will schedule the site design to be queued and run against the designated site collection. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteDesignId The ID of the site design to apply. Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebUrl The URL of the site collection where the site design will be applied. If not specified the design will be applied to the site you connected to with Connect-PnPOnline. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPSiteScript.html": {
    "href": "cmdlets/Add-PnPSiteScript.html",
    "title": "Add-PnPSiteScript | PnP PowerShell",
    "keywords": "Add-PnPSiteScript SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Creates a new Site Script on the current tenant SYNTAX Add-PnPSiteScript -Title <String> [-Description <String>] -Content <String> [-Connection <PnPConnection>] DESCRIPTION Allows to add a Site Script on the current tenant. EXAMPLES EXAMPLE 1 Add-PnPSiteScript -Title \"My Site Script\" -Description \"A more detailed description\" -Content $script Adds a new Site Script, where $script variable contains the script. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Content A JSON string containing the site script. See https://learn.microsoft.com/sharepoint/dev/declarative-customization/site-design-json-schema for documentation on how to create such a JSON schema. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site script Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the site script Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPSiteScriptPackage.html": {
    "href": "cmdlets/Add-PnPSiteScriptPackage.html",
    "title": "Add-PnPSiteScriptPackage | PnP PowerShell",
    "keywords": "Add-PnPSiteScriptPackage SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Creates a new Site Script Package on the current tenant. Site script packages can contain files in addition to the site scripts which can be used to upload files to sites on which a site template gets applied. SYNTAX Add-PnPSiteScriptPackage -Title <String> [-Description <String>] -ContentPath <String> [-Connection <PnPConnection>] DESCRIPTION Allows to add a new Site Script Package on the current tenant EXAMPLES EXAMPLE 1 Add-PnPSiteScriptPackage -Title \"My Site Script Package\" -Description \"A more detailed description\" -ContentPath \"c:\\package.zip\" Adds a new Site Script Package PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentPath The full path to the locally stored Site Script Package to upload Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site script package Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the site script package Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPSiteTemplate.html": {
    "href": "cmdlets/Add-PnPSiteTemplate.html",
    "title": "Add-PnPSiteTemplate | PnP PowerShell",
    "keywords": "Add-PnPSiteTemplate SYNOPSIS Adds a PnP Site Template object to a tenant template SYNTAX Add-PnPSiteTemplate -SiteTemplate <SiteTemplate> -TenantTemplate <ProvisioningHierarchy> DESCRIPTION Allows to add PnP Site Template object to a tenant template. EXAMPLES EXAMPLE 1 Add-PnPSiteTemplate -TenantTemplate $tenanttemplate -SiteTemplate $sitetemplate Adds an existing site template to an existing tenant template object PARAMETERS -SiteTemplate The template to add to the tenant template Type: SiteTemplate Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TenantTemplate The tenant template to add the template to Type: ProvisioningHierarchy Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPStoredCredential.html": {
    "href": "cmdlets/Add-PnPStoredCredential.html",
    "title": "Add-PnPStoredCredential | PnP PowerShell",
    "keywords": "Add-PnPStoredCredential SYNOPSIS Adds a credential to the Windows Credential Manager or Mac OS Key Chain Entry. SYNTAX Add-PnPStoredCredential -Name <String> -Username <String> [-Password <SecureString>] [-Overwrite] DESCRIPTION Adds an entry to the Windows Credential Manager or Mac OS Key Chain Entry. If you add an entry in the form of the URL of your tenant/server PnP PowerShell will check if that entry is available when you connect using Connect-PnPOnline. If it finds a matching URL it will use the associated credentials. If you add a Credential with a name of \"https://yourtenant.sharepoint.com\" it will find a match when you connect to \"https://yourtenant.sharepoint.com\" but also when you connect to \"https://yourtenant.sharepoint.com/sites/demo1\". Of course you can specify more granular entries, allow you to automatically provide credentials for different URLs. EXAMPLES EXAMPLE 1 Add-PnPStoredCredential -Name \"https://tenant.sharepoint.com\" -Username yourname@tenant.onmicrosoft.com You will be prompted to specify the password and a new entry will be added with the specified values EXAMPLE 2 Add-PnPStoredCredential -Name \"https://tenant.sharepoint.com\" -Username yourname@tenant.onmicrosoft.com -Password (ConvertTo-SecureString -String \"YourPassword\" -AsPlainText -Force) A new entry will be added with the specified values EXAMPLE 3 Add-PnPStoredCredential -Name \"https://tenant.sharepoint.com\" -Username yourname@tenant.onmicrosoft.com -Password (ConvertTo-SecureString -String \"YourPassword\" -AsPlainText -Force) Connect-PnPOnline -Url \"https://tenant.sharepoint.com/sites/mydemosite\" A new entry will be added with the specified values, and a subsequent connection to a sitecollection starting with the entry name will be made. Notice that no password prompt will occur. PARAMETERS -Name The credential to set Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Overwrite Use parameter to overwrite existing Mac OS Key Chain Entry. Not required on Windows. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Password If not specified you will be prompted to enter your password. If you want to specify this value use ConvertTo-SecureString -String 'YourPassword' -AsPlainText -Force Type: SecureString Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Username Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTaxonomyField.html": {
    "href": "cmdlets/Add-PnPTaxonomyField.html",
    "title": "Add-PnPTaxonomyField | PnP PowerShell",
    "keywords": "Add-PnPTaxonomyField SYNOPSIS Add a taxonomy field SYNTAX Path Add-PnPTaxonomyField [-List <ListPipeBind>] -DisplayName <String> -InternalName <String> -TermSetPath <String> [-TermPathDelimiter <String>] [-Group <String>] [-Id <Guid>] [-AddToDefaultView] [-MultiValue] [-Required] [-FieldOptions <AddFieldOptions>] [-Connection <PnPConnection>] Id Add-PnPTaxonomyField [-List <ListPipeBind>] -DisplayName <String> -InternalName <String> -TaxonomyItemId <Guid> [-Group <String>] [-Id <Guid>] [-AddToDefaultView] [-MultiValue] [-Required] [-FieldOptions <AddFieldOptions>] [-Connection <PnPConnection>] DESCRIPTION Adds a taxonomy/managed metadata field to a list or as a site column. EXAMPLES EXAMPLE 1 Add-PnPTaxonomyField -DisplayName \"Test\" -InternalName \"Test\" -TermSetPath \"TestTermGroup|TestTermSet\" Adds a new taxonomy field called \"Test\" that points to the TestTermSet which is located in the TestTermGroup EXAMPLE 2 Add-PnPTaxonomyField -DisplayName \"Test\" -InternalName \"Test\" -TaxonomyItemId \"0e5fe3c6-3e6a-4d25-9f48-82a655f15992\" Adds a new taxonomy field called \"Test\" that points to the Term set with the term set id of 0e5fe3c6-3e6a-4d25-9f48-82a655f15992 PARAMETERS -AddToDefaultView Switch Parameter if this field must be added to the default view Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The display name of the field Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FieldOptions Specifies the control settings while adding a field. See https://learn.microsoft.com/previous-versions/office/sharepoint-server/ee542202(v=office.15) for details Type: AddFieldOptions Parameter Sets: (All) Accepted values: DefaultValue, AddToDefaultContentType, AddToNoContentType, AddToAllContentTypes, AddFieldInternalNameHint, AddFieldToDefaultView, AddFieldCheckDisplayName Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The group name to where this field belongs to Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id The ID for the field, must be unique Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InternalName The internal name of the field Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name where this field needs to be added Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MultiValue Switch Parameter if this Taxonomy field can hold multiple values Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Required Switch Parameter if the field is a required field Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TaxonomyItemId The ID of the Taxonomy item Type: Guid Parameter Sets: Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermPathDelimiter The path delimiter to be used, by default this is '|' Type: String Parameter Sets: Path Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermSetPath The path to the term that this needs to be bound Type: String Parameter Sets: Path Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTeamsChannel.html": {
    "href": "cmdlets/Add-PnPTeamsChannel.html",
    "title": "Add-PnPTeamsChannel | PnP PowerShell",
    "keywords": "Add-PnPTeamsChannel SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Adds a channel to an existing Microsoft Teams team. SYNTAX Standard channel Add-PnPTeamsChannel -Team <TeamsTeamPipeBind> -DisplayName <String> [-ChannelType Standard] [-Description <String>] [-IsFavoriteByDefault <Boolean>] Private channel Add-PnPTeamsChannel -Team <TeamsTeamPipeBind> -DisplayName <String> -ChannelType Private -OwnerUPN <String> [-Description <String>] Shared channel Add-PnPTeamsChannel -Team <TeamsTeamPipeBind> -DisplayName <String> -ChannelType Shared -OwnerUPN <String> [-Description <String>] [-IsFavoriteByDefault <Boolean>] DESCRIPTION Allows to add channel to an existing team in Microsoft Teams. By using the IsFavoriteByDefault it is possible to specify if the channel will be visible for members by default. EXAMPLES EXAMPLE 1 Add-PnPTeamsChannel -Team 4efdf392-8225-4763-9e7f-4edeb7f721aa -DisplayName \"My Channel\" -IsFavoriteByDefault $true Adds a new standard channel to the Team specified by its identifier and marks the channel as by default visible for members. EXAMPLE 2 Add-PnPTeamsChannel -Team \"My Team\" -DisplayName \"My standard channel\" Adds a new standard channel to the Team specified by its name. EXAMPLE 3 Add-PnPTeamsChannel -Team \"HR\" -DisplayName \"My private channel\" -ChannelType Private -OwnerUPN user1@domain.com Adds a new private channel to the Team specified by its name and sets the provided user as the owner of the channel. EXAMPLE 4 Add-PnPTeamsChannel -Team \"Logistical Department\" -DisplayName \"My shared channel\" -ChannelType Shared -OwnerUPN user1@domain.com Adds a new shared channel to the Team specified by its name and sets the provided user as the owner of the channel. PARAMETERS -Description An optional description of the channel. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The display name of the new channel. Letters, numbers, and spaces are allowed. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsFavoriteByDefault Allows you to specify if the channel is by default visible for members. This parameter is obsolete. Microsoft Graph API docs mention that it only works when you create a channel in Teams creation request. It will be removed in a future version. Type: Boolean Parameter Sets: Standard channel, Shared channel Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OwnerUPN The User Principal Name (email) of the owner of the channel. Type: String Parameter Sets: Private channel, Shared channel Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ChannelType Allows specifying the type of channel to be created. Possible values are Standard, Private, and Shared. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTeamsTab.html": {
    "href": "cmdlets/Add-PnPTeamsTab.html",
    "title": "Add-PnPTeamsTab | PnP PowerShell",
    "keywords": "Add-PnPTeamsTab SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Adds a tab to an existing Channel. Note that the -ContentUrl is a 'dynamic' parameter and will only be valid for tab types that support it. Also, some -Type values are not configurable due to Microsoft Graph API limitations (i.e.: PowerBI). SYNTAX Add-PnPTeamsTab -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> -DisplayName <String> -Type <TeamTabType> -ContentUrl <String> DESCRIPTION Allows to add a tab to an existing Channel. By using ContentUrl option you may specify the content of the tab. EXAMPLES EXAMPLE 1 Add-PnPTeamsTab -Team \"My Team\" -Channel \"My Channel\" -DisplayName \"My Tab Name\" -Type WebSite -ContentUrl \"https://aka.ms/m365pnp\" Adds a web site tab to the specified channel. EXAMPLE 2 Add-PnPTeamsTab -Team \"My Team\" -Channel \"My Channel\" -DisplayName \"My Tab Name\" -Type PDF -ContentUrl \"https://contoso.sharepoint.com/sites/Marketing/Shared Documents/General/MyFile.pdf\" -EntityId \"null\" Adds the specified PDF file from the \"Documents\" library as a tab. EXAMPLE 3 Add-PnPTeamsTab -Team \"My Team\" -Channel \"My Channel\" -DisplayName \"My Tab Name\" -Type SharePointPageAndList -WebSiteUrl \"https://contoso.sharepoint.com/sites/Marketing/SitePages/Home.aspx\" Adds the specified SharePoint page as a tab in Teams. Note that the ContentUrl will automatically be generated and cannot be specified, and the -WebsiteUrl parameter is only available from version 2.x onwards. EXAMPLE 4 Add-PnPTeamsTab -Team \"My Team\" -Channel \"My Channel\" -DisplayName \"My Excel Tab\" -Type Excel -ContentUrl \"https://contoso.sharepoint.com/sites/Marketing/Shared Documents/My Excel File.csv\" -EntityId 6 Adds the \"My Excel file.csv\" with ID 6 as a tab from the Marketing site. EXAMPLE 5 $PlannerPlan = Get-PnPPlannerPlan -Group $groupId -Identity $PlannerName if(-not $PlannerPlan) { $PlannerPlan = New-PnPPlannerPlan -Group $groupId -Title $PlannerName } $bucket = Add-PnPPlannerBucket -Group $groupId -Plan $PlannerPlan.Id -Name \"Tasks\" Add-PnPPlannerTask -Group $groupId -Plan $PlannerPlan.Id -Bucket $bucket.Id -Title \"plannertaskA\" $teamsChannel = Get-PnPTeamsChannel -Team $groupId -Identity \"General\" $tenant = \"contoso.onmicrosoft.com\" $teamsTab = Add-PnPTeamsTab -Team $groupId -Channel $teamsChannel -DisplayName \"My Tab Name\" -Type Planner -ContentUrl \"https://tasks.office.com/$tenant/Home/PlannerFrame?page=7&planId=$($PlannerPlan.Id)\" Gets the existing Planner if one exists in the Group, otherwise creates a new. Adds a new bucket and creates a few new Tasks. Finally creates a Tab in the channel named \"My Tab Name\" PARAMETERS -Channel Specify the channel id or name of the team to retrieve. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ContentUrl The Url to use to render the content inside the tab within Microsoft Teams. When using Type SharePointPageAndList, the ContentUrl will automatically be generated and cannot be specified. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebsiteUrl The Url to use when the user clicks on the dropdown of the tab in Microsoft Teams and clicks on \"Go to website\". Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName Specify the tab type Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Type Specify the tab type Type: TeamTabType Parameter Sets: (All) Accepted values: WebSite, DocumentLibrary, Wiki, Planner, MicrosoftStream, MicrosoftForms, Word, Excel, PowerPoint, PDF, OneNote, PowerBI, SharePointPageAndList, Custom Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveUrl Specifies the URL to be called by Teams client when a Tab is removed using the Teams Client. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EntityId Specifies the Identifier for the entity hosted by the tab provider. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTeamsTeam.html": {
    "href": "cmdlets/Add-PnPTeamsTeam.html",
    "title": "Add-PnPTeamsTeam | PnP PowerShell",
    "keywords": "Add-PnPTeamsTeam SYNOPSIS Adds a Teams team to an existing, group connected, site collection SYNTAX Add-PnPTeamsTeam [-Connection <PnPConnection>] DESCRIPTION This command allows you to add a Teams team to an existing, Microsoft 365 group connected, site collection. EXAMPLES EXAMPLE 1 Add-PnPTeamsTeam This create a teams team for the connected site collection PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTeamsUser.html": {
    "href": "cmdlets/Add-PnPTeamsUser.html",
    "title": "Add-PnPTeamsUser | PnP PowerShell",
    "keywords": "Add-PnPTeamsUser SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Adds a user to an existing Microsoft Teams instance. SYNTAX User Add-PnPTeamsUser -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> -User <String> -Role <String> Users Add-PnPTeamsUser -Team <TeamsTeamPipeBind> -Users <String[]> -Role <String> DESCRIPTION This cmdlet adds one or more users to an existing Team. EXAMPLES EXAMPLE 1 Add-PnPTeamsUser -Team MyTeam -User john@doe.com -Role Owner Adds a user as an owner to the team. EXAMPLE 2 Add-PnPTeamsUser -Team MyTeam -User john@doe.com -Role Member Adds a user as a member to the team. EXAMPLE 3 Add-PnPTeamsUser -Team MyTeam -Users \"john@doe.com\",\"jane@doe.com\" -Role Member Adds multiple users as members to the team. EXAMPLE 4 Add-PnPTeamsUser -Team MyTeam -User \"jane@doe.com\" -Role Member -Channel Private Adds user as a member to a private channel named Private in MyTeam team. PARAMETERS -Role Specify the role of the user Type: String Parameter Sets: (All) Accepted values: Owner, Member Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Channel Specify the channel id or name of the team to retrieve. Type: TeamsChannelPipeBind Parameter Sets: (User) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User Specify the UPN (e.g. john@doe.com) Type: String Parameter Sets: (User) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Users Specify the users UPN (e.g. john@doe.com, jane@doe.com) Type: String array Parameter Sets: (Users) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTenantCdnOrigin.html": {
    "href": "cmdlets/Add-PnPTenantCdnOrigin.html",
    "title": "Add-PnPTenantCdnOrigin | PnP PowerShell",
    "keywords": "Add-PnPTenantCdnOrigin SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Adds a new origin to the public or private content delivery network (CDN). SYNTAX Add-PnPTenantCdnOrigin -OriginUrl <String> -CdnType <SPOTenantCdnType> [-Connection <PnPConnection>] DESCRIPTION Add a new origin to the public or private CDN, on either Tenant level or on a single Site level. Effectively, a tenant admin points out to a document library, or a folder in the document library and requests that content in that library should be retrievable by using a CDN. You must be a SharePoint Online Administrator and a site collection administrator to run the cmdlet. EXAMPLES EXAMPLE 1 Add-PnPTenantCdnOrigin -OriginUrl /sites/site/subfolder -CdnType Public This example configures a public CDN on site level. PARAMETERS -CdnType Specifies the CDN type. The valid values are: public or private. Type: SPOTenantCdnType Parameter Sets: (All) Accepted values: Public, Private Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OriginUrl Specifies a path to the doc library to be configured. It can be provided in two ways: relative path, or a mask. Relative path depends on the OriginScope. If the originScope is Tenant, a path must be a relative path under the tenant root. If the originScope is Site, a path must be a relative path under the given Site. The path must point to the valid Document Library or a folder with a document library. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTenantRestrictedSearchAllowedList.html": {
    "href": "cmdlets/Add-PnPTenantRestrictedSearchAllowedList.html",
    "title": "Add-PnPTenantRestrictedSearchAllowedList | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Add-PnPTenantRestrictedSearchAllowedList SYNOPSIS Adds site URLs to the allowed list when Restricted SharePoint Search is enabled. The URLs can be provided as a string array or read from a CSV file. SYNTAX Add-PnPTenantRestrictedSearchAllowedList [-SitesListFileUrl <String>] [-SitesList <String[]>] [-ContainsHeaders <SwitchParameter>] [-Connection <PnPConnection>] DESCRIPTION Adds site URLs to the allowed list when Restricted SharePoint Search is enabled. The URLs can be provided directly as a string array or read from a CSV file. At present, a maximum of 100 sites can be added to the allowed list. EXAMPLES EXAMPLE 1 Add-PnPTenantRestrictedSearchAllowedList -SitesListFileUrl \"C:\\temp\\sitelist.csv\" -ContainsHeader Adds site URLs to the allowed list from a CSV file. The first line, which is assumed to be a header, is skipped. Sample CSV file content with Header SiteUrl https://contoso.sharepoint.com/sites/Company311 https://contoso.sharepoint.com/sites/contosoportal EXAMPLE 2 Add-PnPTenantRestrictedSearchAllowedList -SitesListFileUrl \"C:\\temp\\sitelist.csv\" Adds site URLs to the allowed list from a CSV file. Sample CSV file content without Header https://contoso.sharepoint.com/sites/Company311 https://contoso.sharepoint.com/sites/contosoportal EXAMPLE 3 Add-PnPTenantRestrictedSearchAllowedList -SitesList @(\"https://contoso.sharepoint.com/sites/Company311\",\"https://contoso.sharepoint.com/sites/contosoportal\") Adds the specified sites to the allowed list. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SitesListFileUrl Specifies the path of the CSV file that contains a list of site URLs to be added to the allowed list when the tenant is set to Restricted Tenant Search Mode. Type: String Parameter Sets: File Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SitesList Specifies a collection of sites to add to the allowed list. Type: String[] Parameter Sets: SiteList Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Containsheader If specified, this switch skips the first line from the CSV file, which is assumed to be a header. Type: SwitchParamter Parameter Sets: File Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False RELATED LINKS How does Restricted SharePoint Search work? Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTenantSequence.html": {
    "href": "cmdlets/Add-PnPTenantSequence.html",
    "title": "Add-PnPTenantSequence | PnP PowerShell",
    "keywords": "Add-PnPTenantSequence SYNOPSIS Adds a tenant sequence object to a tenant template SYNTAX Add-PnPTenantSequence -Template <ProvisioningHierarchy> -Sequence <ProvisioningSequence> DESCRIPTION Allows to add a tenant sequence object to a tenant template. EXAMPLES EXAMPLE 1 Add-PnPTenantSequence -Template $mytemplate -Sequence $mysequence Adds an existing sequence object to an existing template object EXAMPLE 2 New-PnPTenantSequence -Id \"MySequence\" | Add-PnPTenantSequence -Template $template Creates a new instance of a provisioning sequence object and sets the Id to the value specified, then the sequence is added to an existing template object PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Sequence Optional Id of the sequence Type: ProvisioningSequence Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Template The template to add the sequence to Type: ProvisioningHierarchy Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTenantSequenceSite.html": {
    "href": "cmdlets/Add-PnPTenantSequenceSite.html",
    "title": "Add-PnPTenantSequenceSite | PnP PowerShell",
    "keywords": "Add-PnPTenantSequenceSite SYNOPSIS Adds an existing tenant sequence site object to a tenant template SYNTAX Add-PnPTenantSequenceSite -Site <ProvisioningSitePipeBind> -Sequence <ProvisioningSequence> DESCRIPTION Allows to add an existing tenant sequence site object to a tenant template. EXAMPLES EXAMPLE 1 Add-PnPTenantSequenceSite -Site $myteamsite -Sequence $mysequence Adds an existing site object to an existing template sequence PARAMETERS -Sequence The sequence to add the site to Type: ProvisioningSequence Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Site Type: ProvisioningSitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTenantSequenceSubSite.html": {
    "href": "cmdlets/Add-PnPTenantSequenceSubSite.html",
    "title": "Add-PnPTenantSequenceSubSite | PnP PowerShell",
    "keywords": "Add-PnPTenantSequenceSubSite SYNOPSIS Adds a tenant sequence sub site object to a tenant sequence site object SYNTAX Add-PnPTenantSequenceSubSite -SubSite <TeamNoGroupSubSite> -Site <SiteCollection> DESCRIPTION Allows to add a tenant sequence sub site object to a tenant sequence site object. EXAMPLES EXAMPLE 1 Add-PnPTenantSequenceSubSite -Site $mysite -SubSite $mysubsite Adds an existing subsite object to an existing sequence site object PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site The site to add the subsite to Type: SiteCollection Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -SubSite The subsite to add Type: TeamNoGroupSubSite Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTenantTheme.html": {
    "href": "cmdlets/Add-PnPTenantTheme.html",
    "title": "Add-PnPTenantTheme | PnP PowerShell",
    "keywords": "Add-PnPTenantTheme SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Adds or updates a theme to the tenant. SYNTAX Add-PnPTenantTheme [-Overwrite] -Identity <ThemePipeBind> -Palette <ThemePalettePipeBind> -IsInverted <Boolean> [-Connection <PnPConnection>] DESCRIPTION Adds or updates a theme to the tenant. EXAMPLES EXAMPLE 1 $themepalette = @{ \"themePrimary\" = \"#00ffff\"; \"themeLighterAlt\" = \"#f3fcfc\"; \"themeLighter\" = \"#daffff\"; \"themeLight\" = \"#affefe\"; \"themeTertiary\" = \"#76ffff\"; \"themeSecondary\" = \"#39ffff\"; \"themeDarkAlt\" = \"#00c4c4\"; \"themeDark\" = \"#009090\"; \"themeDarker\" = \"#005252\"; \"neutralLighterAlt\" = \"#f8f8f8\"; \"neutralLighter\" = \"#f4f4f4\"; \"neutralLight\" = \"#eaeaea\"; \"neutralQuaternaryAlt\" = \"#dadada\"; \"neutralQuaternary\" = \"#d0d0d0\"; \"neutralTertiaryAlt\" = \"#c8c8c8\"; \"neutralTertiary\" = \"#a6a6a6\"; \"neutralSecondaryAlt\" = \"#767676\"; \"neutralSecondary\" = \"#666666\"; \"neutralPrimary\" = \"#333\"; \"neutralPrimaryAlt\" = \"#3c3c3c\"; \"neutralDark\" = \"#212121\"; \"black\" = \"#000000\"; \"white\" = \"#fff\"; \"primaryBackground\" = \"#fff\"; \"primaryText\" = \"#333\" } Add-PnPTenantTheme -Identity \"MyCompanyTheme\" -Palette $themepalette -IsInverted $false This example adds a theme to the current tenant. EXAMPLE 2 $themepalette = @{ \"themePrimary\" = \"#00ffff\"; \"themeLighterAlt\" = \"#f3fcfc\"; \"themeLighter\" = \"#daffff\"; \"themeLight\" = \"#affefe\"; \"themeTertiary\" = \"#76ffff\"; \"themeSecondary\" = \"#39ffff\"; \"themeDarkAlt\" = \"#00c4c4\"; \"themeDark\" = \"#009090\"; \"themeDarker\" = \"#005252\"; \"neutralLighterAlt\" = \"#f8f8f8\"; \"neutralLighter\" = \"#f4f4f4\"; \"neutralLight\" = \"#eaeaea\"; \"neutralQuaternaryAlt\" = \"#dadada\"; \"neutralQuaternary\" = \"#d0d0d0\"; \"neutralTertiaryAlt\" = \"#c8c8c8\"; \"neutralTertiary\" = \"#a6a6a6\"; \"neutralSecondaryAlt\" = \"#767676\"; \"neutralSecondary\" = \"#666666\"; \"neutralPrimary\" = \"#333\"; \"neutralPrimaryAlt\" = \"#3c3c3c\"; \"neutralDark\" = \"#212121\"; \"black\" = \"#000000\"; \"white\" = \"#fff\"; \"primaryBackground\" = \"#fff\"; \"primaryText\" = \"#333\" } Add-PnPTenantTheme -Identity \"MyCompanyTheme\" -Palette $themepalette -IsInverted $false -Overwrite This example overwrites an existing theme on the current tenant. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name of the theme to add or update Type: ThemePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -IsInverted If the theme is inverted or not Type: Boolean Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Overwrite Use this parameter to allow existing theme with the same name to be overwritten. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Palette The palette to add. See examples for more information. Type: ThemePalettePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTermToTerm.html": {
    "href": "cmdlets/Add-PnPTermToTerm.html",
    "title": "Add-PnPTermToTerm | PnP PowerShell",
    "keywords": "Add-PnPTermToTerm SYNOPSIS Adds a new term to an existing term. SYNTAX Add-PnPTermToTerm -ParentTermId <Guid> -Name <String> [-Id <Guid>] [-Lcid <Int32>] [-LocalCustomProperties <Hashtable>] [-TermStore <Guid>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet adds a new taxonomy term as a child term to an existing term. EXAMPLES EXAMPLE 1 Add-PnPTermToTerm -ParentTermId 2d1f298b-804a-4a05-96dc-29b667adec62 -Name SubTerm -CustomProperties @{\"Department\"=\"Marketing\"} Creates a new taxonomy child term named \"SubTerm\" in the specified term by id 2d1f298b-804a-4a05-96dc-29b667adec62. EXAMPLE 2 $parentTerm = Get-PnPTerm -Name Marketing -TermSet Departments -TermGroup Corporate Add-PnPTermToTerm -ParentTermId $parentTerm.Id -Name \"Conference Team\" Creates a new taxonomy child term named \"Conference Team\" in the specified term called Marketing which is located in the Departments term set. PARAMETERS -ParentTermId The Id of the parent term. Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Name The name of the term. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Description Descriptive text to help users understand the intended use of this term. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id The Id to use for the term; if not specified, or the empty GUID, a random GUID is generated and used. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid The locale id to use for the term. Defaults to the current locale id. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CustomProperties Custom Properties Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LocalCustomProperties Custom Properties Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPView.html": {
    "href": "cmdlets/Add-PnPView.html",
    "title": "Add-PnPView | PnP PowerShell",
    "keywords": "Add-PnPView SYNOPSIS Adds a view to a list SYNTAX Add-PnPView [-List] <ListPipeBind> -Title <String> [-Query <String>] -Fields <String[]> [-ViewType <ViewType>] [-RowLimit <UInt32>] [-Personal] [-SetAsDefault] [-Paged] [-Aggregations <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to add a new view to a list. EXAMPLES EXAMPLE 1 Add-PnPView -List \"Demo List\" -Title \"Demo View\" -Fields \"Title\",\"Address\" Adds a view named \"Demo view\" to the \"Demo List\" list. EXAMPLE 2 Add-PnPView -List \"Demo List\" -Title \"Demo View\" -Fields \"Title\",\"Address\" -Paged -RowLimit 100 Adds a view named \"Demo view\" to the \"Demo List\" list and makes sure there's paging on this view, setting a RowLimit different than the default (30 items). EXAMPLE 3 Add-PnPView -List \"Demo List\" -Title \"Demo View\" -Fields \"Title\",\"Address\" -Aggregations \"<FieldRef Name='Title' Type='COUNT'/>\" Adds a view named \"Demo view\" to the \"Demo List\" list and sets the totals (aggregations) to Count on the Title field. PARAMETERS -Aggregations A valid XML fragment containing one or more Aggregations Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Fields A list of fields to add. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Paged If specified, the view will have paging. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Personal If specified, a personal view will be created. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Query A valid CAML Query. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RowLimit The row limit for the view. Defaults to 30. Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SetAsDefault If specified, the view will be set as the default view for the list. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the view. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ViewType The type of view to add. Type: ViewType Parameter Sets: (All) Accepted values: None, Html, Grid, Recurrence, Chart, Calendar, Gantt Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPViewsFromXML.html": {
    "href": "cmdlets/Add-PnPViewsFromXML.html",
    "title": "Add-PnPViewsFromXML | PnP PowerShell",
    "keywords": "Add-PnPViewsFromXML SYNOPSIS Adds one or more views to a list from an XML string. SYNTAX Add-PnPViewsFromXML [-List] <ListPipeBind> [-ViewsXML <String>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows the creation of one or more views on a SharePoint Online list based on passing in an XML definition with the view details. EXAMPLES EXAMPLE 1 $viewsXML = @\" <ListViews> <List Type='GenericList'> <View Name='Demo View' ViewTypeKind='Html' OrderedView='TRUE' ViewFields='Author,Created,Editor,Modified' RowLimit='30' DefaultView='TRUE'> <ViewQuery> <OrderBy> <FieldRef Name='ID' Ascending='FALSE'/> </OrderBy> </ViewQuery> </View> </List> </ListViews> \"@ Add-PnPViewsFromXML -List \"Demo List\" -ViewsXML $viewsXML Adds one view named \"Demo view\" to the \"Demo List\" list from the XML string. EXAMPLE 2 $viewsXML = @\" <ListViews> <List Type='GenericList'> <View Name='Demo View' ViewTypeKind='Html' OrderedView='TRUE' ViewFields='Author,Created,Editor,Modified' RowLimit='30' DefaultView='TRUE'> <ViewQuery> <OrderBy> <FieldRef Name='ID' Ascending='FALSE'/> </OrderBy> </ViewQuery> </View> </List> <List Type='GenericList'> <View Name='Created By Me' ViewTypeKind='Html' OrderedView='TRUE' ViewFields='Author,Created,Editor,Modified' RowLimit='30' DefaultView='FALSE'> <ViewQuery> <Where> <Eq> <FieldRef Name='Author' /> <Value Type='Integer'> <UserID Type='Integer' /> </Value> </Eq> </Where> <OrderBy> <FieldRef Name='Created' Ascending='FALSE'/> </OrderBy> </ViewQuery> </View> </List> </ListViews> \"@ Add-PnPViewsFromXML -List \"Demo List\" -ViewsXML $viewsXML Adds two views named \"Demo view\" and \"Created By Me\" to the \"Demo List\" list from the XML string. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID or Url of the list to add the view to. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ViewsXML The XML string of the view(s) that you want to add to the list. Type: string Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPVivaConnectionsDashboardACE.html": {
    "href": "cmdlets/Add-PnPVivaConnectionsDashboardACE.html",
    "title": "Add-PnPVivaConnectionsDashboardACE | PnP PowerShell",
    "keywords": "Add-PnPVivaConnectionsDashboardACE SYNOPSIS Add an Adaptive card extension in the Viva connections dashboard page. This requires that you connect to a SharePoint Home site and have configured the Viva connections page. SYNTAX Add-PnPVivaConnectionsDashboardACE [-Identity <DefaultACE>] [-Title <string>] [-PropertiesJSON <string>] [-Description <string>] [-IconProperty <string>] [-Order <Int>][-CardSize <CardSize>] [-Connection <PnPConnection>] DESCRIPTION Allows to add a new an Adaptive card extension in the Viva Home dashboard page. Before running the command it is required you are connect to a SharePoint Home site and have configured the Viva connections page. EXAMPLES EXAMPLE 1 Add-PnPVivaConnectionsDashboardACE -Identity CardDesigner -Order 3 -Title \"Hello there\" -PropertiesJSON $myProperties -CardSize Large -Description \"ACE description\" -Iconproperty \"https://cdn.hubblecontent.osi.office.net/m365content/publish/002f8bf9-b8ee-4689-ae97-e411b756099d/691108002.jpg\" Add an Adaptive card extension of type Card Designer in the Viva connections dashboard page with Title, Description, IconProperty, Order , CardSize and PropertiesJSON of the ACE. EXAMPLE 2 Add-PnPVivaConnectionsDashboardACE -Identity ThirdPartyApp -Order 1 -Title \"Hello there\" -PropertiesJSON $myProperties -CardSize Medium -Description \"ACE with description\" -Iconproperty \"https://cdn.hubblecontent.osi.office.net/m365content/publish/002f8bf9-b8ee-4689-ae97-e411b756099d/691108002.jpg\" Add an Adaptive card extension of type Third party(custom adaptive card) in the Viva connections dashboard page with Title, Description, IconProperty, Order , CardSize and PropertiesJSON of the ACE. EXAMPLE 3 Add-PnPVivaConnectionsDashboardACE -Identity AssignedTasks -Order 2 -Title \"Tasks\" -PropertiesJSON $myProperties -CardSize Medium -Description \"My Assigned tasks\" -Iconproperty \"https://cdn.hubblecontent.osi.office.net/m365content/publish/002f8bf9-b8ee-4689-ae97-e411b756099d/691108002.jpg\" Add an Adaptive card extension of type AssignedTasks in the Viva connections dashboard page with Title, Description, IconProperty, Order , CardSize and PropertiesJSON of the ACE. PARAMETERS -Identity The Id of the Adaptive Card on the Viva connections dashboard page. Supported values are: Approvals AssignedTasks CardDesigner Shifts TeamsApp ThirdParty WebLink Type: DefaultACE Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The Title of the Adaptive Card extension. Type: string Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The Description of the Adaptive Card extension. Type: string Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IconProperty The Icon used by Adaptive Card extension. Type: string Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PropertiesJSON The properties of the Adaptive Card extension. You can get the properties by executing Get-PnPVivaConnectionsDashboardACE and then use the JSONProperties. Type: string Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Order The Order of appearance of the Adaptive Card extension on the Viva connections dashboard page. The default value is 0. Type: Int Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CardSize The size of the Adaptive Card extension. The available values are Large or Medium. Default card size is Medium Type: CardSize Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPWebPartToWebPartPage.html": {
    "href": "cmdlets/Add-PnPWebPartToWebPartPage.html",
    "title": "Add-PnPWebPartToWebPartPage | PnP PowerShell",
    "keywords": "Add-PnPWebPartToWebPartPage SYNOPSIS Adds a web part to a web part page in a specified zone SYNTAX XML Add-PnPWebPartToWebPartPage -ServerRelativePageUrl <String> -Xml <String> -ZoneId <String> -ZoneIndex <Int32> [-Connection <PnPConnection>] FILE Add-PnPWebPartToWebPartPage -ServerRelativePageUrl <String> -Path <String> -ZoneId <String> -ZoneIndex <Int32> [-Connection <PnPConnection>] DESCRIPTION Allows to add a web part to a web part page. Use the ZoneIndex option to specify the zone. EXAMPLES EXAMPLE 1 Add-PnPWebPartToWebPartPage -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" -Path \"c:\\myfiles\\listview.webpart\" -ZoneId \"Header\" -ZoneIndex 1 This will add the web part as defined by the XML in the listview.webpart file to the specified page in the specified zone and with the order index of 1 EXAMPLE 2 Add-PnPWebPartToWebPartPage -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" -XML $webpart -ZoneId \"Header\" -ZoneIndex 1 This will add the web part as defined by the XML in the $webpart variable to the specified page in the specified zone and with the order index of 1 PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path A path to a web part file on a the file system. Type: String Parameter Sets: FILE Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl Server Relative Url of the page to add the web part to. Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Xml A string containing the XML for the web part. Type: String Parameter Sets: XML Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ZoneId The Zone Id where the web part must be placed Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ZoneIndex The Zone Index where the web part must be placed Type: Int32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPWebPartToWikiPage.html": {
    "href": "cmdlets/Add-PnPWebPartToWikiPage.html",
    "title": "Add-PnPWebPartToWikiPage | PnP PowerShell",
    "keywords": "Add-PnPWebPartToWikiPage SYNOPSIS Adds a web part to a wiki page in a specified table row and column SYNTAX XML Add-PnPWebPartToWikiPage -ServerRelativePageUrl <String> -Xml <String> -Row <Int32> -Column <Int32> [-AddSpace] [-Connection <PnPConnection>] FILE Add-PnPWebPartToWikiPage -ServerRelativePageUrl <String> -Path <String> -Row <Int32> -Column <Int32> [-AddSpace] [-Connection <PnPConnection>] DESCRIPTION Allows to add a web part a wiki page. Use the Row and Column option to specify the location of the web part. EXAMPLES EXAMPLE 1 Add-PnPWebPartToWikiPage -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" -Path \"c:\\myfiles\\listview.webpart\" -Row 1 -Column 1 This will add the web part as defined by the XML in the listview.webpart file to the specified page in the first row and the first column of the HTML table present on the page EXAMPLE 2 Add-PnPWebPartToWikiPage -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" -XML $webpart -Row 1 -Column 1 This will add the web part as defined by the XML in the $webpart variable to the specified page in the first row and the first column of the HTML table present on the page PARAMETERS -AddSpace Must there be an extra space between the web part Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Column Column number where the web part must be placed Type: Int32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path A path to a web part file on a the file system. Type: String Parameter Sets: FILE Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Row Row number where the web part must be placed Type: Int32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl Full server relative url of the web part page, e.g. /sites/demo/sitepages/home.aspx Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Xml A string containing the XML for the web part. Type: String Parameter Sets: XML Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPWebhookSubscription.html": {
    "href": "cmdlets/Add-PnPWebhookSubscription.html",
    "title": "Add-PnPWebhookSubscription | PnP PowerShell",
    "keywords": "Add-PnPWebhookSubscription SYNOPSIS Adds a new Webhook subscription SYNTAX Add-PnPWebhookSubscription [-List <ListPipeBind>] -NotificationUrl <String> [-ExpirationDate <DateTime>] [-ClientState <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to add a new Webhook subscription to a list. EXAMPLES EXAMPLE 1 Add-PnPWebhookSubscription -List MyList -NotificationUrl https://my-func.azurewebsites.net/webhook Add a Webhook subscription for the specified notification Url on the list MyList EXAMPLE 2 Add-PnPWebhookSubscription -List MyList -NotificationUrl https://my-func.azurewebsites.net/webhook -ExpirationDate \"2017-09-01\" Add a Webhook subscription for the specified notification Url on the list MyList with an expiration date set on September 1st, 2017 EXAMPLE 3 Add-PnPWebhookSubscription -List MyList -NotificationUrl https://my-func.azurewebsites.net/webhook -ExpirationDate \"2017-09-01\" -ClientState \"Hello State!\" Add a Webhook subscription for the specified notification Url on the list MyList with an expiration date set on September 1st, 2017 with a specific client state PARAMETERS -ClientState A client state information that will be passed through notifications Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExpirationDate The date at which the Webhook subscription will expire. (Default: 6 months from today) Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name where the Webhook subscription will be added to Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NotificationUrl The URL of the Webhook endpoint that will be notified of the change Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPWikiPage.html": {
    "href": "cmdlets/Add-PnPWikiPage.html",
    "title": "Add-PnPWikiPage | PnP PowerShell",
    "keywords": "Add-PnPWikiPage SYNOPSIS Adds a wiki page SYNTAX WithContent Add-PnPWikiPage -ServerRelativePageUrl <String> -Content <String> [-Connection <PnPConnection>] WithLayout Add-PnPWikiPage -ServerRelativePageUrl <String> -Layout <WikiPageLayout> [-Connection <PnPConnection>] DESCRIPTION Allows to add a wiki page. EXAMPLES EXAMPLE 1 Add-PnPWikiPage -PageUrl '/sites/demo1/pages/wikipage.aspx' -Content 'New WikiPage' Creates a new wiki page '/sites/demo1/pages/wikipage.aspx' and sets the content to 'New WikiPage' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Content Type: String Parameter Sets: WithContent Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Layout Type: WikiPageLayout Parameter Sets: WithLayout Accepted values: OneColumn, OneColumnSideBar, TwoColumns, TwoColumnsHeader, TwoColumnsHeaderFooter, ThreeColumns, ThreeColumnsHeader, ThreeColumnsHeaderFooter, Custom Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl The server relative page URL Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnpTeamsChannelUser.html": {
    "href": "cmdlets/Add-PnpTeamsChannelUser.html",
    "title": "Add-PnPTeamsChannelUser | PnP PowerShell",
    "keywords": "Add-PnPTeamsChannelUser SYNOPSIS Required Permissions Microsoft Graph API: ChannelMember.ReadWrite.All Adds a user to an existing Microsoft Teams private channel. SYNTAX Add-PnPTeamsChannelUser -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> -User <String> -Role <String> DESCRIPTION Allows to add a user to a private channel in Microsoft Teams. EXAMPLES EXAMPLE 1 Add-PnPTeamsChannelUser -Team 4efdf392-8225-4763-9e7f-4edeb7f721aa -Channel \"19:796d063b63e34497aeaf092c8fb9b44e@thread.skype\" -User john@doe.com -Role Owner Adds user as an owner to the private channel. EXAMPLE 2 Add-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Private Channel\" -User john@doe.com -Role Member Adds user as a member to the private channel. PARAMETERS -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Channel The id or name of the channel to retrieve. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User Specify the UPN (e.g. john@doe.com) Type: String Parameter Sets: (User) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Role Specify the role of the user Type: String Parameter Sets: (All) Accepted values: Owner, Member Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Approve-PnPTenantServicePrincipalPermissionRequest.html": {
    "href": "cmdlets/Approve-PnPTenantServicePrincipalPermissionRequest.html",
    "title": "Approve-PnPTenantServicePrincipalPermissionRequest | PnP PowerShell",
    "keywords": "Approve-PnPTenantServicePrincipalPermissionRequest SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Approves a permission request for the current tenant's \"SharePoint Online Client\" service principal SYNTAX Approve-PnPTenantServicePrincipalPermissionRequest -RequestId <Guid> [-Force] [-Connection <PnPConnection>] DESCRIPTION Approves a permission request for the current tenant's \"SharePoint Online Client\" service principal The return value of a successful call is a permission grant object. To get the collection of permission grants for the \"SharePoint Online Client\" service principal, use the Get-PnPTenantServicePrincipalPermissionGrants command. Approving a permission request also removes that request from the list of permission requests. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequestId Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Clear-PnPAzureADGroupMember.html": {
    "href": "cmdlets/Clear-PnPAzureADGroupMember.html",
    "title": "Clear-PnPAzureADGroupMember | PnP PowerShell",
    "keywords": "Clear-PnPAzureADGroupMember SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All, GroupMember.ReadWrite.All Removes all current members from a particular Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. SYNTAX Clear-PnPAzureADGroupMember -Identity <AzureADGroupPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to remove all current members from specified Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. EXAMPLES EXAMPLE 1 Clear-PnPAzureADGroupMember -Identity \"Project Team\" Removes all the current members from the Azure Active Directory group named \"Project Team\". PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Identity of the Azure Active Directory group to remove all members from. Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Clear-PnPAzureADGroupOwner.html": {
    "href": "cmdlets/Clear-PnPAzureADGroupOwner.html",
    "title": "Clear-PnPAzureADGroupOwner | PnP PowerShell",
    "keywords": "Clear-PnPAzureADGroupOwner SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All Removes all current owners from a particular Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. SYNTAX Clear-PnPAzureADGroupOwner -Identity <AzureADGroupPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to remove all current owners from specified Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. EXAMPLES EXAMPLE 1 Clear-PnPAzureADGroupOwner -Identity \"Project Team\" Removes all the current owners from the Azure Active Directory group named \"Project Team\". PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Identity of the Azure Active Directory group to remove all owners from. Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Clear-PnPDefaultColumnValues.html": {
    "href": "cmdlets/Clear-PnPDefaultColumnValues.html",
    "title": "Clear-PnPDefaultColumnValues | PnP PowerShell",
    "keywords": "Clear-PnPDefaultColumnValues SYNOPSIS Clear default column values for a document library SYNTAX Clear-PnPDefaultColumnValues [-List] <ListPipeBind> -Field <FieldPipeBind> [-Folder <String>] [-Connection <PnPConnection>] DESCRIPTION Clear default column values for a document library, per folder, or for the root folder if the folder parameter has not been specified. EXAMPLES EXAMPLE 1 Clear-PnPDefaultColumnValues -List Documents -Field MyField Clears the default value for the field MyField on a library EXAMPLE 2 Clear-PnPDefaultColumnValues -List Documents -Field MyField -Folder A Clears the default value for the field MyField on the folder A on a library PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Field The internal name, id or a reference to a field Type: FieldPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder A library relative folder path, if not specified it will set the default column values on the root folder of the library ('/') Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Name or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Clear-PnPEntraIDGroupMember.html": {
    "href": "cmdlets/Clear-PnPEntraIDGroupMember.html",
    "title": "Clear-PnPEntraIDGroupMember | PnP PowerShell",
    "keywords": "Clear-PnPEntraIDGroupMember SYNOPSIS This is an alias for Clear-PnPAzureADGroupMember. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Clear-PnPEntraIDGroupOwner.html": {
    "href": "cmdlets/Clear-PnPEntraIDGroupOwner.html",
    "title": "Clear-PnPEntraIDGroupOwner | PnP PowerShell",
    "keywords": "Clear-PnPEntraIDGroupOwner SYNOPSIS This is an alias for Clear-PnPAzureADGroupOwner. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Clear-PnPListItemAsRecord.html": {
    "href": "cmdlets/Clear-PnPListItemAsRecord.html",
    "title": "Clear-PnPListItemAsRecord | PnP PowerShell",
    "keywords": "Clear-PnPListItemAsRecord SYNOPSIS Un declares a list item as a record SYNTAX Clear-PnPListItemAsRecord [-List] <ListPipeBind> -Identity <ListItemPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to un declares a list item in a list as a record. EXAMPLES EXAMPLE 1 Clear-PnPListItemAsRecord -List \"Documents\" -Identity 4 Un declares the document in the documents library with id 4 as a record PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Clear-PnPMicrosoft365GroupMember.html": {
    "href": "cmdlets/Clear-PnPMicrosoft365GroupMember.html",
    "title": "Clear-PnPMicrosoft365GroupMember | PnP PowerShell",
    "keywords": "Clear-PnPMicrosoft365GroupMember SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All, GroupMember.ReadWrite.All Removes all current members from a particular Microsoft 365 Group SYNTAX Clear-PnPMicrosoft365GroupMember -Identity <Microsoft365GroupPipeBind> DESCRIPTION Allows to remove all current members from a specified Microsoft 365 Group. EXAMPLES EXAMPLE 1 Clear-PnPMicrosoft365GroupMember -Identity \"Project Team\" Removes all the current members from the Microsoft 365 Group named \"Project Team\" PARAMETERS -Identity The Identity of the Microsoft 365 Group to remove all members from Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Clear-PnPMicrosoft365GroupOwner.html": {
    "href": "cmdlets/Clear-PnPMicrosoft365GroupOwner.html",
    "title": "Clear-PnPMicrosoft365GroupOwner | PnP PowerShell",
    "keywords": "Clear-PnPMicrosoft365GroupOwner SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All Removes all current owners from a particular Microsoft 365 Group (aka Unified Group) SYNTAX Clear-PnPMicrosoft365GroupOwner -Identity <Microsoft365GroupPipeBind> DESCRIPTION Allows to remove all current owners from a specified Microsoft 365 Group. EXAMPLES EXAMPLE 1 Clear-PnPMicrosoft365GroupOwner -Identity \"Project Team\" Removes all the current owners from the Microsoft 365 Group named \"Project Team\" PARAMETERS -Identity The Identity of the Microsoft 365 Group to remove all owners from Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Clear-PnPTenantAppCatalogUrl.html": {
    "href": "cmdlets/Clear-PnPTenantAppCatalogUrl.html",
    "title": "Clear-PnPTenantAppCatalogUrl | PnP PowerShell",
    "keywords": "Clear-PnPTenantAppCatalogUrl SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes the url of the tenant scoped app catalog. It will not delete the site collection itself. SYNTAX Clear-PnPTenantAppCatalogUrl [-Connection <PnPConnection>] DESCRIPTION Allows to remove the url of the tenant scoped app catalog. The app catalog site collection will not be removed. EXAMPLES EXAMPLE 1 Clear-PnPTenantAppCatalogUrl Removes the url of the tenant scoped app catalog PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Clear-PnPTenantRecycleBinItem.html": {
    "href": "cmdlets/Clear-PnPTenantRecycleBinItem.html",
    "title": "Clear-PnPTenantRecycleBinItem | PnP PowerShell",
    "keywords": "Clear-PnPTenantRecycleBinItem SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Permanently deletes a site collection from the tenant scoped recycle bin SYNTAX Clear-PnPTenantRecycleBinItem -Url <String> [-Wait] [-Force] [-Connection <PnPConnection>] DESCRIPTION The Clear-PnPTenantRecycleBinItem cmdlet allows a site collection that has been deleted and still exists in the tenant recycle bin to be permanently deleted from the recycle bin as well. EXAMPLES EXAMPLE 1 Clear-PnPTenantRecycleBinItem -Url \"https://tenant.sharepoint.com/sites/contoso\" This will permanently delete site collection with the url 'https://tenant.sharepoint.com/sites/contoso' from the tenant recycle bin EXAMPLE 2 Clear-PnPTenantRecycleBinItem -Url \"https://tenant.sharepoint.com/sites/contoso\" -Wait This will permanently delete site collection with the url 'https://tenant.sharepoint.com/sites/contoso' from the tenant recycle bin and will wait with executing further PowerShell commands until the operation has completed PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to permanently delete the site collection from the tenant recycle bin Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Url of the site collection to permanently delete from the tenant recycle bin Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait If provided, the PowerShell execution will halt until the operation has completed Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Clear-PnpRecycleBinItem.html": {
    "href": "cmdlets/Clear-PnpRecycleBinItem.html",
    "title": "Clear-PnPRecycleBinItem | PnP PowerShell",
    "keywords": "Clear-PnPRecycleBinItem SYNOPSIS Permanently deletes all or a specific recycle bin item SYNTAX All (Default) Clear-PnPRecycleBinItem [-All] [-SecondStageOnly] [-Force] [-RowLimit <Int32>] [-Connection <PnPConnection>] Identity Clear-PnPRecycleBinItem -Identity <RecycleBinItemPipeBind> [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to permanently delete items from recycle bin. By default the command will delete all items but it is allowed to specify the items by using the Identity or RowLimit options. EXAMPLES EXAMPLE 1 Get-PnPRecycleBinItem | Where-Object LeafName -like \"*.docx\" | Clear-PnPRecycleBinItem Permanently deletes all the items in the first and second stage recycle bins of which the file names have the .docx extension EXAMPLE 2 Clear-PnPRecycleBinItem -Identity 72e4d749-d750-4989-b727-523d6726e442 Permanently deletes the recycle bin item with Id 72e4d749-d750-4989-b727-523d6726e442 from the recycle bin EXAMPLE 3 Clear-PnPRecycleBinItem -Identity $item -Force Permanently deletes the recycle bin item stored under variable $item from the recycle bin without asking for confirmation from the end user first EXAMPLE 4 Clear-PnPRecycleBinItem -All -RowLimit 10000 Permanently deletes up to 10,000 items in the recycle bin PARAMETERS -All Clears all items Type: SwitchParameter Parameter Sets: All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to clear the recycle bin Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Id of the recycle bin item or the recycle bin item itself to permanently delete Type: RecycleBinItemPipeBind Parameter Sets: Identity Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -RowLimit Limits deletion to specified number of items Type: Int32 Parameter Sets: All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SecondStageOnly If provided, only all the items in the second stage recycle bin will be cleared Type: SwitchParameter Parameter Sets: All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Connect-PnPOnline.html": {
    "href": "cmdlets/Connect-PnPOnline.html",
    "title": "Connect-PnPOnline | PnP PowerShell",
    "keywords": "Connect-PnPOnline SYNOPSIS Connect to a SharePoint site SYNTAX Interactive for Multi Factor Authentication (Default) Connect-PnPOnline -Interactive [-ReturnConnection] -Url <String> [-PersistLogin] [-CreateDrive] [-DriveName <String>] [-ClientId <String>] [-AzureEnvironment <AzureEnvironment>] [-TenantAdminUrl <String>] [-ForceAuthentication] [-ValidateConnection] [-MicrosoftGraphEndPoint <string>] [-AzureADLoginEndPoint <string>] [-Connection <PnPConnection>] Credentials Connect-PnPOnline [-ReturnConnection] [-Url] <String> [-Credentials <CredentialPipeBind>] [-CurrentCredentials] [-PersistLogin] [-CreateDrive] [-DriveName <String>] [-ClientId <String>] [-RedirectUri <String>] [-AzureEnvironment <AzureEnvironment>] [-TenantAdminUrl <String>] [-TransformationOnPrem] [-ValidateConnection] [-MicrosoftGraphEndPoint <string>] [-AzureADLoginEndPoint <string>] [-Connection <PnPConnection>] SharePoint ACS (Legacy) App Only Connect-PnPOnline [-ReturnConnection] [-Url] <String> [-Realm <String>] -ClientSecret <String> [-CreateDrive] [-DriveName <String>] -ClientId <String> [-AzureEnvironment <AzureEnvironment>] [-TenantAdminUrl <String>] [-ValidateConnection] [-MicrosoftGraphEndPoint <string>] [-AzureADLoginEndPoint <string>] [-Connection <PnPConnection>] App-Only with Azure Active Directory Connect-PnPOnline [-ReturnConnection] [-Url] <String> [-CreateDrive] [-DriveName <String>] -ClientId <String> -Tenant <String> [-CertificatePath <String>] [-CertificateBase64Encoded <String>] [-CertificatePassword <SecureString>] [-AzureEnvironment <AzureEnvironment>] [-TenantAdminUrl <String>] [-ValidateConnection] [-MicrosoftGraphEndPoint <string>] [-AzureADLoginEndPoint <string>] [-Connection <PnPConnection>] App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint Connect-PnPOnline [-ReturnConnection] [-Url] <String> [-CreateDrive] [-DriveName <String>] -ClientId <String> -Tenant <String> -Thumbprint <String> [-AzureEnvironment <AzureEnvironment>] [-TenantAdminUrl <String>] [-ValidateConnection] [-MicrosoftGraphEndPoint <string>] [-AzureADLoginEndPoint <string>] [-Connection <PnPConnection>] DeviceLogin Connect-PnPOnline [-ReturnConnection] [-Url] <String> [-PersistLogin] [-CreateDrive] [-DriveName <String>] [-DeviceLogin] [-ClientId <String>] [-AzureEnvironment <AzureEnvironment>] [-ValidateConnection] [-MicrosoftGraphEndPoint <string>] [-AzureADLoginEndPoint <string>] [-Connection <PnPConnection>] On-premises login for page transformation from on-premises SharePoint to SharePoint Online Connect-PnPOnline -Url <String> -TransformationOnPrem [-CurrentCredential] Access Token Connect-PnPOnline -Url <String> -AccessToken <String> [-AzureEnvironment <AzureEnvironment>] [-MicrosoftGraphEndPoint <string>] [-AzureADLoginEndPoint <string>] [-ReturnConnection] System Assigned Managed Identity Connect-PnPOnline [-Url <String>] -ManagedIdentity [-ReturnConnection] User Assigned Managed Identity by Client Id Connect-PnPOnline [-Url <String>] -ManagedIdentity -UserAssignedManagedIdentityClientId <String> [-ReturnConnection] User Assigned Managed Identity by Principal Id Connect-PnPOnline [-Url <String>] -ManagedIdentity -UserAssignedManagedIdentityObjectId <String> [-ReturnConnection] User Assigned Managed Identity by Azure Resource Id Connect-PnPOnline [-Url <String>] -ManagedIdentity -UserAssignedManagedIdentityAzureResourceId <String> [-ReturnConnection] Environment Variable Connect-PnPOnline [-ReturnConnection] [-Url] <String> [-EnvironmentVariable] [-CurrentCredentials] [-CreateDrive] [-DriveName <String>] [-RedirectUri <String>] [-AzureEnvironment <AzureEnvironment>] [-TenantAdminUrl <String>] [-TransformationOnPrem] [-ValidateConnection] [-MicrosoftGraphEndPoint <string>] [-AzureADLoginEndPoint <string>] [-Connection <PnPConnection>] Azure AD Workload Identity Connect-PnPOnline [-ReturnConnection] [-ValidateConnection] [-Url] <String> [-AzureADWorkloadIdentity] [-Connection <PnPConnection>] OS login Connect-PnPOnline -OSLogin [-ReturnConnection] [-Url] <String> [-PersistLogin] [-CreateDrive] [-DriveName <String>] [-ClientId <String>] [-AzureEnvironment <AzureEnvironment>] [-TenantAdminUrl <String>] [-ForceAuthentication] [-ValidateConnection] [-MicrosoftGraphEndPoint <string>] [-AzureADLoginEndPoint <string>] [-Connection <PnPConnection>] DESCRIPTION Connects to a SharePoint site or another API and creates a context that is required for the other PnP Cmdlets. See https://pnp.github.io/powershell/articles/connecting.html for more information on the options to connect. EXAMPLES EXAMPLE 1 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" Connect to SharePoint prompting for the username and password. When a generic credential is added to the Windows Credential Manager with https://contoso.sharepoint.com, PowerShell will not prompt for username and password and use those stored credentials instead. You will have to register your own App first, by means of Register-PnPEntraIDApp to use this method. You will also have to provide the -ClientId parameter starting September 9, 2024. Alternatively, create an environment variable, call it ENTRAID_APP_ID or ENTRAID_CLIENT_ID and set the value to the app id you created EXAMPLE 2 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -Credentials (Get-Credential) Connect to SharePoint prompting for the username and password to use to authenticate. EXAMPLE 3 Connect-PnPOnline -Url \"https://contoso.sharepoint.de\" -ClientId 344b8aab-389c-4e4a-8fa1-4c1ae2c0a60d -ClientSecret $clientSecret This will authenticate you to the site using Legacy ACS authentication EXAMPLE 4 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -DeviceLogin -ClientId 6c5c98c7-e05a-4a0f-bcfa-0cfc65aa1f28 This will authenticate you using the specified Entra ID App registration. Alternatively, create an environment variable, call it ENTRAID_APP_ID or ENTRAID_CLIENT_ID and set the value to the app id you created. A browser window will automatically open and the code you need to enter will be automatically copied to your clipboard. EXAMPLE 5 $password = (ConvertTo-SecureString -AsPlainText 'myprivatekeypassword' -Force) Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -ClientId 6c5c98c7-e05a-4a0f-bcfa-0cfc65aa1f28 -CertificatePath 'c:\\mycertificate.pfx' -CertificatePassword $password -Tenant 'contoso.onmicrosoft.com' Connects using an Azure Active Directory registered application using a locally available certificate containing a private key. See https://learn.microsoft.com/sharepoint/dev/solution-guidance/security-apponly-azuread for a sample on how to get started. EXAMPLE 6 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -ClientId 6c5c98c7-e05a-4a0f-bcfa-0cfc65aa1f28 -Tenant 'contoso.onmicrosoft.com' -Thumbprint 34CFAA860E5FB8C44335A38A097C1E41EEA206AA Connects to SharePoint using app-only tokens via an app's declared permission scopes. See https://github.com/SharePoint/PnP-PowerShell/tree/master/Samples/SharePoint.ConnectUsingAppPermissions for a sample on how to get started. Ensure you have imported the private key certificate, typically the .pfx file, into the Windows Certificate Store for the certificate with the provided thumbprint. EXAMPLE 7 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -ClientId 6c5c98c7-e05a-4a0f-bcfa-0cfc65aa1f28 -CertificateBase64Encoded $base64encodedstring -Tenant 'contoso.onmicrosoft.com' Connects using an Azure Active Directory registered application using a certificate with a private key that has been base64 encoded. See https://learn.microsoft.com/sharepoint/dev/solution-guidance/security-apponly-azuread for a sample on how to get started. EXAMPLE 8 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -Interactive -ClientId 6c5c98c7-e05a-4a0f-bcfa-0cfc65aa1f28 Connects to the Azure AD, acquires an access token and allows PnP PowerShell to access both SharePoint and the Microsoft Graph. Notice that you will have to register your own App first, by means of Register-PnPEntraIDApp to use this method. You will also have to provide the -ClientId parameter starting September 9, 2024. Alternatively, create an environment variable, call it ENTRAID_APP_ID or ENTRAID_CLIENT_ID and set the value to the app id you created. If you use -Interactive and this environment variable is present you will not have to use -ClientId. EXAMPLE 9 Connect-PnPOnline -Url \"https://portal.contoso.com\" -TransformationOnPrem -CurrentCredential Connects to on-premises SharePoint 2013, 2016 or 2019 site with the current user's on-premises Windows credential (e.g. domain\\user). This option is only supported for being able to transform on-premises classic wiki, webpart, blog and publishing pages into modern pages in a SharePoint Online site. Although other PnP cmdlets might work as well, they're officially not supported for being used in an on-premises context. See http://aka.ms/sharepoint/modernization/pages for more details on page transformation. EXAMPLE 10 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -ManagedIdentity Get-PnPTeamsTeam Connects using a system assigned managed identity to Microsoft Graph. Using this way of connecting only works with environments that support managed identities: Azure Functions, Azure Automation Runbooks and the Azure Cloud Shell. Read up on this article how it can be used. EXAMPLE 11 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -ManagedIdentity -UserAssignedManagedIdentityObjectId 363c1b31-6872-47fd-a616-574d3aec2a51 Get-PnPList Connects using an user assigned managed identity with object/principal ID 363c1b31-6872-47fd-a616-574d3aec2a51 to SharePoint Online. Using this way of connecting only works with environments that support managed identities: Azure Functions, Azure Automation Runbooks and the Azure Cloud Shell. Read up on this article how it can be used. EXAMPLE 12 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -AccessToken $token This method assumes you have acquired a valid OAuth2 access token from Azure AD with the correct audience and permissions set. Using this method PnP PowerShell will not acquire tokens dynamically and if the token expires (typically after 1 hour) cmdlets will fail to work using this method. EXAMPLE 13 Connect-PnPOnline -Url contoso.sharepoint.com -EnvironmentVariable -Tenant 'contoso.onmicrosoft.com' This example uses the AZURE_CLIENT_CERTIFICATE_PATH and AZURE_CLIENT_CERTIFICATE_PASSWORD environment variable values to authenticate. The AZURE_CLIENT_ID environment variable must be present and Tenant parameter value must be provided. If these environment variables are not present, it will try to find ENTRAID_APP_CERTIFICATE_PATH or ENTRAID_CLIENT_CERTIFICATE_PATH and for certificate password use ENTRAID_APP_CERTIFICATE_PASSWORD or ENTRAID_CLIENT_CERTIFICATE_PASSWORD as fallback. EXAMPLE 14 Connect-PnPOnline -Url contoso.sharepoint.com -EnvironmentVariable This example uses the AZURE_USERNAME and AZURE_PASSWORD environment variables as credentials to authenticate. If these environment variables are not available, it will use ENTRAID_USERNAME and ENTRAID_PASSWORD environment variables as fallback. If AZURE_CLIENT_ID is not present, alternatively it will try to use ENTRAID_APP_ID or ENTRAID_CLIENT_ID environment variables as fallback. This method assumes you have the necessary environment variables available. For more information about the required environment variables, please refer to this article, Azure.Identity Environment Variables here. So, when using -EnvironmentVariable method for authenticating, we will require AZURE_CLIENT_CERTIFICATE_PATH, AZURE_CLIENT_CERTIFICATE_PASSWORD and AZURE_CLIENT_ID environment variables for using the service principal with certificate method for authentication. If AZURE_USERNAME, AZURE_PASSWORD and AZURE_CLIENT_ID, we will use these environment variables and authenticate using credentials flow. If ENTRAID_USERNAME, ENTRAID_PASSWORD and ENTRAID_APP_ID , we will use these environment variables and authenticate using credentials flow. We support only Service principal with certificate and Username with password mode for authentication. Configuration will be attempted in that order. For example, if values for a certificate and username+password are both present, the client certificate method will be used. EXAMPLE 15 Connect-PnPOnline -Url contoso.sharepoint.com -AzureEnvironment Custom -MicrosoftGraphEndPoint \"custom.graph.microsoft.com\" -AzureADLoginEndPoint \"https://custom.login.microsoftonline.com\" Use this method to connect to a custom Azure Environment. You can also specify the MicrosoftGraphEndPoint and AzureADLoginEndPoint parameters if applicable. If specified, then these values will be used to make requests to Graph and to retrieve access token. EXAMPLE 16 Connect-PnPOnline -Url contoso.sharepoint.com -AzureADWorkloadIdentity This example uses Azure AD Workload Identity to retrieve access tokens. For more information about this, please refer to this article, Azure AD Workload Identity. We are following the guidance mentioned in this sample to retrieve the access tokens. EXAMPLE 17 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -ClientId 6c5c98c7-e05a-4a0f-bcfa-0cfc65aa1f28 -OSLogin Connects to the Azure AD with WAM (aka native Windows authentication prompt), acquires an access token and allows PnP PowerShell to access both SharePoint and the Microsoft Graph. Notice that you will have to register your own App first, by means of Register-PnPEntraIDAdd to use this method. You will also have to provide the -ClientId parameter starting September 9, 2024. Alternatively, create an environment variable, call it ENTRAID_APP_ID or ENTRAID_CLIENT_ID and set the value to the app id you created. WAM is a more secure & faster way of authenticating in Windows OS. It supports Windows Hello, FIDO keys , conditional access policies and more. EXAMPLE 18 $keyStorageflags = [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::MachineKeySet -bor [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::PersistKeySet Connect-PnPOnline -Url \"contoso.sharepoint.com\" -ClientId 6c5c98c7-e05a-4a0f-bcfa-0cfc65aa1f28 -CertificateBase64Encoded $base64encodedstring -X509KeyStorageFlags $keyStorageflags -Tenant 'contoso.onmicrosoft.com' Connects using an Azure Active Directory registered application using a certificate with a private key that has been base64 encoded. See Security App-only EntraId guidance for a sample on how to get started. See X509 key storage flags for information on how to configure key storage when creating the certificate. EXAMPLE 19 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -Credentials \"https://contoso.sharepoint.com\" Connect to SharePoint using Credentials (username and password) from Credential Manager (Windows) or Keychain (Mac) with the specified name to use to authenticate. On Windows, this entry needs to be under \"Generic Credentials\". PARAMETERS -AccessToken Using this parameter you can provide your own access token. Notice that it is recommend to use one of the other connection methods as this will limits the offered functionality on PnP PowerShell. For instance if the token expires (typically after 1 hour) will not be able to acquire a new valid token, which the other connection methods do allow. You are responsible for providing your own valid access token when using this parameter, for the correct audience, with the correct permissions scopes. Type: String Parameter Sets: Access Token Aliases: Required: True Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -AzureEnvironment The Azure environment to use for authentication, the defaults to 'Production' which is the main Azure environment. Type: AzureEnvironment Parameter Sets: Credentials, SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, DeviceLogin, Interactive, Access Token, Environment Variable, Managed Identity Aliases: Accepted values: Production, PPE, China, Germany, USGovernment, USGovernmentHigh, USGovernmentDoD, Custom Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CertificatePassword Password to the certificate (*.pfx) Type: SecureString Parameter Sets: App-Only with Azure Active Directory Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CertificatePath Path to the certificate containing the private key (*.pfx) Type: String Parameter Sets: App-Only with Azure Active Directory Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientId The Client ID of the Azure AD Application Type: String Parameter Sets: Credentials, DeviceLogin, Interactive Aliases: ApplicationId Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False Type: String Parameter Sets: SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSecret The client secret to use. When using this, technically an Azure Access Control Service (ACS) authentication will take place. This effectively means only cmdlets that are connecting to SharePoint Online will work. Cmdlets using Microsoft Graph or any other API behind the scenes will not work. Type: String Parameter Sets: SharePoint ACS (Legacy) App Only Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be reused by the new connection. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. When passed in, the ClientId/AppId used for the passed in connection will be used for the new connection. It will override any -ClientId or -AppId parameter passed in. Type: PnPConnection Parameter Sets: Credentials, SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, DeviceLogin, Interactive login for Multi Factor Authentication, Environment Variable Required: False Position: Named Default value: PnPConnection.Current Accept pipeline input: False Accept wildcard characters: False -CreateDrive If you want to create a PSDrive connected to the URL Type: SwitchParameter Parameter Sets: Credentials, SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, DeviceLogin, Web Login for Multi Factor Authentication, Interactive for Multi Factor Authentication, Environment Variable Aliases: Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -Credentials Credentials of the user to connect with. Either specify a PSCredential object or a string. In case of a string value a lookup will be done to the Generic Credentials section of the Windows Credentials in the Windows Credential Manager for the correct credentials. Type: CredentialPipeBind Parameter Sets: Credentials Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CurrentCredentials Use credentials of the currently logged in user. Applicable exclusively when connecting to on premises SharePoint Server via PnP. Switch parameter. Type: CredentialPipeBind Parameter Sets: Credentials Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DriveName Name of the PSDrive to create (default: SPO) Type: String Parameter Sets: Credentials, SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, DeviceLogin, Web Login for Multi Factor Authentication, Interactive for Multi Factor Authentication, Environment Variable Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DeviceLogin Log in using the Device Code flow. You will be asked to consent to: Read and write managed metadata Have full control of all site collections Read user profiles Invite guest users to the organization Read and write all groups Read and write directory data Read and write identity providers Access the directory as you Type: SwitchParameter Parameter Sets: DeviceLogin Required: True Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -PersistLogin Persist the current access token and related information in a locally stored cache. This cache will be retained between PowerShell sessions and will also be available after a reboot. You only need to provide this switch one time on Connect-PnPOnline cmdlet, it will after that retain the information and reuse it for new connections to the same tenant. Notice that while using a cached token, if you change the permissions of an application registration, the token associated with that registration will not be updated automatically in the cache. You will have to clear the cache entry first and reauthenticate: use Disconnect-PnPOnline -ClearPersistedLogin Type: SwitchParameter Parameter Sets: Credentials, DeviceLogin, Interactive, OSLogin Required: True Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -Realm Authentication realm. If not specified will be resolved from the url specified. Type: String Parameter Sets: SharePoint ACS (Legacy) App Only Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RedirectUri The Redirect URI of the Azure AD Application Type: String Parameter Sets: Credentials Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ReturnConnection Returns the connection for use with the -Connection parameter on cmdlets. It will not touch the current connection which can be established by omitting this parameter. Type: SwitchParameter Parameter Sets: Credentials, SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, DeviceLogin, Web Login for Multi Factor Authentication, Interactive for Multi Factor Authentication, Access Token, Environment Variable, Azure AD Workload Identity Aliases: Required: False Position: Named Default value: False Accept pipeline input: True (ByValue) Accept wildcard characters: False -Tenant The Azure Active Directory tenant name, e.g. mycompany.onmicrosoft.com or mycompany.com if you have added custom domains to your tenant Type: String Parameter Sets: App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, Environment Variable Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TenantAdminUrl The url to the Tenant Admin site. If not specified, the cmdlets will assume to connect automatically to https://[tenantname]-admin.sharepoint.com where appropriate. Type: String Parameter Sets: Credentials, SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, Web Login for Multi Factor Authentication, Interactive for Multi Factor Authentication, Environment Variable Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Thumbprint The thumbprint of the certificate containing the private key registered with the application in Azure Active Directory Type: String Parameter Sets: App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The Url of the site collection or subsite to connect to, i.e. tenant.sharepoint.com, https://tenant.sharepoint.com, tenant.sharepoint.com/sites/hr, etc. Type: String Parameter Sets: Credentials, SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, DeviceLogin, Web Login for Multi Factor Authentication, Interactive for Multi Factor Authentication, Access Token, Environment Variable, Azure AD Workload Identity Aliases: Required: True (Except when using -ManagedIdentity and -AzureADWorkloadIdentity) Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ValidateConnection When provided, the cmdlet will check to ensure the SharePoint Online site specified through -Url exists and if not, will throw an exception. If you omit this flag or set it to $false, it will blindly set up a connection without validating that the site actually exists. Making use of this option does make one extra call on the connection attempt, so it is recommended to only use it in scenarios where you know the site you're trying to connect o may not exist and would like to have feedback on this during the connect. Type: SwitchParameter Parameter Sets: Credentials, SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, DeviceLogin, Web Login for Multi Factor Authentication, Interactive for Multi Factor Authentication, Access Token, Environment Variable, Azure AD Workload Identity Aliases: Required: False Default value: False Accept pipeline input: False Accept wildcard characters: False -TransformationOnPrem If you want to the use page transformation cmdlets, setting this switch will allow you to connect to an on-prem server. Notice that this -only- applies to Transformation cmdlets. Type: SwitchParameter Parameter Sets: Credentials, Environment Variable Aliases: Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False Type: String Parameter Sets: Web Login for Multi Factor Authentication Aliases: Required: False Position: Named Default value: /_layouts/15/settings.aspx Accept pipeline input: False Accept wildcard characters: False -Interactive Connects to the Entra ID (Azure AD) using interactive login, allowing you to authenticate using multi-factor authentication. Type: SwitchParameter Parameter Sets: Interactive for Multi Factor Authentication Aliases: Required: True Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -ForceAuthentication Will clear the stored authentication information when using Interactive login (all platforms) and allows you to authenticate again towards a site with different credentials. Type: SwitchParameter Parameter Sets: Web Login for Multi Factor Authentication, Interactive for Multi Factor Authentication Aliases: Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -ManagedIdentity Connects using an Azure Managed Identity. For use with Azure Functions, Azure Automation Runbooks (if configured to use a managed identity) or Azure Cloud Shell only. This method will acquire a token using the built-in endpoints in the Azure Cloud Shell, Azure Automation Runbooks and Azure Functions. Read up on the documentation on how to make use of this option. Type: SwitchParameter Parameter Sets: System Assigned Managed Identity, User Assigned Managed Identity by Client Id, User Assigned Managed Identity by Principal Id, User Assigned Managed Identity by Azure Resource Id Aliases: Required: True Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -UserAssignedManagedIdentityObjectId Can be used in combination with -ManagedIdentity to specify the object/principal id of the user assigned managed identity to use. Type: String Parameter Sets: User Assigned Managed Identity by Principal Id Aliases: UserAssignedManagedIdentityPrincipalId Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -UserAssignedManagedIdentityClientId Can be used in combination with -ManagedIdentity to specify the client id of the user assigned managed identity to use. Type: String Parameter Sets: User Assigned Managed Identity by Client Id Aliases: Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -UserAssignedManagedIdentityAzureResourceId Can be used in combination with -ManagedIdentity to specify the Azure Resource ID of the user assigned managed identity to use. Type: String Parameter Sets: User Assigned Managed Identity by Azure Resource Id Aliases: Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -CertificateBase64Encoded Specify a base64 encoded string as representing the private certificate. Type: String Parameter Sets: App-Only with Azure Active Directory Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while going through setting up a connection. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnvironmentVariable Connects using the necessary environment variables. For more information the required environment variables, please refer to this article, Azure.Identity Environment Variables here. We support only Service principal with certificate and Username with password mode for authentication. Configuration will be attempted in that order. For example, if values for a certificate and username+password are both present, the client certificate method will be used. By default, it will use the -ClientId specified in AZURE_CLIENT_ID environment variable. Type: SwitchParameter Parameter Sets: Environment Variable Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MicrosoftGraphEndPoint Custom Microsoft Graph endpoint to be used if we are using Azure Custom environment. This will only work if AzureEnvironment parameter value is set to Custom. Type: String Parameter Sets: Credentials, SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, DeviceLogin, Interactive, Access Token, Environment Variable Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AzureADLoginEndPoint Custom Azure AD login endpoint to be used if we are using Azure Custom environment to retrieve access token. This will only work if AzureEnvironment parameter value is set to Custom. Type: String Parameter Sets: Credentials, SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, DeviceLogin, Interactive, Access Token, Environment Variable Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AzureADWorkloadIdentity Connects using the Azure AD Workload Identity. Type: SwitchParameter Parameter Sets: Azure AD Workload Identity Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OSLogin Connects using Web Account Manager (WAM). This works only on Windows machines, on other OS will open browser. Use this to open the native Windows authentication prompt. It supports Windows Hello, conditional access policies, FIDO keys and other OS integration auth options. Requires that the Entra ID app registration have ms-appx-web://microsoft.aad.brokerplugin/{client_id} as a redirect URI. For more information, visit this link. Type: SwitchParameter Parameter Sets: OS login Aliases: Required: True Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -X509KeyStorageFlags Defines where and how to import the private key of an X.509 certificate. This enumeration supports a bitwise combination of its member values. Type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags Parameter Sets: App-Only with Azure Active Directory Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Convert-PnPFile.html": {
    "href": "cmdlets/Convert-PnPFile.html",
    "title": "Convert-PnPFile | PnP PowerShell",
    "keywords": "Convert-PnPFile SYNOPSIS Converts a file to another format SYNTAX Save to local path Convert-PnPFile -Url <String> -Path <String> [-Force] Return as memorystream Convert-PnPFile -Url <String> -AsMemoryStream Save to SharePoint Online (Same SiteCollection) Convert-PnPFile -Url <String> -Folder <String> DESCRIPTION Allows converting of a file from SharePoint Online. The file contents can either be directly saved to local disk, or stored in memory for further processing, or Can be uploaded back to SharePoint Online SiteCollection EXAMPLES EXAMPLE 1 Convert-PnPFile -Url \"/sites/demo/Shared Documents/Document.docx\" -AsMemoryStream Retrieves the file and converts to PDF, and outputs its content to the console as a Memory Stream EXAMPLE 2 Convert-PnPFile -Url \"/sites/demo/Shared Documents/Document.docx\" Retrieves the file and converts to PDF, and outputs its content to the console as a Memory Stream EXAMPLE 3 Convert-PnPFile -Url \"/sites/demo/Shared Documents/Document.docx\" -Path \"C:\\Temp\" Retrieves the file and converts to PDF, and save it to the given local path EXAMPLE 4 Convert-PnPFile -Url \"/sites/demo/Shared Documents/Document.docx\" -Path \"C:\\Temp\" -Force Retrieves the file and converts to PDF, and save it to the given local path. Force parameter will override the existing file in the location where the document gets saved. EXAMPLE 5 Convert-PnPFile -Url \"/sites/demo/Shared Documents/Test/Book.xlsx\" -Folder \"/sites/demo/Shared Documents/Archive\" Retrieves the file and converts to PDF, and save it to the given Document library (Folder) in SharePoint Online (same site collection) EXAMPLE 6 Convert-PnPFile -Url \"/sites/demo/Shared Documents/Test/Book.png\" -ConvertToFormat Jpg -Folder \"/sites/demo/Shared Documents/Archive\" Retrieves the file and converts to JPG, and save it to the given Document library (Folder) in SharePoint Online (same site collection) PARAMETERS -Url The URL (server or site relative) to the file Type: String Parameter Sets: (All) Aliases: ServerRelativeUrl, SiteRelativeUrl Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ConvertToFormat The format to which you want the file to be converted. Default is PDF. The following values are valid transformation targets and their supported source extensions: Target Description Supported source extensions glb Converts the item into GLB format cool, fbx, obj, ply, stl, 3mf html Converts the item into HTML format eml, md, msg jpg Converts the item into JPG format 3g2, 3gp, 3gp2, 3gpp, 3mf, ai, arw, asf, avi, bas, bash, bat, bmp, c, cbl, cmd, cool, cpp, cr2, crw, cs, css, csv, cur, dcm, dcm30, dic, dicm, dicom, dng, doc, docx, dwg, eml, epi, eps, epsf, epsi, epub, erf, fbx, fppx, gif, glb, h, hcp, heic, heif, htm, html, ico, icon, java, jfif, jpeg, jpg, js, json, key, log, m2ts, m4a, m4v, markdown, md, mef, mov, movie, mp3, mp4, mp4v, mrw, msg, mts, nef, nrw, numbers, obj, odp, odt, ogg, orf, pages, pano, pdf, pef, php, pict, pl, ply, png, pot, potm, potx, pps, ppsx, ppsxm, ppt, pptm, pptx, ps, ps1, psb, psd, py, raw, rb, rtf, rw1, rw2, sh, sketch, sql, sr2, stl, tif, tiff, ts, txt, vb, webm, wma, wmv, xaml, xbm, xcf, xd, xml, xpm, yaml, yml pdf Converts the item into PDF format doc, docx, epub, eml, htm, html, md, msg, odp, ods, odt, pps, ppsx, ppt, pptx, rtf, tif, tiff, xls, xlsm, xlsx For more information, check this link. Type: String Parameter Sets: (All) Required: False Position: Named Default value: Pdf Accept pipeline input: False Accept wildcard characters: False -AsMemoryStream Type: SwitchParameter Parameter Sets: Return as memorystream Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Local path where the file should be saved Type: String Parameter Sets: Save to local path Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the file if it exists. Type: SwitchParameter Parameter Sets: Save to local path, Upload to SharePoint Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The destination library in the site Type: FolderPipeBind Parameter Sets: (UPLOADTOSHAREPOINT) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Convert-PnPFolderToSiteTemplate.html": {
    "href": "cmdlets/Convert-PnPFolderToSiteTemplate.html",
    "title": "Convert-PnPFolderToSiteTemplate | PnP PowerShell",
    "keywords": "Convert-PnPFolderToSiteTemplate SYNOPSIS Creates a pnp package file of an existing template xml, and includes all files in the current folder SYNTAX Convert-PnPFolderToSiteTemplate [-Out] <String> [[-Folder] <String>] [-Force] DESCRIPTION Allows to convert the current folder together with all files, to a pnp package file of and existing template xml. EXAMPLES EXAMPLE 1 Convert-PnPFolderToSiteTemplate -Out template.pnp Creates a pnp package file of an existing template xml, and includes all files in the current folder EXAMPLE 2 Convert-PnPFolderToSiteTemplate -Out template.pnp -Folder c:\\temp Creates a pnp package file of an existing template xml, and includes all files in the c:\\temp folder PARAMETERS -Folder Folder to process. If not specified the current folder will be used. Type: String Parameter Sets: (All) Required: False Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out Filename to write to, optionally including full path. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Convert-PnPSiteTemplate.html": {
    "href": "cmdlets/Convert-PnPSiteTemplate.html",
    "title": "Convert-PnPSiteTemplate | PnP PowerShell",
    "keywords": "Convert-PnPSiteTemplate SYNOPSIS Converts a provisioning template to an other schema version SYNTAX Convert-PnPSiteTemplate [-Path] <String> [-Out <String>] [[-ToSchema] <XMLPnPSchemaVersion>] [-Encoding <Encoding>] [-Force] DESCRIPTION Allows to convert a provisioning template to an other schema version. EXAMPLES EXAMPLE 1 Convert-PnPSiteTemplate -Path template.xml Converts a provisioning template to the latest schema and outputs the result to current console. EXAMPLE 2 Convert-PnPSiteTemplate -Path template.xml -Out newtemplate.xml Converts a provisioning template to the latest schema and outputs the result the newtemplate.xml file. EXAMPLE 3 Convert-PnPSiteTemplate -Path template.xml -Out newtemplate.xml -ToSchema V201512 Converts a provisioning template to the latest schema using the 201512 schema and outputs the result the newtemplate.xml file. PARAMETERS -Encoding The encoding type of the XML file, Unicode is default Type: Encoding Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out Filename to write to, optionally including full path Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Path to the xml file containing the site template Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByPropertyName, ByValue) Accept wildcard characters: False -ToSchema The schema of the output to use, defaults to the latest schema Type: XMLPnPSchemaVersion Parameter Sets: (All) Accepted values: LATEST, V201503, V201505, V201508, V201512, V201605, V201705, V201801, V201805, V201807, V201903, V201909, V202002, V202103, V202209 Required: False Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Encoding documentation"
  },
  "cmdlets/Convert-PnPSiteTemplateToMarkdown.html": {
    "href": "cmdlets/Convert-PnPSiteTemplateToMarkdown.html",
    "title": "Convert-PnPSiteTemplateToMarkdown | PnP PowerShell",
    "keywords": "Convert-PnPSiteTemplateToMarkdown SYNOPSIS Converts an existing PnP Site Template to a markdown report SYNTAX Convert-PnPSiteTemplateToMarkdown -TemplatePath <String> [-Out <String>] [-Force <SwitchParameter>] DESCRIPTION Converts an existing PnP Site Template to markdown report. Notice that this cmdlet is work in work progress, and the completeness of the report will increase in the future. EXAMPLES EXAMPLE 1 Convert-PnPSiteTemplateToMarkdown -TemplatePath ./mytemplate.xml This will convert the site template to a markdown file and outputs the result to the console. EXAMPLE 2 Convert-PnPSiteTemplateToMarkdown -TemplatePath ./mytemplate.xml -Out ./myreport.md This will convert the site template to a markdown file and writes the result to the specified myreport.md file. PARAMETERS -TemplatePath The path to an existing PnP Site Template Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out The output file name to write the report to in markdown format. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/ConvertTo-PnPPage.html": {
    "href": "cmdlets/ConvertTo-PnPPage.html",
    "title": "ConvertTo-PnPPage | PnP PowerShell",
    "keywords": "ConvertTo-PnPPage SYNOPSIS Converts a classic page (wiki or web part page) into a modern page SYNTAX ConvertTo-PnPPage -Identity <PagePipeBind> [-Library <String>] [-Folder <String>] [-WebPartMappingFile <String>] [-Overwrite [<SwitchParameter>]] [-TakeSourcePageName [<SwitchParameter>]] [-ReplaceHomePageWithDefault [<SwitchParameter>]] [-AddPageAcceptBanner [<SwitchParameter>]] [-SkipItemLevelPermissionCopyToClientSidePage [<SwitchParameter>]] [-SkipUrlRewriting [<SwitchParameter>]] [-SkipDefaultUrlRewriting [<SwitchParameter>]] [-UrlMappingFile <String>] [-ClearCache [<SwitchParameter>]] [-CopyPageMetadata [<SwitchParameter>]] [-AddTableListImageAsImageWebPart [<SwitchParameter>]] [-UseCommunityScriptEditor [<SwitchParameter>]] [-SummaryLinksToHtml [<SwitchParameter>]] [-TargetWebUrl <String>] [-LogType <PageTransformatorLogType>] [-LogFolder <String>] [-LogSkipFlush [<SwitchParameter>]] [-LogVerbose [<SwitchParameter>]] [-DontPublish [<SwitchParameter>]] [-KeepPageCreationModificationInformation [<SwitchParameter>]] [-SetAuthorInPageHeader [<SwitchParameter>]] [-PostAsNews [<SwitchParameter>]] [-DisablePageComments [<SwitchParameter>]] [-PublishingPage [<SwitchParameter>]] [-BlogPage [<SwitchParameter>]] [-DelveBlogPage [<SwitchParameter>]] [-DelveKeepSubTitle [<SwitchParameter>]] [-PageLayoutMapping <String>] [-PublishingTargetPageName <String>] [-TargetPageName <String>] [-TargetPageFolder <String>] [-TargetPageFolderOverridesDefaultFolder [<SwitchParameter>]] [-RemoveEmptySectionsAndColumns [<SwitchParameter>]] [-TargetConnection <PnPConnection>] [-SkipUserMapping [<SwitchParameter>]] [-UserMappingFile <String>] [-TermMappingFile <String>] [-SkipTermStoreMapping [<SwitchParameter>]] [-LDAPConnectionString <String>] [-SkipHiddenWebParts [<SwitchParameter>]] [-Connection <PnPConnection>] EXAMPLES EXAMPLE 1 ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite Converts a wiki/web part page named 'somepage' to a client side page EXAMPLE 2 ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite -WebPartMappingFile c:\\contoso\\webpartmapping.xml Converts a wiki/web part page named 'somepage' to a client side page using a custom provided mapping file EXAMPLE 3 ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite -AddPageAcceptBanner Converts a wiki/web part page named 'somepage' to a client side page and adds the page accept banner web part on top of the page. This requires that the SPFX solution holding the web part (https://github.com/SharePoint/sp-dev-modernization/blob/master/Solutions/PageTransformationUI/assets/sharepointpnp-pagetransformation-client.sppkg?raw=true) has been installed to the tenant app catalog EXAMPLE 4 ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite -CopyPageMetadata Converts a wiki/web part page named 'somepage' to a client side page, including the copying of the page metadata (if any) EXAMPLE 5 ConvertTo-PnPPage -Identity \"somepage.aspx\" -PublishingPage -Overwrite -TargetWebUrl \"https://contoso.sharepoint.com/sites/targetmodernsite\" Converts a publishing page named 'somepage' to a client side page in the https://contoso.sharepoint.com/sites/targetmodernsite site EXAMPLE 6 ConvertTo-PnPPage -Identity \"somepage.aspx\" -PublishingPage -Overwrite -TargetConnection $target Converts a publishing page named 'somepage' to a client side page in the site specified by the TargetConnection connection. This allows to read a page in one environment (on-premises, tenant A) and create in another online location (tenant B) EXAMPLE 7 ConvertTo-PnPPage -Identity \"somepage.aspx\" -Library \"SiteAssets\" -Folder \"Folder1\" -Overwrite Converts a web part page named 'somepage' living inside the SiteAssets library in a folder named folder1 into a client side page EXAMPLE 8 ConvertTo-PnPPage -Identity \"somepage.aspx\" -Folder \"<root>\" -Overwrite Converts a web part page named 'somepage' living inside the root of the site collection (so outside of a library) EXAMPLE 9 ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite -TargetWebUrl \"https://contoso.sharepoint.com/sites/targetmodernsite\" Converts a wiki/web part page named 'somepage' to a client side page in the https://contoso.sharepoint.com/sites/targetmodernsite site EXAMPLE 10 ConvertTo-PnPPage -Identity \"somepage.aspx\" -LogType File -LogFolder c:\\temp -LogVerbose -Overwrite Converts a wiki/web part page named 'somepage' and creates a log file in c:\\temp using verbose logging EXAMPLE 11 ConvertTo-PnPPage -Identity \"somepage.aspx\" -LogType SharePoint -LogSkipFlush Converts a wiki/web part page named 'somepage' and creates a log file in SharePoint but skip the actual write. Use this option to make multiple ConvertTo-PnPPage invocations create a single log EXAMPLE 12 ConvertTo-PnPPage -Identity \"My post title\" -BlogPage -LogType Console -Overwrite -TargetWebUrl \"https://contoso.sharepoint.com/sites/targetmodernsite\" Converts a blog page with a title starting with 'my post title' to a client side page in the https://contoso.sharepoint.com/sites/targetmodernsite site EXAMPLE 13 ConvertTo-PnPPage -Identity \"My post title\" -DelveBlogPage -LogType Console -Overwrite -TargetWebUrl \"https://contoso.sharepoint.com/sites/targetmodernsite\" Converts a Delve blog page with a title starting with 'my post title' to a client side page in the https://contoso.sharepoint.com/sites/targetmodernsite site EXAMPLE 14 ConvertTo-PnPPage -Identity \"somepage.aspx\" -PublishingPage -Overwrite -TargetConnection $target -UserMappingFile c:\\\\temp\\user_mapping_file.csv Converts a publishing page named 'somepage' to a client side page in the site specified by the TargetConnection connection. This allows to read a page in on-premises environment and create in another online locations including using specific user mappings between the two environments. PARAMETERS -AddPageAcceptBanner Adds the page accept banner web part. The actual web part is specified in webpartmapping.xml file Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -AddTableListImageAsImageWebPart When an image lives inside a table/list then it's also created as separate image web part underneath that table/list by default. Use this switch set to $false to change that Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -BlogPage I'm transforming a blog page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -ClearCache Clears the cache. Can be needed if you've installed a new web part to the site and want to use that in a custom webpartmapping file. Restarting your PS session has the same effect Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -CopyPageMetadata Copies the page metadata to the created modern page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -DelveBlogPage I'm transforming a Delve blog page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -DelveKeepSubTitle Transform the possible sub title as topic header on the modern page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -DisablePageComments Disable comments for the created modern page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -DontPublish Don't publish the created modern page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Folder The folder to load the provided page from. If not provided all folders are searched Type: String Parameter Sets: (All) Required: False Position: 0 Accept pipeline input: True -Identity The name of the page to convert Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Accept pipeline input: True -KeepPageCreationModificationInformation Keep the author, editor, created and modified information from the source page (when source page lives in SPO) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -LDAPConnectionString Specifies a LDAP connection string e.g. LDAP://OU=Users,DC=Contoso,DC=local Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Library The name of the library containing the page. If SitePages then please omit this parameter Type: String Parameter Sets: (All) Required: False Position: 0 Accept pipeline input: True -LogFolder Folder in where the log file will be created (if LogType==File) Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -LogSkipFlush By default each cmdlet invocation will result in a log file, use the -SkipLogFlush to delay the log flushing. The first call without -SkipLogFlush will then write all log entries to a single log Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -LogType Allows to generate a transformation log (File | SharePoint) Type: PageTransformatorLogType Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -LogVerbose Configure logging to include verbose log entries Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Overwrite Overwrites page if already existing Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -PageLayoutMapping Path and name of the page layout mapping file driving the publishing page transformation Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: True -PostAsNews Post the created, and published, modern page as news Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -PublishingPage I'm transforming a publishing page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -PublishingTargetPageName Name for the target page (only applies to publishing page transformation) Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -RemoveEmptySectionsAndColumns Remove empty sections and columns after transformation of the page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -ReplaceHomePageWithDefault Replaces a home page with a default stock modern home page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SetAuthorInPageHeader Set's the author of the source page as author in the modern page header (when source page lives in SPO) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SkipDefaultUrlRewriting Set this flag to prevent the default URL rewriting while you still want to do URL rewriting using a custom URL mapping file Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SkipHiddenWebParts Set this flag to skip hidden webparts during transformation Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SkipItemLevelPermissionCopyToClientSidePage By default the item level permissions on a page are copied to the created client side page. Use this switch to prevent the copy Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SkipTermStoreMapping Disables term mapping during transformation Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SkipUrlRewriting If transforming cross site then by default urls in html and summarylinks are rewritten for the target site. Set this flag to prevent that Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SkipUserMapping Disables user mapping during transformation Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SummaryLinksToHtml By default summarylinks web parts are replaced by QuickLinks, but you can transform to plain html by setting this switch Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TakeSourcePageName Created client side page takes name from previous classic page. Classic page gets renamed to previous_<Page>.aspx Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TargetConnection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TargetPageFolder Folder to create the target page in (will be used in conjunction with auto-generated folders that ensure page name uniqueness) Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TargetPageFolderOverridesDefaultFolder When setting a target page folder then the target page folder overrides possibly default folder path (e.g. in the source page lived in a folder) instead of being appended to it Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TargetPageName Name for the target page (only applies when doing cross site page transformation) Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TargetWebUrl Url of the target web that will receive the modern page. Defaults to null which means in-place transformation Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TermMappingFile Specifies a taxonomy term mapping file Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -UrlMappingFile File holding custom URL mapping definitions Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -UseCommunityScriptEditor Uses the community script editor (https://github.com/SharePoint/sp-dev-fx-webparts/tree/master/samples/react-script-editor) as replacement for the classic script editor web part Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -UserMappingFile Specifies a user mapping file Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -WebPartMappingFile Path and name of the web part mapping file driving the transformation Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: True -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Copy-PnPFile.html": {
    "href": "cmdlets/Copy-PnPFile.html",
    "title": "Copy-PnPFile | PnP PowerShell",
    "keywords": "Copy-PnPFile SYNOPSIS Copies a file or folder to a different location SYNTAX Copy-PnPFile [-SourceUrl] <String> [-TargetUrl] <String> [-Overwrite] [-Force] [-IgnoreVersionHistory] [-NoWait] [-Connection <PnPConnection>] DESCRIPTION Copies a file or folder to a different location. This location can be within the same document library, same site, same site collection or even to another site collection on the same tenant. Notice that if copying between sites or to a subsite you cannot specify a target filename, only a folder name. Copying files and folders is bound to some restrictions. You can find more on it here: https://learn.microsoft.com/office365/servicedescriptions/sharepoint-online-service-description/sharepoint-online-limits#moving-and-copying-across-sites EXAMPLES EXAMPLE 1 Copy-PnPFile -SourceUrl \"Shared Documents/MyProjectfiles\" -TargetUrl \"/sites/otherproject/Shared Documents\" -Overwrite Copies a folder named MyProjectFiles in the document library called Documents located in the current site to the root folder of the library named Documents in the site collection otherproject. If a folder named MyProjectFiles already exists, it will overwrite it. EXAMPLE 2 Copy-PnPFile -SourceUrl \"/sites/project/Shared Documents/company.docx\" -TargetUrl \"/sites/otherproject/Shared Documents\" Copies a file named company.docx located in a document library called Shared Documents in the site collection project to the Shared Documents library in the site collection otherproject. If a file named company.docx already exists, it won't perform the copy. EXAMPLE 3 Copy-PnPFile -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"/sites/otherproject/Shared Documents\" -IgnoreVersionHistory Copies a file named company.docx located in a document library called Documents in the current site to the site collection otherproject. If a file named company.docx already exists, it won't perform the copy. Only the latest version of the file will be copied and its history will be discarded. EXAMPLE 4 Copy-PnPFile -SourceUrl \"/sites/project/Shared Documents/Archive\" -TargetUrl \"/sites/otherproject/Shared Documents\" -Overwrite Copies a folder named Archive located in a document library called Shared Documents in the site collection project to the Shared Documents library in the site collection otherproject. If a folder named Archive already exists, it will overwrite it. EXAMPLE 5 Copy-PnPFile -SourceUrl \"Documents/company.docx\" -TargetUrl \"Documents/company2.docx\" Copies a file named company.docx located in a document library called Documents to a new document named company2.docx in the same library. EXAMPLE 6 Copy-PnPFile -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"Shared Documents2/company.docx\" Copies a file named company.docx located in a document library called Documents to a document library called Documents2 in the same site. EXAMPLE 7 Copy-PnPFile -SourceUrl \"Shared DocuDocuments/company.docx\" -TargetUrl \"Subsite/Shared Documents\" Copies a file named company.docx located in a document library called Documents to the document library named Documents in a subsite named Subsite keeping the file name. EXAMPLE 8 Copy-PnPFile -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"/sites/otherproject/Shared Documents\" -Overwrite Copies a file named company.docx located in a document library called Documents in the current site to the site collection otherproject. If a file named company.docx already exists, it will still perform the copy and replace the original company.docx file. EXAMPLE 9 Copy-PnPFile -SourceUrl \"Shared Documents/MyDocs\" -TargetUrl \"/sites/otherproject/Documents\" -Overwrite Copies a folder named MyDocs in the document library called Documents located in the current site to the site collection otherproject. If the MyDocs folder exist it will copy into it, if not it will be created. EXAMPLE 10 Copy-PnPFile -SourceUrl \"SubSite1/Documents/company.docx\" -TargetUrl \"SubSite2/Documents\" Copies a file named company.docx in the library named Documents in SubSite1 to the library named Documents in SubSite2. EXAMPLE 11 $job = Copy-PnPFile -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"SubSite2/Shared Documents\" -NoWait $jobStatus = Receive-PnPCopyMoveJobStatus -Job $job if($jobStatus.JobState == 0) { Write-Host \"Job finished\" } Copies a file named company.docx from the current document library to the documents library in SubSite2. It will not wait for the action to return but returns job information instead. The Receive-PnPCopyMoveJobStatus cmdlet will return the job status. PARAMETERS -Force If provided, no confirmation will be requested and the action will be performed Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IgnoreVersionHistory If provided, only the latest version of the document will be copied and its history will be discarded. If not provided, all historical versions will be copied. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Overwrite If provided, if a file already exists at the TargetUrl, it will be overwritten. If omitted, the copy operation will be canceled if the file already exists at the TargetUrl location. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceUrl Site or server relative URL specifying the file or folder to copy. Must include the file name if it is a file or the entire path to the folder if it is a folder. Type: String Parameter Sets: (All) Aliases: SiteRelativeUrl, ServerRelativeUrl Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetUrl Site or server relative URL where to copy the file or folder to. Must not include the file name. Type: String Parameter Sets: (All) Aliases: TargetServerRelativeLibrary Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -NoWait If specified the task will return immediately after creating the copy job. The cmdlet will return a job object which can be used with Receive-PnPCopyMoveJobStatus to retrieve the status of the job. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Copy-PnPFolder.html": {
    "href": "cmdlets/Copy-PnPFolder.html",
    "title": "Copy-PnPFolder | PnP PowerShell",
    "keywords": "Copy-PnPFolder SYNOPSIS Copies a folder or file to a different location within SharePoint Online or allows uploading of an entire local folder with optionally subfolders to SharePoint Online. SYNTAX Copy files within Microsoft 365 Copy-PnPFolder -SourceUrl <String> -TargetUrl <String> [-Overwrite] [-Force] [-IgnoreVersionHistory] [-NoWait] [-Connection <PnPConnection>] [-Verbose] Copy files from local to Microsoft 365 Copy-PnPFolder -LocalPath <String> -TargetUrl <String> [-Overwrite] [-Recurse] [-RemoveAfterCopy] [-Connection <PnPConnection>] [-Verbose] DESCRIPTION Copies a folder or file to a different location within SharePoiint. This location can be within the same document library, same site, same site collection or even to another site collection on the same tenant. Notice that if copying between sites or to a subsite you cannot specify a target filename, only a folder name. Copying files and folders is bound to some restrictions. You can find more on it here: https://learn.microsoft.com/office365/servicedescriptions/sharepoint-online-service-description/sharepoint-online-limits#moving-and-copying-across-sites It can also accommodate copying an entire folder with all its files and optionally even subfolders and files from a local path onto SharePoint Online. EXAMPLES EXAMPLE 1 Copy-PnPFolder -SourceUrl \"Shared Documents/MyProjectfiles\" -TargetUrl \"/sites/otherproject/Shared Documents\" -Overwrite Copies a folder named MyProjectFiles in the document library called Documents located in the current site to the root folder of the library named Documents in the site collection otherproject. If a folder named MyProjectFiles already exists, it will overwrite it. EXAMPLE 2 Copy-PnPFolder -SourceUrl \"/sites/project/Shared Documents/company.docx\" -TargetUrl \"/sites/otherproject/Shared Documents\" Copies a file named company.docx located in a document library called Shared Documents in the site collection project to the Shared Documents library in the site collection otherproject. If a file named company.docx already exists, it won't perform the copy. EXAMPLE 3 Copy-PnPFolder -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"/sites/otherproject/Shared Documents\" -IgnoreVersionHistory Copies a file named company.docx located in a document library called Documents in the current site to the site collection otherproject. If a file named company.docx already exists, it won't perform the copy. Only the latest version of the file will be copied and its history will be discarded. EXAMPLE 4 Copy-PnPFolder -SourceUrl \"/sites/project/Shared Documents/Archive\" -TargetUrl \"/sites/otherproject/Shared Documents\" -Overwrite Copies a folder named Archive located in a document library called Shared Documents in the site collection project to the Shared Documents library in the site collection otherproject. If a folder named Archive already exists, it will overwrite it. EXAMPLE 5 Copy-PnPFolder -SourceUrl \"Documents/company.docx\" -TargetUrl \"Documents/company2.docx\" Copies a file named company.docx located in a document library called Documents to a new document named company2.docx in the same library. EXAMPLE 6 Copy-PnPFolder -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"Shared Documents2/company.docx\" Copies a file named company.docx located in a document library called Documents to a document library called Documents2 in the same site. EXAMPLE 7 Copy-PnPFolder -SourceUrl \"Shared DocuDocuments/company.docx\" -TargetUrl \"Subsite/Shared Documents\" Copies a file named company.docx located in a document library called Documents to the document library named Documents in a subsite named Subsite keeping the file name. EXAMPLE 8 Copy-PnPFolder -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"/sites/otherproject/Shared Documents\" -Overwrite Copies a file named company.docx located in a document library called Documents in the current site to the site collection otherproject. If a file named company.docx already exists, it will still perform the copy and replace the original company.docx file. EXAMPLE 9 Copy-PnPFolder -SourceUrl \"Shared Documents/MyDocs\" -TargetUrl \"/sites/otherproject/Documents\" -Overwrite Copies a folder named MyDocs in the document library called Documents located in the current site to the site collection otherproject. If the MyDocs folder exist it will copy into it, if not it will be created. EXAMPLE 10 Copy-PnPFolder -SourceUrl \"SubSite1/Documents/company.docx\" -TargetUrl \"SubSite2/Documents\" Copies a file named company.docx in the library named Documents in SubSite1 to the library named Documents in SubSite2. EXAMPLE 11 $job = Copy-PnPFolder -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"SubSite2/Shared Documents\" -NoWait $jobStatus = Receive-PnPCopyMoveJobStatus -Job $result if($jobStatus.JobState == 0) { Write-Host \"Job finished\" } Copies a file named company.docx from the current document library to the documents library in SubSite2. It will not wait for the action to return but returns job information instead. The Receive-PnPCopyMoveJobStatus cmdlet will return the job status. EXAMPLE 12 Copy-PnPFolder -LocalPath \"c:\\temp\" -TargetUrl \"Subsite1/Shared Documents\" -Recurse -Overwrite Copies all the files and underlying folders from the local folder c:\\temp to the document library Shared Documents in Subsite1. If a file already exists, it will be overwritten. PARAMETERS -Force If provided, no confirmation will be requested and the action will be performed Type: SwitchParameter Parameter Sets: WITHINM365 Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IgnoreVersionHistory If provided, only the latest version of the document will be copied and its history will be discarded. If not provided, all historical versions will be copied. Type: SwitchParameter Parameter Sets: WITHINM365 Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Overwrite If provided, if a file already exists at the TargetUrl, it will be overwritten. If omitted, the copy operation will be canceled if the file already exists at the TargetUrl location when copying between two locations on SharePoint Online. If copying files from a local path to SharePoint Online, it will skip any file that already exists and still continue with the next one. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceUrl Site or server relative URL specifying the file or folder to copy. Must include the file name if it is a file or the entire path to the folder if it is a folder. Type: String Parameter Sets: WITHINM365 Aliases: SiteRelativeUrl, ServerRelativeUrl Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetUrl Site or server relative URL where to copy the file or folder to. Must not include the file name. Type: String Parameter Sets: (All) Aliases: TargetServerRelativeLibrary Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -NoWait If specified the task will return immediately after creating the copy job. The cmdlet will return a job object which can be used with Receive-PnPCopyMoveJobStatus to retrieve the status of the job. Type: SwitchParameter Parameter Sets: WITHINM365 Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Recurse When copying files from a local folder to SharePoint Online, this parameter will copy all files and folders within the local folder and all of its subfolders as well. Type: SwitchParameter Parameter Sets: FROMLOCAL Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveAfterCopy When copying files from a local folder to SharePoint Online, this parameter will remove all files locally that have successfully been uploaded to SharePoint Online. If a file fails, it will not be removed locally. Local folders will be removed after all files have been uploaded and the folder is empty. Type: SwitchParameter Parameter Sets: FROMLOCAL Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Copy-PnPItemProxy.html": {
    "href": "cmdlets/Copy-PnPItemProxy.html",
    "title": "Copy-PnPItemProxy | PnP PowerShell",
    "keywords": "Copy-PnPItemProxy SYNOPSIS Copies an item from one location to another. It is an alias of the Copy-Item cmdlet. SYNTAX Copy-Item [-Path] <String[]> [[-Destination] <String>] [-Container] [-Force] [-Filter <String>] [-Include <String[]>] [-Exclude <String[]>] [-Recurse] [-PassThru] [-Credential <PSCredential>] [-Confirm] [-FromSession <PSSession>] [-ToSession <PSSession>] DESCRIPTION This cmdlet is an alias of the Copy-Item cmdlet that is natively available with PowerShell. The Copy-PnPItemProxy cmdlet copies an item from one location to another location in the same namespace. For instance, it can copy a file to a folder, but it can't copy a file to a certificate drive. This cmdlet doesn't cut or delete the items being copied. The particular items that the cmdlet can copy depend on the PowerShell provider that exposes the item. For instance, it can copy files and directories in a file system drive and registry keys and entries in the registry drive. This cmdlet can copy and rename items in the same command. To rename an item, enter the new name in the value of the Destination parameter. To rename an item and not copy it, use the Rename-Item cmdlet. For more information and details, please refer to the official PowerShell documentation here. EXAMPLES EXAMPLE 1 Copy-PnPItemProxy \"C:\\Users\\Admin\\seattle.master\" -Destination \"C:\\Presentation\" This example copies the seattle.master file to the C:\\Presentation directory. The original file isn't deleted. For more examples, please refer to the link mentioned above. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Copy-PnPList.html": {
    "href": "cmdlets/Copy-PnPList.html",
    "title": "Copy-PnPList | PnP PowerShell",
    "keywords": "Copy-PnPList SYNOPSIS Creates a copy of an existing list SYNTAX Copy a list to the same site by providing a list id, name or list instance Copy-PnPList -Identity <ListPipeBind> -Title <String> [-WhatIf] [-Verbose] [-Connection <PnPConnection>] Copy a list to the same site by providing a list URL Copy-PnPList -SourceListUrl <String> -Title <String> [-WhatIf] [-Verbose] [-Connection <PnPConnection>] Copy a list to another site by providing a list id, name or list instance Copy-PnPList -Identity <ListPipeBind> -DestinationWebUrl <String> [-Title <String>] [-WhatIf] [-Verbose] [-Connection <PnPConnection>] Copy a list to another site by providing a list URL Copy-PnPList -SourceListUrl <String> -DestinationWebUrl <String> [-Title <String>] [-WhatIf] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows an existing list to be copied to either the same site or to another site (same tenant). It copies the fields, views and settings of the list. It does not copy along the list items in the list. If you wish to copy a list from one tenant to another, you will have to export the list as a provisioning template, and then apply the template to the target tenant. EXAMPLES EXAMPLE 1 Copy-PnPList -Identity \"My List\" -Title \"Copy of My List\" Copies the list \"My List\" located in the current site to \"Copy of My List\", also in the current site EXAMPLE 2 Copy-PnPList -Identity \"My List\" -DestinationWebUrl https://contoso.sharepoint.com/sites/hrdepartment Copies the list \"My List\" to the site with the provided URL keeping the same list name EXAMPLE 3 Copy-PnPList -Identity \"My List\" -DestinationWebUrl https://contoso.sharepoint.com/sites/hrdepartment -Title \"My copied list\" Copies the list \"My List\" to the site with the provided URL changing the list name to \"My copied list\" EXAMPLE 4 $list = Get-PnPList -Identity \"My List\" Copy-PnPList -Identity $list -Title \"My copied list\" Copies the list \"My List\" to the site with the provided URL changing the list name to \"My copied list\" EXAMPLE 5 Get-PnPList | ? Title -like \"*Test*\" | Copy-PnPList -DestinationWebUrl https://contoso.sharepoint.com/sites/hrdepartment Copies all the lists on the current site having a title that contains \"Test\" to the site with the provided URL EXAMPLE 6 Copy-PnPList -SourceListUrl https://contoso.sharepoint.com/sites/templates/lists/mylist -Verbose -DestinationWebUrl https://contoso.sharepoint.com/sites/hrdepartment\\ Copies the list located at the provided URL through -SourceListUrl to the site provided through -DestinationWebUrl PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Title to give to the new list which will be created by copying an existing list Type: String Parameter Sets: TOCURRENTSITEBYURL, TOCURRENTSITEBYPIPE, LISTBYPIPE, LISTBYURL Required: True (TOCURRENTSITEBYURL, TOCURRENTSITEBYPIPE), False (LISTBYPIPE, LISTBYURL) Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity List id, name or instance of a list you want to make a copy of Type: ListPipeBind Parameter Sets: TOCURRENTSITEBYURL, LISTBYURL Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceListUrl Full SharePoint Online list URL to the list you want to make a copy of, i.e. https://contoso.sharepoint.com/sites/hrdepartment/lists/mylist Type: String Parameter Sets: TOCURRENTSITEBYURL, LISTBYURL Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DestinationWebUrl Full SharePoint Online site URL to the site where the list should be copied to, i.e. https://contoso.sharepoint.com/sites/hrdepartment Type: String Parameter Sets: LISTBYPIPE, LISTBYURL Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Switch parameter which executes the cmdlet but does not do the actual copy. Use in combination with -Verbose to see if all preconditions to be able to make a copy of the list are met without doing the actual copy. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Copy-PnPTeamsTeam.html": {
    "href": "cmdlets/Copy-PnPTeamsTeam.html",
    "title": "Copy-PnPTeamsTeam | PnP PowerShell",
    "keywords": "Copy-PnPTeamsTeam SYNOPSIS Creates a copy of a Microsoft Teams team SYNTAX Clone a team Copy-PnPTeamsTeam -DisplayName <String> -Identity <TeamsTeamPipeBind> [-PartsToClone <ClonableTeamParts[]>] [-Description <String>] [-Visibility <TeamVisibility>] [-Classification <String>] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION Using this command, global admins and Microsoft Teams service admins can access teams that they are not a member of to make a copy of them. Creates a copy of a team. This operation also creates a copy of the corresponding group. You can specify which parts of the team to clone: apps - Copies Microsoft Teams apps that are installed in the team. channels – Copies the channel structure (but not the messages in the channel). members – Copies the members and owners of the group. settings – Copies all settings within the team, along with key group settings. tabs – Copies the tabs within channels. When tabs are cloned, they are put into an un configured state -- they are displayed on the tab bar in Microsoft Teams, and the first time you open them, you'll go through the configuration screen. If the person opening the tab does not have permission to configure apps, they will see a message explaining that the tab hasn't been configured. EXAMPLES EXAMPLE 1 Copy-PnPTeamsTeam -Identity ee0f40fc-b2f7-45c7-b62d-11b90dd2ea8e -DisplayName \"Library Assist\" -PartsToClone apps,tabs,settings,channels,members Creates a clone of a Microsoft Teams team named \"Library Assist\" from Microsoft Teams team ID ee0f40fc-b2f7-45c7-b62d-11b90dd2ea8e with the apps,tabs,settings,channels and members EXAMPLE 2 Copy-PnPTeamsTeam -Identity \"Team 12\" -DisplayName \"Library Assist\" Creates a clone of a Microsoft Teams team named \"Library Assist\" from Microsoft Teams team \"Team 12\" with the all the available parts EXAMPLE 3 Copy-PnPTeamsTeam -Identity \"Team 12\" -DisplayName \"Library Assist\" -PartsToClone apps,tabs,settings,channels,members -Description \"Self help community for library\" -Classification \"Library\" -Visibility public Creates a clone of a Microsoft Teams team named \"Library Assist\" from Microsoft Teams team \"Team 12\" with the apps,tabs,settings,channels and members setting the classification to \"Library\", Visibility to public and Description to \"Self help community for library\" EXAMPLE 4 Copy-PnPTeamsTeam -Identity \"Team 12\" -DisplayName \"Library Assist\" -PartsToClone settings,channels -Description \"Self help community for library\" -Classification \"Library\" -Visibility public Creates a clone of a Microsoft Teams team named \"Library Assist\" from Microsoft Teams team \"Team 12\" with the settings and channels setting the classification to \"Library\", Visibility to public and Description to \"Self help community for library\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The display name for the group. This property is required when a group is created and it cannot be cleared during updates. Supports $filter and $orderby. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PartsToClone A comma-separated list of the parts to clone. Allowed values are apps,channels,members,settings,tabs. When not provided, all available parts will be cloned. Type: ClonableTeamParts Parameter Sets: (All) Required: False Position: Named Default value: apps,channels,members,settings,tabs Accept pipeline input: False Accept wildcard characters: False -Visibility Specifies the visibility of the group. Possible values are: Private, Public. If visibility is not specified, the visibility will be copied from the original team/group. If the team being cloned is an educationClass team, the visibility parameter is ignored, and the new group's visibility will be set to HiddenMembership. Type: teamVisibilityType Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Classification Describes a classification for the group (such as low, medium or high business impact). If classification is not specified, the classification will be copied from the original team/group. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Deny-PnPTenantServicePrincipalPermissionRequest.html": {
    "href": "cmdlets/Deny-PnPTenantServicePrincipalPermissionRequest.html",
    "title": "Deny-PnPTenantServicePrincipalPermissionRequest | PnP PowerShell",
    "keywords": "Deny-PnPTenantServicePrincipalPermissionRequest SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Denies a permission request for the current tenant's \"SharePoint Online Client\" service principal SYNTAX Deny-PnPTenantServicePrincipalPermissionRequest -RequestId <Guid> [-Force] [-Connection <PnPConnection>] DESCRIPTION Denies a permission request for the current tenant's \"SharePoint Online Client\" service principal Denying a permission request removes that request from the list of permission requests. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequestId Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Disable-PnPFeature.html": {
    "href": "cmdlets/Disable-PnPFeature.html",
    "title": "Disable-PnPFeature | PnP PowerShell",
    "keywords": "Disable-PnPFeature SYNOPSIS Disables a feature SYNTAX Disable-PnPFeature [-Identity] <Guid> [-Force] [-Scope <FeatureScope>] [-Connection <PnPConnection>] DESCRIPTION Deactivates a feature that was active on a site EXAMPLES EXAMPLE 1 Disable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will disable the feature with the id \"99a00f6e-fb81-4dc7-8eac-e09c6f9132fe\" EXAMPLE 2 Disable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Force This will disable the feature with the id \"99a00f6e-fb81-4dc7-8eac-e09c6f9132fe\" with force. EXAMPLE 3 Disable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Web This will disable the feature with the id \"99a00f6e-fb81-4dc7-8eac-e09c6f9132fe\" with the web scope. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifies whether to continue if an error occurs when deactivating the feature. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The id of the feature to disable. Type: Guid Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Specify the scope of the feature to deactivate, either Web or Site. Defaults to Web. Type: FeatureScope Parameter Sets: (All) Accepted values: Web, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Disable-PnPFlow.html": {
    "href": "cmdlets/Disable-PnPFlow.html",
    "title": "Disable-PnPFlow | PnP PowerShell",
    "keywords": "Disable-PnPFlow SYNOPSIS Required Permissions Azure: management.azure.com Disables a specific flow SYNTAX Disable-PnPFlow [-Environment <PowerAutomateEnvironmentPipeBind>] -Identity <PowerAutomateFlowPipeBind> [-AsAdmin] [-Connection <PnPConnection>] DESCRIPTION This cmdlet disables a specific flow EXAMPLES Example 1 Disable-PnPFlow -Identity fba63225-baf9-4d76-86a1-1b42c917a182 Disables the specified flow in the default environment Example 2 Disable-PnPFlow -Environment (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") -Identity fba63225-baf9-4d76-86a1-1b42c917a182 Disables the specified flow in the specified environment PARAMETERS -AsAdmin Disable the flow as an administrator. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Identity Identity of the flow to disable. Type: PowerAutomateFlowPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Disable-PnPPageScheduling.html": {
    "href": "cmdlets/Disable-PnPPageScheduling.html",
    "title": "Disable-PnPPageScheduling | PnP PowerShell",
    "keywords": "Disable-PnPPageScheduling SYNOPSIS Disables the modern page schedule feature SYNTAX Disable-PnPPageScheduling [-Connection <PnPConnection>] DESCRIPTION This will disable page publishing scheduling on modern sites EXAMPLES EXAMPLE 1 Disable-PnPPageScheduling This will disable page publishing scheduling on the current site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Disable-PnPPowerShellTelemetry.html": {
    "href": "cmdlets/Disable-PnPPowerShellTelemetry.html",
    "title": "Disable-PnPPowerShellTelemetry | PnP PowerShell",
    "keywords": "Disable-PnPPowerShellTelemetry SYNOPSIS Disables sending of telemetry data. SYNTAX Disable sending of telemetry data after going through a confirmation question. Disable-PnPPowerShellTelemetry Disable sending of telemetry data skipping the confirmation question. Disable-PnPPowerShellTelemetry -Force DESCRIPTION This cmdlet disables sending of telemetry data. EXAMPLES EXAMPLE 1 Disable-PnPPowerShellTelemetry Disables sending to telemetry data after answering the confirmation question. EXAMPLE 2 Disable-PnPPowerShellTelemetry -Force Disables sending to telemetry data skipping the confirmation question. PARAMETERS -Force Switch parameter which executes the cmdlet and skips the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Disable-PnPSharingForNonOwnersOfSite.html": {
    "href": "cmdlets/Disable-PnPSharingForNonOwnersOfSite.html",
    "title": "Disable-PnPSharingForNonOwnersOfSite | PnP PowerShell",
    "keywords": "Disable-PnPSharingForNonOwnersOfSite SYNOPSIS Configures the site to only allow sharing of the site and items in the site by owners SYNTAX Disable-PnPSharingForNonOwnersOfSite [-Identity <SitePipeBind>] [-Connection <PnPConnection>] DESCRIPTION Configures the site to only allow sharing of the site and items in the site by owners. At this point there is no interface available yet to undo this action through script. You will have to do so through the user interface of SharePoint. EXAMPLES EXAMPLE 1 Disable-PnPSharingForNonOwnersOfSite Restricts sharing of the site and items in the site only to owners PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Type: SitePipeBind Parameter Sets: (All) Aliases: Url Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Disable-PnPSiteClassification.html": {
    "href": "cmdlets/Disable-PnPSiteClassification.html",
    "title": "Disable-PnPSiteClassification | PnP PowerShell",
    "keywords": "Disable-PnPSiteClassification SYNOPSIS Required Permissions Microsoft Graph API: Directory.ReadWrite.All Disables Site Classifications for the tenant SYNTAX Disable-PnPSiteClassification DESCRIPTION Allows to disable site classifications for the tenant. EXAMPLES EXAMPLE 1 Disable-PnPSiteClassification Disables Site Classifications for your tenant. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Disable-PnPTenantServicePrincipal.html": {
    "href": "cmdlets/Disable-PnPTenantServicePrincipal.html",
    "title": "Disable-PnPTenantServicePrincipal | PnP PowerShell",
    "keywords": "Disable-PnPTenantServicePrincipal SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Disables the current tenant's \"SharePoint Online Client\" service principal. SYNTAX Disable-PnPTenantServicePrincipal [-Force] [-Connection <PnPConnection>] DESCRIPTION Disables the current tenant's \"SharePoint Online Client\" service principal. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Disconnect-PnPOnline.html": {
    "href": "cmdlets/Disconnect-PnPOnline.html",
    "title": "Disconnect-PnPOnline | PnP PowerShell",
    "keywords": "Disconnect-PnPOnline SYNOPSIS Disconnects the current connection and clears its token cache. SYNTAX Disconnect-PnPOnline [-ClearPersistedLogin] DESCRIPTION Disconnects the current connection and optionally clears its token cache. It will require you to build up a new connection again using Connect-PnPOnline in order to use any of the PnP PowerShell cmdlets. You might have to reauthenticate. If instead you simply want to connect to another site collection within the same tenant using the same credentials you used previously, do not use this cmdlet but instead use Connect-PnPOnline -Url https://tenant.sharepoint.com/sites/othersite instead without disconnecting. It will try to reuse the existing authentication method and cached credentials. Note that this cmdlet does not support passing in a specific connection to disconnect. If you wish to dispose a specific connection you have set up in a variable using $variable = Connect-PnPOnline -ReturnConnection, just dispose that variable using $variable = $null and it will be cleared from memory. EXAMPLES EXAMPLE 1 Disconnect-PnPOnline This will clear out all active tokens from the current connection PARAMETERS -ClearPersistedLogin Clears the entry in the token cache for this connection. Type: SwitchParameter Parameter Sets: (All)) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Enable-PnPCommSite.html": {
    "href": "cmdlets/Enable-PnPCommSite.html",
    "title": "Enable-PnPCommSite | PnP PowerShell",
    "keywords": "Enable-PnPCommSite SYNOPSIS Enables the modern communication site experience on a classic team site. SYNTAX Enable-PnPCommSite [-DesignPackageId <String>] [-Connection <PnPConnection>] DESCRIPTION This command will enable the modern site experience on a classic team site. The site must be the root site of the site collection. EXAMPLES EXAMPLE 1 Enable-PnPCommSite Enables the modern communication site experience on a classic team site EXAMPLE 2 Enable-PnPCommSite -DesignPackageId 6142d2a0-63a5-4ba0-aede-d9fefca2c767 Enables the modern communication site experience on a classic team site, allowing to specify the design package to be applied PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DesignPackageId The id (guid) of the design package to apply: 96c933ac-3698-44c7-9f4a-5fd17d71af9e (Topic = default), 6142d2a0-63a5-4ba0-aede-d9fefca2c767 (Showcase) or f6cc5403-0d63-442e-96c0-285923709ffc (Blank). Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Enable-PnPFeature.html": {
    "href": "cmdlets/Enable-PnPFeature.html",
    "title": "Enable-PnPFeature | PnP PowerShell",
    "keywords": "Enable-PnPFeature SYNOPSIS Enables a feature SYNTAX Enable-PnPFeature [-Identity] <Guid> [-Force] [-Scope <FeatureScope>] [-Sandboxed] [-Connection <PnPConnection>] DESCRIPTION Allows to enable to feature. EXAMPLES EXAMPLE 1 Enable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will enable the feature with the id \"99a00f6e-fb81-4dc7-8eac-e09c6f9132fe\" EXAMPLE 2 Enable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Force This will enable the feature with the id \"99a00f6e-fb81-4dc7-8eac-e09c6f9132fe\" with force. EXAMPLE 3 Enable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Web This will enable the feature with the id \"99a00f6e-fb81-4dc7-8eac-e09c6f9132fe\" with the web scope. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifies whether to overwrite an existing feature with the same feature identifier. This parameter is ignored if there are no errors. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The id of the feature to enable. Type: Guid Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Sandboxed Specify this parameter if the feature you're trying to activate is part of a sandboxed solution. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Specify the scope of the feature to activate, either Web or Site. Defaults to Web. Type: FeatureScope Parameter Sets: (All) Accepted values: Web, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Enable-PnPFlow.html": {
    "href": "cmdlets/Enable-PnPFlow.html",
    "title": "Enable-PnPFlow | PnP PowerShell",
    "keywords": "Enable-PnPFlow SYNOPSIS Required Permissions Azure: management.azure.com Enables a specific flow SYNTAX Enable-PnPFlow [-Environment <PowerAutomateEnvironmentPipeBind>] -Identity <PowerAutomateFlowPipeBind> [-AsAdmin] [-Connection <PnPConnection>] DESCRIPTION This cmdlet enables a specific flow EXAMPLES Example 1 Enable-PnPFlow -Identity fba63225-baf9-4d76-86a1-1b42c917a182 Enables the specified flow in the default environment Example 2 Enable-PnPFlow -Environment (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") -Identity fba63225-baf9-4d76-86a1-1b42c917a182 Enables the specified flow in the specified environment PARAMETERS -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Identity Identity of the flow to enable Type: PowerAutomateFlowPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AsAdmin Enable the flow as an administrator Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Enable-PnPPageScheduling.html": {
    "href": "cmdlets/Enable-PnPPageScheduling.html",
    "title": "Enable-PnPPageScheduling | PnP PowerShell",
    "keywords": "Enable-PnPPageScheduling SYNOPSIS Enables the modern page schedule feature SYNTAX Enable-PnPPageScheduling [-Connection <PnPConnection>] DESCRIPTION This will enable page publishing scheduling on modern sites EXAMPLES EXAMPLE 1 Enable-PnPPageScheduling This will enable page publishing scheduling on the current site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Enable-PnPPowerShellTelemetry.html": {
    "href": "cmdlets/Enable-PnPPowerShellTelemetry.html",
    "title": "Enable-PnPPowerShellTelemetry | PnP PowerShell",
    "keywords": "Enable-PnPPowerShellTelemetry SYNOPSIS Enables sending of telemetry data. SYNTAX Enable sending of telemetry data after going through a confirmation question. Enable-PnPPowerShellTelemetry Enable sending of telemetry data skipping the confirmation question. Enable-PnPPowerShellTelemetry -Force DESCRIPTION This cmdlet Enables sending of telemetry data. EXAMPLES EXAMPLE 1 Enable-PnPPowerShellTelemetry Enables sending of telemetry data after answering the confirmation question. EXAMPLE 2 Enable-PnPPowerShellTelemetry -Force Enables sending of telemetry data skipping the confirmation question. PARAMETERS -Force Switch parameter which executes the cmdlet and skips the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Enable-PnPPriviledgedIdentityManagement.html": {
    "href": "cmdlets/Enable-PnPPriviledgedIdentityManagement.html",
    "title": "Enable-PnPPriviledgedIdentityManagement | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Enable-PnPPriviledgedIdentityManagement SYNOPSIS Required Permissions Microsoft Graph: RoleAssignmentSchedule.ReadWrite.Directory Temporarily enables a Privileged Identity Management role for a user SYNTAX By Role Name And Principal Enable-PnPPriviledgedIdentityManagement -Role <PriviledgedIdentityManagementRolePipeBind> [-PrincipalId <Guid>] [-Justification <string>] [-StartAt <DateTime>] [-ExpireInHours <short>] [-Connection <PnPConnection>] By Role Name And User Enable-PnPPriviledgedIdentityManagement -Role <PriviledgedIdentityManagementRolePipeBind> -User <AzureADUserPipeBind> [-Justification <string>] [-StartAt <DateTime>] [-ExpireInHours <short>] [-Connection <PnPConnection>] By Eligible Role Assignment Enable-PnPPriviledgedIdentityManagement -EligibleAssignment <PriviledgedIdentityManagementRolePipeBind> [-Justification <string>] [-StartAt <DateTime>] [-ExpireInHours <short>] [-Connection <PnPConnection>] DESCRIPTION Temporarily enables a Privileged Identity Management role for the provided allowing the user to perform actions that require the role. The role will be enabled starting at the specified date and time and will expire after the specified number of hours. The reason for the elevation of rights can be provided as justification. EXAMPLES Example 1 Enable-PnPPriviledgedIdentityManagement -Role \"Global Administrator\" Enables the global administrator role for the current user through Privileged Identity Management starting immediately and expiring in 1 hour Example 2 Enable-PnPPriviledgedIdentityManagement -Role \"Global Administrator\" -Justification \"Just because\" Enables the global administrator role for the current user through Privileged Identity Management starting immediately and expiring in 1 hour, adding the justification provided to be logged as the reason for the elevation of rights Example 3 Enable-PnPPriviledgedIdentityManagement -Role \"Global Administrator\" -Justification \"Just because\" -StartAt (Get-Date).AddHours(2) -ExpireInHours 2 Enables the global administrator role for the current user through Privileged Identity Management starting in 2 hours from now and expiring 2 hours thereafter, adding the justification provided to be logged as the reason for the elevation of rights Example 4 Enable-PnPPriviledgedIdentityManagement -Role \"Global Administrator\" -User \"someone@contoso.onmicrosoft.com\" Enables the global administrator role for the provided user through Privileged Identity Management starting immediately and expiring in 1 hour PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExpireInHours Indication of after how many hours the elevation should expire. If omitted, the default value is 1 hour. Type: short Parameter Sets: (All) Aliases: Required: False Position: Named Default value: 1 Accept pipeline input: False Accept wildcard characters: False -Justification Text to be logged as the reason for the elevation of rights. If omitted, the default value is \"Elevated by PnP PowerShell\". Type: string Parameter Sets: (All) Aliases: Required: False Position: Named Default value: \"Elevated by PnP PowerShell\" Accept pipeline input: False Accept wildcard characters: False -PrincipalId The Id of of the principal to elevate. If omitted, the default value is the current user, if the connection has been made using a delegated identity. With an application identity, this parameter is required. Type: Guid Parameter Sets: By Role Name And Principal Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Role The Id, name or instance of a role to elevate the current user to. Use Get-PnPPriviledgedIdentityManagementRole to retrieve the available roles. Type: PriviledgedIdentityManagementRolePipeBind Parameter Sets: By Role Name And Principal, By Role Name And User Aliases: Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -StartAt Date and time at which to start the elevation. If omitted, the default value is the current date and time, meaning the activation will happen immediately. Type: DateTime Parameter Sets: (All) Aliases: Required: False Position: Named Default value: Get-Date Accept pipeline input: False Accept wildcard characters: False -User The Id, username or instance of a user which needs to be elevated Type: AzureADUserPipeBind Parameter Sets: By Role Name And User Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Enable-PnPSiteClassification.html": {
    "href": "cmdlets/Enable-PnPSiteClassification.html",
    "title": "Enable-PnPSiteClassification | PnP PowerShell",
    "keywords": "Enable-PnPSiteClassification SYNOPSIS Required Permissions Microsoft Graph API: Directory.ReadWrite.All Enables Site Classifications for the tenant SYNTAX Enable-PnPSiteClassification -Classifications <System.Collections.Generic.List`1[System.String]> -DefaultClassification <String> [-UsageGuidelinesUrl <String>] DESCRIPTION Allows to enable site classifications for the tenant. EXAMPLES EXAMPLE 1 Enable-PnPSiteClassification -Classifications \"HBI\",\"LBI\",\"Top Secret\" -DefaultClassification \"LBI\" Enables Site Classifications for your tenant and provides three classification values. The default value will be set to \"LBI\" EXAMPLE 2 Enable-PnPSiteClassification -Classifications \"HBI\",\"LBI\",\"Top Secret\" -UsageGuidelinesUrl https://aka.ms/m365pnp Enables Site Classifications for your tenant and provides three classification values. The usage guidelines will be set to the specified URL. PARAMETERS -Classifications Type: System.Collections.Generic.List`1[System.String] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultClassification Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UsageGuidelinesUrl Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Enable-PnPTenantServicePrincipal.html": {
    "href": "cmdlets/Enable-PnPTenantServicePrincipal.html",
    "title": "Enable-PnPTenantServicePrincipal | PnP PowerShell",
    "keywords": "Enable-PnPTenantServicePrincipal SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Enables the current tenant's \"SharePoint Online Client\" service principal. SYNTAX Enable-PnPTenantServicePrincipal [-Force] [-Connection <PnPConnection>] DESCRIPTION Enables the current tenant's \"SharePoint Online Client\" service principal. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Export-PnPFlow.html": {
    "href": "cmdlets/Export-PnPFlow.html",
    "title": "Export-PnPFlow | PnP PowerShell",
    "keywords": "Export-PnPFlow SYNOPSIS Required Permissions Azure: management.azure.com Exports a Microsoft Power Automate Flow SYNTAX As ZIP Package Export-PnPFlow [-Environment <PowerAutomateEnvironmentPipeBind>] -Identity <PowerAutomateFlowPipeBind> [-AsZipPackage] [-PackageDisplayName <String>] [-PackageDescription <String>] [-PackageCreatedBy <String>] [-PackageSourceEnvironment <String>] [-OutPath <String>] [-Force] [-Connection <PnPConnection>] As Json Export-PnPFlow [-Environment <PowerAutomateEnvironmentPipeBind>] -Identity <PowerAutomateFlowPipeBind> [-Connection <PnPConnection>] DESCRIPTION This cmdlet exports a Microsoft Power Automate Flow either as a json file or as a zip package. Many times exporting a Microsoft Power Automate Flow will not be possible due to various reasons such as connections having gone stale, SharePoint sites referenced no longer existing or other configuration errors in the Flow. To display these errors when trying to export a Flow, provide the -Verbose flag with your export request. If not provided, these errors will silently be ignored. EXAMPLES Example 1 Export-PnPFlow -Environment (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") -Identity fba63225-baf9-4d76-86a1-1b42c917a182 This will export the specified Microsoft Power Automate Flow from the specified Power Platform environment as an output to the current output of PowerShell Example 2 Export-PnPFlow -Environment (Get-PnPPowerPlatformEnvironment -IsDefault) -Identity fba63225-baf9-4d76-86a1-1b42c917a182 This will export the specified Microsoft Power Automate Flow from the default Power Platform environment as an output to the current output of PowerShell Example 3 Get-PnPPowerPlatformEnvironment | foreach { Get-PnPFlow -Environment $_.Name } | foreach { Export-PnPFlow -Environment $_.Properties.EnvironmentDetails.Name -Identity $_ -OutPath \"c:\\flows\\$($_.Name).zip\" -AsZipPackage } This will export all the Microsoft Power Automate Flows available within the tenant from all users from all the available Power Platform environments as a ZIP package for each of them to a local folder c:\\flows PARAMETERS -AsZipPackage If specified the flow will be exported as a zip package Type: SwitchParameter Parameter Sets: As ZIP Package Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Identity The value of the Name property of a Microsoft Power Automate Flow that you wish to export Type: PowerAutomateFlowPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If specified and the file exported already exists it will be overwritten without confirmation. Type: SwitchParameter Parameter Sets: As ZIP Package Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OutPath Optional file name of the file to export to. If not provided, it will store the ZIP package to the current location from where the cmdlet is being run. Type: String Parameter Sets: As ZIP Package Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PackageCreatedBy The name of the person to be used as the creator of the exported package Type: String Parameter Sets: As ZIP Package Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PackageDescription The description to use in the exported package Type: String Parameter Sets: As ZIP Package Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PackageDisplayName The display name to use in the exported package Type: String Parameter Sets: As ZIP Package Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PackageSourceEnvironment The name of the source environment from which the exported package was taken Type: String Parameter Sets: As ZIP Package Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Export-PnPListToSiteTemplate.html": {
    "href": "cmdlets/Export-PnPListToSiteTemplate.html",
    "title": "Export-PnPListToSiteTemplate | PnP PowerShell",
    "keywords": "Export-PnPListToSiteTemplate SYNOPSIS Exports one or more lists to provisioning template SYNTAX Export-PnPListToSiteTemplate -List <System.Collections.Generic.List`1[System.String]> [[-Out] <String>] [[-Schema] <XMLPnPSchemaVersion>] [-Force] [-OutputInstance] [-Connection <PnPConnection>] DESCRIPTION Allows to export one or more lists to provisioning template. EXAMPLES EXAMPLE 1 Export-PnPListToSiteTemplate -Out template.xml -List \"Documents\" Extracts a list to a new provisioning template including the list specified by title or ID. EXAMPLE 2 Export-PnPListToSiteTemplate -Out template.pnp -List \"Documents\",\"Events\" Extracts a list to a new provisioning template Office Open XML file, including the lists specified by title or ID. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List Specify the lists to extract, either providing their ID or their Title. Type: System.Collections.Generic.List`1[System.String] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out Filename to write to, optionally including full path Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -OutputInstance Returns the template as an in-memory object, which is an instance of the SiteTemplate type of the PnP Core Component. It cannot be used together with the -Out parameter. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Schema The schema of the output to use, defaults to the latest schema Type: XMLPnPSchemaVersion Parameter Sets: (All) Accepted values: LATEST, V201503, V201505, V201508, V201512, V201605, V201705, V201801, V201805, V201807, V201903, V201909, V202002, V202103, V202209 Required: False Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Export-PnPPage.html": {
    "href": "cmdlets/Export-PnPPage.html",
    "title": "Export-PnPPage | PnP PowerShell",
    "keywords": "Export-PnPPage SYNOPSIS Exports a Client Side Page to a PnP Provisioning Template SYNTAX Export-PnPPage [-Identity] <PagePipeBind> [-PersistBrandingFiles] [-Out <String>] [-Force] [-Configuration <ExtractConfigurationPipeBind>] [-OutputInstance] [-Connection <PnPConnection>] DESCRIPTION Allows to export a Client Side Page to a PnP Provisioning Template. EXAMPLES EXAMPLE 1 Export-PnPPage -Identity Home.aspx Exports the page 'Home.aspx' to a new PnP Provisioning Template EXAMPLE 2 Export-PnPPage -Identity HR/Home.aspx -Out template.pnp Exports the page 'Home.aspx' to a new PnP Provisioning Template PARAMETERS -Configuration Specify a JSON configuration file to configure the extraction progress. Type: ExtractConfigurationPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specify to override the question to overwrite a file if it already exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name/identity of the page. This can be a page instance or the filename of the page. I.e. if the page is called MyPage.aspx and is located in the root of the Site Pages library, provide \"MyPage\" or \"MyPage.aspx\". If the page is called MyOtherPage.aspx and is located inside a subfolder called HR located in the root of the Site Pages library, provide \"HR/MyOtherPage\" or \"HR/MyOtherPage.aspx Type: ClientSidePagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Out If specified the template will be saved to the file specified with this parameter. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PersistBrandingFiles If specified referenced files will be exported to the current folder. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OutputInstance Returns the template as an in-memory object, which is an instance of the SiteTemplate type of the PnP Core Component. It cannot be used together with the -Out parameter. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Export-PnPPageMapping.html": {
    "href": "cmdlets/Export-PnPPageMapping.html",
    "title": "Export-PnPPageMapping | PnP PowerShell",
    "keywords": "Export-PnPPageMapping SYNOPSIS Get's the built-in mapping files or a custom mapping file for your publishing portal page layouts. These mapping files are used to tailor the page transformation experience. SYNTAX Export-PnPPageMapping [-BuiltInWebPartMapping [<SwitchParameter>]] [-BuiltInPageLayoutMapping [<SwitchParameter>]] [-CustomPageLayoutMapping [<SwitchParameter>]] [-PublishingPage <PagePipeBind>] [-AnalyzeOOBPageLayouts [<SwitchParameter>]] [-Folder <String>] [-Overwrite [<SwitchParameter>]] [-Logging [<SwitchParameter>]] [-Connection <PnPConnection>] EXAMPLES EXAMPLE 1 Export-PnPPageMapping -BuiltInPageLayoutMapping -CustomPageLayoutMapping -Folder c:\\\\temp -Overwrite Exports the built in page layout mapping and analyzes the current site's page layouts and exports these to files in folder c:\\temp EXAMPLE 2 Export-PnPPageMapping -CustomPageLayoutMapping -PublishingPage mypage.aspx -Folder c:\\\\temp -Overwrite Analyzes the page layout of page mypage.aspx and exports this to a file in folder c:\\temp EXAMPLE 3 Export-PnPPageMapping -BuiltInWebPartMapping -Folder c:\\\\temp -Overwrite Exports the built in webpart mapping to a file in folder c:\\temp. Use this a starting basis if you want to tailer the web part mapping behavior. PARAMETERS -AnalyzeOOBPageLayouts Set this flag if you also want to analyze the OOB page layouts...typically these are covered via the default mapping, but if you've updated these page layouts you might want to analyze them again Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -BuiltInPageLayoutMapping Exports the builtin pagelayout mapping file (only needed for publishing page transformation) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -BuiltInWebPartMapping Exports the builtin web part mapping file Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -CustomPageLayoutMapping Analyzes the pagelayouts in the current publishing portal and exports them as a pagelayout mapping file Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Folder The folder to created the mapping file(s) in Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Logging Outputs analyzer logging to the console Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Overwrite Overwrites existing mapping files Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -PublishingPage The name of the publishing page to export a page layout mapping file for Type: PagePipeBind Parameter Sets: (All) Required: False Position: 0 Accept pipeline input: True -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Export-PnPPowerApp.html": {
    "href": "cmdlets/Export-PnPPowerApp.html",
    "title": "Export-PnPPowerApp | PnP PowerShell",
    "keywords": "Export-PnPPowerApp SYNOPSIS Required Permissions Azure: management.azure.com Exports a Microsoft Power App SYNTAX Export-PnPPowerApp [-Environment <PowerPlatformEnvironmentPipeBind>] -Identity <PowerAppPipeBind> [-PackageDisplayName <String>] [-PackageDescription <String>] [-PackageCreatedBy <String>] [-PackageSourceEnvironment <String>] [-OutPath <String>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet exports a Microsoft Power App as zip package. Many times exporting a Microsoft Power App will not be possible due to various reasons such as connections having gone stale, SharePoint sites referenced no longer existing or other configuration errors in the App. To display these errors when trying to export a App, provide the -Verbose flag with your export request. If not provided, these errors will silently be ignored. EXAMPLES Example 1 Export-PnPPowerApp -Identity fba63225-baf9-4d76-86a1-1b42c917a182 -OutPath \"C:\\Users\\user1\\Downloads\\test_20230408152624.zip\" This will export the specified Microsoft Power App from the default Power Platform environment as an output to the path specified in the command as -OutPath Example 2 Export-PnPPowerApp -Environment (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") -Identity fba63225-baf9-4d76-86a1-1b42c917a182 -OutPath \"C:\\Users\\user1\\Downloads\\test_20230408152624.zip\" -PackageDisplayName \"MyAppDisplayName\" -PackageDescription \"Package exported using PnP Powershell\" -PackageCreatedBy \"Siddharth Vaghasia\" -PackageSourceEnvironment \"UAT Environment\" This will export the specified Microsoft Power App from the specified Power Platform environment with metadata specified Example 3 Get-PnPPowerPlatformEnvironment | foreach { Get-PnPPowerApp -Environment $_.Name } | foreach { Export-PnPPowerApp -Environment $_.Properties.EnvironmentDetails.Name -Identity $_ -OutPath \"C:\\Users\\user1\\Downloads\\$($_.Name).zip\" } This will export all the Microsoft Power Apps available within the tenant from all users from all the available Power Platform environments as a ZIP package for each of them to a local folder C:\\Users\\user1\\Downloads PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Identity The value of the Name property of a Microsoft Power App that you wish to export Type: PowerAppPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If specified and the file exported already exists it will be overwritten without confirmation. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OutPath Optional file name of the file to export to. If not provided, it will store the ZIP package to the current location from where the cmdlet is being run. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PackageCreatedBy The name of the person to be used as the creator of the exported package Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PackageDescription The description to use in the exported package Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PackageDisplayName The display name to use in the exported package Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PackageSourceEnvironment The name of the source environment from which the exported package was taken Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Export-PnPTaxonomy.html": {
    "href": "cmdlets/Export-PnPTaxonomy.html",
    "title": "Export-PnPTaxonomy | PnP PowerShell",
    "keywords": "Export-PnPTaxonomy SYNOPSIS Exports a taxonomy to either the output or to a file. SYNTAX Export-PnPTaxonomy [-TermSetId <Guid>] [-IncludeID] [-ExcludeDeprecated] [-Path <String>] [-TermStoreName <String>] [-Force] [-Delimiter <String>] [-Lcid <Int32>] [-Encoding <Encoding>] [-Connection <PnPConnection>] DESCRIPTION Allows to export a taxonomy to either the output or to a file. EXAMPLES EXAMPLE 1 Export-PnPTaxonomy Exports the full taxonomy to the standard output EXAMPLE 2 Export-PnPTaxonomy -Path c:\\output.txt Exports the full taxonomy the file output.txt EXAMPLE 3 Export-PnPTaxonomy -Path c:\\output.txt -TermSetId f6f43025-7242-4f7a-b739-41fa32847254 Exports the term set with the specified id EXAMPLE 4 Export-PnPTaxonomy -Path c:\\output.txt -TermSetId f6f43025-7242-4f7a-b739-41fa32847254 -Lcid 1044 Exports the term set with the specified id using Norwegian labels PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Delimiter The path delimiter to be used, by default this is '|' Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Encoding Defaults to Unicode Type: Encoding Parameter Sets: (All) Accepted values: Unicode, ASCII, BigEndianUnicode, UTF32, UTF7, UTF8 Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeID If specified will include the ids of the taxonomy items in the output. Format: <label>;#<guid> Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludeDeprecated If specified will exclude the deprecated taxonomy items in the output. Applicable only if you specify TermSetId or TermStoreName. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludeDeprecated If specified will exclude the deprecated taxonomy items in the output. Applicable only if you specify TermSetId or TermStoreName. Type: SwitchParameter Parameter Sets: TermSet Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid Specify the language code for the exported terms Type: Int32 Parameter Sets: TermSet Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path File to export the data to. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermSetId If specified, will export the specified termset only Type: Guid Parameter Sets: TermSet Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermStoreName Term store to export; if not specified the default term store is used. Type: String Parameter Sets: TermSet Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Export-PnPTermGroupToXml.html": {
    "href": "cmdlets/Export-PnPTermGroupToXml.html",
    "title": "Export-PnPTermGroupToXml | PnP PowerShell",
    "keywords": "Export-PnPTermGroupToXml SYNOPSIS Exports a taxonomy TermGroup to either the output or to an XML file. SYNTAX Export-PnPTermGroupToXml [-Identity <TermGroupPipeBind>] [-Out <String>] [-FullTemplate] [-Encoding <Encoding>] [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to export a taxonomy TermGroup to either the output or to an XML file. EXAMPLES EXAMPLE 1 Export-PnPTermGroupToXml Exports all term groups in the default site collection term store to the standard output EXAMPLE 2 Export-PnPTermGroupToXml -Out output.xml Exports all term groups in the default site collection term store to the file 'output.xml' in the current folder EXAMPLE 3 Export-PnPTermGroupToXml -Out c:\\output.xml -Identity \"Test Group\" Exports the term group with the specified name to the file 'output.xml' located in the root folder of the C: drive. EXAMPLE 4 $termgroup = Get-PnPTermGroup -Identity Test $termgroup | Export-PnPTermGroupToXml -Out c:\\output.xml Retrieves a termgroup and subsequently exports that term group to a the file named 'output.xml' PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Encoding Defaults to Unicode Type: Encoding Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FullTemplate If specified, a full provisioning template structure will be returned Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID or name of the termgroup Type: TermGroupPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Out File to export the data to. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Export-PnPUserInfo.html": {
    "href": "cmdlets/Export-PnPUserInfo.html",
    "title": "Export-PnPUserInfo | PnP PowerShell",
    "keywords": "Export-PnPUserInfo SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Export user information from site user information list. SYNTAX Export-PnPUserInfo -LoginName <String> [-Site <String>] DESCRIPTION Export user information from the site user information list. If the Site parameter has not been specified, the current connect to site will be used. EXAMPLES EXAMPLE 1 Export-PnPUserInfo -LoginName user@domain.com -Site \"https://yoursite.sharepoint.com/sites/team\" This exports user data with the email address user@domain.com from the site collection specified. EXAMPLE 2 Export-PnPUserInfo -LoginName user@domain.com -Site \"https://yoursite.sharepoint.com/sites/team\" | ConvertTo-Csv | Out-File MyFile.csv This exports user data with the email address user@domain.com from the site collection specified, converts it to a CSV format and writes the result to the file MyFile.csv. PARAMETERS -LoginName Specifies the login name of the user to export. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Specifies the URL of the site collection to which you want to export the user. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Export-PnPUserProfile.html": {
    "href": "cmdlets/Export-PnPUserProfile.html",
    "title": "Export-PnPUserProfile | PnP PowerShell",
    "keywords": "Export-PnPUserProfile SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Export user profile data. SYNTAX Export-PnPUserProfile -LoginName <String> DESCRIPTION Export user profile data. EXAMPLES EXAMPLE 1 Export-PnPUserProfile -LoginName user@domain.com This exports user profile data with the email address user@domain.com. EXAMPLE 2 Export-PnPUserProfile -LoginName user@domain.com | ConvertTo-Csv | Out-File MyFile.csv This exports user profile data with the email address user@domain.com, converts it to a CSV format and writes the result to the file MyFile.csv. PARAMETERS -LoginName Specifies the login name of the user to export. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Find-PnPFile.html": {
    "href": "cmdlets/Find-PnPFile.html",
    "title": "Find-PnPFile | PnP PowerShell",
    "keywords": "Find-PnPFile SYNOPSIS Finds a file in the virtual file system of the web. SYNTAX Web (Default) Find-PnPFile [-Match] <String> [-Connection <PnPConnection>] List Find-PnPFile [-Match] <String> -List <ListPipeBind> [-Connection <PnPConnection>] Folder Find-PnPFile [-Match] <String> -Folder <FolderPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to find a file in the virtual file system of the web. EXAMPLES EXAMPLE 1 Find-PnPFile -Match *.master Will return all masterpages located in the current web. EXAMPLE 2 Find-PnPFile -List \"Documents\" -Match *.pdf Will return all pdf files located in given list. EXAMPLE 3 Find-PnPFile -Folder \"Shared Documents/Sub Folder\" -Match *.docx Will return all docx files located in given folder. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder Folder object or relative url of a folder to query Type: FolderPipeBind Parameter Sets: Folder Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List List title, url or an actual List object to query Type: ListPipeBind Parameter Sets: List Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Match Wildcard query using * (any number of charactes) and ? (single character) Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: True RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAccessToken.html": {
    "href": "cmdlets/Get-PnPAccessToken.html",
    "title": "Get-PnPAccessToken | PnP PowerShell",
    "keywords": "Get-PnPAccessToken SYNOPSIS Returns the current Microsoft Graph OAuth Access token. If a Resource Type Name or Resource URL is specified, it will fetch the access token of the specified resource. SYNTAX Graph Token Get-PnPAccessToken [-ResourceTypeName] [-Decoded] [-Scopes] [-Connection <PnPConnection>] Specific resource by type Get-PnPAccessToken -ResourceTypeName <ResourceTypeName> [-Decoded] [-Scopes] [-Connection <PnPConnection>] Specific resource by URL Get-PnPAccessToken -ResourceUrl <String> [-Decoded] [-Scopes] [-Connection <PnPConnection>] List Permission Scopes in current access token Get-PnPAccessToken -ListPermissionScopes [-ResourceTypeName <String>] DESCRIPTION Returns the OAuth 2.0 Access Token. EXAMPLES EXAMPLE 1 Get-PnPAccessToken Gets the OAuth 2.0 Access Token to consume the Microsoft Graph API EXAMPLE 2 Get-PnPAccessToken -Decoded Gets the OAuth 2.0 Access Token to consume the Microsoft Graph API and shows the token with its content decoded EXAMPLE 3 Get-PnPAccessToken -ResourceTypeName SharePoint Gets the OAuth 2.0 Access Token to consume the SharePoint APIs and perform CSOM operations. EXAMPLE 4 Get-PnPAccessToken -ResourceTypeName ARM Gets the OAuth 2.0 Access Token to consume the Azure Resource Manager APIs and perform related operations. In PnP, you can use them in cmdlets related to Flow and PowerPlatform etc. EXAMPLE 5 Get-PnPAccessToken -ResourceUrl \"https://management.azure.com/.default\" Gets the OAuth 2.0 Access Token to consume the SharePoint APIs and perform CSOM operations. EXAMPLE 6 Get-PnPAccessToken -ListPermissionScopes Lists the current permission scopes for the Microsoft Graph API on the access token. Specify -ResourceTypeName to list permissions for other resource types, like SharePoint. PARAMETERS -ResourceTypeName Specify the Resource Type for which you want the access token. If not specified, it will by default return a Microsoft Graph access token. Type: ResourceTypeName Parameter Sets: Resource Type Name, Resource Type Name (decoded) Accepted values: Graph, SharePoint, ARM Required: False Position: Named Default value: Graph Accept pipeline input: False Accept wildcard characters: False -ResourceUrl Specify the Resource URL for which you want the access token, i.e. https://graph.microsoft.com/.default. If not specified, it will by default return a Microsoft Graph access token. Type: String Parameter Sets: Resource Url, Resource Url (decoded) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Decoded Returns the details from the access token in a decoded manner Type: SwitchParameter Parameter Sets: Resource Type Name (decoded), Resource Url (decoded) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scopes The scopes to retrieve the token for. Defaults to AllSites.FullControl Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListPermissionScopes If specified the current permission scopes on the access token will be listed Type: SwitchParameter Parameters Set: List Permission Scopes Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAlert.html": {
    "href": "cmdlets/Get-PnPAlert.html",
    "title": "Get-PnPAlert | PnP PowerShell",
    "keywords": "Get-PnPAlert SYNOPSIS Returns registered alerts for a user. SYNTAX Get-PnPAlert [[-List] <ListPipeBind>] [-User <UserPipeBind>] [-Title <String>] [-AllUsers] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve all registered alerts for given users. Using AllUsers option will allow to retrieve all alerts in the current site, regardless of the user or list it belongs to. EXAMPLES EXAMPLE 1 Get-PnPAlert Returns all registered alerts for the current user. EXAMPLE 2 Get-PnPAlert -List \"Demo List\" Returns all alerts registered on the given list for the current user. EXAMPLE 3 Get-PnPAlert -List \"Demo List\" -User \"i:0#.f|membership|Alice@contoso.onmicrosoft.com\" Returns all alerts registered on the given list for the specified user. EXAMPLE 4 Get-PnPAlert -Title \"Demo Alert\" Returns all alerts with the given title for the current user. Title comparison is case sensitive. EXAMPLE 5 Get-PnPAlert -AllUsers Returns all alerts that exist in the current site, regardless of the user or list it belongs to. EXAMPLE 6 Get-PnPAlert -List \"Demo List\" -AllUsers Returns all alerts that exist in the current site for the list \"Demo List\", regardless of the user it belongs to. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Title Retrieve alerts with this title. Title comparison is case sensitive. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User User to retrieve the alerts for (User ID, login name or actual User object). Skip this parameter to retrieve the alerts for the current user. Note: Only site owners can retrieve alerts for other users. Type: UserPipeBind Parameter Sets: Alerts for a specific user Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllUsers Retrieves alerts for all users in the current site Type: SwitchParameter Parameter Sets: Alerts for all users Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPApp.html": {
    "href": "cmdlets/Get-PnPApp.html",
    "title": "Get-PnPApp | PnP PowerShell",
    "keywords": "Get-PnPApp SYNOPSIS Returns the available apps from the app catalog SYNTAX Get-PnPApp [-Identity <AppMetadataPipeBind>] [-Scope <AppCatalogScope>] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve available apps from the app catalog. In order to get apps from site collection scoped app catalog set Scope option to Site. EXAMPLES EXAMPLE 1 Get-PnPApp This will return all available apps from the tenant app catalog. It will list the installed version in the current site. EXAMPLE 2 Get-PnPApp -Scope Site This will return all available apps from the site collection scoped app catalog. It will list the installed version in the current site. EXAMPLE 3 Get-PnPApp -Identity 2646ccc3-6a2b-46ef-9273-81411cbbb60f This will retrieve the specific app from the app catalog. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the Id of an app which is available in the app catalog Type: AppMetadataPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Defines which app catalog to use. Defaults to Tenant Type: AppCatalogScope Parameter Sets: (All) Accepted values: Tenant, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAppErrors.html": {
    "href": "cmdlets/Get-PnPAppErrors.html",
    "title": "Get-PnPAppErrors | PnP PowerShell",
    "keywords": "Get-PnPAppErrors SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns application errors. SYNTAX Get-PnPAppErrors -ProductId <Guid> [-StartTimeInUtc <DateTime>] [-EndTimeInUtc <DateTime>] DESCRIPTION The Get-PnPAppErrors cmdlet returns application monitoring errors (if available) for the application that is specified by ProductId between StartTimeInUtc in Coordinated Universal Time (UTC) and EndTimeInUtc in UTC. Based on server configuration, errors are available for a limited time. The default is seven days. Older errors are purged. Date time values that are older than 50 years or later than 20 years from today are considered invalid Each error includes the error message, time in UTC that error happened, the site where the error happened, and the error type. Values for error type are as follows: 0 - None, 1 - Install Error, 2 - Upgrade Error, 3 - Runtime Error. EXAMPLES EXAMPLE 1 Get-PnPAppErrors -ProductId a2681b0c-84fe-41bf-9a8e-d480ab81ba7b This example returns a collection of monitoring error messages for the application with the specified id. EXAMPLE 2 Get-PnPAppErrors -ProductId a2681b0c-84fe-41bf-9a8e-d480ab81ba7b -StartTimeInUtc (Get-Date).AddHours(-1).ToUniversalTime() This example returns a collection of monitoring error messages for the last hour for the application with the specified id. PARAMETERS -ProductId Specifies the application id Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartTimeInUtc Specifies the start time in UTC to search for monitoring errors. If not start time is given the default value of 72 hours before the current time is used. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EndTimeInUtc Specifies the end time in UTC to search for monitoring errors. If not start time is given the current time is used. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAppInfo.html": {
    "href": "cmdlets/Get-PnPAppInfo.html",
    "title": "Get-PnPAppInfo | PnP PowerShell",
    "keywords": "Get-PnPAppInfo SYNOPSIS Returns information about installed apps. SYNTAX By Id Get-PnPAppInfo -ProductId <Guid> By Name Get-PnPAppInfo -Name <String> DESCRIPTION The Get-PnPAppInfo cmdlet gets all the installed applications from an external marketplace or from the App Catalog that contain Name in their application names or the installed application with mentioned ProductId. The returned collection of installed applications contains Product ID (GUID), Product name and Source. EXAMPLES EXAMPLE 1 Get-PnPAppInfo -Name \"Excel Service\" This will return all installed apps from the external marketplace or from the App Catalog that contain \"Excel Service\" in the application name. EXAMPLE 2 Get-PnPAppInfo -ProductId 2646ccc3-6a2b-46ef-9273-81411cbbb60f This will return the installed application info for the app with the given product id. EXAMPLE 3 Get-PnPAppInfo -Name \" \" | Sort -Property Name Returns all installed apps that have a space in the name and sorts them by name in ascending order. PARAMETERS -Name Specifies the application's name. Type: String Parameter Sets: By Name Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ProductId Specifies the id of an application Type: Guid Parameter Sets: By Id Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPApplicationCustomizer.html": {
    "href": "cmdlets/Get-PnPApplicationCustomizer.html",
    "title": "Get-PnPApplicationCustomizer | PnP PowerShell",
    "keywords": "Get-PnPApplicationCustomizer SYNOPSIS Returns all SharePoint Framework client side extension application customizers SYNTAX Custom Action Id Get-PnPApplicationCustomizer [-Identity <Guid>] [-Scope <CustomActionScope>] [-ThrowExceptionIfCustomActionNotFound] [-Connection <PnPConnection>] [-Includes <String[]>] Client Side Component Id Get-PnPApplicationCustomizer -ClientSideComponentId <Guid> [-Scope <CustomActionScope>] [-ThrowExceptionIfCustomActionNotFound] [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION Returns all SharePoint Framework client side extension application customizers registered on the current web and/or site EXAMPLES EXAMPLE 1 Get-PnPApplicationCustomizer Returns the custom action representing the SharePoint Framework client side extension registrations registered on the current site collection and web. EXAMPLE 2 Get-PnPApplicationCustomizer -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 Returns the custom action representing the SharePoint Framework client side extension registration with the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2'. EXAMPLE 3 Get-PnPApplicationCustomizer -ClientSideComponentId aa66f67e-46c0-4474-8a82-42bf467d07f2 -Scope Web Returns the custom action(s) being registered for a SharePoint Framework solution having the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2' in its manifest from the current web. PARAMETERS -ClientSideComponentId The Client Side Component Id of the SharePoint Framework client side extension application customizer found in the manifest for which existing custom action(s) should be removed Type: Guid Parameter Sets: Client Side Component Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Identity of the SharePoint Framework client side extension application customizer to return. Omit to return all SharePoint Framework client side extension application customizer. Type: Guid Parameter Sets: Custom Action Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Scope of the SharePoint Framework client side extension application customizer, either Web, Site or All to return both (all is the default) Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThrowExceptionIfCustomActionNotFound Switch parameter if an exception should be thrown if the requested SharePoint Framework client side extension application customizer does not exist (true) or if omitted, nothing will be returned in case the SharePoint Framework client side extension application customizer does not exist Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned application customizer which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAuditing.html": {
    "href": "cmdlets/Get-PnPAuditing.html",
    "title": "Get-PnPAuditing | PnP PowerShell",
    "keywords": "Get-PnPAuditing SYNOPSIS Get the Auditing setting of a site SYNTAX Get-PnPAuditing [-Connection <PnPConnection>] DESCRIPTION Allows to get the auditing setting of the site. EXAMPLES EXAMPLE 1 Get-PnPAuditing Gets the auditing settings of the current site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAuthenticationRealm.html": {
    "href": "cmdlets/Get-PnPAuthenticationRealm.html",
    "title": "Get-PnPAuthenticationRealm | PnP PowerShell",
    "keywords": "Get-PnPAuthenticationRealm SYNOPSIS Returns the authentication realm SYNTAX Get-PnPAuthenticationRealm [[-Url] <String>] [-Connection <PnPConnection>] DESCRIPTION Gets the authentication realm for the current web EXAMPLES EXAMPLE 1 Get-PnPAuthenticationRealm This will get the authentication realm for the current connected site EXAMPLE 2 Get-PnPAuthenticationRealm -Url \"https://contoso.sharepoint.com\" This will get the authentication realm for https://contoso.sharepoint.com PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Specifies the URL of the site Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAvailableLanguage.html": {
    "href": "cmdlets/Get-PnPAvailableLanguage.html",
    "title": "Get-PnPAvailableLanguage | PnP PowerShell",
    "keywords": "Get-PnPAvailableLanguage SYNOPSIS Returns the available languages on the current web SYNTAX Get-PnPAvailableLanguage [[-Identity] <WebPipeBind>] [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION Allows to retrieve available languages from the current site. EXAMPLES EXAMPLE 1 Get-PnPAvailableLanguage This will return the available languages in the current web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The guid of the web or web object Type: WebPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned web language which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAvailableSensitivityLabel.html": {
    "href": "cmdlets/Get-PnPAvailableSensitivityLabel.html",
    "title": "Get-PnPAvailableSensitivityLabel | PnP PowerShell",
    "keywords": "Get-PnPAvailableSensitivityLabel SYNOPSIS Gets the Microsoft Purview sensitivity labels that are available within the tenant SYNTAX Get-PnPAvailableSensitivityLabel [-Identity <Guid>] [-User <AzureADUserPipeBind>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows retrieval of the available Microsoft Purview sensitivity labels in the currently connected tenant. You can retrieve all the labels, a specific label or all the labels available to a specific user. When connected with a delegate token, it will return the Microsoft Purview sensitivity labels for the user you logged on with. When connecting with an application token, it will return all available Microsoft Purview sensitivity labels on the tenant. For retrieval of the available classic Site Classification, use Get-PnPAvailableSiteClassification instead. EXAMPLES EXAMPLE 1 Get-PnPAvailableSensitivityLabel Returns all the Microsoft Purview sensitivity labels that exist on the tenant EXAMPLE 2 Get-PnPAvailableSensitivityLabel -User johndoe@tenant.onmicrosoft.com Returns all Microsoft Purview sensitivity labels which are available to the provided user EXAMPLE 3 Get-PnPAvailableSensitivityLabel -Identity 47e66706-8627-4979-89f1-fa7afeba2884 Returns a specific Microsoft Purview sensitivity label by its id PARAMETERS -Identity The Id of the Microsoft Purview sensitivity label to retrieve Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User The UPN, Id or instance of an Azure AD user for which you would like to retrieve the Microsoft Purview sensitivity labels available to this user Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Get-PnPAvailableSiteClassification.html": {
    "href": "cmdlets/Get-PnPAvailableSiteClassification.html",
    "title": "Get-PnPAvailableSiteClassification | PnP PowerShell",
    "keywords": "Get-PnPAvailableSiteClassification SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.Read.All, Directory.ReadWrite.All Returns the available classic Site Classifications for the tenant SYNTAX Get-PnPAvailableSiteClassification [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows for retrieving the configuration of the classic site classifications configured within the tenant. For the new Microsoft Purview sensitivity labels, use Get-PnPAvailableSensitivityLabel instead. EXAMPLES EXAMPLE 1 Get-PnPAvailableSiteClassification Returns the currently set site classifications for the tenant. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureACSPrincipal.html": {
    "href": "cmdlets/Get-PnPAzureACSPrincipal.html",
    "title": "Get-PnPAzureACSPrincipal | PnP PowerShell",
    "keywords": "Get-PnPAzureACSPrincipal SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the list of Azure ACS Principals SYNTAX Get-PnPAzureACSPrincipal [-Scope <AzureACSPrincipalScope>] [-IncludeSubsites <SwitchParameter>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet provides insight into the app registrations that have been done over time using AppRegNew.aspx. You could look at it as a (detailed) equivallent of AppPrincipals.aspx. This information can help to get insights into the app registrations that have been done on a tenant and prepare for the Azure Access Control Services (ACS) deprecation that will follow in the future. EXAMPLES EXAMPLE 1 Get-PnPAzureACSPrincipal Returns the Azure ACS principals EXAMPLE 2 Get-PnPAzureACSPrincipal -IncludeSubsites Returns the lists of Azure ACS principals installed in your site collection as well as the subsites. The ValidUntil property will not be populated in this scenario. EXAMPLE 3 Get-PnPAzureACSPrincipal -Scope Tenant Returns the lists of Azure ACS principals installed in your Tenant. This a very heavy operation, so it might take some time before we get the results. EXAMPLE 4 Get-PnPAzureACSPrincipal -Scope All -IncludeSubsites Returns the lists of all Azure ACS principals installed in your Tenant including subsites. This a very heavy operation, so it might take some time before we get the results. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope When specified, it determines the scope of the Azure ACS principals. Supported values are List, Web, Site, Tenant , All. Only with Tenant and All the ValidUntil property will be populated. For the other options it will not, this is by design and makes the cmdlet perform faster. Type: Enum (AzureACSPrincipalScope) Parameter Sets: (All) Required: False Position: Named Default value: List Accept pipeline input: False Accept wildcard characters: False -IncludeSubsites When specified, it determines whether we should use also search the subsites of the connected site collection and lists the Azure ACS principals. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureADActivityReportDirectoryAudit.html": {
    "href": "cmdlets/Get-PnPAzureADActivityReportDirectoryAudit.html",
    "title": "Get-PnPAzureADActivityReportDirectoryAudit | PnP PowerShell",
    "keywords": "Get-PnPAzureADActivityReportDirectoryAudit SYNOPSIS Required Permissions Microsoft Graph API: AuditLog.Read.All and Directory.Read.All Returns the audit logs generated by Azure AD. SYNTAX Get-PnPAzureADActivityReportDirectoryAudit [-Identity <string>] [-Filter <string>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet gets the list of audit logs generated by AzureAD. This includes audit logs generated by different services in Azure AD such as user, app, device and group Management, privileged identity management (PIM), access reviews, terms of use, identity protection, password management (self-service and admin password resets) and others. EXAMPLES Example 1 Get-PnPAzureADActivityReportDirectoryAudit Returns all audit logs generated by Azure AD. Example 2 Get-PnPAzureADActivityReportDirectoryAudit -Identity \"Directory_c3b82411-5445-4620-aace-6a684a252673_02R72_362975819\" Returns the audit log with specific ID. Example 3 Get-PnPAzureADActivityReportDirectoryAudit -Filter \"activityDateTime le 2018-01-24\" Returns the audit logs based on filter condition. PARAMETERS -Identity Specify the ID of the audit log. Type: string Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Filter Specify the Filter condition for the audit log report. Type: string Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureADActivityReportSignIn.html": {
    "href": "cmdlets/Get-PnPAzureADActivityReportSignIn.html",
    "title": "Get-PnPAzureADActivityReportSignIn | PnP PowerShell",
    "keywords": "Get-PnPAzureADActivityReportSignIn SYNOPSIS Required Permissions Microsoft Graph API: AuditLog.Read.All and Directory.Read.All Returns the sign in logs generated by Azure AD. SYNTAX Get-PnPAzureADActivityReportSignIn [-Identity <string>] [-Filter <string>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet gets the list of sign in logs generated by Azure AD. EXAMPLES EXAMPLE 1 Get-PnPAzureADActivityReportSignIn Returns all sign logs generated by Azure AD. EXAMPLE 2 Get-PnPAzureADActivityReportSignIn -Identity \"da364266-533d-3186-a8b2-44ee1c21af11\" Returns the sign in log with specific ID. EXAMPLE 3 Get-PnPAzureADActivityReportSignIn -Filter \"startsWith(appDisplayName,'Graph')\" Returns the sign in logs based on filter condition. PARAMETERS -Identity Specify the ID of the sign in log. Type: string Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Filter Specify the Filter condition for the sign in log report. Type: string Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureADApp.html": {
    "href": "cmdlets/Get-PnPAzureADApp.html",
    "title": "Get-PnPAzureADApp | PnP PowerShell",
    "keywords": "Get-PnPAzureADApp SYNOPSIS Required Permissions Microsoft Graph API: Application.Read.All Returns Azure AD App registrations. SYNTAX Identity (Default) Get-PnPAzureADApp [-Identity <AzureADAppPipeBind>] [-Connection <PnPConnection>] Filter Get-PnPAzureADApp -Filter <string> [-Connection <PnPConnection>] DESCRIPTION This cmdlets returns all app registrations, a specific one or ones matching a provided filter. EXAMPLES EXAMPLE 1 Get-PnPAzureADApp This returns all Azure AD App registrations. EXAMPLE 2 Get-PnPAzureADApp -Identity MyApp This returns the Azure AD App registration with the display name as 'MyApp'. EXAMPLE 3 Get-PnPAzureADApp -Identity 93a9772d-d0af-4ed8-9821-17282b64690e This returns the Azure AD App registration with the app id specified or the id specified. EXAMPLE 4 Get-PnPAzureADApp -Filter \"startswith(description, 'contoso')\" This returns the Azure AD App registrations with the description starting with \"contoso\". This example demonstrates using Advanced Query capabilities (see: https://learn.microsoft.com/graph/aad-advanced-queries?tabs=http#group-properties) PARAMETERS -Identity Specify the display name, id or app id. Type: AzureADAppPipeBind Parameter Sets: Identity Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Filter Specify the query to pass to Graph API in $filter. Type: String Parameter Sets: Filter Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureADAppPermission.html": {
    "href": "cmdlets/Get-PnPAzureADAppPermission.html",
    "title": "Get-PnPAzureADAppPermission | PnP PowerShell",
    "keywords": "Get-PnPAzureADAppPermission SYNOPSIS Required Permissions Microsoft Graph API: Application.Read.All Returns app permissions for Microsoft SharePoint and Microsoft Graph. SYNTAX Get-PnPAzureADAppPermission [-Identity <AzureADAppPipeBind>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet returns the appid, displayname and permissions set for Microsoft SharePoint and the Microsoft Graph APIs. EXAMPLES Example 1 Get-PnPAzureADAppPermission Returns all apps with all permissions. Example 2 Get-PnPAzureADAppPermission -Identity MyApp Returns permissions for the specified app. Example 2 Get-PnPAzureADAppPermission -Identity 93a9772d-d0af-4ed8-9821-17282b64690e Returns permissions for the specified app. PARAMETERS -Identity Specify the display name, id or app id. Type: AzureADAppPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureADAppSitePermission.html": {
    "href": "cmdlets/Get-PnPAzureADAppSitePermission.html",
    "title": "Get-PnPAzureADAppSitePermission | PnP PowerShell",
    "keywords": "Get-PnPAzureADAppSitePermission SYNOPSIS Required Permissions Microsoft Graph API: Sites.FullControl.All Returns Azure AD App permissions for a site. SYNTAX All Permissions Get-PnPAzureADAppSitePermission [-PermissionId <String>] [-Site <SitePipeBind>] [-Connection <PnPConnection>] By Permission Id Get-PnPAzureADAppSitePermission -PermissionId <String> [-Site <SitePipeBind>] [-Connection <PnPConnection>] By App Display Name or App Id Get-PnPAzureADAppSitePermission -AppIdentity <String> [-Site <SitePipeBind>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet returns app permissions for either the current or a given site. EXAMPLES EXAMPLE 1 Get-PnPAzureADAppSitePermission Returns the apps that have permissions for the currently connected site. Note that if PermissionId is not specified then the Roles property is not populated. This is a current API limitation. EXAMPLE 2 Get-PnPAzureADAppSitePermission -Site https://contoso.sharepoint.com/sites/projects Returns the apps that have permissions for the site specified. Note that you are required to have the SharePoint Administrator role in your tenant to be able to use this command. EXAMPLE 3 Get-PnPAzureADAppSitePermission -PermissionId TowaS50fG1zLnNwLmV4dHwxYxNmI0OTI1 Returns the specific app permission details for the given permission id for the current site. EXAMPLE 4 Get-PnPAzureADAppSitePermission -AppIdentity \"Test App\" Returns the specific app permission details for the app with the provided name. EXAMPLE 5 Get-PnPAzureADAppSitePermission -AppIdentity \"14effc36-dc8b-4f68-8919-f6beb7d847b3\" Returns the specific app permission details for the app with the provided Id. PARAMETERS -AppIdentity You can specify either the Display Name or the AppId to specifically retrieve the permission for. Type: String Parameter Sets: By App Display Name or App Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PermissionId If specified the permission with that id specified will be retrieved. Type: String Parameter Sets: By Permission Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Optional url of a site to retrieve the permissions for. Defaults to the current site. Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: Currently connected site Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureADGroup.html": {
    "href": "cmdlets/Get-PnPAzureADGroup.html",
    "title": "Get-PnPAzureADGroup | PnP PowerShell",
    "keywords": "Get-PnPAzureADGroup SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.Read.All, Directory.ReadWrite.All, Group.Read.All, Group.ReadWrite.All, GroupMember.Read.All, GroupMember.ReadWrite.All Gets one Azure Active Directory group or a list of Azure Active Directory groups. This can be a security, distribution or Microsoft 365 group. SYNTAX Get-PnPAzureADGroup [-Identity <AzureADGroupPipeBind>] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve a list of Azure Active Directory groups. Those can be a security, distribution or Microsoft 365 group. By specifying Identity option it is possible to get a single group. EXAMPLES EXAMPLE 1 Get-PnPAzureADGroup Retrieves all the Azure Active Directory groups. EXAMPLE 2 Get-PnPAzureADGroup -Identity $groupId Retrieves a specific Azure Active Directory group based on its ID. EXAMPLE 3 Get-PnPAzureADGroup -Identity $groupDisplayName Retrieves a specific Azure Active Directory group that has the given DisplayName. EXAMPLE 4 Get-PnPAzureADGroup -Identity $groupSiteMailNickName Retrieves a specific Azure Active Directory group for which the email address equals the provided mail nickName. EXAMPLE 5 Get-PnPAzureADGroup -Identity $group Retrieves a specific Azure Active Directory group based on its group object instance. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the Azure Active Directory group. Either specify an id, a display name, email address, or a group object. Type: AzureADGroupPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureADGroupMember.html": {
    "href": "cmdlets/Get-PnPAzureADGroupMember.html",
    "title": "Get-PnPAzureADGroupMember | PnP PowerShell",
    "keywords": "Get-PnPAzureADGroupMember SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.Read.All, Directory.ReadWrite.All, Group.Read.All, Group.ReadWrite.All, GroupMember.Read.All, GroupMember.ReadWrite.All, User.Read.All, User.ReadWrite.All Gets members of a particular Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. SYNTAX Get-PnPAzureADGroupMember -Identity <AzureADGroupPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to list members from given Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. EXAMPLES EXAMPLE 1 Get-PnPAzureADGroupMember -Identity $groupId Retrieves all the members of a specific Azure Active Directory group based on its ID. EXAMPLE 2 Get-PnPAzureADGroupMember -Identity $group Retrieves all the members of a specific Azure Active Directory group based on the group's object instance. PARAMETERS -Identity The Identity of the Azure Active Directory group. Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureADGroupOwner.html": {
    "href": "cmdlets/Get-PnPAzureADGroupOwner.html",
    "title": "Get-PnPAzureADGroupOwner | PnP PowerShell",
    "keywords": "Get-PnPAzureADGroupOwner SYNOPSIS Required Permissions Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All, User.Read.All, User.ReadWrite.All Gets owners of a particular Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. SYNTAX Get-PnPAzureADGroupOwner -Identity <AzureADGroupPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to list owners from a given Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. EXAMPLES EXAMPLE 1 Get-PnPAzureADGroupOwner -Identity $groupId Retrieves all the owners of a specific Azure Active Directory group based on its ID. EXAMPLE 2 Get-PnPAzureADGroupOwner -Identity $group Retrieves all the owners of a specific Azure Active Directory group based on the group's object instance. PARAMETERS -Identity The identity of the Azure Active Directory group. Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureADServicePrincipal.html": {
    "href": "cmdlets/Get-PnPAzureADServicePrincipal.html",
    "title": "Get-PnPAzureADServicePrincipal | PnP PowerShell",
    "keywords": "Get-PnPAzureADServicePrincipal SYNOPSIS Required Permissions Microsoft Graph API: Any of Application.Read.All, Application.ReadWrite.All, Directory.Read.All, Directory.ReadWrite.All Gets service principal/application registrations in Azure Active Directory. SYNTAX All Get-PnPAzureADServicePrincipal [-Filter <string>] [-Connection <PnPConnection>] By App Id Get-PnPAzureADServicePrincipal -AppId <Guid> [-Connection <PnPConnection>] By Object Id Get-PnPAzureADServicePrincipal -ObjectId <Guid> [-Connection <PnPConnection>] By App Name Get-PnPAzureADServicePrincipal -AppName <String> [-Connection <PnPConnection>] By built in type Get-PnPAzureADServicePrincipal -BuiltInType <ServicePrincipalBuiltInType> [-Connection <PnPConnection>] DESCRIPTION Allows retrieval of all service principals/app registrations in Azure Active Directory or a specific service principal/app registration based on the AppId, ObjectId or AppName. This will include both application registrations as well as enterprise applications in Azure Active Directory. EXAMPLES EXAMPLE 1 Get-PnPAzureADServicePrincipal Retrieves all application registrations and enterprise applications from Azure Active Directory. EXAMPLE 2 Get-PnPAzureADServicePrincipal -AppId b8c2a8aa-33a0-43f4-a9d3-fe2851c5293e Retrieves the application registration with AppId/ClientId b8c2a8aa-33a0-43f4-a9d3-fe2851c5293e from Azure Active Directory. EXAMPLE 3 Get-PnPAzureADServicePrincipal -ObjectId 06ca9985-367a-41ba-9c44-b2ed88c19aec Retrieves the application registration with ObjectId 06ca9985-367a-41ba-9c44-b2ed88c19aec from Azure Active Directory. EXAMPLE 4 Get-PnPAzureADServicePrincipal -AppName \"My application\" Retrieves the application registration with the name \"My application\" from Azure Active Directory. EXAMPLE 5 Get-PnPAzureADServicePrincipal -Filter \"startswith(description, 'contoso')\" Retrieves the application registration with the description starting with \"contoso\" from Azure Active Directory. This example demonstrates using Advanced Query capabilities (see: https://learn.microsoft.com/graph/aad-advanced-queries?tabs=http#group-properties). PARAMETERS -AppId The guid of the application registration its App Id/Client Id to retrieve. Type: Guid Parameter Sets: By App Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ObjectId The guid of the application registration its object Id to retrieve. Type: Guid Parameter Sets: By Object Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AppName The name of the application registration to retrieve. Type: String Parameter Sets: By App Name Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Filter Specify the query to pass to Graph API in $filter. Type: String Parameter Sets: Filter Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Get-PnPAzureADServicePrincipalAssignedAppRole.html": {
    "href": "cmdlets/Get-PnPAzureADServicePrincipalAssignedAppRole.html",
    "title": "Get-PnPAzureADServicePrincipalAssignedAppRole | PnP PowerShell",
    "keywords": "Get-PnPAzureADServicePrincipalAssignedAppRole SYNOPSIS Required Permissions Microsoft Graph API: Any of Application.Read.All, Directory.Read.All, Application.ReadWrite.All, Directory.ReadWrite.All Gets the app roles currently assigned to a service principal/application registration in Azure Active Directory. SYNTAX Get-PnPAzureADServicePrincipalAssignedAppRole -Principal <ServicePrincipalPipeBind> [-Identity <ServicePrincipalAppRoleBind>] [-Connection <PnPConnection>] DESCRIPTION Allows retrieval of currently assigned app roles of a specific service principals/app registration in Azure Active Directory. EXAMPLES EXAMPLE 1 Get-PnPAzureADServicePrincipalAssignedAppRole -Principal 797ee8a7-a950-4eb8-945d-7f10cc68a933 Retrieves all app roles currently assigned to the application registration with the object Id 797ee8a7-a950-4eb8-945d-7f10cc68a933 EXAMPLE 2 Get-PnPAzureADServicePrincipalAssignedAppRole -Principal \"My application\" Retrieves all app roles currently assigned to the application registration with the name \"My application\". EXAMPLE 3 Get-PnPAzureADServicePrincipal -AppId fd885e69-86dc-4f3b-851e-ad04920031cf | Get-PnPAzureADServicePrincipalAssignedAppRole Retrieves all app roles currently assigned to the application registration with the app Id/Client Id fd885e69-86dc-4f3b-851e-ad04920031cf PARAMETERS -Principal The object id, name or instance of the service principal/application registration to list the currently assigned to app roles for. Type: ServicePrincipalPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -Identity The object id, name or instance of the application role to retrieve from the currently assigned app roles of the service principal/application registration. If nothing returns, it means this specific role is currently not assigned to the service principal/application registration. Type: ServicePrincipalAppRoleBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Get-PnPAzureADServicePrincipalAvailableAppRole.html": {
    "href": "cmdlets/Get-PnPAzureADServicePrincipalAvailableAppRole.html",
    "title": "Get-PnPAzureADServicePrincipalAvailableAppRole | PnP PowerShell",
    "keywords": "Get-PnPAzureADServicePrincipalAvailableAppRole SYNOPSIS Required Permissions Microsoft Graph API: Any of Application.Read.All, Directory.Read.All, Application.ReadWrite.All, Directory.ReadWrite.All Gets the available app roles available on a service principal/application registration in Azure Active Directory. SYNTAX Get-PnPAzureADServicePrincipalAvailableAppRole -Principal <ServicePrincipalPipeBind> [-Identity <ServicePrincipalAppRoleBind>] [-Connection <PnPConnection>] DESCRIPTION Allows retrieval of all available app roles of a specific service principals/app registration in Azure Active Directory. To retrieve the app roles currently assigned to a specific service principal/application registration, use Get-PnPAzureADServicePrincipalAssignedAppRole instead. EXAMPLES EXAMPLE 1 Get-PnPAzureADServicePrincipalAvailableAppRole -Principal 797ee8a7-a950-4eb8-945d-7f10cc68a933 Retrieves all app roles of the application registration with the object Id 797ee8a7-a950-4eb8-945d-7f10cc68a933 EXAMPLE 2 Get-PnPAzureADServicePrincipalAvailableAppRole -Principal \"My application\" Retrieves all app roles of the application registration with the name \"My application\". EXAMPLE 3 Get-PnPAzureADServicePrincipal -AppId fd885e69-86dc-4f3b-851e-ad04920031cf | Get-PnPAzureADServicePrincipalAvailableAppRole Retrieves all app roles of the application registration with the app Id/Client Id fd885e69-86dc-4f3b-851e-ad04920031cf EXAMPLE 4 Get-PnPAzureADServicePrincipal -BuiltInType MicrosoftGraph | Get-PnPAzureADServicePrincipalAvailableAppRole -Identity \"User.ReadWrite.All\" Retrieves the app role details of the role \"User.ReadWrite.All\" of the built in Microsoft Graph application registration. PARAMETERS -Principal The object id, name or instance of the service principal/application registration to list the app roles for. Type: ServicePrincipalPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -Identity The object id, name or instance of the application role to retrieve from the service principal/application registration. Type: ServicePrincipalAppRoleBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Get-PnPAzureADUser.html": {
    "href": "cmdlets/Get-PnPAzureADUser.html",
    "title": "Get-PnPAzureADUser | PnP PowerShell",
    "keywords": "Get-PnPAzureADUser SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.Read.All, Directory.ReadWrite.All, User.Read.All, User.ReadWrite.All Retrieves users from Azure Active Directory. By default the following properties will be loaded: BusinessPhones, DisplayName, GivenName, JobTitle, Mail, MobilePhone, OfficeLocation, PreferredLanguage, Surname, UserPrincipalName, Id, AccountEnabled SYNTAX Return a list (Default) Get-PnPAzureADUser [-Filter <String>] [-OrderBy <String>] [-Select <String[]>] [-StartIndex <Int32>] [-EndIndex<Int32>] [-Connection <PnPConnection>] Return by specific ID Get-PnPAzureADUser [-Identity <String>] [-Select <String[]>] [-Connection <PnPConnection>] Return the delta Get-PnPAzureADUser [-Filter <String>] [-OrderBy <String>] [-Select <String[]>] [-Delta] [-DeltaToken <String>] [-StartIndex <Int32>] [-EndIndex<Int32>] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve a single user or a list of users from Azure Active Directory. EXAMPLES EXAMPLE 1 Get-PnPAzureADUser Retrieves all users from Azure Active Directory. EXAMPLE 2 Get-PnPAzureADUser -EndIndex 50 Retrieves the first 50 users from Azure Active Directory. Notice that you have no control over who will be in this batch of 50 unless you combine it with the -Filter and/or -OrderBy parameters. EXAMPLE 3 Get-PnPAzureADUser -Identity 328c7693-5524-44ac-a946-73e02d6b0f98 Retrieves the user from Azure Active Directory with the id 328c7693-5524-44ac-a946-73e02d6b0f98 EXAMPLE 4 Get-PnPAzureADUser -Identity john@contoso.com Retrieves the user from Azure Active Directory with the user principal name john@contoso.com. EXAMPLE 5 Get-PnPAzureADUser -Identity john@contoso.com -Select \"DisplayName\",\"extension_3721d05137db455ad81aa442e3c2d4f9_extensionAttribute1\" Retrieves only the DisplayName and extensionAttribute1 properties of the user from Azure Active Directory which has the user principal name john@contoso.com. EXAMPLE 6 Get-PnPAzureADUser -Filter \"accountEnabled eq false\" Retrieves all the disabled users from Azure Active Directory. EXAMPLE 7 Get-PnPAzureADUser -Filter \"startswith(DisplayName, 'John')\" -OrderBy \"DisplayName\" Retrieves all the users from Azure Active Directory of which their DisplayName starts with 'John' and sort the results by the DisplayName. EXAMPLE 8 Get-PnPAzureADUser -Delta Retrieves all the users from Azure Active Directory and includes a delta DeltaToken which can be used by providing -DeltaToken <token> to query for changes to users in Active Directory since this run. EXAMPLE 9 Get-PnPAzureADUser -Delta -DeltaToken abcdef Retrieves all the users from Azure Active Directory which have had changes since the provided DeltaToken was given out. EXAMPLE 10 Get-PnPAzureADUser -StartIndex 10 -EndIndex 20 Retrieves the 10th through the 20th user from Azure Active Directory. Notice that you have no control over which users will be in this batch of 10 users. PARAMETERS -Delta Retrieves all users and provides a SkipToken delta token to allow to query for changes since this run when querying again by adding -DeltaToken to the command. Note that using -Select and -Filter in combination with this parameter is limited. More information on this can be found here. Type: SwitchParameter Parameter Sets: Return the delta Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DeltaToken The change token provided during the previous run with -Delta to query for the changes to user objects made in Azure Active Directory since that run. Type: String Parameter Sets: Return the delta Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Filter Includes a filter to the retrieval of the users. Use OData instructions to construct the filter, i.e. \"startswith(DisplayName, 'John')\". Type: String Parameter Sets: Return a list, Return the delta Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Returns the user with the provided user id. Type: String Parameter Sets: Return by specific ID Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OrderBy Includes a custom sorting instruction to the retrieval of the users. Use OData syntax to construct the orderby, i.e. \"DisplayName desc\". Type: String Parameter Sets: Return a list, Return the delta Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Select Allows providing an array with the property names of specific properties to return. If not provided, the default properties will be returned. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartIndex Allows defining the first result to return. Useful for i.e. pagination. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EndIndex Allows defining the last result to return. Useful for i.e. pagination. If omitted, it will return all available users from Azure Active Directory. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: $null Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureCertificate.html": {
    "href": "cmdlets/Get-PnPAzureCertificate.html",
    "title": "Get-PnPAzureCertificate | PnP PowerShell",
    "keywords": "Get-PnPAzureCertificate SYNOPSIS Get PEM values and manifest settings for an existing certificate (.pfx) for use when using CSOM via an app-only ADAL application. See https://github.com/SharePoint/PnP-PowerShell/tree/master/Samples/SharePoint.ConnectUsingAppPermissions for a sample on how to get started. KeyCredentials contains the ADAL app manifest sections. Certificate contains the PEM encoded certificate. PrivateKey contains the PEM encoded private key of the certificate. SYNTAX Get-PnPAzureCertificate -Path <String> [-Password <SecureString>] DESCRIPTION Allows to PEM values and manifest settings for an existing certificate (.pfx) for use when using CSOM via an app-only ADAL application. EXAMPLES EXAMPLE 1 Get-PnPAzureCertificate -Path \"mycert.pfx\" This will output PEM values and ADAL app manifest settings for the certificate mycert.pfx. EXAMPLE 2 Get-PnPAzureCertificate -Path \"mycert.pfx\" -Password (ConvertTo-SecureString -String \"YourPassword\" -AsPlainText -Force) This will output PEM values and ADAL app manifest settings for the certificate mycert.pfx which has the password YourPassword. EXAMPLE 3 Get-PnPAzureCertificate -Path \"mycert.cer\" | clip Output the JSON snippet which needs to be replaced in the application manifest file and copies it to the clipboard PARAMETERS -Password Password to the certificate (*.pfx) Type: SecureString Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Path to the certificate (*.pfx) Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPBrowserIdleSignout.html": {
    "href": "cmdlets/Get-PnPBrowserIdleSignout.html",
    "title": "Get-PnPBrowserIdleSignout | PnP PowerShell",
    "keywords": "Get-PnPBrowserIdleSignout SYNOPSIS Used to retrieve the current configuration values for Idle session sign-out policy. SYNTAX Get-PnPBrowserIdleSignout DESCRIPTION Use this cmdlet to retrieve the current configuration values for Idle session sign-out policy, the time at which users are warned and subsequently signed out of Microsoft 365 after a period of browser inactivity in SharePoint and OneDrive. EXAMPLES EXAMPLE 1 Get-PnPBrowserIdleSignout This example retrieves the current configuration values for Idle session sign-out. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPBuiltInDesignPackageVisibility.html": {
    "href": "cmdlets/Get-PnPBuiltInDesignPackageVisibility.html",
    "title": "Get-PnPBuiltInDesignPackageVisibility | PnP PowerShell",
    "keywords": "Get-PnPBuiltInDesignPackageVisibility SYNOPSIS Gets the visibility of the available built-in Design Packages. SYNTAX Get-PnPBuiltInDesignPackageVisibility [-DesignPackage <DesignPackageType>] DESCRIPTION Use this cmdlet to retrieve the current visibility state of each built-in design package. EXAMPLES EXAMPLE 1 Get-PnPBuiltInDesignPackageVisibility -DesignPackage Showcase This example retrieves the current visibility state of Showcase built-in design package. EXAMPLE 2 Get-PnPBuiltInDesignPackageVisibility This example retrieves the current visibility state of each built-in design package. PARAMETERS -DesignPackage Name of the design package, available names are Topic Showcase Blank TeamSite Type: DesignPackageType Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPBuiltInSiteTemplateSettings.html": {
    "href": "cmdlets/Get-PnPBuiltInSiteTemplateSettings.html",
    "title": "Get-PnPBuiltInSiteTemplateSettings | PnP PowerShell",
    "keywords": "Get-PnPBuiltInSiteTemplateSettings SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieves the current configuration of the built into SharePoint Online site templates. SYNTAX Get-PnPBuiltInSiteTemplateSettings [-Identity <BuiltInSiteTemplateSettingsPipeBind>] [-Template <BuiltInSiteTemplates>] [-Connection <PnPConnection>] DESCRIPTION Retrieves the current configuration of the built into SharePoint Online site templates. EXAMPLES EXAMPLE 1 Get-PnPBuiltInSiteTemplateSettings Returns all available configuration for the all of built into SharePoint Online site templates. If no configuration has been set previously for a template, no configuration for it will be returned, meaning it will be visible. EXAMPLE 2 Get-PnPBuiltInSiteTemplateSettings -Identity 9522236e-6802-4972-a10d-e98dc74b3344 Returns the configuration for the Event Planning built into SharePoint Online site template. EXAMPLE 3 Get-PnPBuiltInSiteTemplateSettings -Template CrisisManagement Returns the configuration for the Crisis Management built into SharePoint Online site template. EXAMPLE 4 Get-PnPBuiltInSiteTemplateSettings -Identity 00000000-0000-0000-0000-000000000000 Returns the default configuration for the built into SharePoint Online site templates. EXAMPLE 5 Get-PnPBuiltInSiteTemplateSettings -Template All Returns the default configuration for the built into SharePoint Online site templates. PARAMETERS -Identity Id of the built into SharePoint Online site template to return configuration settings for. If no configuration has been set previously for a template, no configuration for it will be returned, meaning it will be visible. See https://learn.microsoft.com/powershell/module/sharepoint-online/set-spobuiltinsitetemplatesettings?view=sharepoint-ps#description for the full list of available types. Type: Guid Parameter Sets: ByIdentity Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template Internal name of the built into SharePoint Online site template to return configuration settings for. If no configuration has been set previously for a template, no configuration for it will be returned, meaning it will be visible. Type: BuiltInSiteTemplates Parameter Sets: ByTemplate Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPChangeLog.html": {
    "href": "cmdlets/Get-PnPChangeLog.html",
    "title": "Get-PnPChangeLog | PnP PowerShell",
    "keywords": "Get-PnPChangeLog SYNOPSIS Returns the changelog for PnP PowerShell SYNTAX Get-PnPChangeLog [-Nightly] DESCRIPTION This cmdlets returns the changelog in markdown format. It is retrieved dynamically from GitHub. EXAMPLES EXAMPLE 1 Get-PnPChangeLog Returns the changelog for the currently released version. EXAMPLE 2 Get-PnPChangeLog -Nightly Returns the changelog for the current nightly build. PARAMETERS -Nightly Return the changelog for the nightly build Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPClientSidePage.html": {
    "href": "cmdlets/Get-PnPClientSidePage.html",
    "title": "Get-PnPClientSidePage | PnP PowerShell",
    "keywords": "Get-PnPClientSidePage SYNOPSIS This is an alias for Get-PnPPage. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPCompatibleHubContentTypes.html": {
    "href": "cmdlets/Get-PnPCompatibleHubContentTypes.html",
    "title": "Get-PnPCompatibleHubContentTypes | PnP PowerShell",
    "keywords": "Get-PnPCompatibleHubContentTypes SYNOPSIS Required Permissions ViewPages permission on the current web. Returns the list of content types present in content type hub site that can be added to the root web or a list on a target site. SYNTAX Get-PnPCompatibleHubContentTypes -WebUrl <String> [-ListUrl <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve list of content types present in content type hub site that are possible to be added to the current site or given list. EXAMPLES EXAMPLE 1 Get-PnPCompatibleHubContentTypes -WebUrl 'https://contoso.sharepoint.com/web1' This will return the list of content types present in content type hub site that can be added to the root web of the site to which the provided web belongs. EXAMPLE 2 Get-PnPCompatibleHubContentTypes -WebUrl 'https://contoso.sharepoint.com/web1' -ListUrl 'https://contoso.sharepoint.com/web1/Shared Documents' This will return the list of content types present in content type hub site that can be added to the provided list. PARAMETERS -WebUrl The full URL of the web for which compatible content types need to be fetched. In case of a list this should be the url of the web which contains the given list. I.e. 'https://contoso.sharepoint.com/web1' Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListUrl The full URL to the list for which compatible content types need to be fetched, i.e. 'https://contoso.sharepoint.com/web1/Shared Documents' Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPConnection.html": {
    "href": "cmdlets/Get-PnPConnection.html",
    "title": "Get-PnPConnection | PnP PowerShell",
    "keywords": "Get-PnPConnection SYNOPSIS Returns the current connection SYNTAX Get-PnPConnection [-Connection <PnPConnection>] DESCRIPTION Returns a PnP PowerShell Connection for use with the -Connection parameter on other cmdlets. EXAMPLES EXAMPLE 1 $ctx = Get-PnPConnection This will put the current connection for use with the -Connection parameter on other cmdlets. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by specifying -ReturnConnection on Connect-PnPOnline. If not provided, the connection will be retrieved from the current context. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPContainer.html": {
    "href": "cmdlets/Get-PnPContainer.html",
    "title": "Get-PnPContainer | PnP PowerShell",
    "keywords": "Get-PnPContainer SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns one or more Containers in a SharePoint Embedded application. SYNTAX Get-PnPContainer [-Identity <ContainerPipeBind>] [-OwningApplicationId <Guid>] [-Paged <switchparameter>] [-PagingToken <string>][-SortOrder <SortOrder>] [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPContainer -OwningApplicationId a187e399-0c36-4b98-8f04-1edc167a0996 Returns a tabular list of Containers created under the specified SharePoint Embedded application. EXAMPLE 2 Get-PnPContainer -OwningApplicationId a187e399-0c36-4b98-8f04-1edc167a0996 -Identity \"b!aBrXSxKDdUKZsaK3Djug6C5rF4MG3pRBomypnjOHiSrjkM_EBk_1S57U3gD7oW-1\" Returns the properties of the specified container by using the container id EXAMPLE 3 Get-PnPContainer -Identity \"bc07d4b8-1c2f-4184-8cc2-a52dfd6fe0c4\" -Identity \"https://contoso.sharepoint.com/contentstorage/CSP_4bd71a68-8312-4275-99b1-a2b70e3ba0e8\" Returns the properties of the specified container by using the container url PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify container site url or container id. Type: ContainerPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -OwningApplicationId This parameter specifies the ID of the SharePoint repository services application. To retrieve Containers for the Microsoft Loop app, use OwningApplicationId: a187e399-0c36-4b98-8f04-1edc167a0996. To retrieve Containers for the Microsoft Designer app, use OwningApplicationId: 5e2795e3-ce8c-4cfb-b302-35fe5cd01597 Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Paged This parameter can be used when there are more than 5,000 Containers in a given SharePoint Embedded application. Using -Paged will provide a that will display the next 5,000 Containers. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -PagingToken Use this parameter to provide the provided to view the remaining Containers as shown in Example 5. If there are no more Containers to display, the commandlet output will return the message End of Containers view. Otherwise, use the given to retrieve the next batch of up to 5,000 ontainers. Type: String Parameter Sets: (All) Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -SortOrder Use this parameter to specify the sort order. The sorting will be done based on Storage used in ascending or descending order. Type: SortOrder Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPContainerType.html": {
    "href": "cmdlets/Get-PnPContainerType.html",
    "title": "Get-PnPContainerType | PnP PowerShell",
    "keywords": "Get-PnPContainerType SYNOPSIS Required Permissions SharePoint Embedded Administrator or Global Administrator is required Returns the list of Container Types created for a SharePoint Embedded Application in the tenant. SYNTAX Get-PnPContainerType [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPContainerType Returns the list of Container Types created for a SharePoint Embedded application in the tenant. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS SharePoint Embedded Container Types Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPContainerTypeConfiguration.html": {
    "href": "cmdlets/Get-PnPContainerTypeConfiguration.html",
    "title": "Get-PnPContainerTypeConfiguration | PnP PowerShell",
    "keywords": "Get-PnPContainerTypeConfiguration SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns container type configuration of a SharePoint Embedded application. SYNTAX Get-PnPContainerTypeConfiguration [-Identity <GUID>] [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPContainerTypeConfiguration -Identity a187e399-0c36-4b98-8f04-1edc167a0996 Returns a container type configuration data of the application created under the specified SharePoint Embedded application. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify container type GUID Type: ContainerPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPContentType.html": {
    "href": "cmdlets/Get-PnPContentType.html",
    "title": "Get-PnPContentType | PnP PowerShell",
    "keywords": "Get-PnPContentType SYNOPSIS Retrieves a content type SYNTAX Get-PnPContentType [-Identity <ContentTypePipeBind>] [-List <ListPipeBind>] [-InSiteHierarchy] [-Includes <String[]>] [-Connection <PnPConnection>] DESCRIPTION Allows to get single or list of content types from site or list. Use the Identity option to specify the exact content type. EXAMPLES EXAMPLE 1 Get-PnPContentType This will get a listing of all available content types within the current web EXAMPLE 2 Get-PnPContentType -InSiteHierarchy This will get a listing of all available content types within the site collection EXAMPLE 3 Get-PnPContentType -Identity \"Project Document\" This will get the content type with the name \"Project Document\" within the current context EXAMPLE 4 Get-PnPContentType -List \"Documents\" This will get a listing of all available content types within the list \"Documents\" EXAMPLE 5 Get-PnPContentType -Includes \"SchemaXml\" This will get a listing of all available content types with the SchemaXml also being returned in the results PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Name or ID of the content type to retrieve Type: ContentTypePipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Includes List of properties to fetch about the ContentType(s) being returned Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InSiteHierarchy Search site hierarchy for content types Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List List to query Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPContentTypePublishingHubUrl.html": {
    "href": "cmdlets/Get-PnPContentTypePublishingHubUrl.html",
    "title": "Get-PnPContentTypePublishingHubUrl | PnP PowerShell",
    "keywords": "Get-PnPContentTypePublishingHubUrl SYNOPSIS Returns the url to Content Type Publishing Hub SYNTAX Get-PnPContentTypePublishingHubUrl [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve the url of the Content Type Publishing Hub. EXAMPLES EXAMPLE 1 $url = Get-PnPContentTypePublishingHubUrl Connect-PnPOnline -Url $url Get-PnPContentType This will retrieve the url to the content type hub, connect to it, and then retrieve the content types form that site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPContentTypePublishingStatus.html": {
    "href": "cmdlets/Get-PnPContentTypePublishingStatus.html",
    "title": "Get-PnPContentTypePublishingStatus | PnP PowerShell",
    "keywords": "Get-PnPContentTypePublishingStatus SYNOPSIS Required Permissions Fullcontrol permission on the content type hub site. Returns the publishing status of a content type present on content type hub site. SYNTAX Get-PnPContentTypePublishingStatus -ContentType <ContentTypePipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve the publishing status of a content type present on content type hub site. EXAMPLES EXAMPLE 1 Get-PnPContentTypePublishingStatus -ContentType 0x0101 This will return True if content type is published in the content type hub site otherwise it will return False. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The content type object in the content type hub site for which the publishing status needs to be fetched. Type: ContentType Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPContext.html": {
    "href": "cmdlets/Get-PnPContext.html",
    "title": "Get-PnPContext | PnP PowerShell",
    "keywords": "Get-PnPContext SYNOPSIS Returns the current SharePoint Online CSOM context SYNTAX Get-PnPContext [-Connection <PnPConnection>] DESCRIPTION Returns a SharePoint Online Client Side Object Model (CSOM) context EXAMPLES EXAMPLE 1 $ctx = Get-PnPContext This will put the current context in the $ctx variable. EXAMPLE 2 Connect-PnPOnline -Url $siteAurl -Credentials $credentials $ctx = Get-PnPContext Get-PnPList # returns the lists from site specified with $siteAurl Connect-PnPOnline -Url $siteBurl -Credentials $credentials Get-PnPList # returns the lists from the site specified with $siteBurl Set-PnPContext -Context $ctx # switch back to site A Get-PnPList # returns the lists from site A PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. If not provided, the context of the connection will be retrieved from the current connection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPCopilotAdminLimitedMode.html": {
    "href": "cmdlets/Get-PnPCopilotAdminLimitedMode.html",
    "title": "Get-PnPCopilotAdminLimitedMode | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPCopilotAdminLimitedMode SYNOPSIS Required Permissions Microsoft Graph API: CopilotSettings-LimitedMode.Read or CopilotSettings-LimitedMode.ReadWrite as delegated permission. Application permission not supported. Returns the current configuration if Copilot in Teams Meetings should respond to sentiment related prompts. SYNTAX Get-PnPCopilotAdminLimitedMode [-Verbose] [-Connection <PnPConnection>] DESCRIPTION Returns a setting that controls whether Microsoft 365 Copilot in Teams Meetings users can receive responses to sentiment-related prompts. If this setting is enabled, Copilot in Teams Meetings doesn't respond to sentiment-related prompts and questions asked by the user. If the setting is disabled, Copilot in Teams Meetings responds to sentiment-related prompts and questions asked by the user. Copilot in Teams Meetings currently honors this setting. By default, the setting is disabled. EXAMPLES EXAMPLE 1 Get-PnPCopilotAdminLimitedMode This cmdlet will return the current configuration if Copilot in Teams Meetings should respond to sentiment related prompts. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Get-PnPCopilotAgent.html": {
    "href": "cmdlets/Get-PnPCopilotAgent.html",
    "title": "Get-PnPCopilotAgent | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPCopilotAgent SYNOPSIS Returns the Microsoft Copilot Agents (*.agent) in a site collection. SYNTAX __AllParameterSets Get-PnPCopilotAgent [-ServerRelativeUrl <string>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet iterates through the document libraries in a site and finds the copilot agents in that site. EXAMPLES Example 1 Get-PnPCopilotAgent This will return all the Microsoft Copilot agents in a site. Example 2 Get-PnPCopilotAgent -ServerRelativeUrl /sites/demo/siteassets/copilots/approved/main.agent This will return the specific Microsoft Copilot agent if it exists. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnP.PowerShell.Commands.Base.PnPConnection DefaultValue: '' SupportsWildcards: false ParameterValue: [] Aliases: [] ParameterSets: - Name: (All) Position: Named IsRequired: false ValueFromPipeline: false ValueFromPipelineByPropertyName: false ValueFromRemainingArguments: false DontShow: false AcceptedValues: [] HelpMessage: '' -ServerRelativeUrl The server relative URL to the .agent file. Type: System.String DefaultValue: '' SupportsWildcards: false ParameterValue: [] Aliases: [] ParameterSets: - Name: (All) Position: Named IsRequired: false ValueFromPipeline: false ValueFromPipelineByPropertyName: false ValueFromRemainingArguments: false DontShow: false AcceptedValues: [] HelpMessage: '' CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -ProgressAction, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPCustomAction.html": {
    "href": "cmdlets/Get-PnPCustomAction.html",
    "title": "Get-PnPCustomAction | PnP PowerShell",
    "keywords": "Get-PnPCustomAction SYNOPSIS Return user custom actions SYNTAX Get-PnPCustomAction [-Identity <Guid>] [-Scope <CustomActionScope>] [-ThrowExceptionIfCustomActionNotFound] [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION Returns all or a specific user custom action EXAMPLES EXAMPLE 1 Get-PnPCustomAction Returns all custom actions of the current site. EXAMPLE 2 Get-PnPCustomAction -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 Returns the custom action with the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2'. EXAMPLE 3 Get-PnPCustomAction -Scope web Returns all custom actions for the current web object. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Identity of the CustomAction to return. Omit to return all CustomActions. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Scope of the CustomAction, either Web, Site or All to return both Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThrowExceptionIfCustomActionNotFound Switch parameter if an exception should be thrown if the requested CustomAction does not exist (true) or if omitted, nothing will be returned in case the CustomAction does not exist Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned custom action which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPDefaultColumnValues.html": {
    "href": "cmdlets/Get-PnPDefaultColumnValues.html",
    "title": "Get-PnPDefaultColumnValues | PnP PowerShell",
    "keywords": "Get-PnPDefaultColumnValues SYNOPSIS Gets the default column values for all folders in document library SYNTAX Get-PnPDefaultColumnValues [-List] <ListPipeBind> [-Connection <PnPConnection>] DESCRIPTION Gets the default column values for a document library, per folder. Supports both text, people and taxonomy fields. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Name or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPDeletedContainer.html": {
    "href": "cmdlets/Get-PnPDeletedContainer.html",
    "title": "Get-PnPDeletedContainer | PnP PowerShell",
    "keywords": "Get-PnPDeletedContainer SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site The Get-PnPDeletedContainer cmdlet returns a list of all deleted Containers in the Recycle Bin. There is no Identity parameter needed. The list includes the ContainerId, ContainerName, DeletedOn, and CreatedDate. Deleted Containers in the Recycle Bin are permanently deleted after 93 days. Use cmdlet Restore-PnPDeletedContainer to restore a deleted container. SYNTAX Get-PnPDeletedContainer [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPDeletedContainer Returns a list of the ContainerId, ContainerName, and CreatedDate of all deleted Containers in the Recycle Bin. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPDeletedFlow.html": {
    "href": "cmdlets/Get-PnPDeletedFlow.html",
    "title": "Get-PnPDeletedFlow | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPDeletedFlow SYNOPSIS Required Permissions Azure: management.azure.com Information To use this command, you must be a Global or Power Platform administrator. Note A Power Automate flow is soft-deleted when: It's a non-solution flow. It's been deleted less than 21 days ago. Returns all soft-deleted Power Automate flows within an environment SYNTAX All (Default) Get-PnPDeletedFlow [-Environment <PowerAutomateEnvironmentPipeBind>] [-Connection <PnPConnection>] [-Verbose] DESCRIPTION This cmdlet returns Deleted Power Automate Flows meeting the specified criteria. EXAMPLES Example 1 Get-PnPDeletedFlow Returns all the deleted flows in the default Power Platform environment belonging to any user Example 2 Get-PnPPowerPlatformEnvironment -Identity \"MyOrganization (default)\" | Get-PnPDeletedFlow Returns all the deleted flows for a given Power Platform environment belonging to the any user PARAMETERS -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPDeletedMicrosoft365Group.html": {
    "href": "cmdlets/Get-PnPDeletedMicrosoft365Group.html",
    "title": "Get-PnPDeletedMicrosoft365Group | PnP PowerShell",
    "keywords": "Get-PnPDeletedMicrosoft365Group SYNOPSIS Required Permissions Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All Gets one deleted Microsoft 365 Group or a list of deleted Microsoft 365 Groups SYNTAX Get-PnPDeletedMicrosoft365Group [-Identity <Microsoft365GroupPipeBind>] DESCRIPTION Allows to get list of deleted Microsoft 365 Groups. Use the Identity option to specify the exact group. EXAMPLES EXAMPLE 1 Get-PnPDeletedMicrosoft365Group Retrieves all deleted Microsoft 365 Groups EXAMPLE 2 Get-PnPDeletedMicrosoft365Group -Identity 38b32e13-e900-4d95-b860-fb52bc07ca7f Retrieves a specific deleted Microsoft 365 Group based on its ID PARAMETERS -Identity The Identity of the Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPDeletedTeam.html": {
    "href": "cmdlets/Get-PnPDeletedTeam.html",
    "title": "Get-PnPDeletedTeam | PnP PowerShell",
    "keywords": "Get-PnPDeletedTeam SYNOPSIS Required Permissions Microsoft Graph API : Team.ReadBasic.All Gets list of deleted Teams teams. SYNTAX Get-PnPDeletedTeam DESCRIPTION Allows to retrieve a list of deleted Microsoft Teams teams EXAMPLES EXAMPLE 1 Get-PnPDeletedTeam Retrieves all the deleted Microsoft Teams teams. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft Graph documentation Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPDiagnostics.html": {
    "href": "cmdlets/Get-PnPDiagnostics.html",
    "title": "Get-PnPDiagnostics | PnP PowerShell",
    "keywords": "Get-PnPDiagnostics SYNOPSIS Returns diagnostic information SYNTAX Get-PnPDiagnostics DESCRIPTION This cmdlet returns diagnostic information which can help to determine issues with PnP PowerShell EXAMPLES EXAMPLE 1 Get-PnPDiagnostics Returns basic diagnostic information, including the last error, the stacktrace, if applicable, etc. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPDisableSpacesActivation.html": {
    "href": "cmdlets/Get-PnPDisableSpacesActivation.html",
    "title": "Get-PnPDisableSpacesActivation | PnP PowerShell",
    "keywords": "Get-PnPDisableSpacesActivation SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieves if SharePoint Spaces is disabled on the entire tenant SYNTAX Get-PnPDisableSpacesActivation [-Connection <PnPConnection>] DESCRIPTION Retrieves if SharePoint Spaces is disabled on the entire tenant. At this point there is no API yet for retrieving the setting for a specific site, although you can set it for a specific site. EXAMPLES EXAMPLE 1 Get-PnPDisableSpacesActivation Returns if SharePoint Spaces is disabled on the tenant PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPDocumentSetTemplate.html": {
    "href": "cmdlets/Get-PnPDocumentSetTemplate.html",
    "title": "Get-PnPDocumentSetTemplate | PnP PowerShell",
    "keywords": "Get-PnPDocumentSetTemplate SYNOPSIS Retrieves a document set template SYNTAX Get-PnPDocumentSetTemplate [-Identity] <DocumentSetPipeBind> [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION Allows to retrieve a document set template. EXAMPLES EXAMPLE 1 Get-PnPDocumentSetTemplate -Identity \"Test Document Set\" This will get the document set template with the name \"Test Document Set\" EXAMPLE 2 Get-PnPDocumentSetTemplate -Identity \"0x0120D520005DB65D094035A241BAC9AF083F825F3B\" This will get the document set template with the id \"0x0120D520005DB65D094035A241BAC9AF083F825F3B\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Either specify a name, an id, a document set template object or a content type object Type: DocumentSetPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned document set template which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPEntraIDActivityReportDirectoryAudit.html": {
    "href": "cmdlets/Get-PnPEntraIDActivityReportDirectoryAudit.html",
    "title": "Get-PnPEntraIDActivityReportDirectoryAudit | PnP PowerShell",
    "keywords": "Get-PnPEntraIDActivityReportDirectoryAudit SYNOPSIS This is an alias for Get-PnPAzureADActivityReportDirectoryAudit. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPEntraIDActivityReportSignIn.html": {
    "href": "cmdlets/Get-PnPEntraIDActivityReportSignIn.html",
    "title": "Get-PnPEntraIDActivityReportSignIn | PnP PowerShell",
    "keywords": "Get-PnPEntraIDActivityReportSignIn SYNOPSIS This is an alias for Get-PnPAzureADActivityReportSignIn. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPEntraIDApp.html": {
    "href": "cmdlets/Get-PnPEntraIDApp.html",
    "title": "Get-PnPEntraIDApp | PnP PowerShell",
    "keywords": "Get-PnPEntraIDApp SYNOPSIS This is an alias for Get-PnPAzureADApp. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPEntraIDAppPermission.html": {
    "href": "cmdlets/Get-PnPEntraIDAppPermission.html",
    "title": "Get-PnPEntraIDAppPermission | PnP PowerShell",
    "keywords": "Get-PnPEntraIDAppPermission SYNOPSIS This is an alias for Get-PnPAzureADAppPermission. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPEntraIDAppSitePermission.html": {
    "href": "cmdlets/Get-PnPEntraIDAppSitePermission.html",
    "title": "Get-PnPEntraIDAppSitePermission | PnP PowerShell",
    "keywords": "Get-PnPEntraIDAppSitePermission SYNOPSIS This is an alias for Get-PnPAzureADAppSitePermission. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPEntraIDGroup.html": {
    "href": "cmdlets/Get-PnPEntraIDGroup.html",
    "title": "Get-PnPEntraIDGroup | PnP PowerShell",
    "keywords": "Get-PnPEntraIDGroup SYNOPSIS This is an alias for Get-PnPAzureADGroup. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPEntraIDGroupMember.html": {
    "href": "cmdlets/Get-PnPEntraIDGroupMember.html",
    "title": "Get-PnPEntraIDGroupMember | PnP PowerShell",
    "keywords": "Get-PnPEntraIDGroupMember SYNOPSIS This is an alias for Get-PnPAzureADGroupMember. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPEntraIDGroupOwner.html": {
    "href": "cmdlets/Get-PnPEntraIDGroupOwner.html",
    "title": "Get-PnPEntraIDGroupOwner | PnP PowerShell",
    "keywords": "Get-PnPEntraIDGroupOwner SYNOPSIS This is an alias for Get-PnPAzureADGroupOwner. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPEntraIDServicePrincipal.html": {
    "href": "cmdlets/Get-PnPEntraIDServicePrincipal.html",
    "title": "Get-PnPEntraIDServicePrincipal | PnP PowerShell",
    "keywords": "Get-PnPEntraIDServicePrincipal SYNOPSIS This is an alias for Get-PnPAzureADServicePrincipal. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPEntraIDServicePrincipalAssignedAppRole.html": {
    "href": "cmdlets/Get-PnPEntraIDServicePrincipalAssignedAppRole.html",
    "title": "Get-PnPEntraIDServicePrincipalAssignedAppRole | PnP PowerShell",
    "keywords": "Get-PnPEntraIDServicePrincipalAssignedAppRole SYNOPSIS This is an alias for Get-PnPAzureADServicePrincipalAssignedAppRole. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPEntraIDServicePrincipalAvailableAppRole.html": {
    "href": "cmdlets/Get-PnPEntraIDServicePrincipalAvailableAppRole.html",
    "title": "Get-PnPEntraIDServicePrincipalAvailableAppRole | PnP PowerShell",
    "keywords": "Get-PnPEntraIDServicePrincipalAvailableAppRole SYNOPSIS This is an alias for Get-PnPAzureADServicePrincipalAvailableAppRole. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPEntraIDUser.html": {
    "href": "cmdlets/Get-PnPEntraIDUser.html",
    "title": "Get-PnPEntraIDUser | PnP PowerShell",
    "keywords": "Get-PnPEntraIDUser SYNOPSIS This is an alias for Get-PnPAzureADUser. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPEventReceiver.html": {
    "href": "cmdlets/Get-PnPEventReceiver.html",
    "title": "Get-PnPEventReceiver | PnP PowerShell",
    "keywords": "Get-PnPEventReceiver SYNOPSIS Returns registered event receivers SYNTAX Get-PnPEventReceiver [-List <ListPipeBind>] [-Scope <EventReceiverScope>] [-Identity <EventReceiverPipeBind>] [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION Returns all registered or a specific event receiver EXAMPLES EXAMPLE 1 Get-PnPEventReceiver This will return all registered event receivers on the current web EXAMPLE 2 Get-PnPEventReceiver -Identity fb689d0e-eb99-4f13-beb3-86692fd39f22 This will return the event receiver with the provided ReceiverId \"fb689d0e-eb99-4f13-beb3-86692fd39f22\" from the current web EXAMPLE 3 Get-PnPEventReceiver -Identity MyReceiver This will return the event receiver with the provided ReceiverName \"MyReceiver\" from the current web EXAMPLE 4 Get-PnPEventReceiver -List \"ProjectList\" This will return all registered event receivers in the provided \"ProjectList\" list EXAMPLE 5 Get-PnPEventReceiver -List \"ProjectList\" -Identity fb689d0e-eb99-4f13-beb3-86692fd39f22 This will return the event receiver in the provided \"ProjectList\" list with with the provided ReceiverId \"fb689d0e-eb99-4f13-beb3-86692fd39f22\" EXAMPLE 6 Get-PnPEventReceiver -List \"ProjectList\" -Identity MyReceiver This will return the event receiver in the \"ProjectList\" list with the provided ReceiverName \"MyReceiver\" EXAMPLE 7 Get-PnPEventReceiver -Scope Site This will return all the event receivers defined on the current site collection EXAMPLE 8 Get-PnPEventReceiver -Scope Web This will return all the event receivers defined on the current site EXAMPLE 9 Get-PnPEventReceiver -Scope All This will return all the event receivers defined on the current site and web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Guid of the event receiver Type: EventReceiverPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The list object from which to get the event receiver object Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope The scope of the EventReceivers to retrieve Type: EventReceiverScope Parameter Sets: Scope Accepted values: Web, Site, All Required: False Position: Named Default value: Web Accept pipeline input: False Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned event receiver which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPException.html": {
    "href": "cmdlets/Get-PnPException.html",
    "title": "Get-PnPException | PnP PowerShell",
    "keywords": "Get-PnPException SYNOPSIS Returns the last exception that occurred SYNTAX Get-PnPException [-All] DESCRIPTION Returns the last exception which can be used while debugging PnP Cmdlets EXAMPLES EXAMPLE 1 Get-PnPException Returns the last exception EXAMPLE 2 Get-PnPException -All Returns all exceptions that occurred PARAMETERS -All Show all exceptions Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPExternalUser.html": {
    "href": "cmdlets/Get-PnPExternalUser.html",
    "title": "Get-PnPExternalUser | PnP PowerShell",
    "keywords": "Get-PnPExternalUser SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns external users in the tenant. SYNTAX Get-PnPExternalUser [-Position <Integer>] [-PageSize <Integer>] [-Filter <String>] [-SortOrder <SortOrder>] [-SiteUrl <String>] [-ShowOnlyUsersWithAcceptingAccountNotMatchInvitedAccount <Boolean>] DESCRIPTION The Get-PnPExternalUser cmdlet returns external users that are located in the tenant based on specified criteria. EXAMPLES EXAMPLE 1 Get-PnPExternalUser -Position 0 -PageSize 2 Returns the first two external users in the collection. EXAMPLE 2 Get-PnPExternalUser -Position 2 -PageSize 2 Returns two external users from the third page of the collection. PARAMETERS -Filter Prompts you for confirmation before running the cmdlet. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PageSize Specifies the maximum number of users to be returned in the collection. The value must be less than or equal to 50. Type: Integer Parameter Sets: (All) Required: False Position: Named Default value: 1 Accept pipeline input: False Accept wildcard characters: False -Position Use to specify the zero-based index of the position in the sorted collection of the first result to be returned. Type: Integer Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowOnlyUsersWithAcceptingAccountNotMatchInvitedAccount Shows users who have accepted an invite but not using the account the invite was sent to. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -SiteUrl Specifies the site to retrieve external users for. If no site is specified, the external users for all sites are returned. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SortOrder Specifies the sort results in Ascending or Descending order on the Email property should occur. Type: SortOrder Parameter Sets: (All) Required: False Position: Named Default value: Ascending Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFeature.html": {
    "href": "cmdlets/Get-PnPFeature.html",
    "title": "Get-PnPFeature | PnP PowerShell",
    "keywords": "Get-PnPFeature SYNOPSIS Returns all activated or a specific activated feature SYNTAX Get-PnPFeature [[-Identity] <FeaturePipeBind>] [-Scope <FeatureScope>] [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION This cmdlet returns all activated features or a specific activated feature. EXAMPLES EXAMPLE 1 Get-PnPFeature This will return all activated web scoped features EXAMPLE 2 Get-PnPFeature -Scope Site This will return all activated site scoped features EXAMPLE 3 Get-PnPFeature -Identity fb689d0e-eb99-4f13-beb3-86692fd39f22 This will return a specific activated web scoped feature EXAMPLE 4 Get-PnPFeature -Identity fb689d0e-eb99-4f13-beb3-86692fd39f22 -Scope Site This will return a specific activated site scoped feature PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The feature ID or name to query for, Querying by name is not supported in version 15 of the Client Side Object Model Type: FeaturePipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope The scope of the feature. Defaults to Web. Type: FeatureScope Parameter Sets: (All) Accepted values: Web, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned feature which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPField.html": {
    "href": "cmdlets/Get-PnPField.html",
    "title": "Get-PnPField | PnP PowerShell",
    "keywords": "Get-PnPField SYNOPSIS Returns a field from a list or site SYNTAX Get-PnPField [-List <ListPipeBind>] [[-Identity] <FieldPipeBind>] [-Group <String>] [-InSiteHierarchy] [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPField Gets all the fields from the current site EXAMPLE 2 Get-PnPField -List \"Demo list\" -Identity \"Speakers\" Gets the speakers field from the list Demo list EXAMPLE 3 Get-PnPField -Group \"Custom Columns\" Gets all the fields for the group called Custom Columns for the site currently connected to PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Filter to the specified group Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The field object or name to get Type: FieldPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -InSiteHierarchy Search site hierarchy for fields Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name where to get the field from Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned field which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFile.html": {
    "href": "cmdlets/Get-PnPFile.html",
    "title": "Get-PnPFile | PnP PowerShell",
    "keywords": "Get-PnPFile SYNOPSIS Downloads a file SYNTAX Return as file object (Default) Get-PnPFile -Url <String> -AsFileObject [-Connection <PnPConnection>] Return as list item Get-PnPFile -Url <String> -AsListItem [-ThrowExceptionIfFileNotFound] [-Connection <PnPConnection>] Save to local path Get-PnPFile -Url <String> -AsFile -Path <String> -Filename <String> [-Force] [-Connection <PnPConnection>] Return as string Get-PnPFile -Url <String> -AsString [-Connection <PnPConnection>] Return as memorystream Get-PnPFile -Url <String> -AsMemoryStream [-Connection <PnPConnection>] DESCRIPTION Allows downloading of a file from SharePoint Online. The file contents can either be read directly into memory as text, directly saved to local disk or stored in memory for further processing. EXAMPLES EXAMPLE 1 Get-PnPFile -Url \"/sites/project/Shared Documents/Document.docx\" Retrieves the file and downloads it to the current folder EXAMPLE 2 Get-PnPFile -Url \"https://contoso.sharepoint.com/sites/project/Shared Documents/Document.docx\" Retrieves the file and downloads it to the current folder EXAMPLE 3 Get-PnPFile -Url /sites/project/SiteAssets/image.jpg -Path c:\\temp -FileName image.jpg -AsFile Retrieves the file and downloads it to c:\\temp\\image.jpg EXAMPLE 4 Get-PnPFile -Url /sites/project/_catalogs/themes/15/company.spcolor -AsString Retrieves the contents of the file as text and outputs its contents to the console EXAMPLE 5 Get-PnPFile -Url /sites/project/Shared Documents/Folder/Presentation.pptx -AsFileObject Retrieves the file and returns it as a File object EXAMPLE 6 Get-PnPFile -Url /sites/project/_catalogs/themes/15/company.spcolor -AsListItem Retrieves the file and returns it as a ListItem object EXAMPLE 7 Get-PnPFile -Url /personal/john_tenant_onmicrosoft_com/Documents/Sample.xlsx -Path c:\\temp -FileName Project.xlsx -AsFile Retrieves the file Sample.xlsx by its site relative URL from a OneDrive for Business site and downloads it to c:\\temp\\Project.xlsx EXAMPLE 8 Get-PnPFile -Url \"/sites/templates/Shared Documents/HR Site.pnp\" -AsMemoryStream Retrieves the file in memory for further processing PARAMETERS -AsFile Type: SwitchParameter Parameter Sets: Save to local path Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AsFileObject Retrieve the file contents as a file object. Type: SwitchParameter Parameter Sets: Return as file object Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AsListItem Returns the file as a listitem showing all its properties Type: SwitchParameter Parameter Sets: Return as list item Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AsString Retrieve the file contents as a string Type: SwitchParameter Parameter Sets: Return as string Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AsMemoryStream Type: SwitchParameter Parameter Sets: Download the content of the file to memory Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Filename Name for the local file Type: String Parameter Sets: Save to local path Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the file if it exists. Type: SwitchParameter Parameter Sets: Save to local path Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Local path where the file should be saved Type: String Parameter Sets: Save to local path Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThrowExceptionIfFileNotFound If provided in combination with -AsListItem, a System.ArgumentException will be thrown if the file specified in the -Url argument does not exist. Otherwise it will return nothing instead. Type: SwitchParameter Parameter Sets: Return as list item Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The URL (server or site relative) to the file Type: String Parameter Sets: (All) Aliases: ServerRelativeUrl, SiteRelativeUrl Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFileAnalyticsData.html": {
    "href": "cmdlets/Get-PnPFileAnalyticsData.html",
    "title": "Get-PnPFileAnalyticsData | PnP PowerShell",
    "keywords": "Get-PnPFileAnalyticsData SYNOPSIS Retrieves analytics data for a file. SYNTAX Return analytics data Get-PnPFileAnalyticsData -Url <String> [-Connection <PnPConnection>] DESCRIPTION Retrieves file analytics data within a specific date range. EXAMPLES EXAMPLE 1 Get-PnPFileAnalyticsData -Url \"/sites/project/Shared Documents/Document.docx\" Retrieves all available analytics data for the specified file. EXAMPLE 2 Get-PnPFileAnalyticsData -Url \"/sites/project/Shared Documents/Document.docx\" -LastSevenDays Retrieves analytics data for the last seven days of the specified file. EXAMPLE 3 Get-PnPFileAnalyticsData -Url \"/sites/project/Shared Documents/Document.docx\" -StartDate (Get-date).AddDays(-15) -EndDate (Get-date) -AnalyticsAggregationInterval Day Retrieves analytics data for the last 15 days of the specified file with aggregation interval as days. PARAMETERS -Url The URL (server or site relative) to the file Type: String Parameter Sets: (All) Aliases: ServerRelativeUrl, SiteRelativeUrl Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -All When specified, it will retrieve all analytics data. Type: SwitchParameter Parameter Sets: All analytics data Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LastSevenDays When specified, it will retrieve analytics data for the last seven days. Type: SwitchParameter Parameter Sets: Analytics by specific intervals Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartDate When specified, it will retrieve analytics data starting from the specified start date. Type: DateTime Parameter Sets: Analytics by date range Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EndDate When specified, it will retrieve analytics data ending with specified end date. Should be used along with StartDate parameter Type: DateTime Parameter Sets: Analytics by date range Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AnalyticsAggregationInterval When specified, it will retrieve analytics data with specified aggregation interval. Default is day. Allowed values are Day,Week and Month. Type: DateTime Parameter Sets: Analytics by date range Required: False Position: Named Default value: Day Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFileInFolder.html": {
    "href": "cmdlets/Get-PnPFileInFolder.html",
    "title": "Get-PnPFileInFolder | PnP PowerShell",
    "keywords": "Get-PnPFileInFolder SYNOPSIS List files in a folder SYNTAX Folder via url Get-PnPFileInFolder [-FolderSiteRelativeUrl <String>] [-ItemName <String>] [-Recurse] [-Includes <String[]>] [-ExcludeSystemFolders] [-Verbose] [-Connection <PnPConnection>] Folder via pipebind Get-PnPFileInFolder [-Identity <FolderPipeBind>] [-ItemName <String>] [-Recurse] [-Includes <String[]>] [-ExcludeSystemFolders] [-Verbose] [-Connection <PnPConnection>] Folder via list pipebind Get-PnPFileInFolder [-List <ListPipeBind>] [-ItemType <String>] [-ItemName <String>] [-Includes <String[]>] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows listing of all the files in a folder. It can optionally also list all files in the underlying subfolders. When working with a document library containing over 5,000 items in it, you will need to use the -List parameter to specify the document library in order to be able to retrieve the files in it. It will always recursively retrieve all files in the document library. You can also use -Includes to fetch additional properties of the files. EXAMPLES EXAMPLE 1 Get-PnPFileInFolder Returns all the files in the root of the current web EXAMPLE 2 Get-PnPFileInFolder -Recurse Returns all the files in the entire site. This will take a while to complete and will cause a lot of calls to be made towards SharePoint Online. Use it wisely. EXAMPLE 3 Get-PnPFileInFolder -Identity \"Shared Documents\" Returns the files located in the 'Shared Documents' folder located in the root of the current web EXAMPLE 4 Get-PnPFileInFolder -FolderSiteRelativeUrl \"SitePages\" -ItemName \"Default.aspx\" Returns the file 'Default.aspx' which is located in the folder SitePages which is located in the root of the current web EXAMPLE 5 Get-PnPFolder -Identity \"Shared Documents\" | Get-PnPFileInFolder Returns all files in the \"Shared Documents\" folder which is located in the root of the current web EXAMPLE 6 Get-PnPFileInFolder -FolderSiteRelativeUrl \"SitePages\" -Recurse Returns all files, including those located in any subfolders, in the folder SitePages which is located in the root of the current web EXAMPLE 7 Get-PnPFolder -List \"Documents\" | Get-PnPFileInFolder -Recurse -ExcludeSystemFolders Returns all files, including those located in any subfolders, located in the Documents document library where the files in system folders are excluded PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludeSystemFolders When provided, all files in system folders will be excluded from the output. This parameter is not supported when not providing a folder through -Identity or -FolderSiteRelativeUrl. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FolderSiteRelativeUrl The site relative URL of the folder to retrieve Type: String Parameter Sets: Folder via url Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity A folder instance to the folder to retrieve Type: FolderPipeBind Parameter Sets: Folder via pipebind Required: False Position: 0 Default value: None Accept pipeline input: True Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned files which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ItemName Name of the file to retrieve (not case sensitive) Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The document library to retrieve the files from. This parameter is required when working with document libraries containing over 5,000 items. Type: ListPipeBind Parameter Sets: Folder via list pipebind Required: False Position: 0 Default value: None Accept pipeline input: True Accept wildcard characters: False -Recurse A switch parameter to include files of all subfolders in the specified folder Type: SwitchParameter Parameter Sets: (All) Required: False Position: 4 Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFileRetentionLabel.html": {
    "href": "cmdlets/Get-PnPFileRetentionLabel.html",
    "title": "Get-PnPFileRetentionLabel | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPFileRetentionLabel SYNOPSIS Required Permissions Microsoft Graph API : One of Files.Read.All, Sites.Read.All, Files.ReadWrite.All, Sites.ReadWrite.All Retrieves the retention label information for a file in SharePoint. SYNTAX Get-PnPFileRetentionLabel -Url <String> DESCRIPTION The Get-PnPFileRetentionLabel cmdlet retrieves the retention label information for a file in SharePoint using Microsoft Graph. It takes a URL as input, decodes it, and specifically encodes the '+' character if it is part of the filename. EXAMPLES Example 1 This example retrieves the retention label information for the file at the specified URL. Get-PnPFileRetentionLabel -Url \"/sites/Marketing/Shared Documents/Report.pptx\" This example retrieves the retention label information for the file at the specified URL. PARAMETERS -Url Specifies the URL of the file for which to retrieve the retention label information. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFileSensitivityLabel.html": {
    "href": "cmdlets/Get-PnPFileSensitivityLabel.html",
    "title": "Get-PnPFileSensitivityLabel | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPFileSensitivityLabel SYNOPSIS Required Permissions Microsoft Graph API : One of Files.Read.All, Sites.Read.All, Files.ReadWrite.All, Sites.ReadWrite.All Retrieves the sensitivity label information for a file in SharePoint. SYNTAX Get-PnPFileSensitivityLabel -Url <String> DESCRIPTION The Get-PnPFileSensitivityLabel cmdlet retrieves the sensitivity label information for a file in SharePoint using Microsoft Graph. It takes a URL as input, decodes it, and specifically encodes the '+' character if it is part of the filename. EXAMPLES Example 1 This example retrieves the sensitivity label information for the file at the specified URL. Get-PnPFileSensitivityLabel -Url \"/sites/Marketing/Shared Documents/Report.pptx\" This example retrieves the sensitivity label information for the file at the specified URL. PARAMETERS -Url Specifies the URL of the file for which to retrieve the sensitivity label information. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFileSensitivityLabelInfo.html": {
    "href": "cmdlets/Get-PnPFileSensitivityLabelInfo.html",
    "title": "Get-PnPFileSensitivityLabelInfo | PnP PowerShell",
    "keywords": "Get-PnPFileSensitivityLabelInfo SYNOPSIS Retrieves the sensitivity label information for a file in SharePoint. SYNTAX Get-PnPFileSensitivityLabelInfo -Url <String> DESCRIPTION The Get-PnPFileSensitivityLabelInfo cmdlet retrieves the sensitivity label information for a file in SharePoint. It takes a URL as input, decodes it, and specifically encodes the '+' character if it is part of the filename. EXAMPLES Example 1 This example retrieves the sensitivity label information for the file at the specified URL. Get-PnPFileSensitivityLabelInfo -Url \"https://contoso.sharepoint.com/sites/Marketing/Shared Documents/Report.pdf\" This example retrieves the sensitivity label information for the file at the specified URL. PARAMETERS -Url Specifies the URL of the file for which to retrieve the sensitivity label information. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFileSharingLink.html": {
    "href": "cmdlets/Get-PnPFileSharingLink.html",
    "title": "Get-PnPFileSharingLink | PnP PowerShell",
    "keywords": "Get-PnPFileSharingLink SYNOPSIS Retrieves sharing links to associated with the file or list item. SYNTAX Get-PnPFileSharingLink -Identity <FilePipeBind> [-Verbose] [-Connection <PnPConnection>] DESCRIPTION Retrieves sharing links for a file or list item. EXAMPLES EXAMPLE 1 Get-PnPFileSharingLink -Identity \"/sites/demo/Shared Documents/Test.docx\" This will fetch sharing links for Test.docx file in the Shared Documents library based on the server relative url. EXAMPLE 2 Get-PnPFileSharingLink -Identity eff4c8ca-7b92-4aa2-9744-855611c6ccf2 This will fetch sharing links for the file in the site with the provided unique identifier, regardless of where it is located. EXAMPLE 3 Get-PnPListItem -List \"Documents\" | Get-PnPFileSharingLink This will fetch sharing links for all files in the Documents library. EXAMPLE 4 Get-PnPListItem -List \"Documents\" -Id 1 | Get-PnPFileSharingLink This will fetch sharing links for the file in the Documents library with Id 1. EXAMPLE 5 Get-PnPFile -Url \"/sites/demo/Shared Documents/Test.docx\" | Get-PnPFileSharingLink This will fetch sharing links for the passed in file. EXAMPLE 6 Get-PnPFileInFolder -Recurse -ExcludeSystemFolders -FolderSiteRelativeUrl \"Shared Documents\" | Get-PnPFileSharingLink This will fetch sharing links for all files in the Shared Documents library, including the files in subfolders, excluding the ones in hidden internal system folders. EXAMPLE 7 Get-PnPFileInFolder -Recurse -ExcludeSystemFolders -FolderSiteRelativeUrl \"Shared Documents\" | Get-PnPFileSharingLink | ? ExpirationDateTime -eq $null This will fetch sharing links for all files in the Shared Documents library, including the files in subfolders, excluding the ones in hidden internal system folders where no expiration has been set on the sharing of the file. EXAMPLE 8 Get-PnPFileSharingLink -Identity /sites/demo/Lists/Issue tracker/1_.000 This will fetch sharing links for the list item with id 1 from list Issue Tracker PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The server relative path to the file, the unique identifier of the file, the listitem representing the file, or the file object itself to retrieve the sharing links for. Type: FilePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFileVersion.html": {
    "href": "cmdlets/Get-PnPFileVersion.html",
    "title": "Get-PnPFileVersion | PnP PowerShell",
    "keywords": "Get-PnPFileVersion SYNOPSIS Retrieves the previous versions of a file. Does not retrieve the current version of the file. SYNTAX Get-PnPFileVersion -Url <String> [-UseVersionExpirationReport] [-Connection <PnPConnection>] DESCRIPTION Retrieves the version history of a file, not including its current version. To get the current version use the MajorVersion and MinorVersion properties returned from Get-PnPFile. It can optionally return the version expiration report, which contains the versions' SnapshotDate (or estimated SnapshotDate if it is not available) and estimated ExpirationDate based on the Automatic Version History Limits. EXAMPLES EXAMPLE 1 Get-PnPFileVersion -Url Documents/MyDocument.docx Retrieves the file version information for the specified file. EXAMPLE 2 Get-PnPFileVersion -Url \"/sites/marketing/Shared Documents/MyDocument.docx\" Retrieves the file version information for the specified file by specifying the path to the site and the document library's URL. EXAMPLE 3 Get-PnPFileVersion -Url \"/sites/marketing/Shared Documents/MyDocument.docx\" -UseVersionExpirationReport Retrieves the version expiration report for the specified file. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UseVersionExpirationReport Returns the file version expiration report. The versions contained in the report has the SnapshotDate (or estimated SnapshotDate if it is not available) and estimated ExpirationDate based on the Automatic Version History Limits. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFlow.html": {
    "href": "cmdlets/Get-PnPFlow.html",
    "title": "Get-PnPFlow | PnP PowerShell",
    "keywords": "Get-PnPFlow SYNOPSIS Required Permissions Azure: management.azure.com Azure Service Management : user_impersonation Dynamics CRM : user_impersonation PowerApps Service : User Link to Required permissions reference : https://pnp.github.io/powershell/articles/determinepermissions.html#help-i-cant-figure-out-which-permissions-i-need Returns Power Automate Flows SYNTAX All (Default) Get-PnPFlow [-Environment <PowerAutomateEnvironmentPipeBind>] [-AsAdmin] [-SharingStatus <FlowSharingStatus>] [-Connection <PnPConnection>] [-Verbose] By Identity Get-PnPFlow [-Environment <PowerAutomateEnvironmentPipeBind>] [-AsAdmin] [-Identity <PowerPlatformPipeBind>] [-Connection <PnPConnection>] [-Verbose] DESCRIPTION This cmdlet returns Power Automate Flows meeting the specified criteria. EXAMPLES Example 1 Get-PnPFlow -AsAdmin Returns all the flows in the default Power Platform environment belonging to any user Example 2 Get-PnPPowerPlatformEnvironment -Identity \"MyOrganization (default)\" | Get-PnPFlow Returns all the flows for a given Power Platform environment belonging to the current user Example 3 Get-PnPFlow -SharingStatus SharedWithMe Returns all the flows which have been shared with the current user in the default Power Platform environment Example 4 Get-PnPFlow -Identity fba63225-baf9-4d76-86a1-1b42c917a182 Returns a specific flow from the default Power Platform environment PARAMETERS -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Identity The Name/Id of the flow to retrieve. Type: PowerPlatformPipeBind Parameter Sets: By Identity Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AsAdmin If specified returns all the flows as admin. If not specified only the flows for the current user will be returned. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingStatus Allows specifying the type of Power Automate Flows that should be returned. Valid values: All, SharedWithMe, Personal. Type: FlowSharingStatus Parameter Sets: All Required: False Position: Named Default value: All Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFlowOwner.html": {
    "href": "cmdlets/Get-PnPFlowOwner.html",
    "title": "Get-PnPFlowOwner | PnP PowerShell",
    "keywords": "Get-PnPFlowOwner SYNOPSIS Required Permissions Azure: management.azure.com Returns the owners of a Power Automate flow SYNTAX Get-PnPFlowOwner [-Environment <PowerAutomateEnvironmentPipeBind>] -Identity <PowerAutomateFlowPipeBind> [-AsAdmin] DESCRIPTION This cmdlet returns the Power Automate flow owners for a given Power Automate Flow in a Power Platform environment. EXAMPLES Example 1 Get-PnPFlowOwner -Identity 33f78dac-7e93-45de-ab85-67cad0f6ee30 Returns all the owners of the Power Automate Flow with the provided identifier on the default Power Platform environment Example 2 Get-PnPFlowOwner -Environment (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") -Identity 33f78dac-7e93-45de-ab85-67cad0f6ee30 Returns all the owners of the Power Automate Flow with the provided identifier on the specified Power Platform environment PARAMETERS -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Identity The Name, Id or instance of the Power Automate Flow to retrieve the permissions of. Type: PowerAutomateFlowPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AsAdmin If specified returns the owners of the given flow as admin. If not specified only the flows for the current user will be targeted, and returns the owners of the targeted flow. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFlowRun.html": {
    "href": "cmdlets/Get-PnPFlowRun.html",
    "title": "Get-PnPFlowRun | PnP PowerShell",
    "keywords": "Get-PnPFlowRun SYNOPSIS Required Permissions Azure: management.azure.com Returns the flows runs for a given flow. SYNTAX Get-PnPFlowRun [-Environment <PowerAutomateEnvironmentPipeBind>] -Flow <PowerAutomateFlowPipeBind> [-Identity <PowerAutomateFlowRunPipeBind>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet returns the flow runs for a given flow. EXAMPLES Example 1 Get-PnPFlowRun -Flow fba63225-baf9-4d76-86a1-1b42c917a182 This returns all the flow runs for a given flow in the default environment Example 2 Get-PnPFlowRun -Environment (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") -Flow fba63225-baf9-4d76-86a1-1b42c917a182 -Identity 08585531682024670884771461819CU230 This returns a specific flow run for a given flow in a specific environment Example 3 $flowrun = Get-PnPFlowRun -Flow fba63225-baf9-4d76-86a1-1b42c917a182 -Identity 08585531682024670884771461819CU230 $flowrun.Properties.trigger This returns the trigger information of a run of a specific flow located in the default environment as shown below Output Name : Recurrence StartTime : 2024-02-02 06:00:00 EndTime : 2024-02-02 06:00:00 ScheduledTime : 2024-02-02 06:00:00 OriginHistoryName : 08584947532854535568834568113CU171 Code : OK Status : Succeeded Example 4 $flowruns = Get-PnPFlowRun -Environment (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") -Flow fba63225-baf9-4d76-86a1-1b42c917a182 $flowruns.Properties.trigger This returns the trigger information of a run of a specific flow located in the specified environment as shown below Output Name : Recurrence StartTime : 2024-02-02 06:00:00 EndTime : 2024-02-02 06:00:00 ScheduledTime : 2024-02-02 06:00:00 OriginHistoryName : 08584947532854535568834568113CU171 Code : OK Status : Succeeded Name : Recurrence StartTime : 2024-02-01 06:00:00 EndTime : 2024-02-01 06:00:00 ScheduledTime : 2024-02-01 06:00:00 OriginHistoryName : 08584948396849679000001446214CU251 Code : OK Status : Succeeded Name : Recurrence StartTime : 2024-01-31 06:00:00 EndTime : 2024-01-31 06:00:00 ScheduledTime : 2024-01-31 06:00:00 OriginHistoryName : 08584949260853628013416159080CU185 Code : OK Status : Succeeded PARAMETERS -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Flow The Name/Id of the flow to retrieve the available runs for. Type: PowerAutomateFlowPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Name/Id of the flow run to retrieve. Type: PowerAutomateFlowRunPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFolder.html": {
    "href": "cmdlets/Get-PnPFolder.html",
    "title": "Get-PnPFolder | PnP PowerShell",
    "keywords": "Get-PnPFolder SYNOPSIS Returns a folder object SYNTAX Folders in current Web (Default) Get-PnPFolder [-Includes <String[]>] [-Connection <PnPConnection>] [-Verbose] Root folder of the current Web Get-PnPFolder -CurrentWebRootFolder [-Includes <String[]>] [-Connection <PnPConnection>] [-Verbose] Folder by url Get-PnPFolder -Url <String> [-Includes <String[]>] [-AsListItem <SwitchParameter>] [-Connection <PnPConnection>] [-Verbose] Root folder of a list Get-PnPFolder -ListRootFolder <ListPipeBind> [-Includes <String[]>] [-AsListItem <SwitchParameter>] [-Connection <PnPConnection>] [-Verbose] Folders In List Get-PnPFolder -List <ListPipeBind> [-Includes <String[]>] [-Connection <PnPConnection>] [-Verbose] DESCRIPTION Retrieves the folder instance of the specified location. Use Resolve-PnPFolder to create the folder if it does not exist. Use Get-PnPFolderInFolder to retrieve subfolders. Use Get-PnPFileInFolder to retrieve files in a folder. Use Get-PnPFolderItem to retrieve files and subfolders. EXAMPLES EXAMPLE 1 Get-PnPFolder Returns all the folders located in the root of the current web EXAMPLE 2 Get-PnPFolder -CurrentWebRootFolder Returns the folder instance representing the root of the current web EXAMPLE 3 Get-PnPFolder -Url \"Shared Documents\" Returns the folder called 'Shared Documents' which is located in the root of the current web EXAMPLE 4 Get-PnPFolder -Url \"/sites/demo/Shared Documents\" Returns the folder called 'Shared Documents' which is located in the root of the site collection located at '/sites/demo' EXAMPLE 5 Get-PnPFolder -ListRootFolder \"Shared Documents\" Returns the root folder of the list called 'Shared Documents' EXAMPLE 6 Get-PnPFolder -List \"Shared Documents\" Returns the folders inside the root folder of the list called 'Shared Documents'. Please use Get-PnPFolder -ListRootFolder <folder> | Get-PnPFolderInFolder instead. EXAMPLE 7 Get-PnPFolder -Url \"/sites/demo/Shared Documents/Test\" -AsListItem Returns the folder called 'Test' which is located in the root of the site collection located at '/sites/demo' inside 'Shared Documents' document library as a SharePoint list item. PARAMETERS -CurrentWebRootFolder If provided, the folder representing the root of the current web will be returned Type: SwitchParameter Parameter Sets: Root folder of the current Web Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List Name, ID or instance of a list or document library to retrieve the folders residing in it for. Please use Get-PnPFolder -ListRootFolder | Get-PnPFolderInFolder instead. Type: ListPipeBind Parameter Sets: Folders In List Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -ListRootFolder Name, ID or instance of a list or document library to retrieve the rootfolder of. Type: ListPipeBind Parameter Sets: Root folder of a list Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Site or server relative URL of the folder to retrieve. In the case of a server relative url, make sure that the url starts with the managed path as the current web. Type: String Parameter Sets: Folder By Url Aliases: RelativeUrl Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -AsListItem Returns the folder as a listitem showing all its properties Type: SwitchParameter Parameter Sets: Folder by url, Root folder of a list Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned folders which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFolderInFolder.html": {
    "href": "cmdlets/Get-PnPFolderInFolder.html",
    "title": "Get-PnPFolderInFolder | PnP PowerShell",
    "keywords": "Get-PnPFolderInFolder SYNOPSIS List subfolders in a folder SYNTAX Folder via url Get-PnPFolderInFolder [-FolderSiteRelativeUrl <String>] [-ItemName <String>] [-ExcludeSystemFolders] [-Includes <String[]>] [-Recurse] [-Verbose] [-Connection <PnPConnection>] Folder via pipebind Get-PnPFolderInFolder [-Identity <FolderPipeBind>] [-ItemName <String>] [-ExcludeSystemFolders] [-Includes <String[]>] [-Recurse] [-Verbose] [-Connection <PnPConnection>] Folder via list pipebind Get-PnPFolderInFolder [-List <ListPipeBind>] [-ItemType <String>] [-ItemName <String>] [-Includes <String[]>] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows listing of all the subfolders of a folder. It can optionally also list all folders in the underlying subfolders. When working with a document library containing over 5,000 items in it, you will need to use the -List parameter to specify the document library in order to be able to retrieve the Folders in it. It will always recursively retrieve all folders in the document library. You can also use -Includes to fetch additional properties of the folders. EXAMPLES EXAMPLE 1 Get-PnPFolderInFolder Returns all the folders in the root of the current web EXAMPLE 2 Get-PnPFolderInFolder -Recurse Returns all the folders in the entire site. This will take a while to complete and will cause a lot of calls to be made towards SharePoint Online. Use it wisely. EXAMPLE 3 Get-PnPFolderInFolder -Identity \"Shared Documents\" Returns the folders located in the 'Shared Documents' folder located in the root of the current web EXAMPLE 4 Get-PnPFolderInFolder -Identity \"Shared Documents\" -ExcludeSystemFolders Returns the folders located in the 'Shared Documents' folder located in the root of the current web which are not hidden system folders EXAMPLE 5 Get-PnPFolderInFolder -FolderSiteRelativeUrl \"Shared Documents\" -ItemName \"Templates\" Returns the folder 'Template' which is located in the folder 'Shared Documents' which is located in the root of the current web EXAMPLE 6 Get-PnPFolder -Identity \"Shared Documents\" | Get-PnPFolderInFolder Returns all folders in the \"Shared Documents\" folder which is located in the root of the current web EXAMPLE 7 Get-PnPFolderInFolder -FolderSiteRelativeUrl \"SitePages\" -Recurse Returns all folders, including those located in any subfolders, in the folder SitePages which is located in the root of the current web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludeSystemFolders When provided, all system folders will be excluded from the output. This parameter is not supported when not providing a folder through -Identity or -FolderSiteRelativeUrl. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FolderSiteRelativeUrl The site relative URL of the folder to retrieve Type: String Parameter Sets: Folder via url Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity A folder instance to the folder to retrieve Type: FolderPipeBind Parameter Sets: Folder via pipebind Required: False Position: 0 Default value: None Accept pipeline input: True Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned files which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ItemName Name of the folder to retrieve (not case sensitive) Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The document library to retrieve the folders from. This parameter is required when working with document libraries containing over 5,000 items. Type: ListPipeBind Parameter Sets: Folder via list pipebind Required: False Position: 0 Default value: None Accept pipeline input: True Accept wildcard characters: False -Recurse A switch parameter to include folders of all subfolders in the specified folder Type: SwitchParameter Parameter Sets: (All) Required: False Position: 4 Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFolderItem.html": {
    "href": "cmdlets/Get-PnPFolderItem.html",
    "title": "Get-PnPFolderItem | PnP PowerShell",
    "keywords": "Get-PnPFolderItem SYNOPSIS List files and/or subfolders in a folder SYNTAX Folder via url Get-PnPFolderItem [-FolderSiteRelativeUrl <String>] [-ItemType <String>] [-ItemName <String>] [-Recursive] [-Verbose] [-Connection <PnPConnection>] Folder via folder pipebind Get-PnPFolderItem [-Identity <FolderPipeBind>] [-ItemType <String>] [-ItemName <String>] [-Recursive] [-Verbose] [-Connection <PnPConnection>] Folder via list pipebind Get-PnPFolderItem [-List <ListPipeBind>] [-ItemType <String>] [-ItemName <String>] [-Includes <string[]>] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows listing of all the content in a folder. It can be used to list all files and folders in a folder and optionally all its subfolders. When working with a document library containing over 5,000 items in it, you will need to use the -List parameter to specify the document library in order to be able to retrieve the Files and Folders in it. It will always recursively retrieve all files and folders in the document library. It is still possible to use -ItemType to restrict the results to only files or folders. You can also use -Includes to fetch additional properties of the files and folders. Start the property name with \"File.\" or \"Folder.\" followed by the property name of the file or folder. For example, to include the file version history report, pass in -Includes \"File.VersionExpirationReport\". Use Get-PnPFileInFolder to retrieve only files and Get-PnPFolderInFolder to retrieve only folders allowing additional properties of the returned items to be requested. EXAMPLES EXAMPLE 1 Get-PnPFolderItem Returns all the files and folders in the root of the current web EXAMPLE 2 Get-PnPFolderItem -Recurse Returns all the files and folders in the entire site. This will take a while to complete and will cause a lot of calls to be made towards SharePoint Online. Use it wisely. EXAMPLE 3 Get-PnPFolderItem -Identity \"Shared Documents\" Returns the files and folders located in the 'Shared Documents' folder located in the root of the current web EXAMPLE 4 Get-PnPFolderItem -FolderSiteRelativeUrl \"SitePages\" -ItemName \"Default.aspx\" Returns the file 'Default.aspx' which is located in the folder SitePages which is located in the root of the current web EXAMPLE 5 Get-PnPFolderItem -FolderSiteRelativeUrl \"SitePages\" -ItemType Folder Returns all subfolders of the folder SitePages which is located in the root of the current web EXAMPLE 6 Get-PnPFolder -Url \"Shared Documents\" | Get-PnPFolderItem -ItemType File Returns all files in the \"Shared Documents\" folder which is located in the root of the current web EXAMPLE 7 Get-PnPFolderItem -FolderSiteRelativeUrl \"SitePages\" -Recursive Returns all files and folders, including contents of any subfolders, in the folder SitePages which is located in the root of the current web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FolderSiteRelativeUrl The site relative URL of the folder to retrieve Type: String Parameter Sets: Folder via url Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity A folder instance to the folder to retrieve Type: FolderPipeBind Parameter Sets: Folder via pipebind Required: False Position: 0 Default value: None Accept pipeline input: True Accept wildcard characters: False -ItemName Name of the item to retrieve (not case sensitive) Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ItemType The type of contents to retrieve, either File, Folder or All (default) Type: String Parameter Sets: (All) Accepted values: Folder, File, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The document library to retrieve the files and folders from. This parameter is required when working with document libraries containing over 5,000 items. Type: ListPipeBind Parameter Sets: Folder via list pipebind Required: False Position: 0 Default value: None Accept pipeline input: True Accept wildcard characters: False -Recursive A switch parameter to include contents of all subfolders in the specified folder Type: SwitchParameter Parameter Sets: (All) Aliases: Recurse Required: False Position: 4 Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFolderSharingLink.html": {
    "href": "cmdlets/Get-PnPFolderSharingLink.html",
    "title": "Get-PnPFolderSharingLink | PnP PowerShell",
    "keywords": "Get-PnPFolderSharingLink SYNOPSIS Retrieves sharing links to associated with the folder. SYNTAX Get-PnPFolderSharingLink -Folder <FolderPipeBind> [-Connection <PnPConnection>] DESCRIPTION Retrieves sharing links for a folder. EXAMPLES EXAMPLE 1 Get-PnPFolderSharingLink -Folder \"/sites/demo/Shared Documents/Test\" This will fetch sharing links for Test folder in the Shared Documents library. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The folder in the site Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFolderStorageMetric.html": {
    "href": "cmdlets/Get-PnPFolderStorageMetric.html",
    "title": "Get-PnPFolderStorageMetric | PnP PowerShell",
    "keywords": "Get-PnPFolderStorageMetric SYNOPSIS Allows retrieval of storage metrics for a folder in SharePoint Online SYNTAX Folder via site relative URL (Default) Get-PnPFolderStorageMetric [-FolderSiteRelativeUrl <String>] [-Connection <PnPConnection>] Folder via pipebind Get-PnPFolderStorageMetric -List <ListPipeBind> [-Connection <PnPConnection>] Folder via list Get-PnPFolderStorageMetric -Identity <FolderPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows retrieval of storage metrics for a folder in SharePoint Online. It will reveal the true storage usage, similar to what will be shown through storman.aspx, the date and time the folder was last modified and the amount of files inside the folder. Please note that there is a delay of typically just a few minutes between making changes to files on a site and this cmdlet returning updated values. EXAMPLES EXAMPLE 1 Get-PnPFolderStorageMetric Retrieves the storage metrics of the current site/web EXAMPLE 2 Get-PnPFolderStorageMetric -List \"Documents\" Retrieves the storage metrics of the specified document library EXAMPLE 3 Get-PnPFolderStorageMetric -FolderSiteRelativeUrl \"Shared Documents\" Retrieves the storage metrics of the folder using the server-relative Url EXAMPLE 4 $folder = Get-PnPFolder -Url \"Shared Documents\" Get-PnPFolderStorageMetric -Identity $folder Retrieves the storage metrics of the folder using the identity parameter PARAMETERS -FolderSiteRelativeUrl The path to the folder to query for its storage consumption, relative to the SharePoint Online site to which the connection has been made, i.e. \"Shared Documents\\Subfolder\" Type: String Parameter Sets: Folder via site relative URL Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List Id, name or instance of a list to query for its storage consumption Type: ListPipeBind Parameter Sets: Folder via list Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Id, name or instance of a folder to query for its storage consumption Type: FolderPipeBind Parameter Sets: Folder via pipebind Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFooter.html": {
    "href": "cmdlets/Get-PnPFooter.html",
    "title": "Get-PnPFooter | PnP PowerShell",
    "keywords": "Get-PnPFooter SYNOPSIS Gets the configuration regarding the footer of the current web SYNTAX Get-PnPFooter [-Connection <PnPConnection>] DESCRIPTION Allows the current configuration of the footer in the current web to be retrieved. The footer currently only works on Modern Communication sites. EXAMPLES EXAMPLE 1 Get-PnPFooter Returns the current footer configuration of the current web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPGraphSubscription.html": {
    "href": "cmdlets/Get-PnPGraphSubscription.html",
    "title": "Get-PnPGraphSubscription | PnP PowerShell",
    "keywords": "Get-PnPGraphSubscription SYNOPSIS Required Permissions Microsoft Graph API : Subscription.Read.All Gets subscriptions from Microsoft Graph. SYNTAX Return a list (Default) Get-PnPGraphSubscription Return by specific ID Get-PnPGraphSubscription [-Identity <String>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPGraphSubscription Retrieves all subscriptions from Microsoft Graph EXAMPLE 2 Get-PnPGraphSubscription -Identity 328c7693-5524-44ac-a946-73e02d6b0f98 Retrieves the subscription from Microsoft Graph with the id 328c7693-5524-44ac-a946-73e02d6b0f98 PARAMETERS -Identity Returns the subscription with the provided subscription id Type: String Parameter Sets: Return by specific ID Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPGroup.html": {
    "href": "cmdlets/Get-PnPGroup.html",
    "title": "Get-PnPGroup | PnP PowerShell",
    "keywords": "Get-PnPGroup SYNOPSIS Returns a specific SharePoint group or all SharePoint groups in the current site SYNTAX All (Default) Get-PnPGroup [-Connection <PnPConnection>] [-Includes <String[]>] ByName Get-PnPGroup [[-Identity] <GroupPipeBind>] [-Connection <PnPConnection>] [-Includes <String[]>] Members Get-PnPGroup [-AssociatedMemberGroup] [-Connection <PnPConnection>] [-Includes <String[]>] Visitors Get-PnPGroup [-AssociatedVisitorGroup] [-Connection <PnPConnection>] [-Includes <String[]>] Owners Get-PnPGroup [-AssociatedOwnerGroup] [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPGroup Returns all SharePoint groups in the current site EXAMPLE 2 Get-PnPGroup -Identity 'My Site Users' This will return the group called 'My Site Users' if available in the current site. The name is case sensitive, so a group called 'My site users' would not be found. EXAMPLE 3 Get-PnPGroup -AssociatedMemberGroup This will return the current members group for the site PARAMETERS -AssociatedMemberGroup Retrieve the associated member group Type: SwitchParameter Parameter Sets: Members Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AssociatedOwnerGroup Retrieve the associated owner group Type: SwitchParameter Parameter Sets: Owners Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AssociatedVisitorGroup Retrieve the associated visitor group Type: SwitchParameter Parameter Sets: Visitors Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Get a specific group by its name or id. The name case sensitive. Type: GroupPipeBind Parameter Sets: ByName Aliases: Name Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned SharePoint security group which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPGroupMember.html": {
    "href": "cmdlets/Get-PnPGroupMember.html",
    "title": "Get-PnPGroupMember | PnP PowerShell",
    "keywords": "Get-PnPGroupMember SYNOPSIS Retrieves all members of a SharePoint group SYNTAX Get-PnPGroupMember -Group <GroupPipeBind> [-User String] DESCRIPTION This command will return all the users (or a specific user) that are members of the provided SharePoint group EXAMPLES EXAMPLE 1 Get-PnPGroupMember -Group \"Marketing Site Members\" Returns all the users that are a member of the group \"Marketing Site Members\" in the current site collection EXAMPLE 2 Get-PnPGroupMember -Group \"Marketing Site Members\" -User \"manager@domain.com\" Will return a user if the user \"manager@domain.com\" is a member of the specified SharePoint group EXAMPLE 3 Get-PnPGroup | Get-PnPGroupMember Returns all the users that are a member of any of the groups in the current site collection EXAMPLE 4 Get-PnPGroup | ? Title -Like 'Marketing*' | Get-PnPGroupMember Returns all the users that are a member of any of the groups of which their name starts with the word 'Marketing' in the current site collection PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group A group object, an ID or a name of a group Type: GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPGroupPermissions.html": {
    "href": "cmdlets/Get-PnPGroupPermissions.html",
    "title": "Get-PnPGroupPermissions | PnP PowerShell",
    "keywords": "Get-PnPGroupPermissions SYNOPSIS Returns the permissions for a specific SharePoint group SYNTAX Get-PnPGroupPermissions [-Identity] <GroupPipeBind> [-Connection <PnPConnection>] DESCRIPTION This command will return the permissions of a specific SharePoint group EXAMPLES EXAMPLE 1 Get-PnPGroupPermissions -Identity 'My Site Members' Returns the permissions for the SharePoint group with the name 'My Site Members' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity SharePoint group name, id or instance to return the permissions for Type: GroupPipeBind Parameter Sets: (All) Aliases: Name Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPHideDefaultThemes.html": {
    "href": "cmdlets/Get-PnPHideDefaultThemes.html",
    "title": "Get-PnPHideDefaultThemes | PnP PowerShell",
    "keywords": "Get-PnPHideDefaultThemes SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns if the default / OOTB themes should be visible to users or not. SYNTAX Get-PnPHideDefaultThemes [-Connection <PnPConnection>] DESCRIPTION Returns if the default themes are visible. Use Set-PnPHideDefaultThemes to change this value. You must be a SharePoint Online global administrator to run the cmdlet. EXAMPLES EXAMPLE 1 Get-PnPHideDefaultThemes This example returns the current setting if the default themes should be visible PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPHomePage.html": {
    "href": "cmdlets/Get-PnPHomePage.html",
    "title": "Get-PnPHomePage | PnP PowerShell",
    "keywords": "Get-PnPHomePage SYNOPSIS Return the homepage SYNTAX Get-PnPHomePage [-Connection <PnPConnection>] DESCRIPTION Returns the URL to the page set as home page EXAMPLES EXAMPLE 1 Get-PnPHomePage Will return the URL of the home page of the web. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPHomeSite.html": {
    "href": "cmdlets/Get-PnPHomeSite.html",
    "title": "Get-PnPHomeSite | PnP PowerShell",
    "keywords": "Get-PnPHomeSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the SharePoint home sites for your tenant SYNTAX Basic (Default) Get-PnPHomeSite [-IsVivaConnectionsDefaultStartForCompanyPortalSiteEnabled <SwitchParameter>] [-Connection <PnPConnection>] Detailed Get-PnPHomeSite -Detailed <SwitchParameter> [-Connection <PnPConnection>] DESCRIPTION This cmdlet will return the SharePoint Home sites for your tenant. Depending on which parameters you provide, you will get returned either the default first Home Site URL or details on all the Home Sites that have been configured for your tenant. EXAMPLES EXAMPLE 1 Get-PnPHomeSite Returns the URL of the first home site for your tenant EXAMPLE 2 Get-PnPHomeSite -IsVivaConnectionsDefaultStartForCompanyPortalSiteEnabled Returns whether Viva Connections landing experience is set to the SharePoint home site. EXAMPLE 3 Get-PnPHomeSite -Detailed Returns detailed information on all the home sites that have been configured for your tenant PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Detailed When provided, it returns detailed information on all the home sites configured on your tenant Type: SwitchParameter Parameter Sets: Detailed Required: True Position: Named Default value: True Accept pipeline input: False Accept wildcard characters: False -IsVivaConnectionsDefaultStartForCompanyPortalSiteEnabled When provided, it retrieves whether Viva Connections landing experience is set to the SharePoint home site. Type: SwitchParameter Parameter Sets: Basic Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPHubSite.html": {
    "href": "cmdlets/Get-PnPHubSite.html",
    "title": "Get-PnPHubSite | PnP PowerShell",
    "keywords": "Get-PnPHubSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieve all or a specific hubsite. SYNTAX Get-PnPHubSite [[-Identity] <HubSitePipeBind>] [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPHubSite Returns all hubsite properties EXAMPLE 2 Get-PnPHubSite -Identity \"https://contoso.sharepoint.com/sites/myhubsite\" Returns the properties of the specified hubsite by using the hubsite url EXAMPLE 3 Get-PnPHubSite -Identity \"bc07d4b8-1c2f-4184-8cc2-a52dfd6fe0c4\" Returns the properties of the specified hubsite by using the hubsite site id PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify hub site url or site id Type: HubSitePipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPHubSiteChild.html": {
    "href": "cmdlets/Get-PnPHubSiteChild.html",
    "title": "Get-PnPHubSiteChild | PnP PowerShell",
    "keywords": "Get-PnPHubSiteChild SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieves all sites associated to a specific hub site SYNTAX Get-PnPHubSiteChild [-Identity <HubSitePipeBind>] [-Connection <PnPConnection>] DESCRIPTION Retrieves all sites associated to a specific hub site EXAMPLES EXAMPLE 1 Get-PnPHubSiteChild Returns the sites which are associated to the currently connected to hub site EXAMPLE 2 Get-PnPHubSiteChild -Identity \"https://contoso.sharepoint.com/sites/myhubsite\" Returns the sites which are associated with the provided hub site as their hub site EXAMPLE 3 Get-PnPHubSite | Get-PnPHubSiteChild Returns all sites that are associated to a hub site PARAMETERS -Identity The URL, Id or instance of the hubsite for which to receive the sites referring to it. If not provided, the currently connected to site will be used. Type: HubSitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPInPlaceRecordsManagement.html": {
    "href": "cmdlets/Get-PnPInPlaceRecordsManagement.html",
    "title": "Get-PnPInPlaceRecordsManagement | PnP PowerShell",
    "keywords": "Get-PnPInPlaceRecordsManagement SYNOPSIS Returns if the place records management feature is enabled. SYNTAX Get-PnPInPlaceRecordsManagement [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPInPlaceRecordsManagement Returns if $true if in place records management is active PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPIndexedPropertyKeys.html": {
    "href": "cmdlets/Get-PnPIndexedPropertyKeys.html",
    "title": "Get-PnPIndexedPropertyKeys | PnP PowerShell",
    "keywords": "Get-PnPIndexedPropertyKeys SYNOPSIS Returns the keys of the property bag values that have been marked for indexing by search SYNTAX Get-PnPIndexedPropertyKeys [-List <ListPipeBind>] [-Connection <PnPConnection>] DESCRIPTION EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name from where to get the indexed properties Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPIsSiteAliasAvailable.html": {
    "href": "cmdlets/Get-PnPIsSiteAliasAvailable.html",
    "title": "Get-PnPIsSiteAliasAvailable | PnP PowerShell",
    "keywords": "Get-PnPIsSiteAliasAvailable SYNOPSIS Validates if a certain alias is still available to be used to create a new site collection for. If it is not, it will propose an alternative alias and URL which is still available. SYNTAX Get-PnPIsSiteAliasAvailable [-Identity <String>] [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPIsSiteAliasAvailable -Identity \"HR\" Validates if the alias \"HR\" is still available to be used PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Alias you want to check for if it is still available to create a new site collection for Type: String Parameter Sets: (All) Aliases: Alias Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPJavaScriptLink.html": {
    "href": "cmdlets/Get-PnPJavaScriptLink.html",
    "title": "Get-PnPJavaScriptLink | PnP PowerShell",
    "keywords": "Get-PnPJavaScriptLink SYNOPSIS Returns all or a specific custom action(s) with location type ScriptLink SYNTAX Get-PnPJavaScriptLink [[-Name] <String>] [-Scope <CustomActionScope>] [-ThrowExceptionIfJavaScriptLinkNotFound] [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPJavaScriptLink Returns all web scoped JavaScript links EXAMPLE 2 Get-PnPJavaScriptLink -Scope All Returns all web and site scoped JavaScript links EXAMPLE 3 Get-PnPJavaScriptLink -Scope Web Returns all Web scoped JavaScript links EXAMPLE 4 Get-PnPJavaScriptLink -Scope Site Returns all Site scoped JavaScript links EXAMPLE 5 Get-PnPJavaScriptLink -Name Test Returns the web scoped JavaScript link named Test PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Name of the Javascript link. Omit this parameter to retrieve all script links Type: String Parameter Sets: (All) Aliases: Key Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Scope of the action, either Web, Site or All to return both, defaults to Web Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThrowExceptionIfJavaScriptLinkNotFound Switch parameter if an exception should be thrown if the requested JavaScriptLink does not exist (true) or if omitted, nothing will be returned in case the JavaScriptLink does not exist Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPKnowledgeHubSite.html": {
    "href": "cmdlets/Get-PnPKnowledgeHubSite.html",
    "title": "Get-PnPKnowledgeHubSite | PnP PowerShell",
    "keywords": "Get-PnPKnowledgeHubSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Gets the Knowledge Hub Site URL for your tenant SYNTAX Get-PnPKnowledgeHubSite [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPKnowledgeHubSite Returns the Knowledge Hub Site Url for your tenant PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPLargeListOperationStatus.html": {
    "href": "cmdlets/Get-PnPLargeListOperationStatus.html",
    "title": "Get-PnPLargeListOperationStatus | PnP PowerShell",
    "keywords": "Get-PnPLargeListOperationStatus SYNOPSIS Get the status of a large list operation. Currently supports large list removal operation. SYNTAX Get-PnPLargeListOperationStatus [-Identity] <ListId> [-OperationId] <OperationId> [-Connection <PnPConnection>] DESCRIPTION Allows to get the status of a large list operation. EXAMPLES EXAMPLE 1 Get-PnPLargeListOperationStatus -Identity 9ea5d197-2227-4156-9ae1-725d74dc029d -OperationId 924e6a34-5c90-4d0d-8083-2efc6d1cf481 PARAMETERS -Identity ID of the list. Retrieve the value for this parameter from the output of the large list operation command. It can be retrieved as: Remove-PnPList -Identity \"Contoso\" -Recycle -LargeList Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -OperationId OperationId of the large list operation. Retrieve the value for this parameter from the output of the large list operation command which can be used as: Remove-PnPList -Identity \"Contoso\" -Recycle -LargeList. Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPLibraryFileVersionBatchDeleteJobStatus.html": {
    "href": "cmdlets/Get-PnPLibraryFileVersionBatchDeleteJobStatus.html",
    "title": "Get-PnPLibraryFileVersionBatchDeleteJobStatus | PnP PowerShell",
    "keywords": "Get-PnPLibraryFileVersionBatchDeleteJobStatus SYNOPSIS Get the progress of deleting existing file versions on the document library. SYNTAX Get-PnPLibraryFileVersionBatchDeleteJobStatus -Identity <ListPipeBind> [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows retrieval of the progress of deleting existing file versions on the document library. EXAMPLES EXAMPLE 1 Get-PnPLibraryFileVersionBatchDeleteJobStatus -Identity \"Documents\" Returns the progress of deleting existing file versions on the document library. PARAMETERS -Identity The ID, name or Url (Lists/MyList) of the document library to perform the trimming on. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPLibraryFileVersionExpirationReportJobStatus.html": {
    "href": "cmdlets/Get-PnPLibraryFileVersionExpirationReportJobStatus.html",
    "title": "Get-PnPLibraryFileVersionExpirationReportJobStatus | PnP PowerShell",
    "keywords": "Get-PnPLibraryFileVersionExpirationReportJobStatus SYNOPSIS Gets the status for a file version usage report generation job for a document library. SYNTAX Get-PnPLibraryFileVersionExpirationReportJobStatus -Identity <ListPipeBind> -ReportUrl <string> DESCRIPTION Gets the status for a file version usage report generation job for a document library. EXAMPLES EXAMPLE 1 Get-PnPLibraryFileVersionExpirationReportJobStatus -Identity \"Documents\" -ReportUrl \"https://contoso.sharepoint.com/sites/reports/MyReports/VersionReport.csv\" Gets the status for a file version usage report generation job for a document library. PARAMETERS -Identity The ID, name or Url (Lists/MyList) of the document library to get the job status on. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ReportUrl The URL of the report to get the job status on. Type: string Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPList.html": {
    "href": "cmdlets/Get-PnPList.html",
    "title": "Get-PnPList | PnP PowerShell",
    "keywords": "Get-PnPList SYNOPSIS Returns lists from SharePoint SYNTAX Get-PnPList [[-Identity] <ListPipeBind>] [-ThrowExceptionIfListNotFound] [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION This cmdlet returns lists in the current web. EXAMPLES EXAMPLE 1 Get-PnPList Returns all lists in the current web EXAMPLE 2 Get-PnPList -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe Returns a list with the given id EXAMPLE 3 Get-PnPList -Identity Lists/Announcements Returns a list with the given url EXAMPLE 4 Get-PnPList | Where-Object {$_.RootFolder.ServerRelativeUrl -like \"/lists/*\"} This examples shows how to do wildcard searches on the list URL. It returns all lists whose URL starts with \"/lists/\" This could also be used to search for strings inside of the URL. EXAMPLE 5 Get-PnPList -Includes HasUniqueRoleAssignments This examples shows how to retrieve additional properties of the list. PARAMETERS -Identity The ID, name or Url (Lists/MyList) of the list Type: ListPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ThrowExceptionIfListNotFound Switch parameter if an exception should be thrown if the requested list does not exist (true) or if omitted, nothing will be returned in case the list does not exist Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Includes List of properties Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPListDesign.html": {
    "href": "cmdlets/Get-PnPListDesign.html",
    "title": "Get-PnPListDesign | PnP PowerShell",
    "keywords": "Get-PnPListDesign SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieve List Designs that have been registered on the current tenant. SYNTAX Get-PnPListDesign [[-Identity] <TenantListDesignPipeBind>] [-Connection <PnPConnection>] DESCRIPTION Retrieve List Designs that have been registered on the current tenant. When providing a name with -Identity, it returns all list designs with that name. EXAMPLES EXAMPLE 1 Get-PnPListDesign Returns all registered list designs EXAMPLE 2 Get-PnPListDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Returns a specific registered list design by id EXAMPLE 3 Get-PnPListDesign -Identity ListEvent Returns a specific registered list design by name PARAMETERS -Identity If specified, it will retrieve the specified list design Type: TenantListDesignPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPListInformationRightsManagement.html": {
    "href": "cmdlets/Get-PnPListInformationRightsManagement.html",
    "title": "Get-PnPListInformationRightsManagement | PnP PowerShell",
    "keywords": "Get-PnPListInformationRightsManagement SYNOPSIS Get the site closure status of the site which has a site policy applied SYNTAX Get-PnPListInformationRightsManagement -List <ListPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to get the site closure status of the current site or list which has a site policy applied. EXAMPLES EXAMPLE 1 Get-PnPListInformationRightsManagement -List \"Documents\" Returns Information Rights Management (IRM) settings for the list. See 'Get-Help Set-PnPListInformationRightsManagement -Detailed' for more information about the various values. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPListItem.html": {
    "href": "cmdlets/Get-PnPListItem.html",
    "title": "Get-PnPListItem | PnP PowerShell",
    "keywords": "Get-PnPListItem SYNOPSIS Retrieves list items SYNTAX All Items (Default) Get-PnPListItem [-List] <ListPipeBind> [-FolderServerRelativeUrl <String>] [-Fields <String[]>] [-PageSize <Int32>] [-ScriptBlock <ScriptBlock>][-IncludeContentType <SwitchParameter>][-Connection <PnPConnection>] By Id Get-PnPListItem [-List] <ListPipeBind> [-Id <Int32>] [-Fields <String[]>] [-IncludeContentType <SwitchParameter>] [-Connection <PnPConnection>] By Unique Id Get-PnPListItem [-List] <ListPipeBind> [-UniqueId <Guid>] [-Fields <String[]>] [-IncludeContentType <SwitchParameter>] [-Connection <PnPConnection>] By Query Get-PnPListItem [-List] <ListPipeBind> [-Query <String>] [-FolderServerRelativeUrl <String>] [-PageSize <Int32>] [-IncludeContentType <SwitchParameter>] [-ScriptBlock <ScriptBlock>] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve list items. EXAMPLES EXAMPLE 1 Get-PnPListItem -List Tasks Retrieves all list items from the Tasks list EXAMPLE 2 Get-PnPListItem -List Tasks -Id 1 Retrieves the list item with ID 1 from the Tasks list EXAMPLE 3 Get-PnPListItem -List Tasks -UniqueId bd6c5b3b-d960-4ee7-a02c-85dc6cd78cc3 Retrieves the list item with UniqueId or GUID bd6c5b3b-d960-4ee7-a02c-85dc6cd78cc3 from the tasks lists EXAMPLE 4 (Get-PnPListItem -List Tasks -Fields \"Title\",\"GUID\").FieldValues Retrieves all list items, but only includes the values of the Title and GUID fields in the list item object EXAMPLE 5 Get-PnPListItem -List Tasks -Query \"<View><Query><Where><Eq><FieldRef Name='GUID'/><Value Type='Guid'>bd6c5b3b-d960-4ee7-a02c-85dc6cd78cc3</Value></Eq></Where></Query></View>\" Retrieves all available fields of list items based on the CAML query specified EXAMPLE 6 Get-PnPListItem -List Tasks -Query \"<View><ViewFields><FieldRef Name='Title'/><FieldRef Name='Modified'/></ViewFields><Query><Where><Eq><FieldRef Name='Modified'/><Value Type='DateTime'><Today/></Value></Eq></Where></Query></View>\" Retrieves all list items modified today, retrieving the columns 'Title' and 'Modified'. When you use -Query, you can add a <ViewFields> clause to retrieve specific columns (since you cannot use -Fields) EXAMPLE 7 Get-PnPListItem -List Tasks -PageSize 1000 Retrieves all list items from the Tasks list in pages of 1000 items EXAMPLE 8 Get-PnPListItem -List Tasks -PageSize 1000 -ScriptBlock { Param($items) $items.Context.ExecuteQuery() } | ForEach-Object { $_.BreakRoleInheritance($true, $true) } Retrieves all list items from the Tasks list in pages of 1000 items and breaks permission inheritance on each item EXAMPLE 9 Get-PnPListItem -List Samples -FolderServerRelativeUrl \"/sites/contosomarketing/Lists/Samples/Demo\" Retrieves all list items from the Demo folder in the Samples list located in the contosomarketing site collection EXAMPLE 10 PS D:\\Code> Get-PnPListItem -List \"Shared Documents\" | Select-Object id,@{label=\"Filename\";expression={$_.FieldValues.FileLeafRef}} Id Filename -- -------- 1 Contoso-Financial-Calendar-Q1_68340_97779.pptx 5 Does this work.docx Retrieves all list items from the Shared Documents and shows each item's ID and Filename EXAMPLE 11 Get-PnPListItem -List Tasks -Id 1 -IncludeContentType Retrieves the list item with ID 1 from the Tasks list along with its content type information. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Fields The fields to retrieve. If not specified all fields will be loaded in the returned list object. Type: String[] Parameter Sets: All Items, By Id, By Unique Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FolderServerRelativeUrl The server relative URL of a list folder from which results will be returned. Type: String Parameter Sets: All Items, By Query Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id The ID of the item to retrieve Type: Int32 Parameter Sets: By Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list to query Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -PageSize The number of items to retrieve per page request. Type: Int32 Parameter Sets: All Items, By Query Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Query The CAML query to execute against the list Type: String Parameter Sets: By Query Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ScriptBlock The script block to run after every page request. Type: ScriptBlock Parameter Sets: All Items, By Query Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UniqueId The UniqueId or GUID of the item to retrieve Type: Guid Parameter Sets: By Unique Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeContentType If specified, it will retrieve the content type information of the list item(s). Type: Switch Parameter Parameter Sets: All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPListItemAttachment.html": {
    "href": "cmdlets/Get-PnPListItemAttachment.html",
    "title": "Get-PnPListItemAttachment | PnP PowerShell",
    "keywords": "Get-PnPListItemAttachment SYNOPSIS Downloads the list item attachments to a specified path on the file system. SYNTAX Get attachments from list item Get-PnPListItemAttachment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-Path <String>] [-Force <SwitchParameter>] [-Connection <PnPConnection>] DESCRIPTION Allows to download the list item attachments to a specified path. Use Force option in order to skip the confirmation question and overwrite the files on the local disk, if they already exist. EXAMPLES EXAMPLE 1 Get-PnPListItemAttachment -List \"Demo List\" -Identity 1 -Path \"C:\\temp\" Downloads all attachments from the list item with Id \"1\" in the \"Demo List\" SharePoint list and stores them in the temp folder. EXAMPLE 2 Get-PnPListItemAttachment -List \"Demo List\" -Identity 1 -Path \"C:\\temp\" -Force Downloads all attachments from the list item with Id \"1\" in the \"Demo List\" SharePoint list and stores them in the temp folder overwriting the files if they already exist. PARAMETERS -Path Specify the path on the local file system to download the list item attachments to. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Note that when providing the name of the list, the name is case-sensitive. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question and overwrite the files on the local disk, if they already exist. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPListItemComment.html": {
    "href": "cmdlets/Get-PnPListItemComment.html",
    "title": "Get-PnPListItemComment | PnP PowerShell",
    "keywords": "Get-PnPListItemComment SYNOPSIS Retrieves all comments from the list item in the specified list. SYNTAX Get-PnPListItemComment -List <ListPipeBind> -Identity <ListItemPipeBind> EXAMPLES EXAMPLE 1 Get-PnPListItemComment -List Tasks -Identity 1 Retrieves all comments for the specified list item from the Tasks list PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPListItemPermission.html": {
    "href": "cmdlets/Get-PnPListItemPermission.html",
    "title": "Get-PnPListItemPermission | PnP PowerShell",
    "keywords": "Get-PnPListItemPermission SYNOPSIS Gets list item permissions. SYNTAX Get-PnPListItemPermission [-List] <ListPipeBind> -Identity <ListItemPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve list item permissions. EXAMPLES EXAMPLE 1 Get-PnPListItemPermission -List 'Documents' -Identity 1 Get the permissions for listitem with id 1 in the list 'Documents' PARAMETERS -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPListItemVersion.html": {
    "href": "cmdlets/Get-PnPListItemVersion.html",
    "title": "Get-PnPListItemVersion | PnP PowerShell",
    "keywords": "Get-PnPListItemVersion SYNOPSIS Retrieves the previous versions of a list item. SYNTAX Get-PnPListItemVersion -List <ListPipeBind> -Identity <ListItemPipeBind> [-Connection <PnPConnection>] DESCRIPTION This cmdlet retrieves the version history of a list item. EXAMPLES EXAMPLE 1 Get-PnPListItemVersion -List \"Demo List\" -Identity 1 Retrieves the list item version history. PARAMETERS -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object. Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Version The ID or label of the version. Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPListPermissions.html": {
    "href": "cmdlets/Get-PnPListPermissions.html",
    "title": "Get-PnPListPermissions | PnP PowerShell",
    "keywords": "Get-PnPListPermissions SYNOPSIS Returns the permissions for a specific SharePoint List given a user or group by id. SYNTAX Get-PnPListPermissions [-Identity] <ListPipeBind> -PrincipalId <Int32> DESCRIPTION This cmdlet retrieves the list permissions (role definitions) for a specific user or group in a provided list. EXAMPLES EXAMPLE 1 Get-PnPListPermissions -Identity DemoList -PrincipalId 60 Returns the permissions for the SharePoint group with id for the list DemoList. EXAMPLE 2 Get-PnPListPermissions -Identity DemoList -PrincipalId (Get-PnPGroup -Identity DemoGroup).Id Returns the permissions for the SharePoint group call DemoGroup for the list DemoList. PARAMETERS -Identity The id, name or server relative url of the list to retrieve the permissions for. Type: ListPipeBind Parameter Sets: (All) Aliases: Name Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -PrincipalId The id of a user or a SharePoint group. See Get-PnPUser and Get-PnPGroup. Type: Int32 Parameter Sets: (All) Aliases: Name Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPListRecordDeclaration.html": {
    "href": "cmdlets/Get-PnPListRecordDeclaration.html",
    "title": "Get-PnPListRecordDeclaration | PnP PowerShell",
    "keywords": "Get-PnPListRecordDeclaration SYNOPSIS Returns the manual record declaration settings for a list SYNTAX Get-PnPListRecordDeclaration -List <ListPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve the record declaration settings for given list. EXAMPLES EXAMPLE 1 Get-PnPListRecordDeclaration -List \"Documents\" Returns the record declaration setting for the list \"Documents\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list to retrieve the record declaration settings for Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPManagedAppId.html": {
    "href": "cmdlets/Get-PnPManagedAppId.html",
    "title": "Get-PnPManagedAppId | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPManagedAppId SYNOPSIS Retrieve an App Id associated with a Url from either the Windows Credential Manager, the MacOS Key chain or if you use the Microsoft.PowerShell.SecretManagement module, a default vault. SYNTAX Get-PnPManagedAppId -Url <String> DESCRIPTION Returns an associated App Id from the Windows Credential Manager or Mac OS Key Chain Entry. EXAMPLES EXAMPLE 1 Get-PnPManagedAppId -Url https://yourtenant.sharepoint.com Returns the App Id associated with the specified tenant Url. PARAMETERS -Url The Url for which to retrieve the associated App Id Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPMasterPage.html": {
    "href": "cmdlets/Get-PnPMasterPage.html",
    "title": "Get-PnPMasterPage | PnP PowerShell",
    "keywords": "Get-PnPMasterPage SYNOPSIS Returns the URLs of the default Master Page and the custom Master Page. SYNTAX Get-PnPMasterPage [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve urls of the default Master Page and custom Master Page of the current site. EXAMPLES EXAMPLE 1 Get-PnPMasterPage This will return the urls of the default Master Page and custom Master Page of the current site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPMessageCenterAnnouncement.html": {
    "href": "cmdlets/Get-PnPMessageCenterAnnouncement.html",
    "title": "Get-PnPMessageCenterAnnouncement | PnP PowerShell",
    "keywords": "Get-PnPMessageCenterAnnouncement SYNOPSIS Required Permissions Microsoft Graph API : ServiceMessage.Read.All Gets message center announcements of the Office 365 Services from the Microsoft Graph API SYNTAX Get-PnPMessageCenterAnnouncement [-Identity <Id>] DESCRIPTION Allows to retrieve the available message center announcements. EXAMPLES EXAMPLE 1 Get-PnPMessageCenterAnnouncement Retrieves all the available message center announcements EXAMPLE 2 Get-PnPMessageCenterAnnouncement -Identity \"MC123456\" Retrieves the details of the message center announcement with the Id MC123456 PARAMETERS -Identity Allows retrieval of a particular message center announcement with the provided Id Type: Identity Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPMicrosoft365ExpiringGroup.html": {
    "href": "cmdlets/Get-PnPMicrosoft365ExpiringGroup.html",
    "title": "Get-PnPMicrosoft365ExpiringGroup | PnP PowerShell",
    "keywords": "Get-PnPMicrosoft365ExpiringGroup SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.Read.All, Directory.ReadWrite.All, Group.Read.All, Group.ReadWrite.All, GroupMember.Read.All, GroupMember.ReadWrite.All Gets all soon to expire Microsoft 365 Groups. SYNTAX Get-PnPMicrosoft365ExpiringGroup [-Limit <Int32>] [-Connection <PnPConnection>] DESCRIPTION This command returns all soon to expire Microsoft 365 Groups. By default, groups expiring in the next 31 days are returned (in accordance with SharePoint/OneDrive's retention period's 31-day months). The -Limit parameter can be used to specify a different time period. EXAMPLES EXAMPLE 1 Get-PnPMicrosoft365ExpiringGroup Returns all Groups expiring within 31 days (roughly 1 month). EXAMPLE 2 Get-PnPMicrosoft365ExpiringGroup -Limit 93 Returns all Microsoft 365 Groups expiring in 93 days (roughly 3 months) PARAMETERS -Limit Limits Groups to be returned to Groups expiring in as many days. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: 31 Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPMicrosoft365Group.html": {
    "href": "cmdlets/Get-PnPMicrosoft365Group.html",
    "title": "Get-PnPMicrosoft365Group | PnP PowerShell",
    "keywords": "Get-PnPMicrosoft365Group SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.Read.All, Directory.ReadWrite.All, Group.Read.All, Group.ReadWrite.All, GroupMember.Read.All, GroupMember.ReadWrite.All Gets one Microsoft 365 Group or a list of Microsoft 365 Groups SYNTAX Get-PnPMicrosoft365Group [-Identity <Microsoft365GroupPipeBind>] [-IncludeSiteUrl] [-IncludeOwners] [-Detailed] [-Filter <string>] [-IncludeSensitivityLabels] DESCRIPTION Allows to retrieve Microsoft 365 Groups. By using Identity option you may specify the exact group that will be retrieved. EXAMPLES EXAMPLE 1 Get-PnPMicrosoft365Group Retrieves all the Microsoft 365 Groups EXAMPLE 2 Get-PnPMicrosoft365Group -Identity $groupId Retrieves a specific Microsoft 365 Group based on its ID EXAMPLE 3 Get-PnPMicrosoft365Group -Identity $groupDisplayName Retrieves a specific or list of Microsoft 365 Groups that start with the given DisplayName EXAMPLE 4 Get-PnPMicrosoft365Group -Identity $groupSiteMailNickName Retrieves a specific or list of Microsoft 365 Groups for which the email starts with the provided mail nickName EXAMPLE 5 Get-PnPMicrosoft365Group -Identity $group Retrieves a specific Microsoft 365 Group based on its object instance EXAMPLE 6 Get-PnPMicrosoft365Group -IncludeSiteUrl Retrieves all Microsoft 365 Groups in this tenant and includes the URL property for the underlying SharePoint site. EXAMPLE 7 $groups = Get-PnPMicrosoft365Group -IncludeOwners $g[0].Owners Retrieves all Microsoft 365 Groups in this tenant and retrieves the owners for each group. The owners are available in the \"Owners\" property of the returned objects. EXAMPLE 8 $groups = Get-PnPMicrosoft365Group -Filter \"startswith(description, 'contoso')\" Retrieves all Microsoft 365 Groups in this tenant with description starting with Contoso. This example demonstrates using Advanced Query capabilities (see: https://learn.microsoft.com/graph/aad-advanced-queries?tabs=http#group-properties). PARAMETERS -Detailed When provided, the following properties originating from Exchange Online, will also be loaded into the returned group. Without providing this flag, they will not be populated. Providing this flag causes an extra call to be made to Microsoft Graph, so only add it when you need one of the properties below. AutoSubscribeNewMembers RequireSenderAuthenticationEnabled IsSubscribedByMail Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSiteUrl Include fetching the site URL for Microsoft 365 Groups. This slows down large listings. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeOwners Include fetching the group owners. This slows down large listings. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Identity of the Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Filter Specify the query to pass to Graph API in $filter. Type: String Parameter Sets: Filter Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSensitivityLabels Include fetching the sensitivity labels. This slows down large listings. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPMicrosoft365GroupEndpoint.html": {
    "href": "cmdlets/Get-PnPMicrosoft365GroupEndpoint.html",
    "title": "Get-PnPMicrosoft365GroupEndpoint | PnP PowerShell",
    "keywords": "Get-PnPMicrosoft365GroupEndpoint SYNOPSIS Required Permissions Microsoft Graph API : Group.Read.All Returns the endpoints behind a particular Microsoft 365 Group SYNTAX Get-PnPMicrosoft365GroupEndpoint -Identity <Microsoft365GroupPipeBind> [-Connection] [-Verbose] DESCRIPTION This cmdlet allows retrieval of details on the endpoints connected to a Microsoft 365 Group EXAMPLES EXAMPLE 2 Get-PnPMicrosoft365GroupEndpoint Retrieves the endpoints behind the Microsoft 365 Group of the currently connected to site EXAMPLE 2 Get-PnPMicrosoft365GroupEndpoint -Identity \"IT Team\" Retrieves the endpoints behind the Microsoft 365 Group named \"IT Team\" EXAMPLE 3 Get-PnPMicrosoft365GroupEndpoint -Identity e6212531-7f09-4c3b-bc2e-12cae26fb409 Retrieves the endpoints behind the Microsoft 365 Group with the provided Id PARAMETERS -Identity The Identity of the Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPMicrosoft365GroupMember.html": {
    "href": "cmdlets/Get-PnPMicrosoft365GroupMember.html",
    "title": "Get-PnPMicrosoft365GroupMember | PnP PowerShell",
    "keywords": "Get-PnPMicrosoft365GroupMember SYNOPSIS Required Permissions Microsoft Graph API : at least Group.Read.All Microsoft Graph API : Directory.Read.All Returns the members of a particular Microsoft 365 Group SYNTAX Get-PnPMicrosoft365GroupMember -Identity <Microsoft365GroupPipeBind> [-UserType <String>] DESCRIPTION Returns the members of a particular Microsoft 365 Group EXAMPLES EXAMPLE 1 Get-PnPMicrosoft365GroupMember -Identity $groupId Retrieves all the members of a specific Microsoft 365 Group based on its ID EXAMPLE 2 Get-PnPMicrosoft365GroupMember -Identity $group Retrieves all the members of a specific Microsoft 365 Group based on the group's object instance EXAMPLE 3 Get-PnPMicrosoft365GroupMember -Identity \"Sales\" | Where-Object UserType -eq Guest Returns all the guest users of the Microsoft 365 Group named \"Sales\" PARAMETERS -Identity The Identity of the Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPMicrosoft365GroupMembers.html": {
    "href": "cmdlets/Get-PnPMicrosoft365GroupMembers.html",
    "title": "Get-PnPMicrosoft365GroupMembers | PnP PowerShell",
    "keywords": "Get-PnPMicrosoft365GroupMembers SYNOPSIS This is an alias for Get-PnPMicrosoft365GroupMember. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPMicrosoft365GroupOwner.html": {
    "href": "cmdlets/Get-PnPMicrosoft365GroupOwner.html",
    "title": "Get-PnPMicrosoft365GroupOwner | PnP PowerShell",
    "keywords": "Get-PnPMicrosoft365GroupOwner SYNOPSIS Required Permissions Microsoft Graph API : at least Group.Read.All Microsoft Graph API : Directory.Read.All Gets owners of a particular Microsoft 365 Group SYNTAX Get-PnPMicrosoft365GroupOwner -Identity <Microsoft365GroupPipeBind> DESCRIPTION Allows to retrieve owners of Microsoft 365 Group. EXAMPLES EXAMPLE 1 Get-PnPMicrosoft365GroupOwner -Identity $groupId Retrieves all the owners of a specific Microsoft 365 Group based on its ID EXAMPLE 2 Get-PnPMicrosoft365GroupOwner -Identity $group Retrieves all the owners of a specific Microsoft 365 Group based on the group's object instance PARAMETERS -Identity The Identity of the Microsoft 365 Group. Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPMicrosoft365GroupOwners.html": {
    "href": "cmdlets/Get-PnPMicrosoft365GroupOwners.html",
    "title": "Get-PnPMicrosoft365GroupOwners | PnP PowerShell",
    "keywords": "Get-PnPMicrosoft365GroupOwners SYNOPSIS This is an alias for Get-PnPMicrosoft365GroupOwner. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPMicrosoft365GroupSettingTemplates.html": {
    "href": "cmdlets/Get-PnPMicrosoft365GroupSettingTemplates.html",
    "title": "Get-PnPMicrosoft365GroupSettingTemplates | PnP PowerShell",
    "keywords": "Get-PnPMicrosoft365GroupSettingTemplates SYNOPSIS Required Permissions Microsoft Graph API : Directory.Read.All Gets the available system wide template of settings for Microsoft 365 Groups. SYNTAX Get-PnPMicrosoft365GroupSettingTemplates [-Identity <string>] DESCRIPTION Allows to retrieve available system wide template of settings for Microsoft 365 Groups. EXAMPLES EXAMPLE 1 Get-PnPMicrosoft365GroupSettingTemplates Retrieves all the available Microsoft 365 Group setting templates from the Tenant EXAMPLE 2 Get-PnPMicrosoft365GroupSettingTemplates -Identity \"08d542b9-071f-4e16-94b0-74abb372e3d9\" Retrieves a specific Microsoft 365 Group setting template. In the above example, it retrieves the Group.Unified.Guest setting template. PARAMETERS -Identity The Identity of the Microsoft 365 Group setting template Type: string Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Get-PnPMicrosoft365GroupSettings.html": {
    "href": "cmdlets/Get-PnPMicrosoft365GroupSettings.html",
    "title": "Get-PnPMicrosoft365GroupSettings | PnP PowerShell",
    "keywords": "Get-PnPMicrosoft365GroupSettings SYNOPSIS Required Permissions Microsoft Graph API : Directory.Read.All Gets a settings of a specific Microsoft 365 Group or a tenant wide Microsoft 365 Group Settings. SYNTAX Get-PnPMicrosoft365GroupSettings [-Identity <Microsoft365GroupPipeBind>] [-GroupSetting <Microsoft365GroupSettingsPipeBind>] DESCRIPTION Allows to retrieve tenant wide settings of Microsoft 365 Groups or by using Identity option you may specify the exact Microsoft 365 Group. EXAMPLES EXAMPLE 1 Get-PnPMicrosoft365GroupSettings Retrieves all the Microsoft 365 Group settings from the Tenant EXAMPLE 2 Get-PnPMicrosoft365GroupSettings -Identity $groupId Retrieves a specific Microsoft 365 Group setting EXAMPLE 3 Get-PnPMicrosoft365GroupSettings -GroupSetting $groupSettingId Retrieves a tenant-wide specific Microsoft 365 Group setting. EXAMPLE 4 Get-PnPMicrosoft365GroupSettings -Identity $groupId -GroupSetting $groupSettingId Retrieves a group-specific Microsoft 365 Group setting PARAMETERS -Identity The Identity of the Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GroupSetting The Identity of the Microsoft 365 Group Setting Type: Microsoft365GroupSettingsPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation get settings Microsoft Graph documentation list settings"
  },
  "cmdlets/Get-PnPMicrosoft365GroupTeam.html": {
    "href": "cmdlets/Get-PnPMicrosoft365GroupTeam.html",
    "title": "Get-PnPMicrosoft365GroupTeam | PnP PowerShell",
    "keywords": "Get-PnPMicrosoft365GroupTeam SYNOPSIS Required Permissions Microsoft Graph API : Group.Read.All Returns the Microsoft Teams team behind a particular Microsoft 365 Group. SYNTAX Get-PnPMicrosoft365GroupTeam -Identity <Microsoft365GroupPipeBind> [-Connection] [-Verbose] DESCRIPTION This cmdlet allows retrieval of details on the Microsoft Teams team connected to a Microsoft 365 Group. EXAMPLES EXAMPLE 1 Get-PnPMicrosoft365GroupTeam Retrieves the Microsoft Teams team details behind the Microsoft 365 Group of the currently connected to site. EXAMPLE 2 Get-PnPMicrosoft365GroupTeam -Identity \"IT Team\" Retrieves the Microsoft Teams team details behind the Microsoft 365 Group named \"IT Team\". EXAMPLE 3 Get-PnPMicrosoft365GroupTeam -Identity e6212531-7f09-4c3b-bc2e-12cae26fb409 Retrieves the Microsoft Teams team details behind the Microsoft 365 Group with the provided Id. PARAMETERS -Identity The Identity of the Microsoft 365 Group. Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPMicrosoft365GroupYammerCommunity.html": {
    "href": "cmdlets/Get-PnPMicrosoft365GroupYammerCommunity.html",
    "title": "Get-PnPMicrosoft365GroupYammerCommunity | PnP PowerShell",
    "keywords": "Get-PnPMicrosoft365GroupYammerCommunity SYNOPSIS Required Permissions Microsoft Graph API : Group.Read.All Returns the Yammer Community behind a particular Microsoft 365 Group SYNTAX Get-PnPMicrosoft365GroupYammerCommunity -Identity <Microsoft365GroupPipeBind> [-Connection] [-Verbose] DESCRIPTION This cmdlet allows retrieval of details on the Yammer Community connected to a Microsoft 365 Group EXAMPLES EXAMPLE 2 Get-PnPMicrosoft365GroupYammerCommunity Retrieves the Yammer Community details behind the Microsoft 365 Group of the currently connected to site EXAMPLE 2 Get-PnPMicrosoft365GroupYammerCommunity -Identity \"IT Community\" Retrieves the Yammer Community details behind the Microsoft 365 Group named \"IT Community\" EXAMPLE 3 Get-PnPMicrosoft365GroupYammerCommunity -Identity e6212531-7f09-4c3b-bc2e-12cae26fb409 Retrieves the Yammer Community details behind the Microsoft 365 Group with the provided Id PARAMETERS -Identity The Identity of the Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPNavigationNode.html": {
    "href": "cmdlets/Get-PnPNavigationNode.html",
    "title": "Get-PnPNavigationNode | PnP PowerShell",
    "keywords": "Get-PnPNavigationNode SYNOPSIS Returns all or a specific navigation node SYNTAX All nodes by location (Default) Get-PnPNavigationNode [-Location <NavigationType>] [-Tree] [-Connection <PnPConnection>] A single node by ID Get-PnPNavigationNode [-Id <Int32>] [-Tree] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve all navigation nodes or a specific on by using Id option. EXAMPLES EXAMPLE 1 Get-PnPNavigationNode Returns all navigation nodes in the quicklaunch navigation EXAMPLE 2 Get-PnPNavigationNode -Location QuickLaunch Returns all navigation nodes in the quicklaunch navigation EXAMPLE 3 Get-PnPNavigationNode -Location TopNavigationBar Returns all navigation nodes in the top navigation bar EXAMPLE 4 $node = Get-PnPNavigationNode -Id 2030 PS> $children = $node.Children Returns the selected navigation node and retrieves any children PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id The Id of the node to retrieve Type: Int32 Parameter Sets: A single node by ID Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Location The location of the nodes to retrieve. Either TopNavigationBar, QuickLaunch, SearchNav or Footer. Type: NavigationType Parameter Sets: All nodes by location Accepted values: TopNavigationBar, QuickLaunch, SearchNav, Footer Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Tree Show a tree view of all navigation nodes Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPOrgAssetsLibrary.html": {
    "href": "cmdlets/Get-PnPOrgAssetsLibrary.html",
    "title": "Get-PnPOrgAssetsLibrary | PnP PowerShell",
    "keywords": "Get-PnPOrgAssetsLibrary SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the list of all the configured organizational asset libraries SYNTAX Get-PnPOrgAssetsLibrary [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve list of all the configured organizational asset libraries. EXAMPLES EXAMPLE 1 Get-PnPOrgAssetsLibrary Returns the list of all the configured organizational asset sites EXAMPLE 2 (Get-PnPOrgAssetsLibrary)[0].OrgAssetsLibraries[0].LibraryUrl.DecodedUrl Returns the server relative url of the first document library which has been flagged as organizational asset library, i.e. \"sites/branding/logos\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPOrgNewsSite.html": {
    "href": "cmdlets/Get-PnPOrgNewsSite.html",
    "title": "Get-PnPOrgNewsSite | PnP PowerShell",
    "keywords": "Get-PnPOrgNewsSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the list of all the configured organizational news sites. SYNTAX Get-PnPOrgNewsSite [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve list of all the configured organizational news sites. EXAMPLES EXAMPLE 1 Get-PnPOrgNewsSite Returns the list of all the configured organizational news sites. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPage.html": {
    "href": "cmdlets/Get-PnPPage.html",
    "title": "Get-PnPPage | PnP PowerShell",
    "keywords": "Get-PnPPage SYNOPSIS Returns a modern page SYNTAX Get-PnPPage -Identity <PagePipeBind> [-Connection <PnPConnection>] DESCRIPTION This command allows the retrieval of a modern sitepage along with its properties and contents on it. Note that for a newly created modern site, the Columns and Sections of the Home.aspx page will not be filled according to the actual site page contents. This is because the underlying CanvasContent1 will not be populated until the homepage has been edited and published. The reason for this behavior is to allow for the default homepage to be able to be updated by Microsoft as long as it hasn't been modified. For any other site page or after editing and publishing the homepage, this command will return the correct columns and sections as they are positioned on the site page. EXAMPLES EXAMPLE 1 Get-PnPPage -Identity \"MyPage.aspx\" Gets the page named 'MyPage.aspx' in the current SharePoint site EXAMPLE 2 Get-PnPPage \"MyPage\" Gets the page named 'MyPage.aspx' in the current SharePoint site EXAMPLE 3 Get-PnPPage \"Templates/MyPageTemplate\" Gets the page named 'MyPageTemplate.aspx' from the templates folder of the Page Library in the current SharePoint site EXAMPLE 4 Get-PnPPage -Identity \"MyPage.aspx\" -Web (Get-PnPWeb -Identity \"Subsite1\") Gets the page named 'MyPage.aspx' from the subsite named 'Subsite1' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name of the page Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPageComponent.html": {
    "href": "cmdlets/Get-PnPPageComponent.html",
    "title": "Get-PnPPageComponent | PnP PowerShell",
    "keywords": "Get-PnPPageComponent SYNOPSIS Retrieve one or more page components from a page SYNTAX Get-PnPPageComponent [-Page] <PagePipeBind> [-InstanceId <Guid>] [-Connection <PnPConnection>] Get-PnPPageComponent [-Page] <PagePipeBind> [-ListAvailable] [-Connection <PnPConnection>] DESCRIPTION This command allows the retrieval of the components placed on a modern sitepage along with its properties. Note that for a newly created modern site, the Home.aspx page will not be returning any components. This is because the underlying CanvasContent1 will not be populated until the homepage has been edited and published. The reason for this behavior is to allow for the default homepage to be able to be updated by Microsoft as long as it hasn't been modified. For any other site page or after editing and publishing the homepage, this command will return the correct components as they are positioned on the site page. EXAMPLES EXAMPLE 1 Get-PnPPageComponent -Page Home Returns all controls defined on the given page. EXAMPLE 2 Get-PnPPageComponent -Page Home -InstanceId a2875399-d6ff-43a0-96da-be6ae5875f82 Returns a specific control defined on the given page. EXAMPLE 3 Get-PnPPageComponent -Page Home -ListAvailable Returns all available components that can be added to the page. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InstanceId The instance id of the component Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Page The name of the page Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPageLikedByInformation.html": {
    "href": "cmdlets/Get-PnPPageLikedByInformation.html",
    "title": "Get-PnPPageLikedByInformation | PnP PowerShell",
    "keywords": "Get-PnPPageLikedByInformation SYNOPSIS Returns liked-by Information of a modern page SYNTAX Get-PnPPageLikedByInformation -Identity <PagePipeBind> [-Connection <PnPConnection>] DESCRIPTION This command retrieves the LikedBy Information of a modern page. EXAMPLES EXAMPLE 1 Get-PnPPageLikedByInformation -Identity \"MyPage.aspx\" Gets the LikedBy Information of page named 'MyPage.aspx' in the current SharePoint site EXAMPLE 2 Get-PnPPageLikedByInformation \"MyPage\" Gets the LikedBy Information of page named 'MyPage.aspx' in the current SharePoint site EXAMPLE 3 Get-PnPPageLikedByInformation -Identity \"MyPage.aspx\" -Web (Get-PnPWeb -Identity \"Subsite1\") Gets the LikedBy Information of page named 'MyPage.aspx' from the subsite named 'Subsite1' Sample Output Name : User 1 Mail : Id : 14 LoginName : i:0#.f|membership|user1@contoso.onmicrosoft.com CreationDate : 2024-02-16 14:49:55 Name : User 2 Mail : user2@contoso.onmicrosoft.com Id : 6 LoginName : i:0#.f|membership|user2@contoso.onmicrosoft.com CreationDate : 2024-02-22 19:47:24 PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name of the page Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPageSchedulingEnabled.html": {
    "href": "cmdlets/Get-PnPPageSchedulingEnabled.html",
    "title": "Get-PnPPageSchedulingEnabled | PnP PowerShell",
    "keywords": "Get-PnPPageSchedulingEnabled SYNOPSIS Return true of false, reflecting the state of the modern page schedule feature SYNTAX Get-PnPPageSchedulingEnabled [-Connection <PnPConnection>] DESCRIPTION This will return a boolean value stating if the modern page schedule feature has been enabled or not. EXAMPLES EXAMPLE 1 Get-PnPPageSchedulingEnabled This will return a boolean value stating if the modern page schedule feature has been enabled or not. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPlannerBucket.html": {
    "href": "cmdlets/Get-PnPPlannerBucket.html",
    "title": "Get-PnPPlannerBucket | PnP PowerShell",
    "keywords": "Get-PnPPlannerBucket SYNOPSIS Required Permissions Microsoft Graph API: One of Tasks.Read, Tasks.ReadWrite, Tasks.Read.All, Tasks.ReadWrite.All, Group.Read.All, Group.ReadWrite.All Returns all or a specific Planner bucket SYNTAX By Group Get-PnPPlannerBucket -Group <PlannerGroupPipeBind> -Plan <PlannerPlanPipeBind> [-Identity <PlannerBucketPipeBind>] By Plan Id Get-PnPPlannerBucket -PlanId <String> [-Identity <PlannerBucketPipeBind>] DESCRIPTION This cmdlets returns all or a specific bucket in a Planner plan. EXAMPLES Example 1 Get-PnPPlannerBucket -Group \"Marketing\" -Plan \"Conference Plan\" This will returns all buckets in the specified plan PARAMETERS -Group Specify the group id or name of the group owning the plan. Type: PlannerGroupPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the bucket to retrieve Type: PlannerBucketPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PlanId The plan id of the plan containing the bucket Type: String Parameter Sets: By Plan Id Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Plan The name or id of the plan containing the bucket. Type: PlannerPlanPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPlannerConfiguration.html": {
    "href": "cmdlets/Get-PnPPlannerConfiguration.html",
    "title": "Get-PnPPlannerConfiguration | PnP PowerShell",
    "keywords": "Get-PnPPlannerConfiguration SYNOPSIS Required Permissions Azure: tasks.office.com Returns the Microsoft Planner configuration of the tenant SYNTAX Get-PnPPlannerConfiguration [-Connection <PnPConnection>] DESCRIPTION This cmdlet returns the Microsoft Planner admin configuration of the tenant. Note that after changing the configuration using Set-PnPPlannerTenantConfiguration, this cmdlet may return varying results which could deviate from your desired configuration while the new configuration is being propagated across the tenant. EXAMPLES Example 1 Get-PnPPlannerConfiguration Returns the Microsoft Planner configuration of the tenant PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPlannerPlan.html": {
    "href": "cmdlets/Get-PnPPlannerPlan.html",
    "title": "Get-PnPPlannerPlan | PnP PowerShell",
    "keywords": "Get-PnPPlannerPlan SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Microsoft Graph API: Group.Read.All Returns all or a specific Planner plan for a Microsoft 365 Group. SYNTAX By Group Get-PnPPlannerPlan -Group <PlannerGroupPipeBind> [-Identity <PlannerPlanPipeBind>] [-ResolveIdentities] By Plan Id Get-PnPPlannerPlan -Id <String> [-ResolveIdentities] DESCRIPTION This cmdlet returns all or a specific Planner plan for a Microsoft 365 Group. EXAMPLES Example 1 Get-PnPPlannerPlan -Group \"Marketing\" Returns all plans for the Marketing group. Example 2 Get-PnPPlannerPlan -Group \"Marketing\" -Identity \"Conference Plan\" Returns the specified plan for the Marketing group. Example 3 Get-PnPPlannerPlan -Id \"gndWOTSK60GfPQfiDDj43JgACDCb\" -ResolveIdentities Rerturns the plan with specified ID with resolved identities. PARAMETERS -Group Specify the group containing the plans Type: PlannerGroupPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity If specified the plan with this ID or Name will be returned. Type: PlannerPlanPipeBind Parameter Sets: By Group Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id If specified the plan with this ID will be returned. Type: String Parameter Sets: By Plan Id Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResolveIdentities Show user display names instead of user IDs. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPlannerRosterMember.html": {
    "href": "cmdlets/Get-PnPPlannerRosterMember.html",
    "title": "Get-PnPPlannerRosterMember | PnP PowerShell",
    "keywords": "Get-PnPPlannerRosterMember SYNOPSIS Required Permissions Azure: tasks.office.com Returns the current members of a Microsoft Planner Roster SYNTAX Get-PnPPlannerRosterMember -Identity <string> [-Connection <PnPConnection>] DESCRIPTION This cmdlet will return the current members of a Microsoft Planner Roster EXAMPLES Example 1 Get-PnPPlannerRosterMember -Identity \"6519868f-868f-6519-8f86-19658f861965\" Returns the current members of a Microsoft Planner Roster with the provided Id PARAMETERS -Identity Id of the Microsoft Planner Roster plan of which to return its current members Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPlannerRosterPlan.html": {
    "href": "cmdlets/Get-PnPPlannerRosterPlan.html",
    "title": "Get-PnPPlannerRosterPlan | PnP PowerShell",
    "keywords": "Get-PnPPlannerRosterPlan SYNOPSIS Required Permissions Microsoft Graph API: Tasks.ReadWrite Microsoft Graph API: Tasks.Read Returns Microsoft Planner roster plans for a specific Microsoft Planner Roster or a specific user SYNTAX Get-PnPPlannerRosterPlan [-Identity <PlannerRosterPipeBind>] [-User <string>] DESCRIPTION This cmdlet returns Microsoft Planner roster plans for a specific Microsoft Planner Roster or a specific user EXAMPLES Example 1 Get-PnPPlannerRosterPlan -Identity \"abcdefgh\" Returns all plans inside the roster with the provided identifier Example 2 Get-PnPPlannerRosterPlan -User \"johndoe@contoso.onmicrosoft.com\" Returns all roster plans for the provided user PARAMETERS -Identity A Microsoft Planner Roster Id or instance. Documentation: https://learn.microsoft.com/graph/api/plannerroster-list-plans?view=graph-rest-beta&tabs=http Type: PlannerGroupPipeBind Parameter Sets: BYROSTER Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User The user principal name to query for. Documentation: https://learn.microsoft.com/graph/api/planneruser-list-rosterplans?view=graph-rest-beta&tabs=http Type: String Parameter Sets: BYUSER Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPlannerTask.html": {
    "href": "cmdlets/Get-PnPPlannerTask.html",
    "title": "Get-PnPPlannerTask | PnP PowerShell",
    "keywords": "Get-PnPPlannerTask SYNOPSIS Required Permissions Microsoft Graph API: One of Tasks.Read, Tasks.ReadWrite, Tasks.Read.All, Tasks.ReadWrite.All, Group.Read.All, Group.ReadWrite.All Returns Planner tasks SYNTAX By Group Get-PnPPlannerTask -Group <PlannerGroupPipeBind> -Plan <PlannerPlanPipeBind> [-ResolveUserDisplayNames] By Bucket Get-PnPPlannerTask -Bucket <PlannerBucketPipeBind> [-ResolveUserDisplayNames] By Plan Id Get-PnPPlannerTask -PlanId <String> [-ResolveUserDisplayNames] By Task Id Get-PnPPlannerTask -TaskId <String> [-ResolveUserDisplayNames] DESCRIPTION This cmdlet returns Planner tasks. EXAMPLES Example 1 Get-PnPPlannerTask -Group \"Marketing\" -Plan \"Conference Plan\" This returns all tasks for the specific plan. Example 2 $tasks = Get-PnPPlannerTask -Group \"Marketing\" -Plan \"Conference Plan\" -ResolveUserDiplayNames $task = $tasks | Select-Object -First 1 $task.CreatedBy.DisplayName This retrieves all tasks for a specific plan, takes the first task and prints the display name of the user that created the task. Example 3 Get-PnPPlannerTask -PlanId \"QvfkTd1mc02gwxHjHC_43JYABhAy\" This returns all tasks for the specified plan. Example 4 Get-PnPPlannerTask -TaskId \"QvfkTd1mc02gwxHjHC_43JYABhAy\" This returns a specific task. PARAMETERS -Bucket Specify the bucket or bucket id to retrieve the tasks for. Type: PlannerBucketPipeBind Parameter Sets: By Bucket Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Specify the group id or name of group owning the plan. Type: PlannerGroupPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Plan Specify the id or name of the plan to retrieve the tasks for. Type: PlannerPlanPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PlanId Specify the id of the plan to retrieve the tasks for. Type: String Parameter Sets: By Plan Id Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TaskId Specify the id of the task to retrieve. Type: String Parameter Sets: By Task Id Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResolveUserDisplayNames Will resolve user id's to usernames Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeDetails Includes checklist and description details Type: SwitchParameter Parameter Sets: By Task Id Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPlannerUserPolicy.html": {
    "href": "cmdlets/Get-PnPPlannerUserPolicy.html",
    "title": "Get-PnPPlannerUserPolicy | PnP PowerShell",
    "keywords": "Get-PnPPlannerUserPolicy SYNOPSIS Required Permissions Azure: tasks.office.com Returns the Microsoft Planner user policy for a specific user SYNTAX Get-PnPPlannerUserPolicy -Identity <string> [-Connection <PnPConnection>] DESCRIPTION This cmdlet returns the Microsoft Planner user policy for the provided user. If a Microsoft Planner user policy has never been set yet on a tenant, this cmdlet may return a '403 Forbidden: Access is denied' error. Set a policy once first to enable the background configuration to be done so this cmdlet can succeed from thereon. EXAMPLES Example 1 Get-PnPPlannerUserPolicy -Identity \"johndoe@contoso.onmicrosoft.com\" Returns the Microsoft Planner user policy for the provided user PARAMETERS -Identity Azure Active Directory user identifier or user principal name of the user to retrieve the Microsoft Planner policy for Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPowerApp.html": {
    "href": "cmdlets/Get-PnPPowerApp.html",
    "title": "Get-PnPPowerApp | PnP PowerShell",
    "keywords": "Get-PnPPowerApp SYNOPSIS Required Permissions Azure: management.azure.com Returns the Power Apps for a given environment SYNTAX Get-PnPPowerApp [-Environment <PowerPlatformEnvironmentPipeBind>] [-AsAdmin] [-Identity <PowerAppPipeBind>] [-Connection <PnPConnection>] [-Verbose] DESCRIPTION This cmdlet returns the Power Apps for a given enviroment. EXAMPLES Example 1 Get-PnPPowerApp This returns all the apps for the default environment Example 2 Get-PnPPowerApp -Environment (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") -Identity fba63225-baf9-4d76-86a1-1b42c917a182 This returns a specific app from a specific environment PARAMETERS -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Identity The Id of the app to retrieve. Type: PowerAppPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AsAdmin If specified returns all the Power Apps as admin. If not specified only the apps for the current user will be returned. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPowerPlatformCustomConnector.html": {
    "href": "cmdlets/Get-PnPPowerPlatformCustomConnector.html",
    "title": "Get-PnPPowerPlatformCustomConnector | PnP PowerShell",
    "keywords": "Get-PnPPowerPlatformCustomConnector SYNOPSIS Required Permissions Azure: management.azure.com Returns the custom Power Platform Connectors for a given environment SYNTAX Get-PnPPowerPlatformCustomConnector [-Environment <PowerPlatformEnvironmentPipeBind>] [-Identity <PowerPlatformConnectorPipeBind>] [-AsAdmin] [-Verbose] DESCRIPTION This cmdlet returns the custom connectors on a given enviroment. EXAMPLES Example 1 Get-PnPPowerPlatformCustomConnector -Environment (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") This returns all the custom connectors for a given Power Platform environment Example 2 Get-PowerPlatformConnectorPipeBind -Identity fba63225-baf9-4d76-86a1-1b42c917a182 This returns a specific custom connector on the default Power Platform environment PARAMETERS -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Identity The Id of the connector to retrieve. If not provided, all custom connectors will be returned. Type: PowerPlatformConnectorPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AsAdmin If specified returns all the custom connectors as admin. If not specified only the custom connectors for the current user will be returned. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPowerPlatformEnvironment.html": {
    "href": "cmdlets/Get-PnPPowerPlatformEnvironment.html",
    "title": "Get-PnPPowerPlatformEnvironment | PnP PowerShell",
    "keywords": "Get-PnPPowerPlatformEnvironment SYNOPSIS Required Permissions Azure: management.azure.com Retrieves the Microsoft Power Platform environments for the current tenant. SYNTAX Default (Default) Get-PnPPowerPlatformEnvironment [-IsDefault] [-Connection <PnPConnection>] [-Verbose] By Identity Get-PnPPowerPlatformEnvironment -Identity <PowerPlatformEnvironmentPipeBind> [-Connection <PnPConnection>] [-Verbose] DESCRIPTION This cmdlet retrieves all of the Microsoft Power Platform environments for the current tenant EXAMPLES Example 1 Get-PnPPowerPlatformEnvironment This cmdlets returns all of the Power Platform environments for the current tenant. Example 2 Get-PnPPowerPlatformEnvironment -IsDefault $true This cmdlets returns the default Power Platform environment for the current tenant. Example 3 Get-PnPPowerPlatformEnvironment -Identity \"MyOrganization (default)\" This cmdlets returns the Power Platform environment with the provided display name for the current tenant. PARAMETERS -Identity Allows specifying an environment display name or internal name to retrieve a specific environment. Type: bool Parameter Sets: By Identity Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsDefault Allows retrieval of the default Power Platform environment by passing in -IsDefault $true. When passing in -IsDefault $false you will get all non default environments. If not provided at all, all available environments, both default and non-default, will be returned. Type: bool Parameter Sets: Default Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPowerPlatformSolution.html": {
    "href": "cmdlets/Get-PnPPowerPlatformSolution.html",
    "title": "Get-PnPPowerPlatformSolution | PnP PowerShell",
    "keywords": "Get-PnPPowerPlatformSolution SYNOPSIS Required Permissions Azure: management.azure.com Returns the Power Platform Solution/s for a given environment SYNTAX Get-PnPPowerPlatformSolution [-Environment <PowerPlatformEnvironmentPipeBind>] [-Name <PowerPlatformConnectorPipeBind>] [-Verbose] DESCRIPTION This cmdlet returns the PowerPlatform solution on a given enviroment. EXAMPLES Example 1 Get-PnPPowerPlatformSolution -Environment (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") This returns all the solutions for a given Power Platform environment Example 2 Get-PnPPowerPlatformSolution -Name 'My Solution Name' This returns a specific solution on the default Power Platform environment PARAMETERS -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Name The Name of the solution to retrieve. If not provided, all the solutions will be returned. Type: PowerPlatformSolutionPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPowerShellTelemetryEnabled.html": {
    "href": "cmdlets/Get-PnPPowerShellTelemetryEnabled.html",
    "title": "Get-PnPPowerShellTelemetryEnabled | PnP PowerShell",
    "keywords": "Get-PnPPowerShellTelemetryEnabled SYNOPSIS Returns true if the PnP PowerShell Telemetry has been enabled. SYNTAX Get-PnPPowerShellTelemetryEnabled [-Connection <PnPConnection>] DESCRIPTION In order to help to make PnP PowerShell better, we can track anonymous telemetry. For more information on what we collect and how to prevent this data from being collected, visit Configure PnP PowerShell. EXAMPLES EXAMPLE 1 Get-PnPPowerShellTelemetryEnabled Will return true or false. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPriviledgedIdentityManagementEligibleAssignment.html": {
    "href": "cmdlets/Get-PnPPriviledgedIdentityManagementEligibleAssignment.html",
    "title": "Get-PnPPriviledgedIdentityManagementEligibleAssignment | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPPriviledgedIdentityManagementEligibleAssignment SYNOPSIS Required Permissions Microsoft Graph: RoleAssignmentSchedule.Read.Directory Retrieve the available Privileged Identity Management eligibility assignment roles that exist within the tenant SYNTAX Get-PnPPriviledgedIdentityManagementEligibleAssignment [-Identity <PriviledgedIdentityManagementRoleEligibilitySchedulePipeBind>] [-Connection <PnPConnection>] DESCRIPTION Retrieve the available Privileged Identity Management eligibility assignment roles that exist within the tenant. These are the configured users with the configured roles they can be elevated to. EXAMPLES Example 1 Get-PnPPriviledgedIdentityManagementEligibleAssignment Retrieves the available Privileged Identity Management eligibility assignment roles Example 2 Get-PnPPriviledgedIdentityManagementEligibleAssignment -Identity 62e90394-69f5-4237-9190-012177145e10 Retrieves the Privileged Identity Management eligibility assignment role with the provided id PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name, id or instance of a Priviledged Identity Management eligibility assignment role to retrieve the details of Type: PriviledgedIdentityManagementRoleEligibilitySchedulePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: True Accept pipeline input: True Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPriviledgedIdentityManagementRole.html": {
    "href": "cmdlets/Get-PnPPriviledgedIdentityManagementRole.html",
    "title": "Get-PnPPriviledgedIdentityManagementRole | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPPriviledgedIdentityManagementRole SYNOPSIS Required Permissions Microsoft Graph: RoleManagement.Read.Directory Retrieve the available Privileged Identity Management roles that exist within the tenant SYNTAX Get-PnPPriviledgedIdentityManagementRole [-Identity <PriviledgedIdentityManagementRolePipeBind>] [-Connection <PnPConnection>] DESCRIPTION Retrieve the available Privileged Identity Management roles that exist within the tenant. These are the roles to which elevation can take place. EXAMPLES Example 1 Get-PnPPriviledgedIdentityManagementRole Retrieves the available Privileged Identity Management roles Example 2 Get-PnPPriviledgedIdentityManagementRole -Identity \"Global Administrator\" Retrieves the Privileged Identity Management with the provided name Example 3 Get-PnPPriviledgedIdentityManagementRole -Identity 62e90394-69f5-4237-9190-012177145e10 Retrieves the Privileged Identity Management role with the provided id PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name, id or instance of a Priviledged Identity Management role to retrieve the details of Type: PriviledgedIdentityManagementRolePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: True Accept pipeline input: True Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPProfileCardProperty.html": {
    "href": "cmdlets/Get-PnPProfileCardProperty.html",
    "title": "Get-PnPProfileCardProperty | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPProfileCardProperty SYNOPSIS Required Permissions Microsoft Graph API : One of PeopleSettings.Read.All, PeopleSettings.ReadWrite.All Retrieves custom properties added to user profile cards SYNTAX Get-PnPProfileCardProperty [-PropertyName <ProfileCardPropertyName>] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet may be used to retrieve custom properties added to user profile card. EXAMPLES EXAMPLE 1 Get-PnPProfileCardProperty This will retrieve all custom properties added to user profile card. EXAMPLE 2 Get-PnPProfileCardProperty -PropertyName \"pnppowershell\" This will return information about the specified property added to a profile card. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Name of the property to be retrieved. If not provided, all properties will be returned. Type: Commands.Enums.ProfileCardPropertyName Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Get-PnPProperty.html": {
    "href": "cmdlets/Get-PnPProperty.html",
    "title": "Get-PnPProperty | PnP PowerShell",
    "keywords": "Get-PnPProperty SYNOPSIS Returns a previously not loaded property of a ClientObject SYNTAX Get-PnPProperty [-ClientObject] <ClientObject> [-Property] <String[]> [-Connection <PnPConnection>] DESCRIPTION Will populate properties of an object and optionally, if needed, load the value from the server. If one property is specified its value will be returned to the output. EXAMPLES EXAMPLE 1 $web = Get-PnPWeb Get-PnPProperty -ClientObject $web -Property Id, Lists $web.Lists Will load both the Id and Lists properties of the specified Web object. EXAMPLE 2 $list = Get-PnPList -Identity 'Site Assets' Get-PnPProperty -ClientObject $list -Property Views Will load the views object of the specified list object and return its value to the output. PARAMETERS -ClientObject Specifies the object where the properties of should be retrieved Type: ClientObject Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Property The properties to load. If one property is specified its value will be returned to the output. Type: String[] Parameter Sets: (All) Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPropertyBag.html": {
    "href": "cmdlets/Get-PnPPropertyBag.html",
    "title": "Get-PnPPropertyBag | PnP PowerShell",
    "keywords": "Get-PnPPropertyBag SYNOPSIS Returns the property bag values. SYNTAX Get-PnPPropertyBag [[-Key] <String>] [-Folder <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve all property bag values. It is possible to get property bag values for a folder using Folder option or a specific property bag value using Key option. EXAMPLES EXAMPLE 1 Get-PnPPropertyBag This will return all web property bag values EXAMPLE 2 Get-PnPPropertyBag -Key MyKey This will return the value of the key MyKey from the web property bag EXAMPLE 3 Get-PnPPropertyBag -Folder /MyFolder This will return all property bag values for the folder MyFolder which is located in the root of the current web EXAMPLE 4 Get-PnPPropertyBag -Folder /MyFolder -Key vti_mykey This will return the value of the key vti_mykey from the folder MyFolder which is located in the root of the current web EXAMPLE 5 Get-PnPPropertyBag -Folder / -Key vti_mykey This will return the value of the key vti_mykey from the root folder of the current web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder Site relative url of the folder. See examples for use. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Key that should be looked up Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPublishingImageRendition.html": {
    "href": "cmdlets/Get-PnPPublishingImageRendition.html",
    "title": "Get-PnPPublishingImageRendition | PnP PowerShell",
    "keywords": "Get-PnPPublishingImageRendition SYNOPSIS Returns all image renditions or if Identity is specified a specific one SYNTAX Get-PnPPublishingImageRendition [[-Identity] <ImageRenditionPipeBind>] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve all image renditions or a specific one when Identity option is used. EXAMPLES EXAMPLE 1 Get-PnPPublishingImageRendition Returns all Image Renditions EXAMPLE 2 Get-PnPPublishingImageRendition -Identity \"Test\" Returns the image rendition named \"Test\" EXAMPLE 3 Get-PnPPublishingImageRendition -Identity 2 Returns the image rendition where its id equals 2 PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Id or name of an existing image rendition Type: ImageRenditionPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPRecycleBinItem.html": {
    "href": "cmdlets/Get-PnPRecycleBinItem.html",
    "title": "Get-PnPRecycleBinItem | PnP PowerShell",
    "keywords": "Get-PnPRecycleBinItem SYNOPSIS Required Permissions SharePoint: Site Collection Administrator. SharePoint Tenant Admin alone is not enough Returns one or more items from the Recycle Bin. SYNTAX All (Default) Get-PnPRecycleBinItem [-RowLimit <Int32>] [-Connection <PnPConnection>] [-Includes <String[]>] Identity Get-PnPRecycleBinItem [-Identity <Guid>] [-Connection <PnPConnection>] [-Includes <String[]>] FirstStage Get-PnPRecycleBinItem [-FirstStage] [-RowLimit <Int32>] [-Connection <PnPConnection>] [-Includes <String[]>] SecondStage Get-PnPRecycleBinItem [-SecondStage] [-RowLimit <Int32>] [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION This command will return all the items in the recycle bin for the SharePoint site you connected to with Connect-PnPOnline. You must connect as a Site Collection Owner or Administrator. The SharePoint Admin Role in the tenant alone will not work. If you are not a Site Collection Admin connect to the Tenant Admin URL with Connect-PnPOnline and use Get-PnPTenantRecycleBinItem. EXAMPLES EXAMPLE 1 Get-PnPRecycleBinItem Returns all items in both the first and the second stage recycle bins in the current site collection. EXAMPLE 2 Get-PnPRecycleBinItem -Identity f3ef6195-9400-4121-9d1c-c997fb5b86c2 Returns a specific recycle bin item by id. EXAMPLE 3 Get-PnPRecycleBinItem -FirstStage Returns all items in only the first stage recycle bin in the current site collection. EXAMPLE 4 Get-PnPRecycleBinItem -SecondStage Returns all items in only the second stage recycle bin in the current site collection. EXAMPLE 5 Get-PnPRecycleBinItem -RowLimit 10000 Returns items in recycle bin limited by number of results. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FirstStage Returns all items in the first stage recycle bin Type: SwitchParameter Parameter Sets: FirstStage Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Returns a recycle bin item with a specific identity. Type: Guid Parameter Sets: Identity Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RowLimit Limits returned results to specified amount Type: Int32 Parameter Sets: All, FirstStage, SecondStage Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SecondStage Returns all items in the second stage recycle bin. Type: SwitchParameter Parameter Sets: SecondStage Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned recycle bin items which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPRequestAccessEmails.html": {
    "href": "cmdlets/Get-PnPRequestAccessEmails.html",
    "title": "Get-PnPRequestAccessEmails | PnP PowerShell",
    "keywords": "Get-PnPRequestAccessEmails SYNOPSIS Returns the request access e-mail addresses SYNTAX Get-PnPRequestAccessEmails [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve request access e-mail addresses. EXAMPLES EXAMPLE 1 Get-PnPRequestAccessEmails This will return all the request access e-mail addresses for the current web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPRetentionLabel.html": {
    "href": "cmdlets/Get-PnPRetentionLabel.html",
    "title": "Get-PnPRetentionLabel | PnP PowerShell",
    "keywords": "Get-PnPRetentionLabel SYNOPSIS Gets the Office 365 retention label/tag of the specified list or library (if applicable) SYNTAX Get-PnPRetentionLabel [-List <ListPipeBind>] [-Raw] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve all retention labels for current site or list. Use Raw option if you want will include more detailed information regarding labels. EXAMPLES EXAMPLE 1 Get-PnPRetentionLabel Returns all retention labels for the current web EXAMPLE 2 Get-PnPRetentionLabel -List \"Demo List\" -ValuesOnly This gets the retention label which is set to a list or a library PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID or Url of the list Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Raw If provided, the results will be returned as values instead of in written text and will include more detailed information Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPRoleDefinition.html": {
    "href": "cmdlets/Get-PnPRoleDefinition.html",
    "title": "Get-PnPRoleDefinition | PnP PowerShell",
    "keywords": "Get-PnPRoleDefinition SYNOPSIS Retrieves a Role Definitions of a site SYNTAX Get-PnPRoleDefinition [[-Identity] <RoleDefinitionPipeBind>] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve Role Definitions of a site. EXAMPLES EXAMPLE 1 Get-PnPRoleDefinition Retrieves the Role Definitions (Permission Levels) settings of the current site EXAMPLE 2 Get-PnPRoleDefinition -Identity Read Retrieves the specified Role Definition (Permission Level) settings of the current site EXAMPLE 3 Get-PnPRoleDefinition | Where-Object { $_.RoleTypeKind -eq \"Administrator\" } Retrieves the Role Definition (Permission Level) settings with the Administrator type, regardless of its name PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name of a role definition to retrieve. Type: RoleDefinitionPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSearchConfiguration.html": {
    "href": "cmdlets/Get-PnPSearchConfiguration.html",
    "title": "Get-PnPSearchConfiguration | PnP PowerShell",
    "keywords": "Get-PnPSearchConfiguration SYNOPSIS Returns the search configuration SYNTAX Xml (Default) Get-PnPSearchConfiguration [-Scope <SearchConfigurationScope>] [-Path <String>] [-Connection <PnPConnection>] OutputFormat Get-PnPSearchConfiguration [-Scope <SearchConfigurationScope>] [-OutputFormat <OutputFormat>] [-Connection <PnPConnection>] BookmarksCSV Get-PnPSearchConfiguration [-Scope <SearchConfigurationScope>] [-PromotedResultsToBookmarkCSV] [-ExcludeVisualPromotedResults <Boolean>] [-BookmarkStatus <BookmarkStatus>] [-Path <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve search configuration. EXAMPLES EXAMPLE 1 Get-PnPSearchConfiguration Returns the search configuration for the current web. EXAMPLE 2 Get-PnPSearchConfiguration -Scope Site Returns the search configuration for the current site collection. EXAMPLE 3 Get-PnPSearchConfiguration -Scope Subscription Returns the search configuration for the current tenant. EXAMPLE 4 Get-PnPSearchConfiguration -Path searchconfig.xml -Scope Subscription Returns the search configuration for the current tenant and saves it to the specified file. EXAMPLE 5 Get-PnPSearchConfiguration -Scope Site -OutputFormat ManagedPropertyMappings Returns all custom managed properties and crawled property mapping at the current site collection. EXAMPLE 6 Get-PnPSearchConfiguration -Scope Site -PromotedResultsToBookmarkCSV -Path bookmarks.csv Export promoted results excluding visual ones from query rules on the site collection as a CSV file with the bookmarks in suggested status. EXAMPLE 7 Get-PnPSearchConfiguration -Scope Site -PromotedResultsToBookmarkCSV -Path bookmarks.csv -BookmarkStatus Published Export promoted results excluding visual from query rules on the site collection as a CSV file with the bookmarks in published status. EXAMPLE 8 Get-PnPSearchConfiguration -Scope Subscription -PromotedResultsToBookmarkCSV -ExcludeVisualPromotedResults $false Export promoted results including visual ones from query rules on the tenant in CSV format with the bookmarks in suggested status. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OutputFormat Output format for of the configuration. Defaults to complete XML Type: OutputFormat Parameter Sets: OutputFormat Accepted values: CompleteXml, ManagedPropertyMappings Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Local path where the search configuration will be saved Type: String Parameter Sets: Xml Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Scope to use. Either Web, Site, or Subscription. Defaults to Web Type: SearchConfigurationScope Parameter Sets: (All) Accepted values: Web, Site, Subscription Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PromotedResultsToBookmarkCSV Output promoted results to a compatible CSV file to be used as Bookmark import at https://admin.microsoft.com/#/MicrosoftSearch/bookmarks. Export details: Promoted results marked as \"Render the URL as a banner instead of as a hyperlink\" (visual promoted results) and query rules with no triggers will be skipped by default. Triggers set to \"Advanced Query Text Match\" and \"Query Contains Action Term\" will have \"Match Similar Keywords\" set to true for the Bookmark. Multiple triggers on a query rule will be merged into a single trigger. Type: SwitchParameter Parameter Sets: CSV Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludeVisualPromotedResults Exclude promoted results marked as \"Render the URL as a banner instead of as a hyperlink\". Defaults to true. Type: Boolean Parameter Sets: CSV Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BookmarkStatus Output bookmarks to be in suggested or published status upon CSV import. Defaults to suggested status. Type: BookmarkStatus Parameter Sets: CSV Accepted values: Suggested, Published Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSearchCrawlLog.html": {
    "href": "cmdlets/Get-PnPSearchCrawlLog.html",
    "title": "Get-PnPSearchCrawlLog | PnP PowerShell",
    "keywords": "Get-PnPSearchCrawlLog SYNOPSIS Returns entries from the SharePoint search crawl log. Make sure you are granted access to the crawl log via the SharePoint search admin center at https:// -admin.sharepoint.com/_layouts/15/searchadmin/crawllogreadpermission.aspx in order to run this cmdlet. SYNTAX Get-PnPSearchCrawlLog [-LogLevel <LogLevel>] [-RowLimit <Int32>] [-Filter <String>] [-ContentSource <ContentSource>] [-StartDate <DateTime>] [-EndDate <DateTime>] [-RawFormat] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve entries from the SharePoint search crawl log. To be able to use this command you need to grant access to the crawl log via the SharePoint search admin center at https:// -admin.sharepoint.com/_layouts/15/searchadmin/crawllogreadpermission.aspx. EXAMPLES EXAMPLE 1 Get-PnPSearchCrawlLog Returns the last 100 crawl log entries for site content. EXAMPLE 2 Get-PnPSearchCrawlLog -Filter \"https://contoso-my.sharepoint.com/personal\" Returns the last 100 crawl log entries for OneDrive content. EXAMPLE 3 Get-PnPSearchCrawlLog -ContentSource UserProfiles Returns the last 100 crawl log entries for user profiles. EXAMPLE 4 Get-PnPSearchCrawlLog -ContentSource UserProfiles -Filter \"mikael\" Returns the last 100 crawl log entries for user profiles with the term \"mikael\" in the user principal name. EXAMPLE 5 Get-PnPSearchCrawlLog -ContentSource Sites -LogLevel Error -RowLimit 10 Returns the last 10 crawl log entries with a state of Error for site content. EXAMPLE 6 Get-PnPSearchCrawlLog -EndDate (Get-Date).AddDays(-100) Returns the last 100 crawl log entries up until 100 days ago. EXAMPLE 7 Get-PnPSearchCrawlLog -RowFilter 3 -RawFormat Returns the last 3 crawl log entries showing the raw crawl log data. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentSource Content to retrieve (Sites, User Profiles). Defaults to Sites. Type: ContentSource Parameter Sets: (All) Accepted values: Sites, UserProfiles Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EndDate End date to stop getting entries from. Default to current time. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Filter Filter to limit what is being returned. Has to be a URL prefix for SharePoint content, and part of a user principal name for user profiles. Wildcard characters are not supported. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LogLevel Filter what log entries to return (All, Success, Warning, Error). Defaults to All Type: LogLevel Parameter Sets: (All) Accepted values: Success, Warning, Error, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RawFormat Show raw crawl log data Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RowLimit Number of entries to return. Defaults to 100. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartDate Start date to start getting entries from. Defaults to start of time. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSearchExternalConnection.html": {
    "href": "cmdlets/Get-PnPSearchExternalConnection.html",
    "title": "Get-PnPSearchExternalConnection | PnP PowerShell",
    "keywords": "Get-PnPSearchExternalConnection SYNOPSIS Required Permissions Microsoft Graph API : One of ExternalConnection.ReadWrite.OwnedBy, ExternalConnection.Read.All, ExternalConnection.ReadWrite.All Retrieves all connections to external datasources belonging to Microsoft Search SYNTAX Get-PnPSearchExternalConnection [-Identity <String>] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet can be used to retrieve all connections to external datasources that are being indexed into Microsoft Search through a custom connector. Use Set-PnPSearchExternalItem to add items to the index for a connector. EXAMPLES EXAMPLE 1 Get-PnPSearchExternalConnection This will return all connections to external datasources that are being indexed into Microsoft Search that exist within the tenant. EXAMPLE 2 Get-PnPSearchExternalConnection -Identity \"pnppowershell\" This will return the connection to the external datasource with the specified identity that is being indexed into Microsoft Search. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Unique identifier of the external connection in Microsoft Search. If not provided, all connections will be returned. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSearchExternalItem.html": {
    "href": "cmdlets/Get-PnPSearchExternalItem.html",
    "title": "Get-PnPSearchExternalItem | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPSearchExternalItem SYNOPSIS Required Permissions Microsoft Graph API: ExternalItem.Read.All under a delegated context. Note that ExternalItem.ReadWrite.All will not work. Application context is not supported. Returns the external items indexed for a specific connector in Microsoft Search SYNTAX Get-PnPSearchExternalItem -ConnectionId <SearchExternalConnectionPipeBind> [-Identity <String>] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet can be used to retrieve a list of indexed external items for a specific Microsoft Search external connector. The cmdlet will return all indexed external items for the specified connector. If you want to retrieve a specific external item, you can use the Identity parameter to specify the unique identifier of the external item. It uses a Microsoft Graph query in the background to retrieve the external items. This is why it will be unable to return the Access Control Lists (ACLs) information in the external items and the properties to contain more properties than you ingested yourself. It is only possible to run this cmdlet under a delegated context, application context is not supported by the Microsoft Graph search API endpoint for this type of query. EXAMPLES EXAMPLE 1 Get-PnPSearchExternalItem -ConnectionId \"pnppowershell\" -ItemId \"12345\" This will return the external item with the unique identifier \"12345\" for the custom connector with the Connection ID \"pnppowershell\". EXAMPLE 2 Get-PnPSearchExternalItem -ConnectionId \"pnppowershell\" This will return all external items for the custom connector with the Connection ID \"pnppowershell\". PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Unique identifier of the external item in Microsoft Search. You can provide any identifier you want to retrieve or check for a specific item in the index. If you omit it, all external items for the specified connector will be returned. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ConnectionId The Connection ID or connection instance of the custom connector to use. This is the ID that was entered when registering the custom connector and will indicate for which custom connector the external items will be returned from the Microsoft Search index. Type: SearchExternalConnectionPipeBind Parameter Sets: (All) Required: True Default value: None Accept pipeline input: True Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Get-PnPSearchExternalSchema.html": {
    "href": "cmdlets/Get-PnPSearchExternalSchema.html",
    "title": "Get-PnPSearchExternalSchema | PnP PowerShell",
    "keywords": "Get-PnPSearchExternalSchema SYNOPSIS Required Permissions Microsoft Graph API : One of ExternalConnection.ReadWrite.OwnedBy, ExternalConnection.Read.All, ExternalConnection.ReadWrite.All Retrieves the schema set on a connection to an external datasource belonging to Microsoft Search SYNTAX Get-PnPSearchExternalSchema -ConnectionId <SearchExternalConnectionPipeBind> [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet can be used to retrieve the current schema set on a connection to an external datasource that is being indexed into Microsoft Search through a custom connector. EXAMPLES EXAMPLE 1 Get-PnPSearchExternalSchema -ConnectionId \"pnppowershell\" This will return the current schema being used on the external Microsoft Search connection with the specified identity. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ConnectionId Unique identifier or instance of the external connection in Microsoft Search to retrieve the schema for Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSearchSettings.html": {
    "href": "cmdlets/Get-PnPSearchSettings.html",
    "title": "Get-PnPSearchSettings | PnP PowerShell",
    "keywords": "Get-PnPSearchSettings SYNOPSIS Retrieves search settings for a site SYNTAX Get-PnPSearchSettings [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve search settings for a site. EXAMPLES EXAMPLE 1 Get-PnPSearchSettings Retrieve search settings for the site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPServiceCurrentHealth.html": {
    "href": "cmdlets/Get-PnPServiceCurrentHealth.html",
    "title": "Get-PnPServiceCurrentHealth | PnP PowerShell",
    "keywords": "Get-PnPServiceCurrentHealth SYNOPSIS Required Permissions Microsoft Graph API : ServiceHealth.Read.All Gets current service status of the Office 365 Services from the Microsoft Graph API SYNTAX Get-PnPServiceCurrentHealth [-Identity <Office365Workload>] DESCRIPTION Allows to retrieve current service status of the Office 365 Services from the Microsoft Graph API. EXAMPLES EXAMPLE 1 Get-PnPServiceCurrentHealth Retrieves the current service status of all Office 365 services EXAMPLE 2 Get-PnPServiceCurrentHealth -Identity \"SharePoint Online\" Retrieves the current service status of SharePoint Online PARAMETERS -Identity Allows retrieval of the current service status of only one particular service. If not provided, the current service status of all services will be returned. Note that you need to use the full name of the service, not the shortened Id. Type: Identity Parameter Sets: (All) Accepted values: Exchange Online, Identity Service, Microsoft 365 suite, Skype for Business, SharePoint Online, Dynamics 365 Apps, Azure Information Protection, Mobile Device Management for Office 365, Planner, Sway, Power BI, OneDrive for Business, Microsoft Teams, Microsoft Kaizala, Microsoft Bookings, Office for the web, Microsoft 365 Apps, Power Apps, Power Apps in Microsoft 365, Microsoft Power Automate, Microsoft Power Automate in Microsoft 365, Microsoft Forms, Microsoft Stream Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPServiceHealthIssue.html": {
    "href": "cmdlets/Get-PnPServiceHealthIssue.html",
    "title": "Get-PnPServiceHealthIssue | PnP PowerShell",
    "keywords": "Get-PnPServiceHealthIssue SYNOPSIS Required Permissions Microsoft Graph API : ServiceHealth.Read.All Gets service health issues of the Office 365 Services from the Microsoft Graph API SYNTAX Get-PnPServiceHealthIssue [-Identity <Id>] DESCRIPTION Allows to retrieve current service health issues of the Office 365 Services from the Microsoft Graph API. EXAMPLES EXAMPLE 1 Get-PnPServiceHealthIssue Retrieves all the available service health issues EXAMPLE 2 Get-PnPServiceHealthIssue -Identity \"EX123456\" Retrieves the details of the service health issue with the Id EX123456 PARAMETERS -Identity Allows retrieval of a particular service health issue with the provided Id Type: Identity Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSharePointAddIn.html": {
    "href": "cmdlets/Get-PnPSharePointAddIn.html",
    "title": "Get-PnPSharePointAddIn | PnP PowerShell",
    "keywords": "Get-PnPSharePointAddIn SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the list of SharePoint addins installed in the site collection SYNTAX Get-PnPSharePointAddIn [-IncludeSubsites <SwitchParameter>] [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSharePointAddIn Returns the SharePoint addins installed in your site collection EXAMPLE 2 Get-PnPSharePointAddIn -IncludeSubsites Returns the SharePoint addins installed in your site collection as well as the subsites. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSubsites When specified, it determines whether we should use also search the subsites of the connected site collection and lists the installed AddIns. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSharingForNonOwnersOfSite.html": {
    "href": "cmdlets/Get-PnPSharingForNonOwnersOfSite.html",
    "title": "Get-PnPSharingForNonOwnersOfSite | PnP PowerShell",
    "keywords": "Get-PnPSharingForNonOwnersOfSite SYNOPSIS Returns $false if sharing of the site and items in the site is restricted only to owners or $true if members and owners are allowed to share SYNTAX Get-PnPSharingForNonOwnersOfSite [-Identity <SitePipeBind>] [-Connection <PnPConnection>] DESCRIPTION Returns $false if sharing of the site and items in the site is restricted only to owners or $true if members and owners are allowed to share. You can disable sharing by non owners by using Disable-PnPSharingForNonOwnersOfSite. At this point there is no interface available yet to enable sharing by owners and members again through script. You will have to do so through the user interface of SharePoint. EXAMPLES EXAMPLE 1 Get-PnPSharingForNonOwnersOfSite Returns $false if sharing of the site and items in the site is restricted only to owners or $true if members and owners are allowed to share PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Type: SitePipeBind Parameter Sets: (All) Aliases: Url Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSite.html": {
    "href": "cmdlets/Get-PnPSite.html",
    "title": "Get-PnPSite | PnP PowerShell",
    "keywords": "Get-PnPSite SYNOPSIS Returns the current site collection from the context. SYNTAX Get-PnPSite [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION Allows to retrieve current site collection from the context. EXAMPLES EXAMPLE 1 Get-PnPSite Gets the current site EXAMPLE 2 Get-PnPSite -Includes RootWeb,ServerRelativeUrl Gets the current site specifying to include RootWeb and ServerRelativeUrl properties. For the full list of properties see https://learn.microsoft.com/previous-versions/office/sharepoint-server/ee538579(v%3doffice.15) PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned site which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteAnalyticsData.html": {
    "href": "cmdlets/Get-PnPSiteAnalyticsData.html",
    "title": "Get-PnPSiteAnalyticsData | PnP PowerShell",
    "keywords": "Get-PnPSiteAnalyticsData SYNOPSIS Retrieves analytics data for a site. SYNTAX Return analytics data Get-PnPSiteAnalyticsData -Url <String> [-Connection <PnPConnection>] DESCRIPTION Retrieves site analytics data within a specific date range. EXAMPLES EXAMPLE 1 Get-PnPSiteAnalyticsData -All Retrieves all available analytics data for the specified site. EXAMPLE 2 Get-PnPSiteAnalyticsData -LastSevenDays Retrieves analytics data for the last seven days of the site. EXAMPLE 3 Get-PnPSiteAnalyticsData -StartDate (Get-date).AddDays(-15) -EndDate (Get-date) -AnalyticsAggregationInterval Day Retrieves analytics data for the last 15 days of the specified site with aggregation interval as days. EXAMPLE 4 Get-PnPSiteAnalyticsData -Identity \"https://tenant.sharepoint.com/sites/mysite\" -StartDate (Get-date).AddDays(-15) -EndDate (Get-date) -AnalyticsAggregationInterval Day Retrieves analytics data, for the specified site, for the last 15 days of the specified site with aggregation interval as days. PARAMETERS -Identity The URL (server or site relative) of the site Type: String Parameter Sets: (All) Aliases: ServerRelativeUrl, SiteRelativeUrl Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -All When specified, it will retrieve all analytics data. Type: SwitchParameter Parameter Sets: All analytics data Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LastSevenDays When specified, it will retrieve analytics data for the last seven days. Type: SwitchParameter Parameter Sets: Analytics by specific intervals Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartDate When specified, it will retrieve analytics data starting from the specified start date. Type: DateTime Parameter Sets: Analytics by date range Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EndDate When specified, it will retrieve analytics data ending with specified end date. Should be used along with StartDate parameter Type: DateTime Parameter Sets: Analytics by date range Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AnalyticsAggregationInterval When specified, it will retrieve analytics data with specified aggregation interval. Default is day. Allowed values are Day,Week and Month. Type: DateTime Parameter Sets: Analytics by date range Required: False Position: Named Default value: Day Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteClassification.html": {
    "href": "cmdlets/Get-PnPSiteClassification.html",
    "title": "Get-PnPSiteClassification | PnP PowerShell",
    "keywords": "Get-PnPSiteClassification SYNOPSIS This is an alias for Get-PnPAvailableSiteClassification. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteClosure.html": {
    "href": "cmdlets/Get-PnPSiteClosure.html",
    "title": "Get-PnPSiteClosure | PnP PowerShell",
    "keywords": "Get-PnPSiteClosure SYNOPSIS Get the site closure status of the site which has a site policy applied SYNTAX Get-PnPSiteClosure [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve current site closure status of the site which has a site policy applied. EXAMPLES EXAMPLE 1 Get-PnPSiteClosure Get the site closure status of the site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteCollectionAdmin.html": {
    "href": "cmdlets/Get-PnPSiteCollectionAdmin.html",
    "title": "Get-PnPSiteCollectionAdmin | PnP PowerShell",
    "keywords": "Get-PnPSiteCollectionAdmin SYNOPSIS Returns the current site collection administrators of the site collection in the current context SYNTAX Get-PnPSiteCollectionAdmin [-Connection <PnPConnection>] DESCRIPTION This command will return all current site collection administrators of the site collection in the current context EXAMPLES EXAMPLE 1 Get-PnPSiteCollectionAdmin This will return all the current site collection administrators of the site collection in the current context PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteCollectionAppCatalog.html": {
    "href": "cmdlets/Get-PnPSiteCollectionAppCatalog.html",
    "title": "Get-PnPSiteCollectionAppCatalog | PnP PowerShell",
    "keywords": "Get-PnPSiteCollectionAppCatalog SYNOPSIS Returns all site collection scoped app catalogs that exist on the tenant SYNTAX Get-PnPSiteCollectionAppCatalog [-CurrentSite <SwitchParameter>] [-ExcludeDeletedSites <SwitchParameter>] [-SkipUrlValidation <SwitchParameter>] [-Connection <PnPConnection>] [-Verbose] DESCRIPTION Returns all the site collection scoped app catalogs that exist on the tenant EXAMPLES EXAMPLE 1 Get-PnPSiteCollectionAppCatalog Will return all the site collection app catalogs that exist on the tenant, including those that may be in the tenant recycle bin EXAMPLE 2 Get-PnPSiteCollectionAppCatalog -CurrentSite Will return the site collection app catalog for the currently connected to site, if it has one. Otherwise it will yield no result. EXAMPLE 3 Get-PnPSiteCollectionAppCatalog -ExcludeDeletedSites Will return all the site collection app catalogs that exist on the tenant excluding the site collections having App Catalogs that are in the tenant recycle bin PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CurrentSite When provided, it will check if the currently connected to site has a site collection App Catalog and will return information on it. If the current site holds no site collection App Catalog, an empty response will be returned. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludeDeletedSites When provided, all site collections having site collection App Catalogs but residing in the tenant recycle bin, will be excluded Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SkipUrlValidation When provided, the site collection app catalog Urls will not be validated for if they have been renamed since their creation. This makes the cmdlet a lot faster, but it could also lead to URLs being returned that no longer exist. If not provided, for each site collection app catalog, it will look up the actual URL of the site collection app catalog and return that instead of the URL that was used when the site collection app catalog was created. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteCollectionTermStore.html": {
    "href": "cmdlets/Get-PnPSiteCollectionTermStore.html",
    "title": "Get-PnPSiteCollectionTermStore | PnP PowerShell",
    "keywords": "Get-PnPSiteCollectionTermStore SYNOPSIS Returns the site collection term store if it exists or else it will not return anything SYNTAX Get-PnPSiteCollectionTermStore [-Connection <PnPConnection>] DESCRIPTION Returns the site collection scoped term store for the currently connected to site collection. If it does not exist yet, it will return a null value. EXAMPLES EXAMPLE 1 Get-PnPSiteCollectionTermStore Returns the site collection term store. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteDesign.html": {
    "href": "cmdlets/Get-PnPSiteDesign.html",
    "title": "Get-PnPSiteDesign | PnP PowerShell",
    "keywords": "Get-PnPSiteDesign SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieve Site Designs that have been registered on the current tenant. SYNTAX Get-PnPSiteDesign [[-Identity] <TenantSiteDesignPipeBind>] [-Connection <PnPConnection>] DESCRIPTION Retrieve Site Designs that have been registered on the current tenant. When providing a name with -Identity, it returns all site designs with that name. EXAMPLES EXAMPLE 1 Get-PnPSiteDesign Returns all registered site designs EXAMPLE 2 Get-PnPSiteDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Returns a specific registered site designs PARAMETERS -Identity If specified will retrieve the specified site design Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteDesignRights.html": {
    "href": "cmdlets/Get-PnPSiteDesignRights.html",
    "title": "Get-PnPSiteDesignRights | PnP PowerShell",
    "keywords": "Get-PnPSiteDesignRights SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the principals with design rights on a specific Site Design SYNTAX Get-PnPSiteDesignRights [-Identity] <TenantSiteDesignPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve the principals with design rights on a specific Site Design. EXAMPLES EXAMPLE 1 Get-PnPSiteDesignRights -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Returns the principals with rights on a specific site design PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the Site Design to receive the rights for Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteDesignRun.html": {
    "href": "cmdlets/Get-PnPSiteDesignRun.html",
    "title": "Get-PnPSiteDesignRun | PnP PowerShell",
    "keywords": "Get-PnPSiteDesignRun SYNOPSIS Retrieves a list of site designs applied to a specified site collection. If the WebUrl parameter is not specified we show the list of designs applied to the current site. The returned output includes the ID of the scheduled job, the web and site IDs, and the site design ID, version, and title. SYNTAX Get-PnPSiteDesignRun [-SiteDesignId <Guid>] [-WebUrl <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve a list of site designs applied to a specified site collection. By default the command will retrieve list of designs applied to the current site but it is also possible to get this information from a different site collection using WebUrl option. EXAMPLES EXAMPLE 1 Get-PnPSiteDesignRun This example returns a list of the site designs applied to the current site. Providing a specific site design ID will return the details for just that applied site design. EXAMPLE 2 Get-PnPSiteDesignRun -WebUrl \"https://mytenant.sharepoint.com/sites/project\" This example returns a list of the site designs applied to the specified site. Providing a specific site design ID will return the details for just that applied site design. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteDesignId The ID of the site design to apply. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebUrl The URL of the site collection where the site design will be applied. If not specified the design will be applied to the site you connected to with Connect-PnPOnline. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteDesignRunStatus.html": {
    "href": "cmdlets/Get-PnPSiteDesignRunStatus.html",
    "title": "Get-PnPSiteDesignRunStatus | PnP PowerShell",
    "keywords": "Get-PnPSiteDesignRunStatus SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieves and displays a list of all site script actions executed for a specified site design applied to a site. SYNTAX Get-PnPSiteDesignRunStatus -Run <TenantSiteDesignRun> [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve a list of all site script actions executed for a specified site design applied to a site. EXAMPLES EXAMPLE 1 $myrun = Get-PnPSiteDesignRun -WebUrl \"https://contoso.sharepoint.com/sites/project-playbook\" -SiteDesignId cefd782e-sean-4814-a68a-b33b116c302f Get-PnPSiteDesignRunStatus -Run $myrun This example gets the run for a specific site design applied to a site and sets it to a variable. This variable is then passed into the command -Run parameter. The result is a display of all the site script actions applied for that site design run, including the script action title and outcome. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Run The site design run for the desired set of script action details. Type: TenantSiteDesignRun Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteDesignTask.html": {
    "href": "cmdlets/Get-PnPSiteDesignTask.html",
    "title": "Get-PnPSiteDesignTask | PnP PowerShell",
    "keywords": "Get-PnPSiteDesignTask SYNOPSIS Used to retrieve a scheduled site design script. It takes the ID of the scheduled site design task and the URL for the site where the site design is scheduled to be applied. SYNTAX Get-PnPSiteDesignTask [-Identity <TenantSiteDesignTaskPipeBind>] [-WebUrl <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve a scheduled site design script. EXAMPLES EXAMPLE 1 Get-PnPSiteDesignTask -Identity 501z8c32-4147-44d4-8607-26c2f67cae82 This example retrieves a site design task given the provided site design task id EXAMPLE 2 Get-PnPSiteDesignTask This example retrieves all site design tasks currently scheduled on the current site EXAMPLE 3 Get-PnPSiteDesignTask -WebUrl \"https://contoso.sharepoint.com/sites/project\" This example retrieves all site design tasks currently scheduled on the provided site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the site design task to retrieve. Type: TenantSiteDesignTaskPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebUrl The URL of the site collection where the site design will be applied. If not specified the site design tasks will be returned for the site you connected to with Connect-PnPOnline. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteFileVersionBatchDeleteJobStatus.html": {
    "href": "cmdlets/Get-PnPSiteFileVersionBatchDeleteJobStatus.html",
    "title": "Get-PnPSiteFileVersionBatchDeleteJobStatus | PnP PowerShell",
    "keywords": "Get-PnPSiteFileVersionBatchDeleteJobStatus SYNOPSIS Get the progress of deleting existing file versions on the site. SYNTAX Get-PnPSiteFileVersionBatchDeleteJobStatus [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows retrieval of the progress of deleting existing file versions on the site. EXAMPLES EXAMPLE 1 Get-PnPSiteFileVersionBatchDeleteJobStatus Returns the progress of deleting existing file versions on the site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteFileVersionExpirationReportJobStatus.html": {
    "href": "cmdlets/Get-PnPSiteFileVersionExpirationReportJobStatus.html",
    "title": "Get-PnPSiteFileVersionExpirationReportJobStatus | PnP PowerShell",
    "keywords": "Get-PnPSiteFileVersionExpirationReportJobStatus SYNOPSIS Gets the status for a file version usage report generation job for a site collection. SYNTAX Get-PnPSiteFileVersionExpirationReportJobStatus -ReportUrl <string> DESCRIPTION Gets the status for a file version usage report generation job for a site collection. EXAMPLES EXAMPLE 1 Get-PnPSiteFileVersionExpirationReportJobStatus -ReportUrl \"https://contoso.sharepoint.com/sites/reports/MyReports/VersionReport.csv\" Gets the status for a file version usage report generation job for a site collection. PARAMETERS -ReportUrl The URL of the report to get the job status on. Type: string Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteGroup.html": {
    "href": "cmdlets/Get-PnPSiteGroup.html",
    "title": "Get-PnPSiteGroup | PnP PowerShell",
    "keywords": "Get-PnPSiteGroup SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Gets all the groups in the current or specified site collection. SYNTAX Get-PnPSiteGroup [-Group <String>] [-Site <SitePipeBind>] DESCRIPTION Use the Get-PnPSiteGroup cmdlet to get all the groups on the specified or currently connected site collection. EXAMPLES EXAMPLE 1 Get-PnPSiteGroup Returns all SharePoint groups in the current connected to site EXAMPLE 2 Get-PnPSiteGroup -Site \"https://contoso.sharepoint.com/sites/siteA\" This will return all SharePoint groups in the specified site EXAMPLE 3 Get-PnPSiteGroup -Group \"SiteA Members\" This will return the specified group for the current connected to site EXAMPLE 4 Get-PnPSiteGroup -Group \"SiteA Members\" -Site \"https://contoso.sharepoint.com/sites/siteA\" This will return the specified group for the specified site. PARAMETERS -Site Retrieve the associated member group. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Specifies the group name. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSitePolicy.html": {
    "href": "cmdlets/Get-PnPSitePolicy.html",
    "title": "Get-PnPSitePolicy | PnP PowerShell",
    "keywords": "Get-PnPSitePolicy SYNOPSIS Retrieves all or a specific site policy SYNTAX Get-PnPSitePolicy [-AllAvailable] [-Name <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve site policies. EXAMPLES EXAMPLE 1 Get-PnPSitePolicy Retrieves the current applied site policy. EXAMPLE 2 Get-PnPSitePolicy -AllAvailable Retrieves all available site policies. EXAMPLE 3 Get-PnPSitePolicy -Name \"Contoso HBI\" Retrieves an available site policy with the name \"Contoso HBI\". PARAMETERS -AllAvailable Retrieve all available site policies Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Retrieves a site policy with a specific name Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteScript.html": {
    "href": "cmdlets/Get-PnPSiteScript.html",
    "title": "Get-PnPSiteScript | PnP PowerShell",
    "keywords": "Get-PnPSiteScript SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieve Site Scripts that have been registered on the current tenant. SYNTAX Get-PnPSiteScript [[-Identity] <TenantSiteScriptPipeBind>] [[-SiteDesign] <TenantSiteDesignPipeBind>] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve site scripts registered on the current tenant. By using Identity option it is possible to retrieve specified site script EXAMPLES EXAMPLE 1 Get-PnPSiteScript Returns all registered site scripts EXAMPLE 2 Get-PnPSiteScript -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Returns a specific registered site script PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity If specified will retrieve the specified site script Type: TenantSiteScriptPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -SiteDesign If specified will retrieve the site scripts for this design Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteScriptFromList.html": {
    "href": "cmdlets/Get-PnPSiteScriptFromList.html",
    "title": "Get-PnPSiteScriptFromList | PnP PowerShell",
    "keywords": "Get-PnPSiteScriptFromList SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Generates a Site Script from an existing list SYNTAX By List (Default) Get-PnPSiteScriptFromList -List <ListPipeBind> [-Connection <PnPConnection>] [-Verbose] By Url Get-PnPSiteScriptFromList -Url <String> [-Connection <PnPConnection>] [-Verbose] DESCRIPTION This command allows a Site Script to be generated off of an existing list on your tenant. The script will return the JSON syntax with the definition of the list, including fields, views, content types, and some of the list settings. The script can then be used with Add-PnPSiteScript and Add-PnPListDesign to allow lists with the same configuration as the original list to be created by end users. EXAMPLES EXAMPLE 1 Get-PnPSiteScriptFromList -List \"MyList\" Returns the generated Site Script JSON from the list \"MyList\" in the currently connected to site EXAMPLE 2 Get-PnPList -Identity \"MyList\" | Get-PnPSiteScriptFromList | Add-PnPSiteScript -Title \"MyListScript\" | Add-PnPListDesign -Title \"MyListDesign\" Returns the generated Site Script JSON from the list \"MyList\" in the currently connected to site and registers it as a new Site Script with the title \"MyListScript\" and uses that Site Script to register a new List Design with the title \"MyListDesign\" EXAMPLE 3 Get-PnPSiteScriptFromList -Url \"https://contoso.sharepoint.com/sites/teamsite/lists/MyList\" Returns the generated Site Script JSON from the list \"MyList\" at the provided Url EXAMPLE 4 Get-PnPSiteScriptFromList -Url \"https://contoso.sharepoint.com/sites/teamsite/Shared Documents\" Returns the generated Site Script JSON from the default document library at the provided Url PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List Specifies an instance, Id or, title of the list to generate a Site Script from Type: ListPipeBind Parameter Sets: By List Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Url Specifies the full URL of the list to generate a Site Script from. I.e. https://contoso.sharepoint.com/sites/teamsite/lists/MyList Type: String Parameter Sets: By Url Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteScriptFromWeb.html": {
    "href": "cmdlets/Get-PnPSiteScriptFromWeb.html",
    "title": "Get-PnPSiteScriptFromWeb | PnP PowerShell",
    "keywords": "Get-PnPSiteScriptFromWeb SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Generates a Site Script from an existing site SYNTAX All components Get-PnPSiteScriptFromWeb -Url <String> [-Lists <String[]>] [-IncludeAll] [-Connection <PnPConnection>] Specific components Get-PnPSiteScriptFromWeb [-Url <String>] [-Lists <String[]>] [-IncludeBranding] [-IncludeLinksToExportedItems] [-IncludeRegionalSettings] [-IncludeSiteExternalSharingCapability] [-IncludeTheme] [-Connection <PnPConnection>] All lists Get-PnPSiteScriptFromWeb [-Url <String>] [-IncludeAllLists] [-IncludeBranding] [-IncludeLinksToExportedItems] [-IncludeRegionalSettings] [-IncludeSiteExternalSharingCapability] [-IncludeTheme] [-Connection <PnPConnection>] DESCRIPTION This command allows a Site Script to be generated off of an existing site on your tenant. You need to provide at least one of the optional Include or Lists arguments. If you omit the URL, the Site Script will be created from the site to which you are connected. EXAMPLES EXAMPLE 1 Get-PnPSiteScriptFromWeb -IncludeAll Returns the generated Site Script JSON containing all supported components from the currently connected to site EXAMPLE 2 Get-PnPSiteScriptFromWeb -Url \"https://contoso.sharepoint.com/sites/teamsite\" -IncludeAll Returns the generated Site Script JSON containing all supported components from the site at the provided Url EXAMPLE 3 Get-PnPSiteScriptFromWeb -Url \"https://contoso.sharepoint.com/sites/teamsite\" -IncludeAll -Lists \"Shared Documents\",\"Lists\\MyList\" Returns the generated Site Script JSON containing all supported components from the site at the provided Url including the lists \"Shared Documents\" and \"MyList\" EXAMPLE 4 Get-PnPSiteScriptFromWeb -Url \"https://contoso.sharepoint.com/sites/teamsite\" -IncludeBranding -IncludeLinksToExportedItems Returns the generated Site Script JSON containing the branding and navigation links from the site at the provided Url EXAMPLE 5 Get-PnPSiteScriptFromWeb -IncludeAllLists Returns the generated Site Script JSON containing all lists from the currently connected to site EXAMPLE 5 Get-PnPSiteScriptFromWeb -IncludeAllLists | Add-PnPSiteScript -Title \"My Site Script\" | Add-PnPSiteDesign -Title \"My Site Design\" -WebTemplate TeamSite Creates a new site script and site design based on the currently connected to site PARAMETERS -IncludeAll If specified will include all supported components into the Site Script including all self lists, branding, navigation links, regional settings, external sharing capability and theme. Type: SwitchParameter Parameter Sets: All components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeBranding If specified will include the branding of the site into the Site Script Type: SwitchParameter Parameter Sets: Specific components, All lists Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeLinksToExportedItems If specified will include navigation links into the Site Script Type: SwitchParameter Parameter Sets: Specific components, All lists Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeRegionalSettings If specified will include the regional settings into the Site Script Type: SwitchParameter Parameter Sets: Specific components, All lists Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSiteExternalSharingCapability If specified will include the external sharing configuration into the Site Script Type: SwitchParameter Parameter Sets: Specific components, All lists Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeTheme If specified will include the branding of the site into the Site Script Type: SwitchParameter Parameter Sets: Specific components, All lists Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeAllLists If specified, all lists that are not hidden, private, internal or catalogs will be included into the Site Script. It cannot be combined with the -Lists nor the -IncludeAll parameters as both will already include all lists. Type: String[] Parameter Sets: All lists Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lists Allows specifying one or more site relative URLs of lists that should be included into the Site Script, i.e. \"Shared Documents\",\"Lists\\MyList\" Type: String[] Parameter Sets: Basic components, All components, Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Specifies the URL of the site to generate a Site Script from. If omitted, the currently connected to site will be used. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteSearchQueryResults.html": {
    "href": "cmdlets/Get-PnPSiteSearchQueryResults.html",
    "title": "Get-PnPSiteSearchQueryResults | PnP PowerShell",
    "keywords": "Get-PnPSiteSearchQueryResults SYNOPSIS Executes a search query to retrieve indexed site collections SYNTAX Limit (Default) Get-PnPSiteSearchQueryResults [[-Query] <String>] [-StartRow <Int32>] [-MaxResults <Int32>] [-Connection <PnPConnection>] All Get-PnPSiteSearchQueryResults [[-Query] <String>] [-All] [-Connection <PnPConnection>] DESCRIPTION Allows to run a search query to retrieve indexed site collections. EXAMPLES EXAMPLE 1 Get-PnPSiteSearchQueryResults Returns the top 500 site collections indexed by SharePoint Search EXAMPLE 2 Get-PnPSiteSearchQueryResults -Query \"WebTemplate:STS\" Returns the top 500 site collections indexed by SharePoint Search which have are based on the STS (Team Site) template EXAMPLE 3 Get-PnPSiteSearchQueryResults -Query \"WebTemplate:SPSPERS\" Returns the top 500 site collections indexed by SharePoint Search which have are based on the SPSPERS (MySite) template, up to the MaxResult limit EXAMPLE 4 Get-PnPSiteSearchQueryResults -Query \"Title:Intranet*\" Returns the top 500 site collections indexed by SharePoint Search of which the title starts with the word Intranet EXAMPLE 5 Get-PnPSiteSearchQueryResults -MaxResults 10 Returns the top 10 site collections indexed by SharePoint Search EXAMPLE 6 Get-PnPSiteSearchQueryResults -All Returns absolutely all site collections indexed by SharePoint Search PARAMETERS -All Automatically page results until the end to get more than 500 sites. Use with caution! Type: SwitchParameter Parameter Sets: All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MaxResults Maximum amount of search results to return. Default and max is 500 search results. Type: Int32 Parameter Sets: Limit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Query Search query in Keyword Query Language (KQL) to execute to refine the returned sites. If omitted, all indexed sites will be returned. Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -StartRow Search result item to start returning the results from. Useful for paging. Leave at 0 to return all results. Type: Int32 Parameter Sets: Limit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteSensitivityLabel.html": {
    "href": "cmdlets/Get-PnPSiteSensitivityLabel.html",
    "title": "Get-PnPSiteSensitivityLabel | PnP PowerShell",
    "keywords": "Get-PnPSiteSensitivityLabel SYNOPSIS Gets the Microsoft Purview sensitivity label that is set on the connected to site SYNTAX Get-PnPSiteSensitivityLabel [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows retrieval of the currently assigned Microsoft Purview sensitivity label to the currently connected to site. EXAMPLES EXAMPLE 1 Get-PnPSiteSensitivityLabel Returns the Microsoft Purview sensitivity label set on the currently connected to site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Docs documentation"
  },
  "cmdlets/Get-PnPSiteTemplate.html": {
    "href": "cmdlets/Get-PnPSiteTemplate.html",
    "title": "Get-PnPSiteTemplate | PnP PowerShell",
    "keywords": "Get-PnPSiteTemplate SYNOPSIS Generates a provisioning site template from a web SYNTAX Get-PnPSiteTemplate [[-Out] <String>] [[-Schema] <XMLPnPSchemaVersion>] [-IncludeAllTermGroups] [-IncludeSiteCollectionTermGroup] [-IncludeSiteGroups] [-IncludeTermGroupsSecurity] [-IncludeSearchConfiguration] [-PersistBrandingFiles] [-PersistPublishingFiles] [-IncludeNativePublishingFiles] [-IncludeHiddenLists] [-IncludeAllPages] [-SkipVersionCheck] [-PersistMultiLanguageResources] [-ResourceFilePrefix <String>] [-Handlers <Handlers>] [-ExcludeHandlers <Handlers>] [-ExtensibilityHandlers <ExtensibilityHandler[]>] [-TemplateProviderExtensions <ITemplateProviderExtension[]>] [-ContentTypeGroups <String[]>] [-Force] [-NoBaseTemplate] [-Encoding <Encoding>] [-TemplateDisplayName <String>] [-TemplateImagePreviewUrl <String>] [-TemplateProperties <Hashtable>] [-OutputInstance] [-ExcludeContentTypesFromSyndication] [-ListsToExtract <System.Collections.Generic.List`1[System.String]>] [-Configuration <ExtractConfigurationPipeBind>] [-Connection <PnPConnection>] DESCRIPTION Allows to generate a provisioning site template from a web. EXAMPLES EXAMPLE 1 Get-PnPSiteTemplate -Out template.pnp Extracts a provisioning template in Office Open XML from the current web. EXAMPLE 2 Get-PnPSiteTemplate -Out template.xml Extracts a provisioning template in XML format from the current web. EXAMPLE 3 Get-PnPSiteTemplate -Out template.md Extracts a provisioning template in readable markdown format. EXAMPLE 4 Get-PnPSiteTemplate -Out template.pnp -Schema V201503 Extracts a provisioning template in Office Open XML from the current web and saves it in the V201503 version of the schema. EXAMPLE 5 Get-PnPSiteTemplate -Out template.pnp -IncludeAllTermGroups Extracts a provisioning template in Office Open XML from the current web and includes all term groups, term sets and terms from the Managed Metadata Service Taxonomy. EXAMPLE 6 Get-PnPSiteTemplate -Out template.pnp -IncludeSiteCollectionTermGroup Extracts a provisioning template in Office Open XML from the current web and includes the term group currently (if set) assigned to the site collection. EXAMPLE 7 Get-PnPSiteTemplate -Out template.pnp -PersistBrandingFiles Extracts a provisioning template in Office Open XML from the current web and saves the files that make up the composed look to the same folder as where the template is saved. EXAMPLE 8 Get-PnPSiteTemplate -Out template.pnp -Handlers Lists, SiteSecurity Extracts a provisioning template in Office Open XML from the current web, but only processes lists and site security when generating the template. EXAMPLE 9 $handler1 = New-PnPExtensibilityHandlerObject -Assembly Contoso.Core.Handlers -Type Contoso.Core.Handlers.MyExtensibilityHandler1 $handler2 = New-PnPExtensibilityHandlerObject -Assembly Contoso.Core.Handlers -Type Contoso.Core.Handlers.MyExtensibilityHandler2 Get-PnPSiteTemplate -Out NewTemplate.xml -ExtensibilityHandlers $handler1,$handler2 This will create two new ExtensibilityHandler objects that are run during extraction of the template EXAMPLE 10 Only supported on SP2016, SP2019 and SP Online Get-PnPSiteTemplate -Out template.pnp -PersistMultiLanguageResources Extracts a provisioning template in Office Open XML from the current web, and for supported artifacts it will create a resource file for each supported language (based upon the language settings of the current web). The generated resource files will be named after the value specified in the Out parameter. For instance if the Out parameter is specified as -Out 'template.xml' the generated resource file will be called 'template.en-US.resx'. EXAMPLE 11 Only supported on SP2016, SP2019 and SP Online Get-PnPSiteTemplate -Out template.pnp -PersistMultiLanguageResources -ResourceFilePrefix MyResources Extracts a provisioning template in Office Open XML from the current web, and for supported artifacts it will create a resource file for each supported language (based upon the language settings of the current web). The generated resource files will be named 'MyResources.en-US.resx' etc. EXAMPLE 12 $template = Get-PnPSiteTemplate -OutputInstance Extracts an instance of a provisioning template object from the current web. This syntax cannot be used together with the -Out parameter, but it can be used together with any other supported parameters. EXAMPLE 13 Get-PnPSiteTemplate -Out template.pnp -ContentTypeGroups \"Group A\",\"Group B\" Extracts a provisioning template in Office Open XML from the current web, but only processes content types from the to given content type groups. EXAMPLE 14 Get-PnPSiteTemplate -Out template.pnp -ExcludeContentTypesFromSyndication Extracts a provisioning template in Office Open XML from the current web, excluding content types provisioned through content type syndication (content type hub), in order to prevent provisioning errors if the target also provision the content type using syndication. EXAMPLE 15 Get-PnPSiteTemplate -Out template.pnp -ListsToExtract \"Title of List One\",\"95c4efd6-08f4-4c67-94ae-49d696ba1298\",\"Title of List Three\" Extracts a provisioning template in Office Open XML from the current web, including only the lists specified by title or ID. EXAMPLE 16 Get-PnPSiteTemplate -Out template.xml -Handlers Fields, ContentTypes, SupportedUILanguages -PersistMultiLanguageResources Extracts a provisioning template in XML format from the current web including the fields, content types and supported ui languages. It will create a resource file for each supported language. The generated resource files will be named 'template.en-US.resx' etc. It is mandatory to include the \"SupportedUILanguages\" for these handlers as otherwise the resource files will not be created. EXAMPLE 17 Connect-PnPOnline -Url \"https://contoso.sharepoint.com/sites/yourContentCenter\" Get-PnPSiteTemplate -Out MyModels.pnp -Handlers SyntexModels Export all Syntex Document Understanding models in a Content Center into a single PnP template. Note that only unstructured document processing models can be imported from a PnP template. PARAMETERS -Configuration Specify a JSON configuration file to configure the extraction progress. Type: ExtractConfigurationPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentTypeGroups Allows you to specify from which content type group(s) the content types should be included into the template. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Encoding The encoding type of the XML file, Unicode is default Type: Encoding Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludeContentTypesFromSyndication Specify whether or not content types issued from a content hub should be exported. By default, these content types are included. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludeHandlers Allows you to run all handlers, excluding the ones specified. Type: Handlers Parameter Sets: (All) Accepted values: All, ApplicationLifecycleManagement, AuditSettings, ComposedLook, ContentTypes, CustomActions, ExtensibilityProviders, Features, Fields, Files, ImageRenditions, Lists, Navigation, None, PageContents, Pages, PropertyBagEntries, Publishing, RegionalSettings, SearchSettings, SiteFooter, SiteHeader, SitePolicy, SiteSecurity, SiteSettings, SupportedUILanguages, SyntexModels, Tenant, TermGroups, Theme, WebApiPermissions, WebSettings, Workflows Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExtensibilityHandlers Allows you to specify ExtensibilityHandlers to execute while extracting a template. Type: ExtensibilityHandler[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Handlers Allows you to only process a specific type of artifact in the site. Notice that this might result in a non-working template, as some of the handlers require other artifacts in place if they are not part of what your extracting. For possible values for this parameter visit https://learn.microsoft.com/dotnet/api/officedevpnp.core.framework.provisioning.model.handlers Type: Handlers Parameter Sets: (All) Accepted values: All, ApplicationLifecycleManagement, AuditSettings, ComposedLook, ContentTypes, CustomActions, ExtensibilityProviders, Features, Fields, Files, ImageRenditions, Lists, Navigation, None, PageContents, Pages, PropertyBagEntries, Publishing, RegionalSettings, SearchSettings, SiteFooter, SiteHeader, SitePolicy, SiteSecurity, SiteSettings, SupportedUILanguages, SyntexModels, Tenant, TermGroups, Theme, WebApiPermissions, WebSettings, Workflows Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeAllPages If specified all site pages will be included Type: SwitchParameter Parameter Sets: (All) Aliases: IncludeAllClientSidePages Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeAllTermGroups If specified, all term groups will be included. Overrides IncludeSiteCollectionTermGroup. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeHiddenLists If specified hidden lists will be included in the template Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeNativePublishingFiles If specified, out of the box / native publishing files will be saved. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSearchConfiguration If specified the template will contain the current search configuration of the site. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSiteCollectionTermGroup If specified, all the site collection term groups will be included. Overridden by IncludeAllTermGroups. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSiteGroups If specified all site groups will be included. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeTermGroupsSecurity If specified all the managers and contributors of term groups will be included. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListsToExtract Specify the lists to extract, either providing their ID or their Title. Type: System.Collections.Generic.List`1[System.String] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoBaseTemplate {{ Fill NoBaseTemplate Description }} Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out Filename to write to, optionally including full path. The format of the file is based upon the extension you specify. .xml will generate an XML file .pnp will generate a PnP Provisioning Package, which is a file that contains all artifacts in a single archive (files, images, etc.) .md will generate a user readable markdown report. This is work in progress and will be extended in the future. Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -OutputInstance Returns the template as an in-memory object, which is an instance of the SiteTemplate type of the PnP Core Component. It cannot be used together with the -Out parameter. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PersistBrandingFiles If specified the files used for masterpages, sitelogo, alternate CSS and the files that make up the composed look will be saved. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PersistMultiLanguageResources If specified, resource values for applicable artifacts will be persisted to a resource file Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PersistPublishingFiles If specified the files used for the publishing feature will be saved. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceFilePrefix If specified, resource files will be saved with the specified prefix instead of using the template name specified. If no template name is specified the files will be called PnP-Resources.<language>.resx. See examples for more info. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Schema The schema of the output to use, defaults to the latest schema Type: XMLPnPSchemaVersion Parameter Sets: (All) Accepted values: LATEST, V201503, V201505, V201508, V201512, V201605, V201705, V201801, V201805, V201807, V201903, V201909, V202002, V202103, V202209 Required: False Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -SkipVersionCheck During extraction the version of the server will be checked for certain actions. If you specify this switch, this check will be skipped. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateDisplayName It can be used to specify the DisplayName of the template file that will be extracted. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateImagePreviewUrl It can be used to specify the ImagePreviewUrl of the template file that will be extracted. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProperties It can be used to specify custom Properties for the template file that will be extracted. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while extracting a template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Encoding documentation"
  },
  "cmdlets/Get-PnPSiteUserInvitations.html": {
    "href": "cmdlets/Get-PnPSiteUserInvitations.html",
    "title": "Get-PnPSiteUserInvitations | PnP PowerShell",
    "keywords": "Get-PnPSiteUserInvitations SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Searches against all stored sharing links and retrieves the email invites SYNTAX Get-PnPSiteUserInvitations [[-Site] <SitePipeBind>] -EmailAddress <string> DESCRIPTION Searches against all stored sharing links on a Site and retrieves the email invites. If the site parameter is omitted the current site will be searched. EXAMPLES EXAMPLE 1 Get-PnPSiteUserInvitations -Site \"https://contoso.sharepoint.com/sites/ContosoWeb1/\" -EmailAddress someone@example.com This example retrieves email invites stored in the ContosoWeb1 site to the user with email address someone@example.com. PARAMETERS -Site Specifies the URL of the site collection. Type: SitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EmailAddress Email Address of the user. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteVersionPolicy.html": {
    "href": "cmdlets/Get-PnPSiteVersionPolicy.html",
    "title": "Get-PnPSiteVersionPolicy | PnP PowerShell",
    "keywords": "Get-PnPSiteVersionPolicy SYNOPSIS Get version policy setting of the site. Required Permissions Type API/ Permission Name Admin consent required Delegated AllSites.FullControl yes SYNTAX Get-PnPSiteVersionPolicy [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows retrieval of version policy setting on the site. When the new document libraries are created, they will be set as the version policy of the site. If the version policy is not set on the site, the setting of the tenant will be used. EXAMPLES EXAMPLE 1 Get-PnPSiteVersionPolicy Returns the version policy setting of the site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Docs documentation"
  },
  "cmdlets/Get-PnPSiteVersionPolicyStatus.html": {
    "href": "cmdlets/Get-PnPSiteVersionPolicyStatus.html",
    "title": "Get-PnPSiteVersionPolicyStatus | PnP PowerShell",
    "keywords": "Get-PnPSiteVersionPolicyStatus SYNOPSIS Get the progress of setting version policy for existing document libraries on the site. SYNTAX Get-PnPSiteVersionPolicyStatus [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows retrieval of the progress of setting version policy for existing document libraries on the site. EXAMPLES EXAMPLE 1 Get-PnPSiteVersionPolicyStatus Returns the progress of setting version policy for existing document libraries on the site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Docs documentation"
  },
  "cmdlets/Get-PnPStorageEntity.html": {
    "href": "cmdlets/Get-PnPStorageEntity.html",
    "title": "Get-PnPStorageEntity | PnP PowerShell",
    "keywords": "Get-PnPStorageEntity SYNOPSIS Retrieve Storage Entities / Farm Properties from either the Tenant App Catalog or from the current site if it has a site scope app catalog. SYNTAX Get-PnPStorageEntity [-Key <String>] [-Scope <StorageEntityScope>] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve storage entities from either tenant app catalog or current site app catalog. EXAMPLES EXAMPLE 1 Get-PnPStorageEntity Returns all site storage entities/farm properties EXAMPLE 2 Get-PnPStorageEntity -Key MyKey Returns the storage entity/farm property with the given key. EXAMPLE 3 Get-PnPStorageEntity -Scope Site Returns all site collection scoped storage entities EXAMPLE 4 Get-PnPStorageEntity -Key MyKey -Scope Site Returns the storage entity from the site collection with the given key PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key The key of the value to retrieve. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Defines the scope of the storage entity. Defaults to Tenant. Type: StorageEntityScope Parameter Sets: (All) Accepted values: Site, Tenant Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPStoredCredential.html": {
    "href": "cmdlets/Get-PnPStoredCredential.html",
    "title": "Get-PnPStoredCredential | PnP PowerShell",
    "keywords": "Get-PnPStoredCredential SYNOPSIS Get a credential SYNTAX Get-PnPStoredCredential -Name <String> DESCRIPTION Returns a stored credential from the Windows Credential Manager or Mac OS Key Chain Entry. EXAMPLES EXAMPLE 1 Get-PnPStoredCredential -Name O365 Returns the credential associated with the specified identifier PARAMETERS -Name The credential to retrieve. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPStructuralNavigationCacheSiteState.html": {
    "href": "cmdlets/Get-PnPStructuralNavigationCacheSiteState.html",
    "title": "Get-PnPStructuralNavigationCacheSiteState | PnP PowerShell",
    "keywords": "Get-PnPStructuralNavigationCacheSiteState SYNOPSIS Get the structural navigation caching state for a site collection. SYNTAX Get-PnPStructuralNavigationCacheSiteState [-SiteUrl <String>] DESCRIPTION The Get-PnPStructuralNavigationCacheSiteState cmdlet can be used to determine if structural navigation caching is enabled or disabled for a site collection. If the SiteUrl parameter has not been specified the currently connected to site will be used. EXAMPLES Example 1 Get-PnPStructuralNavigationCacheSiteState -SiteUrl \"https://contoso.sharepoint.com/sites/product/\" This example checks if structural navigation caching is enabled for the entire site collection https://contoso.sharepoint.com/sites/product/. If caching is enabled, then it will return True. If caching is disabled, then it will return False. PARAMETERS -SiteUrl Specifies the absolute URL for the site collection's root web being checked for its caching state. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPStructuralNavigationCacheWebState.html": {
    "href": "cmdlets/Get-PnPStructuralNavigationCacheWebState.html",
    "title": "Get-PnPStructuralNavigationCacheWebState | PnP PowerShell",
    "keywords": "Get-PnPStructuralNavigationCacheWebState SYNOPSIS Get the structural navigation caching state for a web. SYNTAX Get-PnPStructuralNavigationCacheWebState [-WebUrl <String>] DESCRIPTION The Get-PnPStructuralNavigationCacheWebState cmdlet can be used to determine if structural navigation caching is enabled or disabled for a web in a site collection. If the WebUrl parameter has not been specified the currently connected to web will be used. EXAMPLES Example 1 Get-PnPStructuralNavigationCacheWebState -WebUrl \"https://contoso.sharepoint.com/sites/product/electronics\" This example checks if structural navigation caching is enabled for the web https://contoso.sharepoint.com/sites/product/electronics. If caching is enabled, then it will return True. If caching is disabled, then it will return False. PARAMETERS -WebUrl Specifies the absolute URL for the web being checked for its caching state. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSubWeb.html": {
    "href": "cmdlets/Get-PnPSubWeb.html",
    "title": "Get-PnPSubWeb | PnP PowerShell",
    "keywords": "Get-PnPSubWeb SYNOPSIS Returns the subwebs of the current web SYNTAX Get-PnPSubWeb [[-Identity] <WebPipeBind>] [-Recurse] [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION Allows to retrieve subwebs of the current web. EXAMPLES EXAMPLE 1 Get-PnPSubWeb Retrieves all subsites of the current context returning the Id, Url, Title and ServerRelativeUrl of each subsite in the output EXAMPLE 2 Get-PnPSubWeb -Recurse Retrieves all subsites of the current context and all of their nested child subsites returning the Id, Url, Title and ServerRelativeUrl of each subsite in the output EXAMPLE 3 Get-PnPSubWeb -Recurse -Includes \"WebTemplate\",\"Description\" | Select ServerRelativeUrl, WebTemplate, Description Retrieves all subsites of the current context and shows the ServerRelativeUrl, WebTemplate and Description properties in the resulting output EXAMPLE 4 Get-PnPSubWeb -Identity Team1 -Recurse Retrieves all subsites of the subsite Team1 and all of its nested child subsites EXAMPLE 5 Get-PnPSubWeb -Identity Team1 -Recurse -IncludeRootWeb Retrieves the root web, all subsites of the subsite Team1 and all of its nested child subsites PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity If provided, only the subsite with the provided Id, GUID or the Web instance will be returned Type: WebPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Recurse If provided, recursion through all subsites and their children will take place to return them as well Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -IncludeRootWeb If provided, the results will also contain the root web Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned sub web which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSyntexModel.html": {
    "href": "cmdlets/Get-PnPSyntexModel.html",
    "title": "Get-PnPSyntexModel | PnP PowerShell",
    "keywords": "Get-PnPSyntexModel SYNOPSIS Returns Microsoft Syntex models from a Syntex Content Center. This cmdlet only works when you've connected to a Syntex Content Center site. SYNTAX Get-PnPSyntexModel [-Identity] <SyntexModelPipeBind> [-Connection <PnPConnection>] DESCRIPTION This command allows the retrieval of a Syntex document processing models defined in the connected Syntex Content Center site. EXAMPLES EXAMPLE 1 Get-PnPSyntexModel Lists all the document processing models in the connected Syntex Content Center site. EXAMPLE 2 Get-PnPSyntexModel -Identity 1 Gets the document processing model with the id 1. EXAMPLE 3 Get-PnPSyntexModel -Identity \"Invoice model\" Gets the document processing model named \"Invoice model\". PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name or id of the Syntex model. Type: SyntexModelPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSyntexModelPublication.html": {
    "href": "cmdlets/Get-PnPSyntexModelPublication.html",
    "title": "Get-PnPSyntexModelPublication | PnP PowerShell",
    "keywords": "Get-PnPSyntexModelPublication SYNOPSIS Returns the libraries to which a Microsoft Syntex model was published. This cmdlet only works when you've connected to a Syntex Content Center site. SYNTAX Get-PnPSyntexModelPublications -Model <SyntexModelPipeBind> [-Connection <PnPConnection>] DESCRIPTION This command returns the libraries to which a Syntex document processing model defined in the connected Syntex Content Center site was published. EXAMPLES EXAMPLE 1 Get-PnPSyntexModelPublication -Identity \"Invoice model\" Gets the libraries to which the document processing model named \"Invoice model\" was published. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Model The name or id of the Syntex model. Type: SyntexModelPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTaxonomyItem.html": {
    "href": "cmdlets/Get-PnPTaxonomyItem.html",
    "title": "Get-PnPTaxonomyItem | PnP PowerShell",
    "keywords": "Get-PnPTaxonomyItem SYNOPSIS Returns a taxonomy item SYNTAX Get-PnPTaxonomyItem [-TermPath] <String> [-Connection <PnPConnection>] DESCRIPTION Provide the term path only and then the term item if found will be returned. EXAMPLES EXAMPLE 1 Get-PnPTaxonomyItem -TermPath \"My Term Group|My Term Set|Contoso\" Will return the taxonomy item for the term path specified. PARAMETERS -TermPath The path, delimited by | of the taxonomy item to retrieve, alike GROUPLABEL|TERMSETLABEL|TERMLABEL Type: String Parameter Sets: (All) Aliases: Term Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTaxonomySession.html": {
    "href": "cmdlets/Get-PnPTaxonomySession.html",
    "title": "Get-PnPTaxonomySession | PnP PowerShell",
    "keywords": "Get-PnPTaxonomySession SYNOPSIS Returns a taxonomy session SYNTAX Get-PnPTaxonomySession [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve taxonomy session. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsApp.html": {
    "href": "cmdlets/Get-PnPTeamsApp.html",
    "title": "Get-PnPTeamsApp | PnP PowerShell",
    "keywords": "Get-PnPTeamsApp SYNOPSIS Required Permissions Microsoft Graph API : One of AppCatalog.Read.All, Directory.ReadWrite.All Gets one Microsoft Teams App or a list of all apps. SYNTAX Get-PnPTeamsApp [-Identity <TeamsAppPipeBind>] DESCRIPTION Allows to retrieve Microsoft Teams apps. By using Identity option it is possible to retrieve a specific app. EXAMPLES EXAMPLE 1 Get-PnPTeamsApp Retrieves all the Microsoft Teams Apps EXAMPLE 2 Get-PnPTeamsApp -Identity a54224d7-608b-4839-bf74-1b68148e65d4 Retrieves a specific Microsoft Teams App EXAMPLE 3 Get-PnPTeamsApp -Identity \"MyTeamsApp\" Retrieves a specific Microsoft Teams App PARAMETERS -Identity Specify the name, id or external id of the app. Type: TeamsAppPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsChannel.html": {
    "href": "cmdlets/Get-PnPTeamsChannel.html",
    "title": "Get-PnPTeamsChannel | PnP PowerShell",
    "keywords": "Get-PnPTeamsChannel SYNOPSIS Required Permissions Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All Gets the channels for a specified Team. SYNTAX Get-PnPTeamsChannel -Team <TeamsTeamPipeBind> [-Identity <TeamsChannelPipeBind>] [-IncludeModerationSettings <SwitchParameter>] DESCRIPTION Allows to retrieve list of channels for a specified team. Note that the ModerationSettings are only being returned when providing the channel Id of a specific channel through -Identity and by providing -IncludeModerationSettings (Example 4). They will not be returned when retrieving all channels for a team or when omitting -IncludeModerationSettings. This is because of a design choice in Microsoft Graph and the moderationsettings currently only being available through its beta endpoint, which will be used when -IncludeModerationSettings is provided. EXAMPLES EXAMPLE 1 Get-PnPTeamsChannel -Team a6c1e0d7-f579-4993-81ab-4b666f8edea8 Retrieves all channels for the specified team EXAMPLE 2 Get-PnPTeamsChannel -Team a6c1e0d7-f579-4993-81ab-4b666f8edea8 -Identity \"Test Channel\" Retrieves the channel called 'Test Channel' EXAMPLE 3 Get-PnPTeamsChannel -Team a6c1e0d7-f579-4993-81ab-4b666f8edea8 -Identity \"19:796d063b63e34497aeaf092c8fb9b44e@thread.skype\" Retrieves the channel specified by its channel id EXAMPLE 4 Get-PnPTeamsChannel -Team a6c1e0d7-f579-4993-81ab-4b666f8edea8 -Identity \"19:796d063b63e34497aeaf092c8fb9b44e@thread.skype\" -IncludeModerationSettings Retrieves the channel specified by its channel id which will include the ModerationSettings PARAMETERS -Identity The id or name of the channel to retrieve. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -IncludeModerationSettings When provided, it will use the beta endpoint of Microsoft Graph to retrieve the information. This will include the ModerationSettings if used in combination with -Identity . Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsChannelFilesFolder.html": {
    "href": "cmdlets/Get-PnPTeamsChannelFilesFolder.html",
    "title": "Get-PnPTeamsChannelFilesFolder | PnP PowerShell",
    "keywords": "Get-PnPTeamsChannelFilesFolder SYNOPSIS Required Permissions Microsoft Graph API : Group.Read.All Gets the metadata for the location where the files of a channel are stored. SYNTAX Get-PnPTeamsChannel [-Team <TeamsTeamPipeBind>] [-Channel <TeamsChannelPipeBind>] DESCRIPTION Allows to retrieve folder metadata for specified channel. EXAMPLES EXAMPLE 1 Get-PnPTeamsChannelFilesFolder -Team \"Sales Team\" -Channel \"Test Channel\" Retrieves the folder metadata for the channel called 'Test Channel' located in the Team named 'Sales Team' EXAMPLE 2 Get-PnPTeamsChannelFilesFolder -Team a6c1e0d7-f579-4993-81ab-4b666f8edea8 -Channel \"19:796d063b63e34497aeaf092c8fb9b44e@thread.skype\" Retrieves the folder metadata for the channel specified by its channel id PARAMETERS -Channel The id or name of the channel to retrieve. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsChannelMessage.html": {
    "href": "cmdlets/Get-PnPTeamsChannelMessage.html",
    "title": "Get-PnPTeamsChannelMessage | PnP PowerShell",
    "keywords": "Get-PnPTeamsChannelMessage SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Returns messages from the specified Microsoft Teams Channel. SYNTAX Get-PnPTeamsChannelMessage -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> [-Identity <TeamsChannelMessagePipeBind>] [-IncludeDeleted] DESCRIPTION Allows to retrieve messages from the specified channel. EXAMPLES EXAMPLE 1 Get-PnPTeamsChannelMessage -Team MyTestTeam -Channel \"My Channel\" Gets all messages of the specified channel EXAMPLE 2 Get-PnPTeamsChannelMessage -Team MyTestTeam -Channel \"My Channel\" -Identity 1653089769293 Gets a specific message of the specified channel PARAMETERS -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Channel Specify id or name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the id of the message to use. Type: TeamsChannelMessagePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeDeleted Specify to include deleted messages. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsChannelMessageReply.html": {
    "href": "cmdlets/Get-PnPTeamsChannelMessageReply.html",
    "title": "Get-PnPTeamsChannelMessageReply | PnP PowerShell",
    "keywords": "Get-PnPTeamsChannelMessageReply SYNOPSIS Required Permissions Microsoft Graph API: ChannelMessage.Read.All Returns replies from the specified Microsoft Teams channel message. SYNTAX Get-PnPTeamsChannelMessageReply -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> -Message <TeamsChannelMessagePipeBind> [-Identity <TeamsChannelMessageReplyPipeBind>] [-IncludeDeleted] DESCRIPTION Allows to retrieve replies from the specified channel message. EXAMPLES EXAMPLE 1 Get-PnPTeamsChannelMessageReply -Team MyTestTeam -Channel \"My Channel\" -Message 1653089769293 -IncludeDeleted Gets all (active and deleted) replies of the specified channel message. EXAMPLE 2 Get-PnPTeamsChannelMessageReply -Team MyTestTeam -Channel \"My Channel\" -Message 1653089769293 -Identity 1653086004630 Gets a specific reply of the specified channel message. PARAMETERS -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Channel Specify id or name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Message Specify the id of the message to use. Type: TeamsChannelMessagePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the id of the message reply to use. Type: TeamsChannelMessageReplyPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeDeleted Specify to include deleted messages Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsChannelUser.html": {
    "href": "cmdlets/Get-PnPTeamsChannelUser.html",
    "title": "Get-PnPTeamsChannelUser | PnP PowerShell",
    "keywords": "Get-PnPTeamsChannelUser SYNOPSIS Required Permissions Microsoft Graph API: ChannelMember.Read.All Returns members from the specified Microsoft Teams private Channel. SYNTAX Get-PnPTeamsChannelUser -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> [-Identity <TeamsChannelMemberPipeBind>] [-Role <String>] DESCRIPTION Allows to retrieve list of members of the specified private channel. EXAMPLES EXAMPLE 1 Get-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Channel\" Returns all owners, members and guests from the specified channel. EXAMPLE 2 Get-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Channel\" -Role Member Returns all members from the specified channel. EXAMPLE 3 Get-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Channel\" -Identity john.doe@contoso.com Returns membership of the user \"john.doe@contoso.com\" for the specified channel. EXAMPLE 4 Get-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Channel\" -Identity 00000000-0000-0000-0000-000000000000 Returns membership of the user with ID \"00000000-0000-0000-0000-000000000000\" for the specified channel. PARAMETERS -Identity Specify membership id, UPN or user ID of the channel member. Type: TeamsChannelMemberPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Channel Specify id or name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Role Specify to filter on the role of the user. Type: String Parameter Sets: (All) Accepted values: Owner, Member, Guest Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsPrimaryChannel.html": {
    "href": "cmdlets/Get-PnPTeamsPrimaryChannel.html",
    "title": "Get-PnPTeamsPrimaryChannel | PnP PowerShell",
    "keywords": "Get-PnPTeamsPrimaryChannel SYNOPSIS Required Permissions Microsoft Graph API : Channel.ReadBasic.All, ChannelSettings.Read.All, ChannelSettings.ReadWrite.All Gets the default channel, General, of a team. SYNTAX Get-PnPTeamsPrimaryChannel -Team <TeamsTeamPipeBind> [-Identity <TeamsChannelPipeBind>] DESCRIPTION Gets the default channel, General, of a team. EXAMPLES EXAMPLE 1 Get-PnPTeamsPrimaryChannel -Team ee0f40fc-b2f7-45c7-b62d-11b90dd2ea8e Gets the default channel of the Team with the provided Id EXAMPLE 2 Get-PnPTeamsPrimaryChannel -Team Sales Gets the default channel of the Sales Team PARAMETERS -Team The group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Get-PnPTeamsTab.html": {
    "href": "cmdlets/Get-PnPTeamsTab.html",
    "title": "Get-PnPTeamsTab | PnP PowerShell",
    "keywords": "Get-PnPTeamsTab SYNOPSIS Required Permissions Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All Gets one or all tabs in a channel. SYNTAX Get-PnPTeamsTab -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> [-Identity <TeamsTabPipeBind>] DESCRIPTION Allows to retrieve tabs in channel. By using Identity it is possible to retrieve a specific single tab. EXAMPLES EXAMPLE 1 Get-PnPTeamsTab -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -Channel 19:796d063b63e34497aeaf092c8fb9b44e@thread.skype Retrieves the tabs for the specified Microsoft Teams instance and channel EXAMPLE 2 Get-PnPTeamsTab -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -Channel 19:796d063b63e34497aeaf092c8fb9b44e@thread.skype -Identity \"Wiki\" Retrieves a tab with the display name 'Wiki' from the specified team and channel EXAMPLE 3 Get-PnPTeamsTab -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -Channel 19:796d063b63e34497aeaf092c8fb9b44e@thread.skype -Identity d8740a7a-e44e-46c5-8f13-e699f964fc25 Retrieves a tab with an id from the specified team and channel EXAMPLE 4 Get-PnPTeamsTab -Team \"My Team\" -Channel \"My Channel\" Retrieves the tabs for the specified Microsoft Teams instance and channel EXAMPLE 5 Get-PnPTeamsTab -Team \"My Team\" -Channel \"My Channel\" -Identity \"Wiki\" Retrieves a tab with the display name 'Wiki' from the specified team and channel PARAMETERS -Channel Specify the channel id or display name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Identity Specify the id or display name of the tab Type: TeamsTabPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsTag.html": {
    "href": "cmdlets/Get-PnPTeamsTag.html",
    "title": "Get-PnPTeamsTag | PnP PowerShell",
    "keywords": "Get-PnPTeamsTag SYNOPSIS Required Permissions Microsoft Graph API : TeamWorkTag.Read, Group.Read.All Gets one or all tags in a team. SYNTAX Get-PnPTeamsTag -Team <TeamsTeamPipeBind> [-Identity <string>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTeamsTag -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 Retrieves all the tags for the specified Microsoft Teams instance. EXAMPLE 2 Get-PnPTeamsTag -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -Identity \"ZmY1ZjdmMjctZDhiNy00MWRkLTk2ZDQtYzcyYmVhMWIwOGYxIyM3ZTVhNGRmZS1kNWNlLTRkOTAtODM4MC04ZDIxM2FkYzYzOGIjI3RiVlVpR01rcg==\" Retrieves a tag with the specified Id from the specified team. PARAMETERS -Identity Specify the id of the tag Type: TeamsTagPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsTeam.html": {
    "href": "cmdlets/Get-PnPTeamsTeam.html",
    "title": "Get-PnPTeamsTeam | PnP PowerShell",
    "keywords": "Get-PnPTeamsTeam SYNOPSIS Required Permissions Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All Gets one Microsoft Teams Team or a list of Teams. SYNTAX Get-PnPTeamsTeam [-Identity <TeamsTeamPipeBind>] [-Filter <String>] DESCRIPTION Allows to retrieve list of Microsoft Teams teams. By using Identity it is possible to retrieve a specific team, and by using Filter you can supply any filter queries supported by the Graph API. EXAMPLES EXAMPLE 1 Get-PnPTeamsTeam Retrieves all the Microsoft Teams instances EXAMPLE 2 Get-PnPTeamsTeam -Identity \"PnP PowerShell\" Retrieves a specific Microsoft Teams instance using display name. EXAMPLE 3 Get-PnPTeamsTeam -Identity \"baba9192-55be-488a-9fb7-2e2e76edbef2\" Retrieves a specific Microsoft Teams instance using group id. EXAMPLE 4 Get-PnPTeamsTeam -Filter \"startswith(mailNickName, 'contoso')\" Retrieves all Microsoft Teams instances with MailNickName starting with \"contoso\". EXAMPLE 5 Get-PnPTeamsTeam -Filter \"startswith(description, 'contoso')\" Retrieves all Microsoft Teams instances with Description starting with \"contoso\". This example demonstrates using Advanced Query capabilities (see: https://learn.microsoft.com/en-us/graph/aad-advanced-queries?tabs=http#group-properties). PARAMETERS -Identity Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: Identity Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Filter Specify the query to pass to Graph API in $filter. Type: String Parameter Sets: Filter Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsUser.html": {
    "href": "cmdlets/Get-PnPTeamsUser.html",
    "title": "Get-PnPTeamsUser | PnP PowerShell",
    "keywords": "Get-PnPTeamsUser SYNOPSIS Required Permissions Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All Microsoft Graph API : Directory.Read.All Returns owners, members or guests from a team. SYNTAX Get-PnPTeamsUser -Team <TeamsTeamPipeBind> [-Channel <TeamsChannelPipeBind>] [-Role <String>] DESCRIPTION Allows to retrieve list of owners, members or guests from a team. EXAMPLES EXAMPLE 1 Get-PnPTeamsUser -Team MyTeam Returns all owners, members or guests from the specified team. EXAMPLE 2 Get-PnPTeamsUser -Team MyTeam -Role Owner Returns all owners from the specified team. EXAMPLE 3 Get-PnPTeamsUser -Team MyTeam -Role Member Returns all members from the specified team. EXAMPLE 4 Get-PnPTeamsUser -Team MyTeam -Role Guest Returns all guests from the specified team. PARAMETERS -Channel Specify the channel id or display name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Role Specify to filter on the role of the user Type: String Parameter Sets: (All) Accepted values: Owner, Member, Guest Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTemporarilyDisableAppBar.html": {
    "href": "cmdlets/Get-PnPTemporarilyDisableAppBar.html",
    "title": "Get-PnPTemporarilyDisableAppBar | PnP PowerShell",
    "keywords": "Get-PnPTemporarilyDisableAppBar SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the disabled state of the SharePoint Online App Bar. It may take some time after changing this setting for the change to be reflected in SharePoint Online and for this cmdlet to return the updated value. Support for this may be dropped after March 31st, 2023 after which the SharePoint Online App Bar will become visible anyway. See the Message Center Announcement for more information. SYNTAX Get-PnPTemporarilyDisableAppBar DESCRIPTION Allows to retrieve disabled state of the SharePoint Online App Bar. EXAMPLES EXAMPLE 1 Get-PnPTemporarilyDisableAppBar Returns True if the the SharePoint Online App Bar is hidden or False if it is not. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenant.html": {
    "href": "cmdlets/Get-PnPTenant.html",
    "title": "Get-PnPTenant | PnP PowerShell",
    "keywords": "Get-PnPTenant SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns organization-level site collection properties SYNTAX Get-PnPTenant [-Connection <PnPConnection>] DESCRIPTION Returns organization-level site collection properties such as StorageQuota, StorageQuotaAllocated, ResourceQuota, ResourceQuotaAllocated, and SiteCreationMode. Currently, there are no parameters for this cmdlet. You must have the SharePoint Online admin or Global admin role to run the cmdlet. EXAMPLES EXAMPLE 1 Get-PnPTenant This example returns all tenant settings PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantAppCatalogUrl.html": {
    "href": "cmdlets/Get-PnPTenantAppCatalogUrl.html",
    "title": "Get-PnPTenantAppCatalogUrl | PnP PowerShell",
    "keywords": "Get-PnPTenantAppCatalogUrl SYNOPSIS Retrieves the url of the tenant scoped app catalog SYNTAX Get-PnPTenantAppCatalogUrl [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve the url of the tenant scoped app catalog. EXAMPLES EXAMPLE 1 Get-PnPTenantAppCatalogUrl Returns the url of the tenant scoped app catalog site collection PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantCdnEnabled.html": {
    "href": "cmdlets/Get-PnPTenantCdnEnabled.html",
    "title": "Get-PnPTenantCdnEnabled | PnP PowerShell",
    "keywords": "Get-PnPTenantCdnEnabled SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieves if the Office 365 Content Delivery Network has been enabled. SYNTAX Get-PnPTenantCdnEnabled -CdnType <SPOTenantCdnType> [-Connection <PnPConnection>] DESCRIPTION Enables or disabled the public or private Office 365 Content Delivery Network (CDN). EXAMPLES EXAMPLE 1 Get-PnPTenantCdnEnabled -CdnType Public Returns the enabled status of the specified CDN PARAMETERS -CdnType The type of cdn to retrieve the origins from Type: SPOTenantCdnType Parameter Sets: (All) Accepted values: Public, Private Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantCdnOrigin.html": {
    "href": "cmdlets/Get-PnPTenantCdnOrigin.html",
    "title": "Get-PnPTenantCdnOrigin | PnP PowerShell",
    "keywords": "Get-PnPTenantCdnOrigin SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the current registered origins from the public or private content delivery network (CDN). SYNTAX Get-PnPTenantCdnOrigin -CdnType <SPOTenantCdnType> [-Connection <PnPConnection>] DESCRIPTION Returns the current registered origins from the public or private content delivery network (CDN). EXAMPLES EXAMPLE 1 Get-PnPTenantCdnOrigin -CdnType Public Returns the configured CDN origins for the specified CDN type PARAMETERS -CdnType The type of cdn to retrieve the origins from Type: SPOTenantCdnType Parameter Sets: (All) Accepted values: Public, Private Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantCdnPolicies.html": {
    "href": "cmdlets/Get-PnPTenantCdnPolicies.html",
    "title": "Get-PnPTenantCdnPolicies | PnP PowerShell",
    "keywords": "Get-PnPTenantCdnPolicies SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the CDN Policies for the specified CDN (Public | Private). SYNTAX Get-PnPTenantCdnPolicies -CdnType <SPOTenantCdnType> [-Connection <PnPConnection>] DESCRIPTION Retrieves the current CDN policies for the tenant for the specified CDN type. EXAMPLES EXAMPLE 1 Get-PnPTenantCdnPolicies -CdnType Public Returns the policies for the specified CDN type PARAMETERS -CdnType The type of cdn to retrieve the policies from Type: SPOTenantCdnType Parameter Sets: (All) Accepted values: Public, Private Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantDeletedSite.html": {
    "href": "cmdlets/Get-PnPTenantDeletedSite.html",
    "title": "Get-PnPTenantDeletedSite | PnP PowerShell",
    "keywords": "Get-PnPTenantDeletedSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Fetches the site collections from the tenant recycle bin. SYNTAX Get-PnPTenantDeletedSite [-Identity] <String> [-Limit] [-IncludePersonalSite] [-IncludeOnlyPersonalSite] [-Detailed] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION Fetches the site collections which are listed in your tenant's recycle bin. EXAMPLES EXAMPLE 1 Get-PnPTenantDeletedSite This will fetch basic information on site collections located in the recycle bin. EXAMPLE 2 Get-PnPTenantDeletedSite -Detailed This will fetch detailed information on site collections located in the recycle bin. EXAMPLE 3 Get-PnPTenantDeletedSite -Identity \"https://tenant.sharepoint.com/sites/contoso\" This will fetch basic information on the site collection with the url 'https://tenant.sharepoint.com/sites/contoso' from the recycle bin. EXAMPLE 4 Get-PnPTenantDeletedSite -IncludePersonalSite This will fetch the site collections from the recycle bin including the personal sites and display its properties. EXAMPLE 5 Get-PnPTenantDeletedSite -IncludeOnlyPersonalSite This will fetch the site collections from the recycle bin which are personal sites and display its properties. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Detailed When specified, detailed information will be returned on the site collections. This will take longer to execute. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the full URL of the site collection that needs to be restored. Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -IncludeOnlyPersonalSite If specified the task will only retrieve the personal sites from the recycle bin. Type: SwitchParameter Parameter Sets: (ParameterSetPersonalSitesOnly) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludePersonalSite If specified the task will also retrieve the personal sites from the recycle bin. Type: SwitchParameter Parameter Sets: (ParameterSetAllSites) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Limit Limit of the number of site collections to be retrieved from the recycle bin. Default is 200. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantId.html": {
    "href": "cmdlets/Get-PnPTenantId.html",
    "title": "Get-PnPTenantId | PnP PowerShell",
    "keywords": "Get-PnPTenantId SYNOPSIS Returns the Tenant ID SYNTAX By TenantUrl Get-PnPTenantId -TenantUrl <String> [-AzureEnvironment <AzureEnvironment>] By connection Get-PnPTenantId [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve id of tenant. This does not require an active connection to that tenant. EXAMPLES EXAMPLE 1 Get-PnPTenantId Returns the current Tenant Id. A valid connection with Connect-PnPOnline is required either as a current connection or by providing it using the -Connection parameter. EXAMPLE 2 Get-PnPTenantId contoso Returns the Tenant ID for the tenant contoso.sharepoint.com. Can be executed without an active PnP Connection. EXAMPLE 3 Get-PnPTenantId -TenantUrl contoso.sharepoint.com Returns the Tenant ID for the specified tenant. Can be executed without an active PnP Connection. EXAMPLE 4 Get-PnPTenantId -TenantUrl contoso.sharepoint.us -AzureEnvironment USGovernment Returns the Tenant ID for the specified US Government tenant. Can be executed without an active PnP Connection. PARAMETERS -TenantUrl The name of the tenant to retrieve the id for. If not specified, the currently connected to tenant will be used. You can use either just the tenant name, i.e. contoso or the full SharePoint URL, i.e. contoso.sharepoint.com. Type: String Parameter Sets: By URL Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -AzureEnvironment The Azure environment to use for the tenant lookup. It defaults to 'Production' which is the main Azure environment. Type: AzureEnvironment Parameter Sets: By URL Accepted values: Production, PPE, China, Germany, USGovernment, USGovernmentHigh, USGovernmentDoD Required: False Position: Named Default value: Production Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. If not specified, the current connection will be used. Type: PnPConnection Parameter Sets: From connection Required: False Position: Named Default value: Current connection Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantInfo.html": {
    "href": "cmdlets/Get-PnPTenantInfo.html",
    "title": "Get-PnPTenantInfo | PnP PowerShell",
    "keywords": "Get-PnPTenantInfo SYNOPSIS Gets information about any tenant ** Required Permissions ** Graph: CrossTenantInformation.ReadBasic.All SYNTAX Current Tenant (default) Get-PnPTenantInfo [-Verbose] By TenantId Get-PnPTenantInfo -TenantId <String> [-Verbose] By Domain Name Get-PnPTenantInfo -DomainName <String> [-Verbose] DESCRIPTION Gets the tenantId, federation brand name, company name and default domain name regarding a specific tenant. If no Domain name or Tenant id is specified, it returns the Tenant Info of the currently connected to tenant. EXAMPLES EXAMPLE 1 Get-PnPTenantInfo -TenantId \"e65b162c-6f87-4eb1-a24e-1b37d3504663\" Returns the tenant information of the specified TenantId. EXAMPLE 2 Get-PnPTenantInfo -DomainName \"contoso.com\" Returns the Tenant Information for the tenant connected to the domain contoso.com. EXAMPLE 3 Get-PnPTenantInfo Returns Tenant Information of the currently connected to tenant. EXAMPLE 4 Get-PnPTenantInfo -CurrentTenant Returns Tenant Information of the currently connected to tenant. PARAMETERS -CurrentTenant Gets the Tenant Information of the currently connected to tenant. Type: SwitchParameter Parameter Sets: GETINFOOFCURRENTTENANT Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DomainName The Domain name of the tenant to lookup. You can use the onmicrosoft.com domain name such as \"contoso.onmicrosoft.com\" or use any domain that is connected to the tenant, i.e. \"contoso.com\". Type: String Parameter Sets: GETINFOBYTDOMAINNAME Required: False Position: Named Default value: Production Accept pipeline input: False Accept wildcard characters: False -TenantId The id of the tenant to retrieve the information about Type: String Parameter Sets: GETINFOBYTENANTID Required: true Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantInstance.html": {
    "href": "cmdlets/Get-PnPTenantInstance.html",
    "title": "Get-PnPTenantInstance | PnP PowerShell",
    "keywords": "Get-PnPTenantInstance SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieves the tenant instances in case of a Multi-GEO tenant. In case of a single geo (default) tenant it will return only one entry. SYNTAX Get-PnPTenantInstance DESCRIPTION Allows to retrieve list of all instances of the tenant. EXAMPLES EXAMPLE 1 Get-PnPTenantInstance Returns the tenant instances. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantInternalSetting.html": {
    "href": "cmdlets/Get-PnPTenantInternalSetting.html",
    "title": "Get-PnPTenantInternalSetting | PnP PowerShell",
    "keywords": "Get-PnPTenantInternalSetting SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns additional organizational level site collection properties available from endpoint /_api/SPOInternalUseOnly.TenantAdminSettings. This is an undocumented endpoint. Usage of this cmdlet might be subject to change if Microsoft changes the response. SYNTAX Get-PnPTenantInternalSetting [-Connection <PnPConnection>] DESCRIPTION Returns organizational level site collection properties such as SitePagesEnabled, DisableSelfServiceSiteCreation, EnableAutoNewsDigest, CustomFormUrl, AutoQuotaEnabled, DisableGroupify, IncludeAtAGlanceInShareEmails, MailFromAddress, MobileNotificationIsEnabledForSharepoint, NewSiteManagedPath, NewSubsiteInModernOffForAll, NewSubsiteInModernOffForModernTemplates, NewTeamSiteManagedPath, ParentSiteUrl, PolicyOption, RequireSecondaryContact, ShowSelfServiceSiteCreation, SiteCreationNewUX, SmtpServer, SPListModernUXOff, TenantDefaultTimeZoneId and AvailableManagedPathsForSiteCreation. Currently, there are no parameters for this cmdlet. You must have the SharePoint Online admin or Global admin role to run the cmdlet. EXAMPLES EXAMPLE 1 Get-PnPTenantInternalSetting This example returns internal tenant settings. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantRecycleBinItem.html": {
    "href": "cmdlets/Get-PnPTenantRecycleBinItem.html",
    "title": "Get-PnPTenantRecycleBinItem | PnP PowerShell",
    "keywords": "Get-PnPTenantRecycleBinItem SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns all modern and classic site collections in the tenant scoped recycle bin SYNTAX Get-PnPTenantRecycleBinItem [-Connection <PnPConnection>] DESCRIPTION This command will return all the items in the tenant recycle bin for the Office 365 tenant you are connected to. If you are not a SharePoint Tenant Admin connect to the site where you want to manage the recycle bin and use Get-PnPRecycleBinItem. EXAMPLES EXAMPLE 1 Get-PnPTenantRecycleBinItem Returns all modern and classic site collections in the tenant scoped recycle bin PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantRestrictedSearchAllowedList.html": {
    "href": "cmdlets/Get-PnPTenantRestrictedSearchAllowedList.html",
    "title": "Get-PnPTenantRestrictedSearchAllowedList | PnP PowerShell",
    "keywords": "Get-PnPTenantRestrictedSearchAllowedList SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site and Copilot for M365 license Retrieves existing list of URLs in the allowed list. SYNTAX Get-PnPTenantRestrictedSearchAllowedList [-Connection <PnPConnection>] DESCRIPTION This command will return all the existing list of URLs in the allowed list EXAMPLES EXAMPLE 1 Get-PnPTenantRestrictedSearchAllowedList Retrieves existing list of URLs in the allowed list PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantRestrictedSearchMode.html": {
    "href": "cmdlets/Get-PnPTenantRestrictedSearchMode.html",
    "title": "Get-PnPTenantRestrictedSearchMode | PnP PowerShell",
    "keywords": "Get-PnPTenantRestrictedSearchMode SYNOPSIS Required Permissions Global Administrator or SharePoint Administrator Returns Restricted Search mode. SYNTAX Get-PnPTenantRestrictedSearchMode [-Connection <PnPConnection>] DESCRIPTION Returns Restricted Search mode. Restricted SharePoint Search is disabled by default. EXAMPLES EXAMPLE 1 Get-PnPTenantRestrictedSearchMode Returns Restricted Search mode. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantRetentionLabel.html": {
    "href": "cmdlets/Get-PnPTenantRetentionLabel.html",
    "title": "Get-PnPTenantRetentionLabel | PnP PowerShell",
    "keywords": "Get-PnPTenantRetentionLabel SYNOPSIS Gets the Microsoft Purview retention labels that are available within the tenant SYNTAX Get-PnPTenantRetentionLabel [-Identity <Guid>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows retrieval of the available Microsoft Purview retention labels in the currently connected tenant. You can retrieve all the labels or a specific label. EXAMPLES EXAMPLE 1 Get-PnPTenantRetentionLabel Returns all the Microsoft Purview retention labels that exist on the tenant EXAMPLE 3 Get-PnPTenantRetentionLabel -Identity 58f77809-9738-5080-90f1-gh7afeba2995 Returns a specific Microsoft Purview retention label by its id PARAMETERS -Identity The Id of the Microsoft Purview retention label to retrieve Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Get-PnPTenantSequence.html": {
    "href": "cmdlets/Get-PnPTenantSequence.html",
    "title": "Get-PnPTenantSequence | PnP PowerShell",
    "keywords": "Get-PnPTenantSequence SYNOPSIS Returns one ore more provisioning sequence object(s) from a tenant template SYNTAX Get-PnPTenantSequence -Template <ProvisioningHierarchy> [-Identity <ProvisioningSequencePipeBind>] DESCRIPTION Allows to retrieve provisioning sequence objects from a tenant template. By using Identity option it is possible to retrieve a specific provisioning sequence object. EXAMPLES EXAMPLE 1 Get-PnPTenantSequence -Template $myTemplateObject Returns all sequences from the specified tenant template EXAMPLE 2 Get-PnPTenantSequence -Template $myTemplateObject -Identity \"mysequence\" Returns the specified sequence from the specified tenant template PARAMETERS -Identity Optional Id of the sequence Type: ProvisioningSequencePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Template The template to retrieve the sequence from Type: ProvisioningHierarchy Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantSequenceSite.html": {
    "href": "cmdlets/Get-PnPTenantSequenceSite.html",
    "title": "Get-PnPTenantSequenceSite | PnP PowerShell",
    "keywords": "Get-PnPTenantSequenceSite SYNOPSIS Returns one or more sites from a tenant template SYNTAX Get-PnPTenantSequenceSite -Sequence <ProvisioningSequence> [-Identity <ProvisioningSitePipeBind>] DESCRIPTION Allows to retrieve list of sites from tenant template sequence. EXAMPLES EXAMPLE 1 Get-PnPTenantSequenceSite -Sequence $mysequence Returns all sites from the specified sequence EXAMPLE 2 Get-PnPTenantSequenceSite -Sequence $mysequence -Identity 8058ea99-af7b-4bb7-b12a-78f93398041e Returns the specified site from the specified sequence PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Optional Id of the site Type: ProvisioningSitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Sequence The sequence to retrieve the site from Type: ProvisioningSequence Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantServicePrincipal.html": {
    "href": "cmdlets/Get-PnPTenantServicePrincipal.html",
    "title": "Get-PnPTenantServicePrincipal | PnP PowerShell",
    "keywords": "Get-PnPTenantServicePrincipal SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the current tenant's \"SharePoint Online Client\" service principal. SYNTAX Get-PnPTenantServicePrincipal [-Connection <PnPConnection>] DESCRIPTION Returns the current tenant's \"SharePoint Online Client\" service principal. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantServicePrincipalPermissionGrants.html": {
    "href": "cmdlets/Get-PnPTenantServicePrincipalPermissionGrants.html",
    "title": "Get-PnPTenantServicePrincipalPermissionGrants | PnP PowerShell",
    "keywords": "Get-PnPTenantServicePrincipalPermissionGrants SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Gets the collection of permission grants for the \"SharePoint Online Client\" service principal SYNTAX Get-PnPTenantServicePrincipalPermissionGrants [-Connection <PnPConnection>] DESCRIPTION Gets the collection of permission grants for the \"SharePoint Online Client\" service principal. A permission grant contains the following properties: ClientId: The objectId of the service principal granted consent to impersonate the user when accessing the resource(represented by the resourceId). ConsentType: Whether consent was provided by the administrator on behalf of the organization or whether consent was provided by an individual.The possible values are \"AllPrincipals\" or \"Principal\". ObjectId: The unique identifier for the permission grant. Resource: The resource to which access has been granted (Coming soon) ResourceId: The objectId of the resource service principal to which access has been granted. Scope: The value of the scope claim that the resource application should expect in the OAuth 2.0 access token. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantServicePrincipalPermissionRequests.html": {
    "href": "cmdlets/Get-PnPTenantServicePrincipalPermissionRequests.html",
    "title": "Get-PnPTenantServicePrincipalPermissionRequests | PnP PowerShell",
    "keywords": "Get-PnPTenantServicePrincipalPermissionRequests SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Gets the collection of permission requests for the \"SharePoint Online Client\" service principal SYNTAX Get-PnPTenantServicePrincipalPermissionRequests [-Connection <PnPConnection>] DESCRIPTION Gets the collection of permission requests for the \"SharePoint Online Client\" service principal. Permission request object A permission request contains the following properties: Id: The identifier of the request. Resource: The resource that the application requires access to. Scope: The value of the scope claim that the resource application should expect in the OAuth 2.0 access token. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantSite.html": {
    "href": "cmdlets/Get-PnPTenantSite.html",
    "title": "Get-PnPTenantSite | PnP PowerShell",
    "keywords": "Get-PnPTenantSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieves site collection information SYNTAX By Site Get-PnPTenantSite [-Identity] <string> [-Detailed] [-DisableSharingForNonOwnersStatus] [-Connection <PnPConnection>] All Sites Get-PnPTenantSite [-Template <string>] [-Detailed] [-IncludeOneDriveSites] [-GroupIdDefined <Boolean>] [-Filter <string>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows for retrieval of site collection information through the SharePoint Online tenant site. It requires having SharePoint Online administrator access. EXAMPLES EXAMPLE 1 Get-PnPTenantSite Returns all site collections except the OneDrive for Business sites with basic information on them EXAMPLE 2 Get-PnPTenantSite -Detailed Returns all site collections except the OneDrive for Business sites with the full details on them EXAMPLE 3 Get-PnPTenantSite -IncludeOneDriveSites Returns all site collections including all OneDrive for Business sites EXAMPLE 4 Get-PnPTenantSite -IncludeOneDriveSites -Filter \"Url -like '-my.sharepoint.com/personal/'\" Returns only OneDrive for Business site collections EXAMPLE 5 Get-PnPTenantSite -Identity \"http://tenant.sharepoint.com/sites/projects\" Returns information of the site collection with the provided url EXAMPLE 6 Get-PnPTenantSite -Identity 7e8a6f56-92fe-4b22-9364-41799e579e8a Returns information of the site collection with the provided Id EXAMPLE 7 Get-PnPTenantSite -Template SITEPAGEPUBLISHING#0 Returns all Communication site collections EXAMPLE 8 Get-PnPTenantSite -Filter \"Url -like 'sales'\" Returns all site collections having 'sales' in their url EXAMPLE 9 Get-PnPTenantSite -GroupIdDefined $true Returns all site collections which have an underlying Microsoft 365 Group PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Detailed By default, not all returned attributes are populated. This switch populates all attributes. It can take several seconds to run. Without this, some attributes will show default values that may not be correct. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableSharingForNonOwnersStatus This parameter will include the status for non owners sharing on the returned object. By default the value for this property is null. Type: SwitchParameter Parameter Sets: By Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Filter Specifies the script block of the server-side filter to apply. See https://learn.microsoft.com/powershell/module/sharepoint-online/get-sposite?view=sharepoint-ps#:~:text=SharePoint%20Online-,%2DFilter,-Specifies%20the%20script. Type: String Parameter Sets: All sites Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GroupIdDefined If specified allows you to filter on sites that have an underlying Microsoft 365 group defined. Type: Boolean Parameter Sets: All sites Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeOneDriveSites By default, the OneDrives are not returned. This switch includes all OneDrives. Type: SwitchParameter Parameter Sets: All Sites Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template By default, all sites will be returned. Specify a template value alike \"STS#0\" here to filter on the template Type: String Parameter Sets: All Sites Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The URL or Id of the site collection. Requesting a site collection by its Id only works for modern SharePoint Online site collections. Type: String Parameter Sets: By Site Aliases: Url Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantSyncClientRestriction.html": {
    "href": "cmdlets/Get-PnPTenantSyncClientRestriction.html",
    "title": "Get-PnPTenantSyncClientRestriction | PnP PowerShell",
    "keywords": "Get-PnPTenantSyncClientRestriction SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns organization-level OneDrive synchronization restriction settings SYNTAX Get-PnPTenantSyncClientRestriction [-Connection <PnPConnection>] DESCRIPTION Returns organization-level OneDrive synchronization restriction properties such as BlockMacSync, OptOutOfGrooveBlock, and TenantRestrictionEnabled. Currently, there are no parameters for this cmdlet. You must have the SharePoint Online admin or Global admin role to run the cmdlet. EXAMPLES EXAMPLE 1 Get-PnPTenantSyncClientRestriction This example returns all tenant OneDrive synchronization restriction settings PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantTemplate.html": {
    "href": "cmdlets/Get-PnPTenantTemplate.html",
    "title": "Get-PnPTenantTemplate | PnP PowerShell",
    "keywords": "Get-PnPTenantTemplate SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Generates a provisioning tenant template from a site. If the site is a hubsite any connected site will be included. SYNTAX Extract a template to a file Get-PnPTenantTemplate [-SiteUrl <String>] [-Out <String>] [-Force] [-Configuration <ExtractConfigurationPipeBind>] [-Connection <PnPConnection>] Extract a template as an object Get-PnPTenantTemplate [-SiteUrl <String>] [-AsInstance] [-Configuration <ExtractConfigurationPipeBind>] [-Connection <PnPConnection>] DESCRIPTION Allows to generate a provisioning tenant template from a site. If the site is a hubsite any connected site will be included. EXAMPLES EXAMPLE 1 Get-PnPTenantTemplate -Out tenanttemplate.xml Extracts a tenant template of the currently connected to site. EXAMPLE 2 Get-PnPTenantTemplate -Out tenanttemplate.xml -SiteUrl https://m365x123456.sharepoint.com/sites/HomeSite Extracts a tenant template for the site https://m365x123456.sharepoint.com/sites/HomeSite and places the schema XML into the file \"tenanttemplate.xml\". EXAMPLE 3 Get-PnPTenantTemplate -Out tenanttemplate.xml -SiteUrl https://m365x123456.sharepoint.com/sites/HomeSite -Force Extracts a tenant template for the site https://m365x123456.sharepoint.com/sites/HomeSite and places the schema XML into the file \"tenanttemplate.xml\". The xml file will be overwritten if it already exists. PARAMETERS -AsInstance Returns the template as an in-memory object, which is an instance of the ProvisioningHierarchy type of the PnP Core Component. It cannot be used together with the -Out parameter. Type: SwitchParameter Parameter Sets: Extract a template as an object Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Configuration Specify a JSON configuration file to configure the extraction progress. Type: ExtractConfigurationPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: Extract a template to a file Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out Filename to write to, optionally including full path Type: String Parameter Sets: Extract a template to a file Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteUrl The URL of the site collection to create a tenant template out of. If omitted, the currently connected to site will be used. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantTheme.html": {
    "href": "cmdlets/Get-PnPTenantTheme.html",
    "title": "Get-PnPTenantTheme | PnP PowerShell",
    "keywords": "Get-PnPTenantTheme SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns all or a specific theme SYNTAX Get-PnPTenantTheme [[-Name] <String>] [-AsJson] [-Connection <PnPConnection>] DESCRIPTION Returns all or a specific tenant theme. EXAMPLES EXAMPLE 1 Get-PnPTenantTheme Returns all themes. EXAMPLE 2 Get-PnPTenantTheme -Name \"MyCompanyTheme\" Returns the specified theme. EXAMPLE 3 Get-PnPTenantTheme -Name \"MyCompanyTheme\" -AsJson Returns the specified theme as json. PARAMETERS -AsJson The theme is returned in json format. Type: SwitchParameter Parameter Sets: (All) Required: False Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The name of the theme to retrieve. Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTerm.html": {
    "href": "cmdlets/Get-PnPTerm.html",
    "title": "Get-PnPTerm | PnP PowerShell",
    "keywords": "Get-PnPTerm SYNOPSIS Returns a Term Store Term. SYNTAX By Term Id Get-PnPTerm -Identity <Guid> [-TermStore <Guid>] [-IncludeChildTerms] [-Connection <PnPConnection>] [-Includes <String[]>] By Term Name Get-PnPTerm -Identity <Name> -TermSet <Guid|Name> -TermGroup <Guid|Name> [-TermStore <Guid>] [-Recursive] [-IncludeChildTerms][-IncludeDeprecated] [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION Retries a Term Store Term. EXAMPLES EXAMPLE 1 Get-PnPTerm -TermSet \"Departments\" -TermGroup \"Corporate\" Returns all term in the termset \"Departments\" which is in the group \"Corporate\" from the site collection termstore EXAMPLE 2 Get-PnPTerm -Identity \"Finance\" -TermSet \"Departments\" -TermGroup \"Corporate\" Returns the term named \"Finance\" in the termset \"Departments\" from the termgroup called \"Corporate\" from the site collection termstore EXAMPLE 3 Get-PnPTerm -Identity ab2af486-e097-4b4a-9444-527b251f1f8d -TermSet \"Departments\" -TermGroup \"Corporate\" Returns the term named with the given id, from the \"Departments\" termset in a term group called \"Corporate\" from the site collection termstore EXAMPLE 4 Get-PnPTerm -Identity \"Small Finance\" -TermSet \"Departments\" -TermGroup \"Corporate\" -Recursive Returns the term named \"Small Finance\", from the \"Departments\" termset in a term group called \"Corporate\" from the site collection termstore even if it is a subterm below \"Finance\" EXAMPLE 5 $term = Get-PnPTerm -Identity \"Small Finance\" -TermSet \"Departments\" -TermGroup \"Corporate\" -Includes Labels $term.Labels Returns all the localized labels for the term named \"Small Finance\", from the \"Departments\" termset in a term group called \"Corporate\" EXAMPLE 6 Get-PnPTerm -Identity \"Small Finance\" -TermSet \"Departments\" -TermGroup \"Corporate\" -Recursive -IncludeDeprecated Returns the deprecated term named \"Small Finance\", from the \"Departments\" termset in a term group called \"Corporate\" from the site collection termstore even if it is a subterm below \"Finance\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Id or Name of a Term Type: GenericObjectNameIdPipeBind<Microsoft.SharePoint.Client.Taxonomy.Term> Parameter Sets: All Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeChildTerms Includes the hierarchy of child terms if available Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Recursive Find the first term recursively matching the label in a term hierarchy. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermGroup Name of the termgroup to check. Type: TermGroupPipeBind Parameter Sets: By Termset Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermSet Name of the termset to check. Type: TaxonomyItemPipeBind<TermSet> Parameter Sets: By Termset Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: GenericObjectNameIdPipeBind<TermStore> Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeDeprecated Includes the deprecated terms if available. Type: SwitchParameter Parameter Sets: By Term name Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned terms which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTermGroup.html": {
    "href": "cmdlets/Get-PnPTermGroup.html",
    "title": "Get-PnPTermGroup | PnP PowerShell",
    "keywords": "Get-PnPTermGroup SYNOPSIS Returns a taxonomy term group SYNTAX Get-PnPTermGroup [-Identity <TaxonomyTermGroupPipeBind>] [-TermStore <TaxonomyTermStorePipeBind>] [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION Allows to retrieve a taxonomy term group. EXAMPLES EXAMPLE 1 Get-PnPTermGroup Returns all Term Groups in the site collection termstore EXAMPLE 2 Get-PnPTermGroup -Identity \"Departments\" Returns the termgroup named \"Departments\" from the site collection termstore EXAMPLE 3 Get-PnPTermGroup -Identity ab2af486-e097-4b4a-9444-527b251f1f8d Returns the termgroup with the given ID from the site collection termstore PARAMETERS -Identity Name of the taxonomy term group to retrieve. Type: TaxonomyTermGroupPipeBind Parameter Sets: (All) Aliases: GroupName Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: TermStoreName Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned term group(s) which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTermLabel.html": {
    "href": "cmdlets/Get-PnPTermLabel.html",
    "title": "Get-PnPTermLabel | PnP PowerShell",
    "keywords": "Get-PnPTermLabel SYNOPSIS Returns all or a specific translation label for a term. SYNTAX By Term Id Get-PnPTermLabel -Term <Guid> [-Lcid <Int32>] [-TermStore <TaxonomyTermStorePipeBind>] By Term Name Get-PnPTermLabel -Term <String> [-Lcid <Int32>] -TermSet <TaxonomyTermSetPipeBind> -TermGroup <TaxonomyTermGroupPipeBind> [-TermStore <TaxonomyTermStorePipeBind>] DESCRIPTION This cmdlets allows to retrieve all or a specific translation label for a term EXAMPLES Example 1 Get-PnPTermLabel -Term af8601d6-d925-46dd-af7b-4a58515ffd83 Returns all translation labels for a term Example 2 Get-PnPTermLabel -Term af8601d6-d925-46dd-af7b-4a58515ffd83 -Lcid 1033 Returns all translation labels for a term for a specific language Example 3 Get-PnPTermLabel -Term \"Marketing\" -TermSet \"Departments\" -TermGroup \"Corporate\" Returns all translation labels for a term PARAMETERS -Lcid Specify the codepage value for a language, for instance 1033 for English. Type: Int32 Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Term The term to retieve the labels for Type: Guid Parameter Sets: By Term Id Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False Type: String Parameter Sets: By Termset Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermGroup The TermGroup containing the termset, required when referring to the term by name. Type: TaxonomyTermGroupPipeBind Parameter Sets: By Termset Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermSet The TermSet to containing the term, required when referring to the term by name. Type: TaxonomyTermSetPipeBind Parameter Sets: By Termset Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTermSet.html": {
    "href": "cmdlets/Get-PnPTermSet.html",
    "title": "Get-PnPTermSet | PnP PowerShell",
    "keywords": "Get-PnPTermSet SYNOPSIS Returns a taxonomy term set SYNTAX Get-PnPTermSet [-Identity <TaxonomyTermSetPipeBind>] [-TermGroup] <TaxonomyTermGroupPipeBind> [-TermStore <TaxonomyTermStorePipeBind>] [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION This cmdlet returns a termset from the taxonomy store. EXAMPLES EXAMPLE 1 Get-PnPTermSet -TermGroup \"Corporate\" Returns all termset's in the group \"Corporate\" from the site collection termstore EXAMPLE 2 Get-PnPTermSet -Identity \"Departments\" -TermGroup \"Corporate\" Returns the termset named \"Departments\" from the termgroup called \"Corporate\" from the site collection termstore EXAMPLE 3 Get-PnPTermSet -Identity ab2af486-e097-4b4a-9444-527b251f1f8d -TermGroup \"Corporate Returns the termset with the given id from the termgroup called \"Corporate\" from the site collection termstore PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Id or Name of a termset Type: TaxonomyTermSetPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermGroup Name of the term group to check. Type: TaxonomyTermGroupPipeBind Parameter Sets: (All) Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned term set which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTheme.html": {
    "href": "cmdlets/Get-PnPTheme.html",
    "title": "Get-PnPTheme | PnP PowerShell",
    "keywords": "Get-PnPTheme SYNOPSIS Returns the current theme/composed look of the current web. SYNTAX Get-PnPTheme [-DetectCurrentComposedLook] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve current theme/composed look of the current web. EXAMPLES EXAMPLE 1 Get-PnPTheme Returns the current composed look of the current web. EXAMPLE 2 Get-PnPTheme -DetectCurrentComposedLook Returns the current composed look of the current web, and will try to detect the currently applied composed look based upon the actual site. Without this switch the cmdlet will first check for the presence of a property bag variable called _PnP_SiteTemplateComposedLookInfo that contains composed look information when applied through the provisioning engine or the Set-PnPTheme cmdlet. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DetectCurrentComposedLook Specify this switch to not use the PnP Provisioning engine based composed look information but try to detect the current composed look as is. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTimeZoneId.html": {
    "href": "cmdlets/Get-PnPTimeZoneId.html",
    "title": "Get-PnPTimeZoneId | PnP PowerShell",
    "keywords": "Get-PnPTimeZoneId SYNOPSIS Returns a time zone ID SYNTAX Get-PnPTimeZoneId [[-Match] <String>] DESCRIPTION In order to create a new classic site you need to specify the timezone this site will use. Use the cmdlet to retrieve a list of possible values. EXAMPLES EXAMPLE 1 Get-PnPTimeZoneId This will return all time zone IDs in use by Office 365. EXAMPLE 2 Get-PnPTimeZoneId -Match Stockholm This will return the time zone IDs for Stockholm PARAMETERS -Match A string to search for like 'Stockholm' Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTodoList.html": {
    "href": "cmdlets/Get-PnPTodoList.html",
    "title": "Get-PnPTodoList | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPTodoList SYNOPSIS Required Permissions Microsoft Graph API : One of Tasks.Read, Tasks.ReadWrite, Tasks.Read.All Gets one Todo list or all Todo lists. SYNTAX Get-PnPTodoList [[-Identity] <String>] [-[User] <AzureADUserPipeBind>] DESCRIPTION Use the cmdlet to retrieve all Todo lists or a specific Todo list. EXAMPLES EXAMPLE 1 Get-PnPTodoList This will return all your (logged-in user) todo lists. EXAMPLE 2 Get-PnPTodoList -Identity \"AAMkAGU4MGE1OTRiLTUzMGEtNDRjZi05ZmVmLWFiMTkyYmQxODRjOQAuAAAAAACQV8RStyZCQJ4ydzjIK5HmAQD2LFcxdwYMRqbupn47nEYYAASUnLfyAAA=\" This will return your (logged-in user) todo list with the specified Id. EXAMPLE 3 Get-PnPTodoList -User john@doe.com This will return the todo lists for the user john. EXAMPLE 4 Get-PnPTodoList -User john@doe.com -Identity \"AAMkAGU4MGE1OTRiLTUzMGEtNDRjZi05ZmVmLWFiMTkyYmQxODRjOQAuAAAAAACQV8RStyZCQJ4ydzjIK5HmAQD2LFcxdwYMRqbupn47nEYYAASUnLfyAAA=\" This will return the todo list for the user john with specified Id. PARAMETERS -Identity Id of the Todo list. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User The UPN, Id or instance of an Azure AD user for which you would like to retrieve the todo list available to this user Type: AzureADUserPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPUPABulkImportStatus.html": {
    "href": "cmdlets/Get-PnPUPABulkImportStatus.html",
    "title": "Get-PnPUPABulkImportStatus | PnP PowerShell",
    "keywords": "Get-PnPUPABulkImportStatus SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Get user profile bulk import status. SYNTAX Get-PnPUPABulkImportStatus [-JobId <Guid>] [-IncludeErrorDetails] [-Connection <PnPConnection>] DESCRIPTION Retrieve information about the status of submitted user profile bulk upload jobs. Possible statuses are defined in the ImportProfilePropertiesJobState enumeration: Unknown Submitted Processing Queued Succeeded Error EXAMPLES EXAMPLE 1 Get-PnPUPABulkImportStatus This will list the status of all submitted user profile bulk import jobs. EXAMPLE 2 Get-PnPUPABulkImportStatus -IncludeErrorDetails This will list the status of all submitted user profile bulk import jobs, and if it contains an error it will include the error log messages if present. EXAMPLE 3 Get-PnPUPABulkImportStatus -JobId <guid> This will list the status for the specified import job. EXAMPLE 4 Get-PnPUPABulkImportStatus -JobId <guid> -IncludeErrorDetails This will list the status for the specified import job, and if it contains an error it will include the error log messages if present. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeErrorDetails Include error log details Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -JobId The instance id of the job Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPUnfurlLink.html": {
    "href": "cmdlets/Get-PnPUnfurlLink.html",
    "title": "Get-PnPUnfurlLink | PnP PowerShell",
    "keywords": "Get-PnPUnfurlLink SYNOPSIS To unfurl a link for a given resource such as file, folder, list items etc. SYNTAX Get-PnPUnfurlLink -Url <String> DESCRIPTION Creates a new organization sharing link for a file. EXAMPLES EXAMPLE 1 Get-PnPUnfurlLink -Url \"https://contoso.sharepoint.com/:u:/s/testsitecol/ERs6pDuyD95LpUSUsJxi1EIBr9FMEYVBvMcs_B7cPdNPgQ?e=ZL3DPe\" This will fetch the information of the resource to be unfurled. SharePoint supports many different types of links, you have direct links to lists, libraries and files, but there's also sharing links that user's have created for resources in SharePoint. Whenever your application needs to understand more about a given link we call that unfurling. A common scenario is where you allow your users to paste a link and your application gets the needed information to present the content behind the link (e.g. when you paste a link in Teams you'll you'll see the file name, thumbnail and more) PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The URL of the resource to be unfurled. For more information, you can visit the PnP Core SDK documentation Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPUnifiedAuditLog.html": {
    "href": "cmdlets/Get-PnPUnifiedAuditLog.html",
    "title": "Get-PnPUnifiedAuditLog | PnP PowerShell",
    "keywords": "Get-PnPUnifiedAuditLog SYNOPSIS Required Permissions Microsoft Office 365 Management API: ActivityFeed.Read, Microsoft Office 365 Management API: ActivityFeed.ReadDlp, Microsoft Office 365 Management API: ActivityReports.Read, Microsoft Office 365 Management API: ServiceHealth.Read and Microsoft Office 365 Management API:ThreatIntelligence.Read Gets unified audit logs from the Office 365 Management API. Requires the Azure Entra application permission 'ActivityFeed.Read', 'ActivityFeed.ReadDlp', 'ActivityReports.Read', 'ServiceHealth.Read' and 'ThreatIntelligence.Read'. Before you can access audit log data, you must enable unified audit logging for your Microsoft 365 tenant. For instructions, check out the page Turn auditing on or off. When running this command for the first time for a certain content type, a subscription for this content type is created. It can take up to 12 hours for the first content blobs to become available for that subscription. Retrieving audit logs is an intensive process, especially for large or active tenants. In this case it may take some time to retrieve all audit logs. SYNTAX Get-PnPUnifiedAuditLog [-ContentType <AuditContentType>] [-StartTime <DateTime>] [-EndTime <DateTime>] DESCRIPTION Allows to retrieve unified audit logs from the Office 365 Management API. EXAMPLES EXAMPLE 1 Get-PnPUnifiedAuditLog -ContentType SharePoint -StartTime (Get-Date -asUtc).AddDays(-2) -EndTime (Get-Date -asUtc).AddDays(-1) Retrieves the audit logs of SharePoint happening between the current time yesterday and the current time the day before yesterday PARAMETERS -ContentType Content type of logs to be retrieved, should be one of the following: AzureActiveDirectory, Exchange, SharePoint, General, DLP. Type: AuditContentType Parameter Sets: (All) Accepted values: AzureActiveDirectory, Exchange, SharePoint, General, DLP Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EndTime UTC end time of logs to be retrieved. Start time and end time must both be specified (or both omitted) and must be less than or equal to 24 hours apart. If passed as a string this should be defined as a valid ISO 8601 string (2024-01-16T18:28:48.6964197Z). If you don't include a timestamp in the value, the default timestamp is 12:00 AM (midnight) on the specified date. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartTime UTC start time of logs to be retrieved. Start time and end time must both be specified (or both omitted) and must be less than or equal to 24 hours apart, with the start time prior to end time and start time no more than 7 days in the past. If passed as a string this should be defined as a valid ISO 8601 string (2024-01-16T18:28:48.6964197Z). If you don't include a timestamp in the value, the default timestamp is 12:00 AM (midnight) on the specified date. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPUser.html": {
    "href": "cmdlets/Get-PnPUser.html",
    "title": "Get-PnPUser | PnP PowerShell",
    "keywords": "Get-PnPUser SYNOPSIS Returns site users of current web SYNTAX Identity based request (Default) Get-PnPUser [-Identity <UserPipeBind>] [-Connection <PnPConnection>] With rights assigned Get-PnPUser [-WithRightsAssigned] [-Connection <PnPConnection>] With rights assigned detailed Get-PnPUser [-WithRightsAssignedDetailed] [-Connection <PnPConnection>] DESCRIPTION This command will return all users that exist in the current site collection's User Information List, optionally identifying their current permissions to this site EXAMPLES EXAMPLE 1 Get-PnPUser Returns all users from the User Information List of the current site collection regardless if they currently have rights to access the current site EXAMPLE 2 Get-PnPUser -Identity 23 Returns the user with Id 23 from the User Information List of the current site collection EXAMPLE 3 Get-PnPUser -Identity \"i:0#.f|membership|user@tenant.onmicrosoft.com\" Returns the user with LoginName i:0#.f|membership|user@tenant.onmicrosoft.com from the User Information List of the current site collection EXAMPLE 4 Get-PnPUser | ? Email -eq \"user@tenant.onmicrosoft.com\" Returns the user with e-mail address user@tenant.onmicrosoft.com from the User Information List of the current site collection EXAMPLE 5 Get-PnPUser -WithRightsAssigned Returns only those users from the User Information List of the current site collection who currently have any kind of access rights given either directly to the user or Active Directory Group or given to the user or Active Directory Group via membership of a SharePoint Group to the current site EXAMPLE 6 Get-PnPUser -WithRightsAssigned -Web subsite1 Returns only those users from the User Information List of the current site collection who currently have any kind of access rights given either directly to the user or Active Directory Group or given to the user or Active Directory Group via membership of a SharePoint Group to subsite 'subsite1' EXAMPLE 7 Get-PnPUser -WithRightsAssignedDetailed Returns all users who have been granted explicit access to the current site, lists and list items PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity User ID or login name Type: UserPipeBind Parameter Sets: Identity based request Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WithRightsAssigned If provided, only users that currently have any kinds of access rights assigned to the current site collection will be returned. Otherwise all users, even those who previously had rights assigned, but not anymore at the moment, will be returned as the information is pulled from the User Information List. Only works if you don't provide an -Identity. Type: SwitchParameter Parameter Sets: With rights assigned Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WithRightsAssignedDetailed If provided, only users that currently have any specific kind of access rights assigned to the current site, lists or list items/documents will be returned. Otherwise all users, even those who previously had rights assigned, but not anymore at the moment, will be returned as the information is pulled from the User Information List. Only works if you don't provide an -Identity. Type: SwitchParameter Parameter Sets: With rights assigned detailed Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPUserOneDriveQuota.html": {
    "href": "cmdlets/Get-PnPUserOneDriveQuota.html",
    "title": "Get-PnPUserOneDriveQuota | PnP PowerShell",
    "keywords": "Get-PnPUserOneDriveQuota SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieves the current quota set on the OneDrive for Business site for a specific user in bytes. SYNTAX Get-PnPUserOneDriveQuota [-Account] <String> [-Connection <PnPConnection>] DESCRIPTION This command allows you to request the quota set on the OneDrive for Business site of a specific user. EXAMPLES EXAMPLE 1 Get-PnPUserOneDriveQuota -Account 'user@domain.com' Returns the quota set on the OneDrive for Business site for the specified user in bytes EXAMPLE 2 (Get-PnPUserOneDriveQuota -Account 'user@domain.com') / 1gb Returns the quota set on the OneDrive for Business site for the specified user in gigabytes PARAMETERS -Account The account of the user, formatted either as a login name, or as a claims identity, e.g. i:0#.f|membership|user@domain.com Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPUserProfilePhoto.html": {
    "href": "cmdlets/Get-PnPUserProfilePhoto.html",
    "title": "Get-PnPUserProfilePhoto | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPUserProfilePhoto SYNOPSIS Required Permissions Microsoft Graph API: One of ProfilePhoto.ReadWrite.All, User.ReadWrite or User.ReadWrite.All Gets the profile picture of a user. SYNTAX Get-PnPUserProfilePhoto -Identity <AzureADUserPipeBind> [-Filename <String>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet downloads the user profile photo to the specified path and filename. If no filename has been specified it will default to the Display Name of the user with the either the extension .png or .jpeg depending on the format of the file. EXAMPLES EXAMPLE 1 Get-PnPUserProfilePhoto -Identity \"john@contoso.onmicrosoft.com\" Downloads the photo for the user specified to the current folder. EXAMPLE 2 Get-PnPUserProfilePhoto -Identity \"john@contoso.onmicrosoft.com\" -Filename \"john.png\" Downloads the photo for the user specified to the current folder and will name the file 'john.png'. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Filename The path to the image file to save. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the user to remove. This can be the UPN, the GUID or an instance of the user. Type: AzureADUserPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPUserProfileProperty.html": {
    "href": "cmdlets/Get-PnPUserProfileProperty.html",
    "title": "Get-PnPUserProfileProperty | PnP PowerShell",
    "keywords": "Get-PnPUserProfileProperty SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site You must connect to the tenant admin website (https://<tenant>-admin.sharepoint.com) with Connect-PnPOnline in order to use this cmdlet. SYNTAX Get-PnPUserProfileProperty -Account <String[]> [-Properties <String[]>] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION Requires a connection to a SharePoint Tenant Admin site. EXAMPLES EXAMPLE 1 Get-PnPUserProfileProperty -Account 'user@domain.com' Returns the profile properties for the specified user EXAMPLE 2 Get-PnPUserProfileProperty -Account 'user@domain.com','user2@domain.com' Returns the profile properties for the specified users EXAMPLE 3 Get-PnPUserProfileProperty -Account 'user@domain.com' -Properties 'FirstName','LastName' Returns the FirstName and LastName profile properties for the specified user PARAMETERS -Account The account of the user, formatted either as a login name, or as a claims identity, e.g. i:0#.f|membership|user@domain.com Type: String[] Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Properties The user profile properties that are requested for the user e.g. FirstName, LastName etc. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPView.html": {
    "href": "cmdlets/Get-PnPView.html",
    "title": "Get-PnPView | PnP PowerShell",
    "keywords": "Get-PnPView SYNOPSIS Returns one or all views from a list SYNTAX Get-PnPView [-List] <ListPipeBind> [-Identity <ViewPipeBind>] [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION Allows to retrieve list of views from a list. By using Identity option it is possible to retrieve a specific view. EXAMPLES EXAMPLE 1 Get-PnPView -List \"Demo List\" Returns all views associated from the specified list EXAMPLE 2 Get-PnPView -List \"Demo List\" -Identity \"Demo View\" Returns the view called \"Demo View\" from the specified list EXAMPLE 3 Get-PnPView -List \"Demo List\" -Identity \"5275148a-6c6c-43d8-999a-d2186989a661\" Returns the view with the specified ID from the specified list PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID or name of the view Type: ViewPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned list view which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPVivaConnectionsDashboardACE.html": {
    "href": "cmdlets/Get-PnPVivaConnectionsDashboardACE.html",
    "title": "Get-PnPVivaConnectionsDashboardACE | PnP PowerShell",
    "keywords": "Get-PnPVivaConnectionsDashboardACE SYNOPSIS Returns the Adaptive card extensions from the Viva connections dashboard page. This requires that you connect to a SharePoint Home site and have configured the Viva connections page. SYNTAX Get-PnPVivaConnectionsDashboardACE [-Identity <VivaACEPipeBind>] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve the adaptive card extensions from the Viva connections dashboard page. EXAMPLES EXAMPLE 1 Get-PnPVivaConnectionsDashboardACE Returns all the adaptive card extensions present in the Viva Connections dashboard page. EXAMPLE 2 Get-PnPVivaConnectionsDashboardACE -Identity \"58108715-185e-4214-8786-01218e7ab9ef\" Returns the adaptive card extensions with specified Instance Id from the Viva Connections dashboard page. PARAMETERS -Identity The instance Id of the Adaptive Card extension present on the Viva connections dashboard page. This parameter takes either the Instance Id, the Id or the Title property. But as the latter two are not necessarily unique within the dashboard, the preferred value is to use the Instance Id of the ACE. Type: VivaACEPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPVivaEngageCommunity.html": {
    "href": "cmdlets/Get-PnPVivaEngageCommunity.html",
    "title": "Get-PnPVivaEngageCommunity | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPVivaEngageCommunity SYNOPSIS Returns the list of Viva engage communities in the tenant. SYNTAX Get-PnPVivaEngageCommunity [[-Identity] <string>] [-Connection <PnPConnection>] DESCRIPTION Allows to list Viva engage communities. EXAMPLES EXAMPLE 1 Get-PnPVivaEngageCommunity This will return list of all Viva Engage communities in the tenant EXAMPLE 2 Get-PnPVivaEngageCommunity -Identity \"eyJfdHlwZSI6Ikdyb3VwIiwiaWQiOiIyMTI0ODA3MTI3MDQifQ\" This will return list of the Viva Engage community in the tenant with the specified Id. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Id of the Viva engage community. Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPWeb.html": {
    "href": "cmdlets/Get-PnPWeb.html",
    "title": "Get-PnPWeb | PnP PowerShell",
    "keywords": "Get-PnPWeb SYNOPSIS Returns the current web object SYNTAX Get-PnPWeb [[-Identity] <WebPipeBind>] [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION Allows to retrieve the current web. EXAMPLES EXAMPLE 1 Get-PnPWeb This will return the current web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The guid of the web or web object Type: WebPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned web which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPWebHeader.html": {
    "href": "cmdlets/Get-PnPWebHeader.html",
    "title": "Get-PnPWebHeader | PnP PowerShell",
    "keywords": "Get-PnPWebHeader SYNOPSIS Retrieves the current configuration regarding the \"Change the look\" Header of the current site SYNTAX Get-PnPWebHeader [-SiteLogoUrl <string>] [-HeaderLayout <HeaderLayoutType>] [-HeaderEmphasis <SPVariantThemeType>] [-HideTitleInHeader] [-HeaderBackgroundImageUrl <string>] [-HeaderBackgroundImageFocalX <double>] [-HeaderBackgroundImageFocalY <double>] [-LogoAlignment <LogoAlignment>] [-Connection <PnPConnection>] DESCRIPTION Through this cmdlet the current configuration of the various options offered through \"Change the look\" Header can be retrieved. EXAMPLES EXAMPLE 1 Get-PnPWebHeader Retrieves all of the available configuration PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPWebPart.html": {
    "href": "cmdlets/Get-PnPWebPart.html",
    "title": "Get-PnPWebPart | PnP PowerShell",
    "keywords": "Get-PnPWebPart SYNOPSIS Returns a web part definition object SYNTAX Get-PnPWebPart -ServerRelativePageUrl <String> [-Identity <WebPartPipeBind>] [-Connection <PnPConnection>] DESCRIPTION Allows retrieval of the definition of a webpart on a classic SharePoint Online page. EXAMPLES EXAMPLE 1 Get-PnPWebPart -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" Returns all webparts defined on the given classic page. EXAMPLE 2 Get-PnPWebPart -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" -Identity a2875399-d6ff-43a0-96da-be6ae5875f82 Returns a specific web part defined on the given classic page. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the web part, this can be the web part guid or a web part object Type: WebPartPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ServerRelativePageUrl Full server relative URL of the web part page, e.g. /sites/mysite/sitepages/home.aspx Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPWebPartProperty.html": {
    "href": "cmdlets/Get-PnPWebPartProperty.html",
    "title": "Get-PnPWebPartProperty | PnP PowerShell",
    "keywords": "Get-PnPWebPartProperty SYNOPSIS Returns a web part property SYNTAX Get-PnPWebPartProperty -ServerRelativePageUrl <String> -Identity <Guid> [-Key <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve web part property. EXAMPLES EXAMPLE 1 Get-PnPWebPartProperty -ServerRelativePageUrl /sites/demo/sitepages/home.aspx -Identity ccd2c98a-c9ae-483b-ae72-19992d583914 Returns all properties of the web part. EXAMPLE 2 Get-PnPWebPartProperty -ServerRelativePageUrl /sites/demo/sitepages/home.aspx -Identity ccd2c98a-c9ae-483b-ae72-19992d583914 -Key \"Title\" Returns the title property of the web part. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The id of the web part Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Name of a single property to be returned Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl Full server relative URL of the web part page, e.g. /sites/mysite/sitepages/home.aspx Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPWebPartXml.html": {
    "href": "cmdlets/Get-PnPWebPartXml.html",
    "title": "Get-PnPWebPartXml | PnP PowerShell",
    "keywords": "Get-PnPWebPartXml SYNOPSIS Returns the web part XML of a web part registered on a site SYNTAX Get-PnPWebPartXml -ServerRelativePageUrl <String> -Identity <WebPartPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve web part XML defintion. EXAMPLES EXAMPLE 1 Get-PnPWebPartXml -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" -Identity a2875399-d6ff-43a0-96da-be6ae5875f82 Returns the web part XML for a given web part on a page. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Id or title of the web part. Use Get-PnPWebPart to retrieve all web part Ids Type: WebPartPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl Full server relative url of the web part page, e.g. /sites/mysite/sitepages/home.aspx Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPWebPermission.html": {
    "href": "cmdlets/Get-PnPWebPermission.html",
    "title": "Get-PnPWebPermission | PnP PowerShell",
    "keywords": "Get-PnPWebPermission SYNOPSIS Returns the explicit permissions for a specific SharePoint Web given a user or group by id. SYNTAX Get-PnPWebPermission [-Identity] <WebPipeBind> -PrincipalId <Int32> DESCRIPTION This cmdlet retrieves the web permissions (role definitions) for a specific user or group in a provided web. EXAMPLES EXAMPLE 1 Get-PnPWebPermission -Identity (Get-PnPWeb) -PrincipalId 60 Returns the permissions for the SharePoint group with id for the current Web. EXAMPLE 2 Get-PnPWebPermission -Identity \"subsite\" -PrincipalId (Get-PnPGroup -Identity DemoGroup).Id Returns the permissions for the SharePoint group called DemoGroup for a given subsite path. PARAMETERS -Identity The id, name or server relative url of the Web to retrieve the permissions for. Type: WebPipeBand Parameter Sets: (All) Aliases: Name Required: False Position: 0 Default value: (CurrentWeb) Accept pipeline input: True (ByValue) Accept wildcard characters: False -PrincipalId The id of a user or a SharePoint group. See Get-PnPUser and Get-PnPGroup. Type: Int32 Parameter Sets: (All) Aliases: Name Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPWebTemplates.html": {
    "href": "cmdlets/Get-PnPWebTemplates.html",
    "title": "Get-PnPWebTemplates | PnP PowerShell",
    "keywords": "Get-PnPWebTemplates SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the available classic web templates SYNTAX Get-PnPWebTemplates [-Lcid <UInt32>] [-CompatibilityLevel <Int32>] [-Connection <PnPConnection>] DESCRIPTION Will list all available classic templates one can use to create a site. Modern templates will not be returned. EXAMPLES EXAMPLE 1 Get-PnPWebTemplates EXAMPLE 2 Get-PnPWebTemplates -LCID 1033 Returns all webtemplates for the Locale with ID 1033 (English) EXAMPLE 3 Get-PnPWebTemplates -CompatibilityLevel 15 Returns all webtemplates for the compatibility level 15 PARAMETERS -CompatibilityLevel The compatibly level of SharePoint where 14 is SharePoint 2010, 15 is SharePoint 2013 and 16 is SharePoint 2016 and later including SharePoint Online Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid The language ID. For instance: 1033 for English. For more information, see Locale IDs supported by SharePoint at https://github.com/pnp/PnP-PowerShell/wiki/Supported-LCIDs-by-SharePoint. To get the list of supported languages on a SharePoint environment use: Get-PnPAvailableLanguage. Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Locale IDs"
  },
  "cmdlets/Get-PnPWebhookSubscription.html": {
    "href": "cmdlets/Get-PnPWebhookSubscription.html",
    "title": "Get-PnPWebhookSubscription | PnP PowerShell",
    "keywords": "Get-PnPWebhookSubscription SYNOPSIS Gets all the Webhook subscriptions of the resource SYNTAX Get-PnPWebhookSubscription [-List <ListPipeBind>] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve Webhook subscriptions of specified list. EXAMPLES EXAMPLE 1 Get-PnPWebhookSubscription -List MyList Gets all Webhook subscriptions of the list MyList EXAMPLE 2 Get-PnPList | Get-PnPWebhookSubscription Gets all Webhook subscriptions of the all the lists PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name to get the Webhook subscriptions from Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPWebhookSubscriptions.html": {
    "href": "cmdlets/Get-PnPWebhookSubscriptions.html",
    "title": "Get-PnPWebhookSubscriptions | PnP PowerShell",
    "keywords": "Get-PnPWebhookSubscriptions SYNOPSIS This is an alias for Get-PnPWebhookSubscription. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPWikiPageContent.html": {
    "href": "cmdlets/Get-PnPWikiPageContent.html",
    "title": "Get-PnPWikiPageContent | PnP PowerShell",
    "keywords": "Get-PnPWikiPageContent SYNOPSIS Gets the contents/source of a wiki page SYNTAX Get-PnPWikiPageContent [-ServerRelativePageUrl] <String> [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve contents/source of a wiki page. EXAMPLES EXAMPLE 1 Get-PnPWikiPageContent -PageUrl '/sites/demo1/pages/wikipage.aspx' Gets the content of the page '/sites/demo1/pages/wikipage.aspx' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl The server relative URL for the wiki page Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: 0 Default value: None Accept pipeline input: True (ByPropertyName, ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Grant-PnPAzureADAppSitePermission.html": {
    "href": "cmdlets/Grant-PnPAzureADAppSitePermission.html",
    "title": "Grant-PnPAzureADAppSitePermission | PnP PowerShell",
    "keywords": "Grant-PnPAzureADAppSitePermission SYNOPSIS Required Permissions Microsoft Graph API: Sites.FullControl.All Adds permissions for a given Azure Active Directory application registration. SYNTAX Grant-PnPAzureADAppSitePermission -AppId <Guid> -DisplayName <String> -Permissions <Read|Write|Manage|FullControl> [-Site <SitePipeBind>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet adds permissions for a given Azure Active Directory application registration in a site collection. It is used in conjunction with the Azure Active Directory SharePoint application permission Sites.Selected. EXAMPLES EXAMPLE 1 Grant-PnPAzureADAppSitePermission -AppId \"aa37b89e-75a7-47e3-bdb6-b763851c61b6\" -DisplayName \"TestApp\" -Permissions Read Adds permissions for the Azure Active Directory application registration with the specific application id and sets the rights to 'Read' access for the currently connected site collection. EXAMPLE 2 Grant-PnPAzureADAppSitePermission -AppId \"aa37b89e-75a7-47e3-bdb6-b763851c61b6\" -DisplayName \"TestApp\" -Permissions FullControl -Site https://contoso.sharepoint.com/sites/projects Adds permissions for the Azure Active Directory application registration with the specific application id and sets the rights to 'FullControl' access for the site collection at the provided URL. PARAMETERS -AppId Specify the AppId of the Azure Active Directory application registration to grant permission for. Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The display name to set for the application permission you're adding. Only for visual reference purposes, does not need to match the name of the application in Azure Active Directory. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Permissions Specifies the permissions to set for the Azure Active Directory application registration which can either be Read, Write, Manage or FullControl. Type: String Parameter Sets: (All) Required: True Accepted values: Read, Write, Manage, FullControl Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Optional url of a site to set the permissions for. Defaults to the current site if not provided. Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: Currently connected site Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Grant-PnPEntraIDAppSitePermission.html": {
    "href": "cmdlets/Grant-PnPEntraIDAppSitePermission.html",
    "title": "Grant-PnPEntraIDAppSitePermission | PnP PowerShell",
    "keywords": "Grant-PnPEntraIDAppSitePermission SYNOPSIS This is an alias for Grant-PnPAzureADAppSitePermission. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Grant-PnPHubSiteRights.html": {
    "href": "cmdlets/Grant-PnPHubSiteRights.html",
    "title": "Grant-PnPHubSiteRights | PnP PowerShell",
    "keywords": "Grant-PnPHubSiteRights SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Grant additional permissions to the permissions already in place to associate sites to Hub Sites for one or more specific users SYNTAX Grant-PnPHubSiteRights [-Identity] <HubSitePipeBind> -Principals <String[]> [-Connection <PnPConnection>] DESCRIPTION Allows to add additional permissions to existing once to associate sites to Hub Sites for specified users. EXAMPLES EXAMPLE 1 Grant-PnPHubSiteRights -Identity \"https://contoso.sharepoint.com/sites/hubsite\" -Principals \"myuser@mydomain.com\",\"myotheruser@mydomain.com\" This example shows how to grant rights to myuser and myotheruser to associate their sites with the provided Hub Site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify hub site url Type: HubSitePipeBind Parameter Sets: (All) Aliases: HubSite Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Principals Specify user(s) login name i.e user@company.com Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Grant-PnPSiteDesignRights.html": {
    "href": "cmdlets/Grant-PnPSiteDesignRights.html",
    "title": "Grant-PnPSiteDesignRights | PnP PowerShell",
    "keywords": "Grant-PnPSiteDesignRights SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Grants the specified principals rights to use the site design. SYNTAX Grant-PnPSiteDesignRights [-Identity] <TenantSiteDesignPipeBind> -Principals <String[]> [-Rights <TenantSiteDesignPrincipalRights>] [-Connection <PnPConnection>] DESCRIPTION Allows to grant permission to use the site design for specified principal. EXAMPLES EXAMPLE 1 Grant-PnPSiteDesignRights -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd -Principals \"myuser@mydomain.com\",\"myotheruser@mydomain.com\" Grants the specified principals View rights on the site design specified EXAMPLE 2 Get-PnPSiteDesign -Title \"MySiteDesign\" -SiteScriptIds 438548fd-60dd-42cf-b843-2db506c8e259 -WebTemplate TeamSite | Grant-PnPSiteDesignRights -Principals \"myuser@mydomain.com\",\"myotheruser@mydomain.com\" Grants the specified principals View rights on the site design specified PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The site design to use. Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Principals One or more principals to grant rights to. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Rights The rights to set. Defaults to 'View' Type: TenantSiteDesignPrincipalRights Parameter Sets: (All) Accepted values: None, View Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Grant-PnPTenantServicePrincipalPermission.html": {
    "href": "cmdlets/Grant-PnPTenantServicePrincipalPermission.html",
    "title": "Grant-PnPTenantServicePrincipalPermission | PnP PowerShell",
    "keywords": "Grant-PnPTenantServicePrincipalPermission SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Microsoft Graph API : Directory.ReadWrite.All Explicitly grants a specified permission to the \"SharePoint Online Client Extensibility Web Application Principal\" service principal for SPFx solutions. SYNTAX Grant-PnPTenantServicePrincipalPermission -Scope <String> [-Resource <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to grant a specified permission o the \"SharePoint Online Client Extensibility Web Application Principal\" service principal for SPFx solutions. EXAMPLES EXAMPLE 1 Grant-PnPTenantServicePrincipalPermission -Scope \"Group.Read.All\" This will explicitly grant the Group.Read.All permission on the Microsoft Graph resource PARAMETERS -Scope The scope to grant the permission for Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Resource The resource to grant the permission for. Defaults to \"Microsoft Graph\" Type: String Parameter Sets: (All) Required: True Position: Named Default value: Microsoft Graph Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Import-PnPTaxonomy.html": {
    "href": "cmdlets/Import-PnPTaxonomy.html",
    "title": "Import-PnPTaxonomy | PnP PowerShell",
    "keywords": "Import-PnPTaxonomy SYNOPSIS Imports a taxonomy from either a string array or a file SYNTAX Direct Import-PnPTaxonomy [-Terms <String[]>] [-Lcid <Int32>] [-TermStoreName <String>] [-Delimiter <String>] [-SynchronizeDeletions] [-Connection <PnPConnection>] File Import-PnPTaxonomy -Path <String> [-Lcid <Int32>] [-TermStoreName <String>] [-Delimiter <String>] [-SynchronizeDeletions] [-Connection <PnPConnection>] DESCRIPTION Allows to import taxonomy terms from array or file. EXAMPLES EXAMPLE 1 Import-PnPTaxonomy -Terms 'Company|Locations|Stockholm' Creates a new termgroup, 'Company', a termset 'Locations' and a term 'Stockholm' EXAMPLE 2 Import-PnPTaxonomy -Terms 'Company|Locations|\"Stockholm,Central\"' Creates a new termgroup, 'Company', a termset 'Locations', a term 'Stockholm,Central' EXAMPLE 3 Import-PnPTaxonomy -Terms 'Company|Locations|Stockholm|Central','Company|Locations|Stockholm|North' Creates a new termgroup, 'Company', a termset 'Locations', a term 'Stockholm' and two subterms: 'Central', and 'North' EXAMPLE 4 Import-PnPTaxonomy -Path ./mytaxonomyterms.txt Imports the taxonomy from the file specified. Each line has to be in the format TERMGROUP|TERMSET|TERM. See example 2 for examples of the format. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Delimiter The path delimiter to be used, by default this is '|' Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Specifies a file containing terms per line, in the format as required by the Terms parameter. Type: String Parameter Sets: File Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SynchronizeDeletions If specified, terms that exist in the termset, but are not in the imported data, will be removed. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermStoreName Term store to import to; if not specified the default term store is used. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Terms An array of strings describing termgroup, termset, term, subterms using a default delimiter of '|'. Type: String[] Parameter Sets: Direct Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Import-PnPTermGroupFromXml.html": {
    "href": "cmdlets/Import-PnPTermGroupFromXml.html",
    "title": "Import-PnPTermGroupFromXml | PnP PowerShell",
    "keywords": "Import-PnPTermGroupFromXml SYNOPSIS Imports a taxonomy TermGroup from either the input or from an XML file. SYNTAX XML Import-PnPTermGroupFromXml [[-Xml] <String>] [-Connection <PnPConnection>] File Import-PnPTermGroupFromXml [-Path <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to import taxonomy term group from xml. EXAMPLES EXAMPLE 1 Import-PnPTermGroupFromXml -Xml $xml Imports the XML based termgroup information located in the $xml variable EXAMPLE 2 Import-PnPTermGroupFromXml -Path input.xml Imports the XML file specified by the path. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path The XML File to import the data from Type: String Parameter Sets: File Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Xml The XML to process Type: String Parameter Sets: XML Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Import-PnPTermSet.html": {
    "href": "cmdlets/Import-PnPTermSet.html",
    "title": "Import-PnPTermSet | PnP PowerShell",
    "keywords": "Import-PnPTermSet SYNOPSIS Imports a taxonomy term set from a file in the standard format. SYNTAX Import-PnPTermSet -GroupName <String> -Path <String> [-TermSetId <Guid>] [-SynchronizeDeletions] [-IsOpen <Boolean>] [-Contact <String>] [-Owner <String>] [-TermStoreName <String>] [-Connection <PnPConnection>] DESCRIPTION The format of the file is the same as that used by the import function in the web interface. A sample file can be obtained from the web interface. This is a CSV file, with the following headings: Term Set Name,Term Set Description,LCID,Available for Tagging,Term Description,Level 1 Term,Level 2 Term,Level 3 Term,Level 4 Term,Level 5 Term,Level 6 Term,Level 7 Term The first data row must contain the Term Set Name, Term Set Description, and LCID, and should also contain the first term. It is recommended that a fixed GUID be used as the termSetId, to allow the term set to be easily updated (so do not pass Guid.Empty). In contrast to the web interface import, this is not a one-off import but runs synchronization logic allowing updating of an existing Term Set. When synchronizing, any existing terms are matched (with Term Description and Available for Tagging updated as necessary), any new terms are added in the correct place in the hierarchy, and (if synchronizeDeletions is set) any terms not in the imported file are removed. The import file also supports an expanded syntax for the Term Set Name and term names (Level 1 Term, Level 2 Term, etc). These columns support values with the format 'Name | GUID', with the name and GUID separated by a pipe character (note that the pipe character is invalid to use within a taxonomy item name). This expanded syntax is not required, but can be used to ensure all terms have fixed IDs. EXAMPLES EXAMPLE 1 Import-PnPTermSet -GroupName 'Standard Terms' -Path 'C:\\\\Temp\\\\ImportTermSet.csv' -SynchronizeDeletions Creates (or updates) the term set specified in the import file, in the group specified, removing any existing terms not in the file. EXAMPLE 2 Import-PnPTermSet -TermStoreName 'My Term Store' -GroupName 'Standard Terms' -Path 'C:\\\\Temp\\\\ImportTermSet.csv' -TermSetId '{15A98DB6-D8E2-43E6-8771-066C1EC2B8D8}' Creates (or updates) the term set specified in the import file, in the term store and group specified, using the specified ID. EXAMPLE 3 Import-PnPTermSet -GroupName 'Standard Terms' -Path 'C:\\\\Temp\\\\ImportTermSet.csv' -IsOpen $true -Contact 'user@example.org' -Owner 'user@example.org' Creates (or updates) the term set specified in the import file, setting the IsOpen, Contact, and Owner properties as specified. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Contact Contact for the term set; if not specified, the existing setting is retained. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GroupName Group to import the term set to; an error is returned if the group does not exist. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsOpen Whether the term set should be marked open; if not specified, then the existing setting is not changed. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner Owner for the term set; if not specified, the existing setting is retained. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Local path to the file containing the term set to import, in the standard format (as the 'sample import file' available in the Term Store Administration). Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SynchronizeDeletions If specified, the import will remove any terms (and children) previously in the term set but not in the import file; default is to leave them. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermSetId GUID to use for the term set; if not specified, or the empty GUID, a random GUID is generated and used. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermStoreName Term store to import into; if not specified the default term store is used. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Install-PnPApp.html": {
    "href": "cmdlets/Install-PnPApp.html",
    "title": "Install-PnPApp | PnP PowerShell",
    "keywords": "Install-PnPApp SYNOPSIS Installs an available app from the app catalog SYNTAX Install-PnPApp [-Identity] <AppMetadataPipeBind> [-Scope <AppCatalogScope>] [-Wait] [-Connection <PnPConnection>] DESCRIPTION Allows to install an available app from the app catalog. EXAMPLES EXAMPLE 1 Install-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will install an app that is available in the tenant scoped app catalog, specified by the id, to the current site. EXAMPLE 2 Install-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Site This will install an app that is available in the site collection scoped app catalog, specified by the id, to the current site. EXAMPLE 3 Get-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe | Install-PnPApp This will install the given app from the tenant scoped app catalog into the site. EXAMPLE 4 Get-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Site | Install-PnPApp This will install the given app from the site collection scoped app catalog into the site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the Id or an actual app metadata instance Type: AppMetadataPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Defines which app catalog to use. Defaults to Tenant Type: AppCatalogScope Parameter Sets: (All) Accepted values: Tenant, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait If specified the execution will pause until the app has been installed in the site. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPBatch.html": {
    "href": "cmdlets/Invoke-PnPBatch.html",
    "title": "Invoke-PnPBatch | PnP PowerShell",
    "keywords": "Invoke-PnPBatch SYNOPSIS Executes the batch SYNTAX Invoke-PnPBatch [-Batch] <PnPBatch> [-Details] [-StopOnException] [-Force] DESCRIPTION Executes any queued actions / changes in the batch. EXAMPLES EXAMPLE 1 $batch = New-PnPBatch Add-PnPListItem -List \"DemoList\" -Values @{\"Title\"=\"Demo Item 1\"} -Batch $batch Add-PnPListItem -List \"DemoList\" -Values @{\"Title\"=\"Demo Item 2\"} -Batch $batch Add-PnPListItem -List \"DemoList\" -Values @{\"Title\"=\"Demo Item 3\"} -Batch $batch Invoke-PnPBatch -Batch $batch This will add the 3 defined list items in the batch. PARAMETERS -Batch The batch to execute Type: PnPBatch Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Once a batch has been executed you cannot execute it again. Using -Force will allow you to re-execute the batch again. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Details Will return detailed information of the batch executed. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StopOnException By default the batch will be fully executed. If any exceptions occur during this process they will be listed after the full run. Specify this switch to stop immediately after an exception occurs. The rest of the batch will be skipped then. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPGraphMethod.html": {
    "href": "cmdlets/Invoke-PnPGraphMethod.html",
    "title": "Invoke-PnPGraphMethod | PnP PowerShell",
    "keywords": "Invoke-PnPGraphMethod SYNOPSIS Invokes a REST request towards the Microsoft Graph API SYNTAX Out to console (Default) Invoke-PnPGraphMethod -Url <String> [-AdditionalHeaders GraphAdditionalHeadersPipeBind] [[-Method] <HttpRequestMethod>] [-Content <Object>] [-ContentType <String>] [-ConsistencyLevelEventual] [-Raw] [-All] [-Connection <PnPConnection>] [-Verbose] Out to file Invoke-PnPGraphMethod -Url <String> [-AdditionalHeaders GraphAdditionalHeadersPipeBind] [[-Method] <HttpRequestMethod>] [-Content <Object>] [-ContentType <String>] [-ConsistencyLevelEventual] [-Connection <PnPConnection>] [-OutFile <String>] [-Verbose] Out to stream Invoke-PnPGraphMethod -Url <String> [-AdditionalHeaders GraphAdditionalHeadersPipeBind] [[-Method] <HttpRequestMethod>] [-Content <Object>] [-ContentType <String>] [-ConsistencyLevelEventual] [-Connection <PnPConnection>] [-OutStream] [-Verbose] Batch Invoke-PnPGraphMethod -Url <String> [-AdditionalHeaders GraphAdditionalHeadersPipeBind] [[-Method] <HttpRequestMethod>] [-Content <Object>] [-ContentType <String>] [-ConsistencyLevelEventual] [-Connection <PnPConnection>] [-Batch <PnPBatch>] [-Verbose] DESCRIPTION Invokes a REST request towards the Microsoft Graph API. It will take care of potential throttling retries that are needed to retrieve the data. EXAMPLES Example 1 Invoke-PnPGraphMethod -Url \"groups?`$filter=startsWith(displayName,'ZZ')&`$select=displayName\" Invoke-PnPGraphMethod -Url 'groups/{id}?`$select=hideFromOutlookClients' Execute a GET request to get groups by filter and select. Example 2 Invoke-PnPGraphMethod -Url \"groups/{id}\" -Method Delete Delete the group with the specified id. Example 3 Invoke-PnPGraphMethod -Url \"groups/{id}\" -Method Patch -Content @{ displayName = \"NewName\" } Set the new displayName of the group with a Patch request. Example 4 Invoke-PnPGraphMethod -Url \"users?`$filter=accountEnabled ne true&`$count=true\" -Method Get -ConsistencyLevelEventual Get users with advanced query capabilities. Use of -ConsistencyLevelEventual. Example 5 Invoke-PnPGraphMethod -Url \"users\" Performs a GET request to retrieve users from the Microsoft Graph API using the full URL. Example 6 Invoke-PnPGraphMethod -Url \"users/user@contoso.com/photo/`$value\" -OutFile c:\\temp\\photo.jpg Downloads the user profile photo of the specified user to the specified file. Example 7 Invoke-PnPGraphMethod -Url \"users/user@contoso.com/photo/`$value\" -OutStream | Add-PnPFile -FileName user.jpg -Folder \"Shared Documents\" Takes the user profile photo of the specified user and uploads it to the specified library in SharePoint Online. Example 8 $task = Invoke-PnPGraphMethod -Url \"planner/tasks/23fasefxcvzvsdf32e\" # retrieve the task so we can figure out the etag which is needed to update the task $etag = $task.'@odata.etag' $headers = @{\"If-Match\"=$etag} $content = @{\"title\"=\"My new task title\"} Invoke-PnPGraphMethod -Url \"planner/tasks/23fasefxcvzvsdf32e\" -Method PATCH -Content $content -AdditionalHeaders $headers This example retrieves a Planner task to find the etag value which is required to update the task. In order to update the task through call to the Microsoft Graph API we need to include an If-Match header with the value of the etag. It then creates the content to update, in this case the title of the task, and calls the PATCH method on the Graph end-point to update the specific task. EXAMPLE 9 $batch = New-PnPBatch -RetainRequests Invoke-PnPSPRestMethod -Method Get -Url \"users\" -Batch $batch Invoke-PnPSPRestMethod -Method Get -Url \"groups\" -Batch $batch $response = Invoke-PnPBatch $batch -Details $response This example executes a GET request to get all users and a groups in a single batch request. It is necessary to create and invoke batch requests in the manner specified here if you want to process something later on with the response object. PARAMETERS -AdditionalHeaders Additional request headers, either by providing a Dictionary<string,string> or a Hastable, .e.g -AdditionalHeaders @{\"If-Match\"=\"234567tysfssdvsadf\"} Type: GraphAdditionalHeaderPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -All Retrieve all pages of results. This will loop through all @odata.nextLink. This flag will only be respected if the request is a GET request. Type: SwitchParameter Parameter Sets: Out to console Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ConsistencyLevelEventual Set the ConsistencyLevel header to eventual for advanced query capabilities on Azure AD directory objects Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Content A string or object to send Type: Object Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The content type of the object to send. Defaults to 'application/json'. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Method The HTTP method to execute. Defaults to GET. Type: HttpRequestMethod Parameter Sets: (All) Aliases: Accepted values: Default, Get, Head, Post, Put, Delete, Trace, Options, Merge, Patch Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -OutFile The full path including filename to write the output to, i.e. c:\\temp\\myfile.txt. Existing files will be overwritten. Type: String Parameter Sets: Out to file Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OutStream Indicates that the result of the request should be returned as a memory stream. Type: String Parameter Sets: Out to stream Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Raw If specified the returned data will not be converted to an object but returned as a JSON string. Type: SwitchParameter Parameter Sets: Out to console Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The Graph endpoint to invoke. Type: String Parameter Sets: (All) Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Batch The batch to add this request to. Type: PnPBatch Parameter Sets: Batched Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPListDesign.html": {
    "href": "cmdlets/Invoke-PnPListDesign.html",
    "title": "Invoke-PnPListDesign | PnP PowerShell",
    "keywords": "Invoke-PnPListDesign SYNOPSIS Apply a List Design to an existing site. * Requires Tenant Administration Rights * SYNTAX Invoke-PnPListDesign [-Identity] <TenantListDesignPipeBind> [-WebUrl <String>] [-Connection <PnPConnection>] DESCRIPTION Applies the List Design provided through Identity to an existing site. EXAMPLES EXAMPLE 1 Invoke-PnPListDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Applies the specified list design to the current site. EXAMPLE 2 Invoke-PnPListDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd -WebUrl \"https://contoso.sharepoint.com/sites/mydemosite\" Applies the specified site design to the specified site. EXAMPLE 3 Get-PnPListDesign | ?{$_.Title -eq \"Demo\"} | Invoke-PnPListDesign Applies the specified list design to the specified site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The List Design Id Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WebUrl The URL of the web to apply the list design to. If not specified it will default to the current web based upon the URL specified with Connect-PnPOnline. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPQuery.html": {
    "href": "cmdlets/Invoke-PnPQuery.html",
    "title": "Invoke-PnPQuery | PnP PowerShell",
    "keywords": "Invoke-PnPQuery SYNOPSIS Executes the currently queued actions SYNTAX Invoke-PnPQuery [-RetryCount <Int32>] [-Connection <PnPConnection>] DESCRIPTION Executes any queued actions / changes on the SharePoint Client Side Object Model Context EXAMPLES EXAMPLE 1 Invoke-PnPQuery -RetryCount 5 This will execute any queued actions / changes on the SharePoint Client Side Object Model Context and will retry 5 times in case of throttling. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RetryCount Number of times to retry in case of throttling. Defaults to 10. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPSPRestMethod.html": {
    "href": "cmdlets/Invoke-PnPSPRestMethod.html",
    "title": "Invoke-PnPSPRestMethod | PnP PowerShell",
    "keywords": "Invoke-PnPSPRestMethod SYNOPSIS Invokes a REST request towards a SharePoint site. SYNTAX Invoke-PnPSPRestMethod -Url <String> [-Method <HttpRequestMethod>] [-Content <Object>] [-ContentType <String>] [-Raw] [-Connection <PnPConnection>] [-ResponseHeadersVariable <String>] [-Batch <PnPBatch>] DESCRIPTION Invokes a REST request towards a SharePoint site. EXAMPLES EXAMPLE 1 Invoke-PnPSPRestMethod -Url /_api/web This example executes a GET request towards the current site collection and returns the properties of the current web. EXAMPLE 2 $output = Invoke-PnPSPRestMethod -Url '/_api/web/lists?$select=Id,Title' $output.value This example executes a GET request towards the current site collection and returns the id and title of all the lists and outputs them to the console. Notice the use of single quotes. If you want to use double quotes (\") then you will have to escape the $ character with a backtick: `$ EXAMPLE 3 $item = @{Title=\"Test\"} Invoke-PnPSPRestMethod -Method Post -Url \"/_api/web/lists/GetByTitle('Test')/items\" -Content $item This example creates a new item in the list 'Test' and sets the title field to 'Test'. EXAMPLE 4 $item = \"{'Title':'Test'}\" Invoke-PnPSPRestMethod -Method Post -Url \"/_api/web/lists/GetByTitle('Test')/items\" -Content $item This example creates a new item in the list 'Test' and sets the title field to 'Test'. EXAMPLE 5 $item = \"{ '__metadata': { 'type': 'SP.Data.TestListItem' }, 'Title': 'Test'}\" Invoke-PnPSPRestMethod -Method Post -Url \"/_api/web/lists/GetByTitle('Test')/items\" -Content $item -ContentType \"application/json;odata=verbose\" This example creates a new item in the list 'Test' and sets the title field to 'Test'. EXAMPLE 6 $output = Invoke-PnPSPRestMethod -Url '/_api/web/lists?$select=Id,Title' -ResponseHeadersVariable headers $output.value $headers This example executes a GET request towards the current site collection and returns the id and title of all the lists and outputs them to the console. Notice the use of single quotes. If you want to use double quotes (\") then you will have to escape the $ character with a backtick: `$ It will also store the response headers values in the PowerShell variable name that you specify. Enter a variable name without the dollar sign ($) symbol. EXAMPLE 7 $batch = New-PnPBatch -RetainRequests Invoke-PnPSPRestMethod -Method Get -Url \"https://tenant.sharepoint.com/sites/mysite/_api/web/lists\" -Batch $batch $item = \"{'Title':'Test'}\" Invoke-PnPSPRestMethod -Method Post -Url \"https://tenant.sharepoint.com/sites/mysite/_api/web/lists/GetByTitle('Test')/items\" -Content $item -Batch $batch $response = Invoke-PnPBatch $batch -Details $response This example executes a GET request to get all lists and a POST request to add an item to a list in a single batch request. It is necessary to create and invoke batch requests in the manner specified here if you want to process something later on with the response object. PARAMETERS -Content A string or object to send. Type: Object Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -ContentType The content type of the object to send. Defaults to 'application/json'. Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Method The Http method to execute. Defaults to GET. Type: HttpRequestMethod Parameter Sets: (All) Required: False Position: 0 Accept pipeline input: False -Url The url to execute Type: String Parameter Sets: (All) Required: True Position: 0 Accept pipeline input: False -Raw If specified the returned data will not be converted to an object but returned as a JSON string. Type: SwitchParameter Parameter Sets: (All) Required: True Position: 0 Accept pipeline input: False -Accept The Accept HTTP request header. Defaults to 'application/json;odata=nometadata'. Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -ResponseHeadersVariable Creates a variable containing a Response Headers Dictionary. Enter a variable name without the dollar sign ($) symbol. The keys of the dictionary contain the field names and values of the Response Header returned by the web server. Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Batch The batch to add this request to. Type: PnPBatch Parameter Sets: Batched Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPSearchQuery.html": {
    "href": "cmdlets/Invoke-PnPSearchQuery.html",
    "title": "Invoke-PnPSearchQuery | PnP PowerShell",
    "keywords": "Invoke-PnPSearchQuery SYNOPSIS This is an alias for Submit-PnPSearchQuery. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPSiteDesign.html": {
    "href": "cmdlets/Invoke-PnPSiteDesign.html",
    "title": "Invoke-PnPSiteDesign | PnP PowerShell",
    "keywords": "Invoke-PnPSiteDesign SYNOPSIS Apply a Site Design to an existing site. * Requires Tenant Administration Rights * SYNTAX Invoke-PnPSiteDesign [-Identity] <TenantSiteDesignPipeBind> [-WebUrl <String>] [-Connection <PnPConnection>] DESCRIPTION Applies the Site Design provided through Identity to an existing site. When providing a site design name and multiple site designs exist with the same name, all of them will be invoked. EXAMPLES EXAMPLE 1 Invoke-PnPSiteDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Applies the specified site design to the current site. EXAMPLE 2 Invoke-PnPSiteDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd -WebUrl \"https://contoso.sharepoint.com/sites/mydemosite\" Applies the specified site design to the specified site. EXAMPLE 3 Get-PnPSiteDesign | ?{$_.Title -eq \"Demo\"} | Invoke-PnPSiteDesign Applies the specified site design to the specified site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Site Design Id or an actual Site Design object to apply Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WebUrl The URL of the web to apply the site design to. If not specified it will default to the current web based upon the URL specified with Connect-PnPOnline. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPSiteScript.html": {
    "href": "cmdlets/Invoke-PnPSiteScript.html",
    "title": "Invoke-PnPSiteScript | PnP PowerShell",
    "keywords": "Invoke-PnPSiteScript SYNOPSIS Applies a Site Script to an existing site SYNTAX Executing a site script registered as such Invoke-PnPSiteScript -Identity <TenantSiteScriptPipeBind> -WebUrl <String> [-Connection <PnPConnection>] Executing a site script by passing in the script directly Invoke-PnPSiteScript -Script <String> [-WebUrl <String>] [-Connection <PnPConnection>] [-WhatIf] DESCRIPTION Applies the Site Design provided through Identity to an existing site. When providing a site design name and multiple site designs exist with the same name, all of them will be invoked and applied. It is also possible to provide a site script directly without having to add it as a site script first. This could be ideal for making quick one time copies of i.e. lists and sites. When passing in a site script through -Script, you only need to have permissions to the site you are applying the site script to. When passing in a site script through -Identity, you need to be connected to the SharePoint Online admin site collection and have rights to access it. Using the -WebUrl you can specify the full URL of the site collection you wish to apply the site script to. The output provided by this cmdlet are the site script actions that have been applied along with for each of them information on if they were successfully applied. EXAMPLES EXAMPLE 1 Invoke-PnPSiteScript -Identity \"My awesome script\" -WebUrl https://contoso.sharepoint.com/sites/mydemosite Retrieves the site script(s) with the provided name and applies it/them to the provided site. Ensure to connect to the SharePoint Online Admin site for this to work. EXAMPLE 2 $script = Get-PnPSiteScriptFromList -Url \"https://contoso.sharepoint.com/sites/mytemplatesite/lists/Sample\" Invoke-PnPSiteScript -Script $script Creates a site script from an existing list on the fly and uses it to create a new list with the same fields, settings and views in the current site EXAMPLE 3 Get-PnPSiteScript | ? { $_.Title -like \"*Test*\"} | Invoke-PnPSiteScript -WebUrl https://contoso.sharepoint.com/sites/mydemosite Applies all of the registered site scripts having the word Title in their name to the site at the provided URL PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The site script instance, name or Id of the site script to apply Type: TenantSiteScriptPipeBind Parameter Sets: SITESCRIPTREFERENCE Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Script The site script to apply, i.e. retrieved using Get-PnPSiteScriptFromWeb or Get-PnPSiteScriptFromList Type: TenantSiteScriptPipeBind Parameter Sets: SITESCRIPTREFERENCE Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WebUrl The URL of the web to apply the site script to. If not specified it will default to the current web based upon the URL specified with Connect-PnPOnline. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPSiteSwap.html": {
    "href": "cmdlets/Invoke-PnPSiteSwap.html",
    "title": "Invoke-PnPSiteSwap | PnP PowerShell",
    "keywords": "Invoke-PnPSiteSwap SYNOPSIS Invokes a job to swap the location of a site with another site while archiving the original site. SYNTAX Invoke-PnPSiteSwap -SourceUrl <string> -TargetUrl <string> -ArchiveUrl <string> [-DisableRedirection] [-NoWait] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION Swaps the location of a source site with a target site while archiving the original target site. Please note, the target site must be either: The root site, for example https://tenant-name.sharepoint.com; or The search center site, for example https://tenant-name.sharepoint.com/search. When the swap is initiated, the target site is moved to the archive location and the source site is moved to the target location. By default, a site redirect is created at the source location that will redirect traffic to the target location. If the target is the root site at https://tenant-name.sharepoint.com, then the following preparation activities should be performed prior to performing the swap: Any Featured links defined in SharePoint Start Page at https://tenant-name.sharepoint.com/_layouts/15/sharepoint.aspx will not be displayed after performing the swap. If required, the Featured links should be documented so they can be manually recreated after the swap. Functionality such as external sharing and application interfaces are dependent on the policies and permissions defined at the root site. Review the source site to ensure that it has the required policies and permissions as per the existing root site. This includes external sharing settings as well as site permissions. Larger tenants that have more than ~10,000 licenses may also need to run the Page Diagnostic Tool against the source site. Any analysis results that have the category Attention required (Red) or Improvement opportunities (Orange) will need to be remediated before performing the swap. The source and target sites can't be connected to an Office 365 group. They also can't be hub sites or associated with a hub. If a site is a hub site, unregister it as a hub site, swap the root site, and then register the site as a hub site. If a site is associated with a hub, disassociate the site, swap the root site, and then re-associate the site. EXAMPLES EXAMPLE 1 Invoke-PnPSiteSwap -SourceUrl https://contoso.sharepoint.com/sites/CommunicationSite -TargetUrl https://contoso.sharepoint.com -ArchiveUrl https://contoso.sharepoint.com/sites/Archive Archives the existing site at https://contoso.sharepoint.com to https://contoso.sharepoint.com/sites/Archive and moves https://contoso.sharepoint.com/sites/CommunicationSite to https://contoso.sharepoint.com. A site redirect will be created at https://contoso.sharepoint.com/sites/CommunicationSite that will redirect any requests to https://contoso.sharepoint.com. EXAMPLE 2 Invoke-PnPSiteSwap -SourceUrl https://contoso.sharepoint.com/sites/SearchSite -TargetUrl https://contoso.sharepoint.com/search -ArchiveUrl https://contoso.sharepoint.com/sites/Archive Archives the existing Search Center site at https://contoso.sharepoint.com/search to https://contoso.sharepoint.com/sites/Archive and moves the https://contoso.sharepoint.com/sites/SearchSite to https://contoso.sharepoint.com/search. A site redirect be created at https://contoso.sharepoint.com/sites/SearchSite that will redirect any requests to https://contoso.sharepoint.com/search. EXAMPLE 3 Invoke-PnPSiteSwap -SourceUrl https://contoso.sharepoint.com/sites/CommunicationSite -TargetUrl https://contoso.sharepoint.com -ArchiveUrl https://contoso.sharepoint.com/sites/Archive -DisableRedirection Archives the existing site at https://contoso.sharepoint.com to https://contoso.sharepoint.com/sites/Archive and moves https://contoso.sharepoint.com/sites/CommunicationSite to https://contoso.sharepoint.com. A site redirect will not be created at https://contoso.sharepoint.com/sites/CommunicationSite. PARAMETERS -SourceUrl URL of the source site. The site at this location must exist before performing the swap. If the target is the root site at https://tenant-name.sharepoint.com then the source site must be either a Modern Team Site (STS#3) or a Communication Site (SITEPAGEPUBLISHING#0). If the target is the search center site at https://tenant-name.sharepoint.com/search then the source site must be either a Search Center Site (SRCHCEN#0) or a Basic Search Center Site (SRCHCENTERLITE#0). Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TargetUrl URL of the target site that the source site will be swapped to. The site at this location must exist before performing the swap. The target site must be either: The root site at https://tenant-name.sharepoint.com; or The search center site at https://tenant-name.sharepoint.com/search. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ArchiveUrl URL that the target site will be archived to. There should be no existing site, including a deleted site in the Recycle Bin, at this location before performing the swap. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableRedirection Disables the site redirect from being created at the Source URL location. Type: Switch Parameter Parameter Sets: (All) Required: false Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPSiteTemplate.html": {
    "href": "cmdlets/Invoke-PnPSiteTemplate.html",
    "title": "Invoke-PnPSiteTemplate | PnP PowerShell",
    "keywords": "Invoke-PnPSiteTemplate SYNOPSIS Applies a site template to a web SYNTAX Path Invoke-PnPSiteTemplate [-Path] <String> [-TemplateId <String>] [-ResourceFolder <String>] [-OverwriteSystemPropertyBagValues] [-IgnoreDuplicateDataRowErrors] [-ProvisionContentTypesToSubWebs] [-ProvisionFieldsToSubWebs] [-ClearNavigation] [-Parameters <Hashtable>] [-Handlers <Handlers>] [-ExcludeHandlers <Handlers>] [-ExtensibilityHandlers <ExtensibilityHandler[]>] [-TemplateProviderExtensions <ITemplateProviderExtension[]>] [-Connection <PnPConnection>] Instance Invoke-PnPSiteTemplate [-TemplateId <String>] [-ResourceFolder <String>] [-OverwriteSystemPropertyBagValues] [-IgnoreDuplicateDataRowErrors] [-ProvisionContentTypesToSubWebs] [-ProvisionFieldsToSubWebs] [-ClearNavigation] [-Parameters <Hashtable>] [-Handlers <Handlers>] [-ExcludeHandlers <Handlers>] [-ExtensibilityHandlers <ExtensibilityHandler[]>] [-TemplateProviderExtensions <ITemplateProviderExtension[]>] [-InputInstance <SiteTemplate>] [-Connection <PnPConnection>] DESCRIPTION Allows to apply a site template on a web. EXAMPLES EXAMPLE 1 Invoke-PnPSiteTemplate -Path template.xml Applies a site template in XML format to the current web. EXAMPLE 2 Invoke-PnPSiteTemplate -Path template.xml -ResourceFolder c:\\provisioning\\resources Applies a site template in XML format to the current web. Any resources like files that are referenced in the template will be retrieved from the folder as specified with the ResourceFolder parameter. EXAMPLE 3 Invoke-PnPSiteTemplate -Path template.xml -Parameters @{\"ListTitle\"=\"Projects\";\"parameter2\"=\"a second value\"} Applies a site template in XML format to the current web. It will populate the parameter in the template the values as specified and in the template you can refer to those values with the {parameter: } token. For instance with the example above, specifying {parameter:ListTitle} in your template will translate to 'Projects' when applying the template. These tokens can be used in most string values in a template. EXAMPLE 4 Invoke-PnPSiteTemplate -Path template.xml -Handlers Lists, SiteSecurity Applies a site template in XML format to the current web. It will only apply the lists and site security part of the template. EXAMPLE 5 Invoke-PnPSiteTemplate -Path template.pnp Applies a site template from a pnp package to the current web. EXAMPLE 6 Invoke-PnPSiteTemplate -Path \"https://tenant.sharepoint.com/sites/templatestorage/Documents/template.pnp\" Applies a site template from a pnp package stored in a library to the current web. EXAMPLE 7 $handler1 = New-PnPExtensibilityHandlerObject -Assembly Contoso.Core.Handlers -Type Contoso.Core.Handlers.MyExtensibilityHandler1 $handler2 = New-PnPExtensibilityHandlerObject -Assembly Contoso.Core.Handlers -Type Contoso.Core.Handlers.MyExtensibilityHandler2 Invoke-PnPSiteTemplate -Path NewTemplate.xml -ExtensibilityHandlers $handler1,$handler2 This will create two new ExtensibilityHandler objects that are run while provisioning the template EXAMPLE 8 Invoke-PnPSiteTemplate -Path .\\ -InputInstance $template Applies a site template from an in-memory instance of a SiteTemplate type of the PnP Core Component, reading the supporting files, if any, from the current (.) path. The syntax can be used together with any other supported parameters. EXAMPLE 9 Invoke-PnPSiteTemplate -Path .\\template.xml -TemplateId \"MyTemplate\" Applies the SiteTemplate with the ID \"MyTemplate\" located in the template definition file template.xml. PARAMETERS -ClearNavigation Override the RemoveExistingNodes attribute in the Navigation elements of the template. If you specify this value the navigation nodes will always be removed before adding the nodes in the template Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludeHandlers Allows you to run all handlers, excluding the ones specified. Type: Handlers Parameter Sets: (All) Accepted values: All, ApplicationLifecycleManagement, AuditSettings, ComposedLook, ContentTypes, CustomActions, ExtensibilityProviders, Features, Fields, Files, ImageRenditions, Lists, Navigation, None, PageContents, Pages, PropertyBagEntries, Publishing, RegionalSettings, SearchSettings, SiteFooter, SiteHeader, SitePolicy, SiteSecurity, SiteSettings, SupportedUILanguages, SyntexModels, Tenant, TermGroups, Theme, WebApiPermissions, WebSettings, Workflows Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExtensibilityHandlers Allows you to specify ExtensibilityHandlers to execute while applying a template Type: ExtensibilityHandler[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Handlers Allows you to only process a specific part of the template. Notice that this might fail, as some of the handlers require other artifacts in place if they are not part of what your applying. Visit https://learn.microsoft.com/dotnet/api/officedevpnp.core.framework.provisioning.model.handlers for possible values. Type: Handlers Parameter Sets: (All) Accepted values: All, ApplicationLifecycleManagement, AuditSettings, ComposedLook, ContentTypes, CustomActions, ExtensibilityProviders, Features, Fields, Files, ImageRenditions, Lists, Navigation, None, PageContents, Pages, PropertyBagEntries, Publishing, RegionalSettings, SearchSettings, SiteFooter, SiteHeader, SitePolicy, SiteSecurity, SiteSettings, SupportedUILanguages, SyntexModels, Tenant, TermGroups, Theme, WebApiPermissions, WebSettings, Workflows Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IgnoreDuplicateDataRowErrors Ignore duplicate data row errors when the data row in the template already exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InputInstance Allows you to provide an in-memory instance of the SiteTemplate type of the PnP Core Component. When using this parameter, the -Path parameter refers to the path of any supporting file for the template. Type: SiteTemplate Parameter Sets: Instance Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OverwriteSystemPropertyBagValues Specify this parameter if you want to overwrite and/or create properties that are known to be system entries (starting with vti_, dlc_, etc.) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Parameters Allows you to specify parameters that can be referred to in the template by means of the {parameter:<Key>} token. See examples on how to use this parameter. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Path to the xml or pnp file containing the provisioning template. Type: String Parameter Sets: Path Required: True Position: 0 Default value: None Accept pipeline input: True (ByPropertyName, ByValue) Accept wildcard characters: False -ProvisionContentTypesToSubWebs If set content types will be provisioned if the target web is a subweb. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ProvisionFieldsToSubWebs If set fields will be provisioned if the target web is a subweb. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceFolder Root folder where resources/files that are being referenced in the template are located. If not specified the same folder as where the provisioning template is located will be used. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateId ID of the template to use from the xml file containing the provisioning template. If not specified and multiple SiteTemplate elements exist, the last one will be used. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while applying a template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPTenantTemplate.html": {
    "href": "cmdlets/Invoke-PnPTenantTemplate.html",
    "title": "Invoke-PnPTenantTemplate | PnP PowerShell",
    "keywords": "Invoke-PnPTenantTemplate SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Applies a tenant template to the current tenant. You must have the Office 365 Global Admin role to run this cmdlet successfully. SYNTAX By Path Invoke-PnPTenantTemplate [-Path] <String> [-SequenceId <String>] [-ResourceFolder <String>] [-Handlers <Handlers>] [-ExcludeHandlers <Handlers>] [-ExtensibilityHandlers <ExtensibilityHandler[]>] [-TemplateProviderExtensions <ITemplateProviderExtension[]>] [-Parameters <Hashtable>] [-OverwriteSystemPropertyBagValues] [-IgnoreDuplicateDataRowErrors] [-ProvisionContentTypesToSubWebs] [-ProvisionFieldsToSubWebs] [-ClearNavigation] [-Configuration <ApplyConfigurationPipeBind>] [-Connection <PnPConnection>] By Object Invoke-PnPTenantTemplate [-Template] <ProvisioningHierarchy> [-SequenceId <String>] [-ResourceFolder <String>] [-Handlers <Handlers>] [-ExcludeHandlers <Handlers>] [-ExtensibilityHandlers <ExtensibilityHandler[]>] [-TemplateProviderExtensions <ITemplateProviderExtension[]>] [-Parameters <Hashtable>] [-OverwriteSystemPropertyBagValues] [-IgnoreDuplicateDataRowErrors] [-ProvisionContentTypesToSubWebs] [-ProvisionFieldsToSubWebs] [-ClearNavigation] [-Configuration <ApplyConfigurationPipeBind>] [-Connection <PnPConnection>] DESCRIPTION Allows to apply a tenant template on current tenant. EXAMPLES EXAMPLE 1 Invoke-PnPTenantTemplate -Path myfile.pnp Will read the tenant template from the filesystem and will apply the sequences in the template EXAMPLE 2 Invoke-PnPTenantTemplate -Path myfile.pnp -SequenceId \"mysequence\" Will read the tenant template from the filesystem and will apply the specified sequence in the template EXAMPLE 3 Invoke-PnPTenantTemplate -Path myfile.pnp -Parameters @{\"ListTitle\"=\"Projects\";\"parameter2\"=\"a second value\"} Applies a tenant template to the current tenant. It will populate the parameter in the template the values as specified and in the template you can refer to those values with the {parameter: } token. For instance with the example above, specifying {parameter:ListTitle} in your template will translate to 'Projects' when applying the template. These tokens can be used in most string values in a template. PARAMETERS -ClearNavigation Override the RemoveExistingNodes attribute in the Navigation elements of the template. If you specify this value the navigation nodes will always be removed before adding the nodes in the template Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Configuration Specify a JSON configuration file to configure the extraction progress. Type: ApplyConfigurationPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludeHandlers Allows you to run all handlers, excluding the ones specified. Type: Handlers Parameter Sets: (All) Accepted values: None, AuditSettings, ComposedLook, CustomActions, ExtensibilityProviders, Features, Fields, Files, Lists, Pages, Publishing, RegionalSettings, SearchSettings, SitePolicy, SupportedUILanguages, TermGroups, Workflows, SiteSecurity, ContentTypes, PropertyBagEntries, PageContents, WebSettings, Navigation, ImageRenditions, ApplicationLifecycleManagement, Tenant, WebApiPermissions, SiteHeader, SiteFooter, Theme, SiteSettings, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExtensibilityHandlers Allows you to specify ExtensibilityHandlers to execute while applying a template Type: ExtensibilityHandler[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Handlers Allows you to only process a specific part of the template. Notice that this might fail, as some of the handlers require other artifacts in place if they are not part of what your applying. Type: Handlers Parameter Sets: (All) Accepted values: None, AuditSettings, ComposedLook, CustomActions, ExtensibilityProviders, Features, Fields, Files, Lists, Pages, Publishing, RegionalSettings, SearchSettings, SitePolicy, SupportedUILanguages, TermGroups, Workflows, SiteSecurity, ContentTypes, PropertyBagEntries, PageContents, WebSettings, Navigation, ImageRenditions, ApplicationLifecycleManagement, Tenant, WebApiPermissions, SiteHeader, SiteFooter, Theme, SiteSettings, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IgnoreDuplicateDataRowErrors Ignore duplicate data row errors when the data row in the template already exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OverwriteSystemPropertyBagValues Specify this parameter if you want to overwrite and/or create properties that are known to be system entries (starting with vti_, dlc_, etc.) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Parameters Allows you to specify parameters that can be referred to in the tenant template by means of the {parameter:<Key>} token. See examples on how to use this parameter. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Path to the xml or pnp file containing the tenant template. Type: String Parameter Sets: By Path Required: True Position: 0 Default value: None Accept pipeline input: True (ByPropertyName, ByValue) Accept wildcard characters: False -ProvisionContentTypesToSubWebs If set content types will be provisioned if the target web is a subweb. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ProvisionFieldsToSubWebs If set fields will be provisioned if the target web is a subweb. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceFolder Root folder where resources/files that are being referenced in the template are located. If not specified the same folder as where the tenant template is located will be used. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SequenceId Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template Type: ProvisioningHierarchy Parameter Sets: By Object Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while applying a template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPWebAction.html": {
    "href": "cmdlets/Invoke-PnPWebAction.html",
    "title": "Invoke-PnPWebAction | PnP PowerShell",
    "keywords": "Invoke-PnPWebAction SYNOPSIS Executes operations on web, lists and list items. SYNTAX Invoke-PnPWebAction [-ListName <String>] [-Webs <Web[]>] [-WebAction <System.Action`1[Microsoft.SharePoint.Client.Web]>] [-ShouldProcessWebAction <System.Func`2[Microsoft.SharePoint.Client.Web,System.Boolean]>] [-PostWebAction <System.Action`1[Microsoft.SharePoint.Client.Web]>] [-ShouldProcessPostWebAction <System.Func`2[Microsoft.SharePoint.Client.Web,System.Boolean]>] [-WebProperties <String[]>] [-ListAction <System.Action`1[Microsoft.SharePoint.Client.List]>] [-ShouldProcessListAction <System.Func`2[Microsoft.SharePoint.Client.List,System.Boolean]>] [-PostListAction <System.Action`1[Microsoft.SharePoint.Client.List]>] [-ShouldProcessPostListAction <System.Func`2[Microsoft.SharePoint.Client.List,System.Boolean]>] [-ListProperties <String[]>] [-ListItemAction <System.Action`1[Microsoft.SharePoint.Client.ListItem]>] [-ShouldProcessListItemAction <System.Func`2[Microsoft.SharePoint.Client.ListItem,System.Boolean]>] [-ListItemProperties <String[]>] [-SubWebs] [-DisableStatisticsOutput] [-SkipCounting] [-Connection <PnPConnection>] DESCRIPTION Allows to execute operations on web, lists and list items. EXAMPLES EXAMPLE 1 Invoke-PnPWebAction -ListAction ${function:ListAction} This will call the function ListAction on all the lists located on the current web. EXAMPLE 2 Invoke-PnPWebAction -ShouldProcessListAction ${function:ShouldProcessList} -ListAction ${function:ListAction} This will call the function ShouldProcessList, if it returns true the function ListAction will then be called. This will occur on all lists located on the current web PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableStatisticsOutput Will not output statistics after the operation Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListAction Function to be executed on the list. There is one input parameter of type List Type: System.Action`1[Microsoft.SharePoint.Client.List] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListItemAction Function to be executed on the list item. There is one input parameter of type ListItem Type: System.Action`1[Microsoft.SharePoint.Client.ListItem] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListItemProperties The properties to load for list items. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListName {{ Fill ListName Description }} Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListProperties The properties to load for list. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PostListAction Function to be executed on the list, this will trigger after list items have been processed. There is one input parameter of type List Type: System.Action`1[Microsoft.SharePoint.Client.List] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PostWebAction Function to be executed on the web, this will trigger after lists and list items have been processed. There is one input parameter of type Web Type: System.Action`1[Microsoft.SharePoint.Client.Web] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShouldProcessListAction Function to be executed on the web that would determine if ListAction should be invoked, There is one input parameter of type List and the function should return a boolean value Type: System.Func`2[Microsoft.SharePoint.Client.List,System.Boolean] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShouldProcessListItemAction Function to be executed on the web that would determine if ListItemAction should be invoked, There is one input parameter of type ListItem and the function should return a boolean value Type: System.Func`2[Microsoft.SharePoint.Client.ListItem,System.Boolean] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShouldProcessPostListAction Function to be executed on the web that would determine if PostListAction should be invoked, There is one input parameter of type List and the function should return a boolean value Type: System.Func`2[Microsoft.SharePoint.Client.List,System.Boolean] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShouldProcessPostWebAction Function to be executed on the web that would determine if PostWebAction should be invoked, There is one input parameter of type Web and the function should return a boolean value Type: System.Func`2[Microsoft.SharePoint.Client.Web,System.Boolean] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShouldProcessWebAction Function to be executed on the web that would determine if WebAction should be invoked, There is one input parameter of type Web and the function should return a boolean value Type: System.Func`2[Microsoft.SharePoint.Client.Web,System.Boolean] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SkipCounting Will skip the counting process; by doing this you will not get an estimated time remaining Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SubWebs Specify if sub webs will be processed Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebAction Function to be executed on the web. There is one input parameter of type Web Type: System.Action`1[Microsoft.SharePoint.Client.Web] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebProperties The properties to load for web. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Webs Webs you want to process (for example different site collections), will use Web parameter if not specified Type: Web[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Measure-PnPList.html": {
    "href": "cmdlets/Measure-PnPList.html",
    "title": "Measure-PnPList | PnP PowerShell",
    "keywords": "Measure-PnPList SYNOPSIS Returns statistics on the list object. This may fail on lists larger than the list view threshold SYNTAX Measure-PnPList [-Identity] <ListPipeBind> [-ItemLevel] [-BrokenPermissions] [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION Allows to retrieve statistics on specified list. The command may fail on lists larger than the list view threshold. EXAMPLES EXAMPLE 1 Measure-PnPList \"Documents\" Gets statistics on Documents document library EXAMPLE 2 Measure-PnPList \"Documents\" -BrokenPermissions -ItemLevel Displays items and folders with broken permissions inside Documents library PARAMETERS -BrokenPermissions Show items with broken permissions Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ItemLevel Show item level statistics Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the returned list which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Measure-PnPWeb.html": {
    "href": "cmdlets/Measure-PnPWeb.html",
    "title": "Measure-PnPWeb | PnP PowerShell",
    "keywords": "Measure-PnPWeb SYNOPSIS Returns statistics on the web object SYNTAX Measure-PnPWeb [[-Identity] <WebPipeBind>] [-Recursive] [-IncludeHiddenList] [-Connection <PnPConnection>] DESCRIPTION Allows to retrieve statistics on specified web. By specifying Recursive it is possible to retrieve statistics on all subwebs as well. EXAMPLES EXAMPLE 1 Measure-PnPWeb Gets statistics on the current web EXAMPLE 2 Measure-PnPWeb $web -Recursive Gets statistics on the provided web including all its subwebs PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Type: WebPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -IncludeHiddenList Include hidden lists in statistics calculation Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Recursive Iterate all sub webs recursively Type: SwitchParameter Parameter Sets: (All) Aliases: Recurse Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Merge-PnPTerm.html": {
    "href": "cmdlets/Merge-PnPTerm.html",
    "title": "Merge-PnPTerm | PnP PowerShell",
    "keywords": "Merge-PnPTerm SYNOPSIS Merges a taxonomy term into another term. SYNTAX Merge term set into term by Term Ids Merge-PnPTerm -Identity d67966b0-3b60-4331-8dc4-0b5a2ca730fc -TargetTerm 95e13729-3ccf-4ec8-998c-78e9ef1daa0b DESCRIPTION This cmdlet merges a taxonomy term into another term. EXAMPLES Example 1 Merge-PnPTerm -Identity d67966b0-3b60-4331-8dc4-0b5a2ca730fc -TargetTerm 95e13729-3ccf-4ec8-998c-78e9ef1daa0b PARAMETERS -Identity The identifier of the term that will be merged away, in the form of its GUID Type: TaxonomyTermPipeBind Parameter Sets: (All) Aliases: Term Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetTerm The identifier of the term where the term will be merged into, in the form of its GUID Type: TaxonomyTermPipeBind Parameter Sets: Move To Term Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False"
  },
  "cmdlets/Move-PnPClientSideComponent.html": {
    "href": "cmdlets/Move-PnPClientSideComponent.html",
    "title": "Move-PnPClientSideComponent | PnP PowerShell",
    "keywords": "Move-PnPClientSideComponent SYNOPSIS This is an alias for Move-PnPPageComponent. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Move-PnPFile.html": {
    "href": "cmdlets/Move-PnPFile.html",
    "title": "Move-PnPFile | PnP PowerShell",
    "keywords": "Move-PnPFile SYNOPSIS Moves a file or folder to a different location SYNTAX Move-PnPFile [-SourceUrl] <String> [-TargetUrl] <String> [-Overwrite] [-AllowSchemaMismatch] [-AllowSmallerVersionLimitOnDestination] [-IgnoreVersionHistory] [-NoWait] [-Force] [-Connection <PnPConnection>] [-Verbose] DESCRIPTION Allows moving a file or folder to a different location inside the same document library, such as in a subfolder, to a different document library on the same site collection or to a document library on another site collection. If you move a file to a different site or subweb you cannot specify a target filename. Moving files and folders is bound to some restrictions. You can find more on it here: https://learn.microsoft.com/office365/servicedescriptions/sharepoint-online-service-description/sharepoint-online-limits#moving-and-copying-across-sites EXAMPLES EXAMPLE 1 Move-PnPFile -SourceUrl \"Shared Documents/Document.docx\" -TargetUrl \"Archive/Document2.docx\" Moves a file named Document.docx located in the document library named \"Shared Documents\" in the current site to the document library named \"Archive\" in the same site, renaming the file to Document2.docx. If a file named Document2.docx already exists at the destination, it won't perform the move. EXAMPLE 2 Move-PnPFile -SourceUrl \"Shared Documents/Document.docx\" -TargetUrl \"Archive\" -Overwrite Moves a file named Document.docx located in the document library named \"Shared Documents\" in the current site to the document library named \"Archive\" in the same site. If a file named Document.docx already exists at the destination, it will overwrite it. EXAMPLE 3 Move-PnPFile -SourceUrl \"Shared Documents/Document.docx\" -TargetUrl \"/sites/otherproject/Shared Documents\" -Overwrite -AllowSchemaMismatch -AllowSmallerVersionLimitOnDestination Moves a file named Document.docx located in the document library named \"Shared Documents\" in the current site to the document library named \"Shared Documents\" in another site collection \"otherproject\" allowing it to overwrite an existing file Document.docx in the destination, allowing the fields to be different on the destination document library from the source document library and allowing a lower document version limit on the destination compared to the source. EXAMPLE 4 Move-PnPFile -SourceUrl \"/sites/project/Shared Documents/Archive\" -TargetUrl \"/sites/archive/Project\" -AllowSchemaMismatch -AllowSmallerVersionLimitOnDestination Moves a folder named Archive located in the document library named \"Shared Documents\" in the current site to the document library named \"Project\" in another site collection \"archive\" not allowing it to overwrite an existing folder named \"Archive\" in the destination, allowing the fields to be different on the destination document library from the source document library and allowing a lower document version limit on the destination compared to the source. EXAMPLE 5 $job = Move-PnPFile -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"SubSite2/Shared Documents\" -NoWait $jobStatus = Receive-PnPCopyMoveJobStatus -Job $job if($jobStatus.JobState == 0) { Write-Host \"Job finished\" } Moves a file named company.docx from the current document library to the documents library in SubSite2. It will not wait for the action to return but returns job information instead. The Receive-PnPCopyMoveJobStatus cmdlet will return the job status. PARAMETERS -AllowSchemaMismatch If provided and the target document library specified using TargetServerRelativeLibrary has different fields than the document library where the document is being moved from, the move will succeed. If not provided, it will fail to protect against data loss of metadata stored in fields that cannot be moved along. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowSmallerVersionLimitOnDestination If provided and the target document library specified using TargetServerRelativeLibrary is configured to keep less historical versions of documents than the document library where the document is being moved from, the move will succeed. If not provided, it will fail to protect against data loss of historical versions that cannot be moved along. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be requested and the action will be performed Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IgnoreVersionHistory If provided, only the latest version of the document will be moved and its history will be discarded. If not provided, all historical versions will be moved along. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Overwrite If provided, if a file or folder already exists at the TargetUrl, it will be overwritten. If omitted, the move operation will be canceled if the file or folder already exists at the TargetUrl location. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceUrl Site or server relative URL specifying the file or folder to move. Must include the file name if it is a file or the entire path to the folder if it is a folder. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetUrl Site or server relative URL of a document library where to move the file or folder to. Type: String Parameter Sets: (All) Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -NoWait If specified the task will return immediately after creating the move job. The cmdlet will return a job object which can be used with Receive-PnPCopyMoveJobStatus to retrieve the status of the job. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements might be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Move-PnPFolder.html": {
    "href": "cmdlets/Move-PnPFolder.html",
    "title": "Move-PnPFolder | PnP PowerShell",
    "keywords": "Move-PnPFolder SYNOPSIS Move a folder to another location in the current web. If you want to move a folder to a different site collection, use the Move-PnPFile cmdlet instead, which also supports moving folders and also accross site collections. Move-PnPFolder can be used to move folders that are within the list view threshold, the commandlet will fail if the list view threshold is exceeded. SYNTAX Move-PnPFolder -Folder <FolderPipeBind> -TargetFolder <String> [-Connection <PnPConnection>] DESCRIPTION Allows to move folder to another location in the current web. If you want to move a folder to a different site collection, use the Move-PnPFile cmdlet instead, which also supports moving folders and also across site collections. Move-PnPFolder can be used to move folders that are within the list view threshold, the commandlet will fail if the list view threshold is exceeded. EXAMPLES EXAMPLE 1 Move-PnPFolder -Folder Documents/Reports -TargetFolder 'Archived Reports' This will move the folder Reports in the Documents library to the 'Archived Reports' library EXAMPLE 2 Move-PnPFolder -Folder 'Shared Documents/Reports/2016/Templates' -TargetFolder 'Shared Documents/Reports' This will move the folder Templates to the new location in 'Shared Documents/Reports' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The folder to move Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TargetFolder The new parent location to which the folder should be moved to Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Move-PnPListItemToRecycleBin.html": {
    "href": "cmdlets/Move-PnPListItemToRecycleBin.html",
    "title": "Move-PnPListItemToRecycleBin | PnP PowerShell",
    "keywords": "Move-PnPListItemToRecycleBin SYNOPSIS Moves an item from a list to the Recycle Bin SYNTAX Move-PnPListItemToRecycleBin [-List] <ListPipeBind> -Identity <ListItemPipeBind> [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to move an item to the recycle bin. EXAMPLES EXAMPLE 1 Move-PnPListItemToRecycleBin -List \"Demo List\" -Identity \"1\" -Force Moves the listitem with id \"1\" from the \"Demo List\" list to the Recycle Bin. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Move-PnPPageComponent.html": {
    "href": "cmdlets/Move-PnPPageComponent.html",
    "title": "Move-PnPPageComponent | PnP PowerShell",
    "keywords": "Move-PnPPageComponent SYNOPSIS Moves a page component to a different section/column SYNTAX Move to other section Move-PnPPageComponent [-Page] <PagePipeBind> -InstanceId <Guid> -Section <Int32> [-Position <Int32>] [-Connection <PnPConnection>] Move to other section and column Move-PnPPageComponent [-Page] <PagePipeBind> -InstanceId <Guid> -Section <Int32> -Column <Int32> [-Position <Int32>] [-Connection <PnPConnection>] Move to other column Move-PnPPageComponent [-Page] <PagePipeBind> -InstanceId <Guid> -Column <Int32> [-Position <Int32>] [-Connection <PnPConnection>] Move within a column Move-PnPPageComponent [-Page] <PagePipeBind> -InstanceId <Guid> -Position <Int32> [-Connection <PnPConnection>] DESCRIPTION Moves a component to a different location on the page. Notice that the sections and or columns need to be present before moving the component. EXAMPLES EXAMPLE 1 Move-PnPPageComponent -Page Home -InstanceId a2875399-d6ff-43a0-96da-be6ae5875f82 -Section 1 Moves the specified component to the first section of the page. EXAMPLE 2 Move-PnPPageComponent -Page Home -InstanceId a2875399-d6ff-43a0-96da-be6ae5875f82 -Column 2 Moves the specified component to the second column of the current section. EXAMPLE 3 Move-PnPPageComponent -Page Home -InstanceId a2875399-d6ff-43a0-96da-be6ae5875f82 -Section 1 -Column 2 Moves the specified component to the first section of the page into the second column. EXAMPLE 4 Move-PnPPageComponent -Page Home -InstanceId a2875399-d6ff-43a0-96da-be6ae5875f82 -Section 1 -Column 2 -Position 2 Moves the specified component to the first section of the page into the second column and sets the column to position 2 in the list of webparts. PARAMETERS -Column The column to move the web part to Type: Int32 Parameter Sets: Move to other section and column, Move to other column Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InstanceId The instance id of the control. Use Get-PnPPageComponent to retrieve the instance ids. Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Page The name of the page Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Position Change to order of the web part in the column Type: Int32 Parameter Sets: Move to other section, Move to other section and column, Move to other column Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False Type: Int32 Parameter Sets: Move within a column Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Section The section to move the web part to Type: Int32 Parameter Sets: Move to other section, Move to other section and column Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Move-PnPTerm.html": {
    "href": "cmdlets/Move-PnPTerm.html",
    "title": "Move-PnPTerm | PnP PowerShell",
    "keywords": "Move-PnPTerm SYNOPSIS Moves a taxonomy term to another term set or term SYNTAX Move to term set by Term Id Move-PnPTerm -Identity d67966b0-3b60-4331-8dc4-0b5a2ca730fc -TargetTermSet 95e13729-3ccf-4ec8-998c-78e9ef1daa0b -TargetTermGroup b2645144-5757-4cd7-b7f9-e5d24757addf Move to term set by Term Name Move-PnPTerm -Identity \"Test\" -TargetTermSet \"TestTermSet1\" -TermSet \"OperationLevel-1 Test\" -TermGroup \"FromPowerAutomate\" -TargetTermGroup \"TestingGroup\" Move to term Move-PnPTerm -Identity d67966b0-3b60-4331-8dc4-0b5a2ca730fc -TargetTerm 2ad90b20-b5c0-4544-ac64-25e32d51fa3b -MoveToTerm DESCRIPTION This cmdlet moves a taxonomy term to another term set or term EXAMPLES Example 1 Move-PnPTerm -Identity d67966b0-3b60-4331-8dc4-0b5a2ca730fc -TargetTermSet 95e13729-3ccf-4ec8-998c-78e9ef1daa0b -TargetTermGroup b2645144-5757-4cd7-b7f9-e5d24757addf Moves term by id to term set. Example 2 Move-PnPTerm -Identity \"Test\" -TargetTermSet \"TestTermSet1\" -TermSet \"OperationLevel-1 Test\" -TermGroup \"FromPowerAutomate\" -TargetTermGroup \"TestingGroup\" Moves term by name to term set. Example 3 Move-PnPTerm -Identity d67966b0-3b60-4331-8dc4-0b5a2ca730fc -TargetTerm 2ad90b20-b5c0-4544-ac64-25e32d51fa3b -MoveToTerm Moves a term to another term by its identifier. PARAMETERS -Identity The identifier of the term that needs to be moved, either in the form of its name or its GUID Type: TaxonomyTermPipeBind Parameter Sets: (All) Aliases: Term Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetTermSet The identifier of the term set where the term needs to be moved, either in the form of its name or its GUID Type: TaxonomyTermSetPipeBind Parameter Sets: By Term Id, By Term Name Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetTermGroup The identifier of the term group where the term needs to be moved, either in the form of its name or its GUID Type: TaxonomyTermGroupPipeBind Parameter Sets: By Term Id, By Term Name Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermSet The identifier of the term set where the term is present, in the form of its name Type: TaxonomyTermSetPipeBind Parameter Sets: By Term Name Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermGroup The identifier of the term set where the term group is present, in the form of its name Type: TaxonomyTermGroupPipeBind Parameter Sets: By Term Name Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetTerm The identifier of the term where the term needs to be moved, in the form of its GUID Type: TaxonomyTermPipeBind Parameter Sets: Move To Term Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -MoveToTerm To be provided if the term needs to be moved to another term Type: SwitchParameter Parameter Sets: Move To Term Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False"
  },
  "cmdlets/Move-PnPTermSet.html": {
    "href": "cmdlets/Move-PnPTermSet.html",
    "title": "Move-PnPTermSet | PnP PowerShell",
    "keywords": "Move-PnPTermSet SYNOPSIS Moves taxonomy term set from one term group to another SYNTAX By Term Id Move-PnPTermSet -Identity <Guid> -TermGroup <Guid> -TargetTermGroup <Guid> [-TermStore <TaxonomyTermStorePipeBind>] By Term Name Move-PnPTermSet -Identity <String> -TermGroup <String> -TargetTermGroup <String> [-TermStore <TaxonomyTermStorePipeBind>] DESCRIPTION This cmdlet moves taxonomy term set from one term group to another. EXAMPLES Example 1 Move-PnPTermSet -Identity 81e0a4b8-701d-459c-ad61-a1c7a81810ff -TermGroup 17e16b98-a8c2-4db6-a860-5c42dbc818f4 -TargetTermGroup cf33d1cd-42d8-431c-9e43-3d8dab9ea8fd Moves term set by id. Example 2 Move-PnPTermSet -Identity \"OperationLevel-1 Test\" -TermGroup \"FromPowerAutomate\" -TargetTermGroup \"TargetTermGroup\" Moves term set by name. PARAMETERS -Identity The identifier of the term set that needs to be moved, either in the form of its name or its GUID Type: TaxonomyTermSetPipeBind Parameter Sets: (All) Aliases: TermSet Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermGroup The identifier, either in the form of the term group's name or its GUID, where the term set is currently located before being moved. Type: TaxonomyTermGroupPipeBind Parameter Sets: (All) Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetTermGroup The identifier, either in the form of the term group's name or its GUID, indicating the destination where the term set should be relocated. Type: TaxonomyTermGroupPipeBind Parameter Sets: (All) Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False"
  },
  "cmdlets/Move-PnpRecycleBinItem.html": {
    "href": "cmdlets/Move-PnpRecycleBinItem.html",
    "title": "Move-PnPRecycleBinItem | PnP PowerShell",
    "keywords": "Move-PnPRecycleBinItem SYNOPSIS Moves all items or a specific item in the first stage recycle bin of the current site collection to the second stage recycle bin SYNTAX Move-PnPRecycleBinItem [-Identity <RecycleBinItemPipeBind>] [-Force] [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Move-PnPRecycleBinItem Moves all the items in the first stage recycle bin of the current site collection to the second stage recycle bin EXAMPLE 2 Move-PnPRecycleBinItem -Identity 26ffff29-b526-4451-9b6f-7f0e56ba7125 Moves the item with the provided ID in the first stage recycle bin of the current site collection to the second stage recycle bin EXAMPLE 3 Move-PnPRecycleBinItem -Force Moves all the items in the first stage recycle bin of the current context to the second stage recycle bin without asking for confirmation first PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to move the first stage recycle bin items to the second stage Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity If provided, moves the item with the specific ID to the second stage recycle bin Type: RecycleBinItemPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPAzureADGroup.html": {
    "href": "cmdlets/New-PnPAzureADGroup.html",
    "title": "New-PnPAzureADGroup | PnP PowerShell",
    "keywords": "New-PnPAzureADGroup SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.Create, Group.ReadWrite.All Creates a new Azure Active Directory group. This can be a security or distribution group. SYNTAX New-PnPAzureADGroup -DisplayName <String> -Description <String> -MailNickname <String> [-Owners <String[]>] [-Members <String[]>] [-IsSecurityEnabled <SwitchParameter>] [-IsMailEnabled <SwitchParameter>] [-Force] DESCRIPTION Allows to create an Azure Active Directory group. This can be either security or distribution group. EXAMPLES EXAMPLE 1 New-PnPAzureADGroup -DisplayName $displayName -Description $description -MailNickname $nickname Creates an Azure Active Directory group with all the required properties EXAMPLE 2 New-PnPAzureADGroup -DisplayName $displayName -Description $description -MailNickname $nickname -Owners $arrayOfOwners -Members $arrayOfMembers Creates a new Azure Active Directory group with all the required properties, and with a custom list of Owners and a custom list of Members EXAMPLE 3 New-PnPAzureADGroup -DisplayName $displayName -Description $description -MailNickname $nickname -IsSecurityEnabled -IsMailEnabled Creates a new Azure Active Directory group which is mail and security enabled PARAMETERS -Description The Description of the Azure Active Directory group Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The Display Name of the Azure Active Directory group Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsSecurityEnabled Creates an Azure Active Directory group which can be used to set permissions Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsMailEnabled Creates an Azure Active Directory group which can be used to send e-mail to Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MailNickname The Mail Nickname of the Azure Active Directory group. Cannot contain spaces. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Members The array UPN values of the group's members Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners The array UPN values of the group's owners Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/New-PnPAzureADUserTemporaryAccessPass.html": {
    "href": "cmdlets/New-PnPAzureADUserTemporaryAccessPass.html",
    "title": "New-PnPAzureADUserTemporaryAccessPass | PnP PowerShell",
    "keywords": "New-PnPAzureADUserTemporaryAccessPass SYNOPSIS Required Permissions Microsoft Graph API : UserAuthenticationMethod.ReadWrite.All Creates a temporary access pass to authenticate with for a certain user SYNTAX New-PnPAzureADUserTemporaryAccessPass -DisplayName <String> -Description <String> -MailNickname <String> [-Owners <String[]>] [-Members <String[]>] [-IsSecurityEnabled <SwitchParameter>] [-IsMailEnabled <SwitchParameter>] [-Force] DESCRIPTION This cmdlet allows creation of a temporary access pass for a specific user to allow the user to log on once using the generated token. This can be used i.e. when the user needs to sign in to replace the multi factor authentication token. You can read more on how to enable Temporary Access Pass in Azure Active Directory in this article. It is disabled by default on Azure Active Directory. EXAMPLES EXAMPLE 1 New-PnPAzureADUserTemporaryAccessPass -Identity johndoe@contoso.onmicrosoft.com Creates a temporary access pass for the user with the provided user principal name following the default configuration in Azure Active Directory towards the access pass its lifetime, password length and reusability which can directly be used. EXAMPLE 2 New-PnPAzureADUserTemporaryAccessPass -Identity 72e2eb87-c124-4bd9-8e01-a447a1752058 -IsUseableOnce:$true Creates a temporary access pass for the user with the provided user Id following the default configuration in Azure Active Directory towards the access pass its lifetime and password length. The token will only be able to be used once and will then immediately expire and can directly be used. EXAMPLE 3 New-PnPAzureADUserTemporaryAccessPass -Identity johndoe@contoso.onmicrosoft.com -StartDateTime (Get-Date).AddHours(2) -LifeTimeInMinutes 10 -IsUseableOnce:$true Creates a temporary access pass for the user with the provided user principal name which will not become valid for use until 2 hours from now has passed. It will then only be valid for 10 minutes and only can be used once to login after which it will immediately expire, regardless if there are minutes left in the -LifeTimeInMinutes parameter. EXAMPLE 4 Get-PnPAzureADUser -Identity johndoe@contoso.onmicrosoft.com | New-PnPAzureADUserTemporaryAccessPass -StartDateTime (Get-Date).AddMinutes(10) -LifeTimeInMinutes 15 -IsUseableOnce:$false Creates a temporary access pass for the user with the provided user principal name which will not become valid for use until 10 minutes from now has passed. It will then only be valid for 15 minutes and only can be used repeatedly to login while there are minutes left in the -LifeTimeInMinutes parameter. PARAMETERS -Identity The user principal name, user Id or user instance for which to generate a temporary access pass. Type: AzureADUserPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -StartDateTime Date and time at which the access pass should become valid. If not provided, the access pass will immediately be valid. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LifeTimeInMinutes Time in minutes counting from the moment the access pass has become active, how long it will be valid until it will expire and cannot be used anymore. IF not provided, the configured default in Azure Active Directory will be used. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsUseableOnce Allows defining if the access token can only be used once to log on after which it will directly expire. This takes precedence over the -LifeTimeInMinutes option. If not provided, the configured default in Azure Active Directory will be used. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation Feature description"
  },
  "cmdlets/New-PnPAzureCertificate.html": {
    "href": "cmdlets/New-PnPAzureCertificate.html",
    "title": "New-PnPAzureCertificate | PnP PowerShell",
    "keywords": "New-PnPAzureCertificate SYNOPSIS Generate a new 2048bit self-signed certificate and manifest settings for use when using CSOM via an app-only ADAL application. See https://github.com/pnp/powershell/tree/master/samples/SharePoint.ConnectUsingAppPermissions for a sample on how to get started. KeyCredentials contains the ADAL app manifest sections. Certificate contains the PEM encoded certificate. PrivateKey contains the PEM encoded private key of the certificate. SYNTAX New-PnPAzureCertificate [-CommonName <String>] [-Country <String>] [-State <String>] [-Locality <String>] [-Organization <String>] [-OrganizationUnit <String>] [-OutPfx <String>] [-OutCert <String>] [-ValidYears <Int32>] [-CertificatePassword <SecureString>] [-Store <StoreLocation>] [-SanNames <String[]>] DESCRIPTION Allows to create a self-signed certificate and manifest settings to be used with PnP PowerShell via an app-only application registration. EXAMPLES EXAMPLE 1 New-PnPAzureCertificate -OutPfx pnp.pfx -OutCert pnp.cer This will generate a default self-signed certificate named \"pnp.contoso.com\" valid for 10 years and output a pfx and cer file to disk. The private key file (pfx) will not be password protected. It will have localhost and the machinename as the Subject Alternative Names. EXAMPLE 2 New-PnPAzureCertificate -CommonName \"My Certificate\" -ValidYears 30 This will output a certificate named \"My Certificate\" which expires in 30 years from now to the screen. It will not write the certificate files to disk. It will have localhost and the machinename as the Subject Alternative Names. EXAMPLE 3 New-PnPAzureCertificate -OutPfx pnp.pfx -OutCert pnp.cer -CertificatePassword (ConvertTo-SecureString -String \"pass@word1\" -AsPlainText -Force) This will generate a default self-signed certificate named \"pnp.contoso.com\" valid for 10 years and output a pfx and cer file to disk. The pfx file will have the password pass@word1 set on it. It will have localhost and the machinename as the Subject Alternative Names. EXAMPLE 4 New-PnPAzureCertificate -OutPfx pnp.pfx -OutCert pnp.cer -SanNames $null This will generate a default self-signed certificate named \"pnp.contoso.com\" valid for 10 years and output a pfx and cer file to disk. There will not be any Subject Alternative Names in the generated certificate. PARAMETERS -CertificatePassword Optional certificate password Type: SecureString Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommonName Common Name (e.g. server FQDN or YOUR name) [pnp.contoso.com] Type: String Parameter Sets: (All) Required: False Position: 0Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Country Country Name (2 letter code) Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Locality Locality Name (eg, city) Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Organization Organization Name (eg, company) Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OrganizationUnit Organizational Unit Name (eg, section) Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OutCert Filename to write to, optionally including full path (.cer) Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OutPfx Filename to write to, optionally including full path (.pfx) Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SanNames One or more DNS names to add to the certificate as Subject Alternative Names. Separate multiple names with a comma, i.e. \"host1.domain.com\",\"host2.domain.com\". Provide $null to not add any Subject Alternative names to the certificate. Omit to add localhost and the machine name as Subject Alternative Names. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -State State or Province Name (full name) Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ValidYears Number of years until expiration (default is 10, max is 30) Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Store Local Certificate Store to add the certificate to. Only works on Microsoft Windows. Type: StoreLocation Parameter Sets: Generate Certificate Required: False Position: Named Accept pipeline input: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPBatch.html": {
    "href": "cmdlets/New-PnPBatch.html",
    "title": "New-PnPBatch | PnP PowerShell",
    "keywords": "New-PnPBatch SYNOPSIS Creates a new batch SYNTAX New-PnPBatch [-RetainRequests] DESCRIPTION Creates a new batch to be used by cmdlets that support batching. The requests in the batch are clear after execute Invoke-PnPBatch, unless you specify -RetainRequests. That allows you to execute batch multiple times. EXAMPLES EXAMPLE 1 $batch = New-PnPBatch Add-PnPListItem -List \"DemoList\" -Values @{\"Title\"=\"Demo Item 1\"} -Batch $batch Add-PnPListItem -List \"DemoList\" -Values @{\"Title\"=\"Demo Item 2\"} -Batch $batch Add-PnPListItem -List \"DemoList\" -Values @{\"Title\"=\"Demo Item 3\"} -Batch $batch Invoke-PnPBatch -Batch $batch This will add the 3 defined list items in the batch. EXAMPLE 2 $batch = New-PnPBatch 1..50 | Foreach-Object{Remove-PnPListItem -List \"DemoList\" -Identity $_ -Batch $batch} Invoke-PnPBatch -Batch $batch This will delete all the items with Id 1 to Id 50 in the specified list. PARAMETERS -RetainRequests Type: SwitchParameter Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPContainerType.html": {
    "href": "cmdlets/New-PnPContainerType.html",
    "title": "New-PnPContainerType | PnP PowerShell",
    "keywords": "New-PnPContainerType SYNOPSIS Required Permissions * SharePoint Embedded Administrator or Global Administrator role is required Create a Container Type for a SharePoint Embedded Application. Refer to Hands on Lab - Setup and Configure SharePoint Embedded for more details. SYNTAX Trial New-PnPContainerType -ContainerTypeName <string> -OwningApplicationId <Guid> -TrialContainerType [-Verbose] Standard New-PnPContainerType -ContainerTypeName <string> -OwningApplicationId <Guid> -Region <String> -AzureSubscriptionId <Guid> -ResourceGroup <String> [-Verbose] DESCRIPTION Enables the creation of either a trial or standard SharePoint Container Type. Use the TrialContainerType switch parameter to designate the container type as a trial. EXAMPLES EXAMPLE 1 New-PnPContainerType -ContainerTypeName \"test1\" -OwningApplicationId 50785fde-3082-47ac-a36d-06282ac5c7da -AzureSubscription c7170373-eb8d-4984-8cc9-59bcc88c65a0 -ResouceGroup \"SPEmbed\" -Region \"Uk-South\" Creates a standard SharePoint Container Type. EXAMPLE 2 New-SPOContainerType -TrialContainerType -ContainerTypeName \"test1\" -OwningApplicationId df4085cc-9a38-4255-badc-5c5225610475 Creates a trial SharePoint Container Type. PARAMETERS ContainerTypeName The name of the Container Type. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False OwningApplicationId The unique identifier of the owning application which is the value of the Microsoft Entra ID app ID set up as part of configuring SharePoint Embed. Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TrialContainerType The billing classification of the Container Type. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AzureSubscriptionId The unique identifier of the Azure Active Directory profile (Microsoft Entra ID) for billing purposes. Type: Guid Parameter Sets: Standard Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Region The region of the Container Type. Type: String Parameter Sets: Standard Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceGroup The resource group of the Container Type. Type: String Parameter Sets: Standard Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices SharePoint Online Embedded Container Types"
  },
  "cmdlets/New-PnPEntraIDGroup.html": {
    "href": "cmdlets/New-PnPEntraIDGroup.html",
    "title": "New-PnPEntraIDGroup | PnP PowerShell",
    "keywords": "New-PnPEntraIDGroup SYNOPSIS This is an alias for New-PnPAzureADGroup. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPEntraIDUserTemporaryAccessPass.html": {
    "href": "cmdlets/New-PnPEntraIDUserTemporaryAccessPass.html",
    "title": "New-PnPEntraIDUserTemporaryAccessPass | PnP PowerShell",
    "keywords": "New-PnPEntraIDUserTemporaryAccessPass SYNOPSIS This is an alias for New-PnPAzureADUserTemporaryAccessPass. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPExtensibilityHandlerObject.html": {
    "href": "cmdlets/New-PnPExtensibilityHandlerObject.html",
    "title": "New-PnPExtensibilityHandlerObject | PnP PowerShell",
    "keywords": "New-PnPExtensibilityHandlerObject SYNOPSIS Creates an ExtensibilityHandler Object, to be used by the Get-PnPSiteTemplate cmdlet SYNTAX New-PnPExtensibilityHandlerObject [-Assembly] <String> -Type <String> [-Configuration <String>] [-Disabled] DESCRIPTION Allows to create an ExtensibilityHandler. EXAMPLES EXAMPLE 1 $handler = New-PnPExtensibilityHandlerObject -Assembly Contoso.Core.Handlers -Type Contoso.Core.Handlers.MyExtensibilityHandler Get-PnPSiteTemplate -Out NewTemplate.xml -ExtensibilityHandlers $handler This will create a new ExtensibilityHandler object that is run during extraction of the template PARAMETERS -Assembly The full assembly name of the handler Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Configuration Any configuration data you want to send to the handler Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Disabled If set, the handler will be disabled Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Type The type of the handler Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPGraphSubscription.html": {
    "href": "cmdlets/New-PnPGraphSubscription.html",
    "title": "New-PnPGraphSubscription | PnP PowerShell",
    "keywords": "New-PnPGraphSubscription SYNOPSIS Creates a new Microsoft Graph Subscription which allows your webhook API to be called when a change occurs in Microsoft Graph SYNTAX New-PnPGraphSubscription -ChangeType <GraphSubscriptionChangeType> -NotificationUrl <String> -Resource <String> [-ExpirationDateTime <DateTime>] [-ClientState <String>] [-LatestSupportedTlsVersion <GraphSubscriptionTlsVersion>] DESCRIPTION Creates a new Microsoft Graph Subscription. The required Azure Active Directory application permission depends on the resource creating the subscription for, see https://learn.microsoft.com/graph/api/subscription-post-subscriptions#permissions. For a sample ASP.NET WebApi webhook implementation to receive the notifications from Microsoft Graph, see https://github.com/microsoftgraph/msgraph-training-changenotifications/blob/b8d21ca7aa5feeece336287c9a781e71b7ba01c6/demos/01-create-application/Controllers/NotificationsController.cs#L51. EXAMPLES EXAMPLE 1 New-PnPGraphSubscription -ChangeType Create -NotificationUrl https://mywebapiservice/notifications -Resource \"me/mailFolders('Inbox')/messages\" -ExpirationDateTime (Get-Date).AddDays(1) -ClientState [Guid]::NewGuid().ToString() Creates a new Microsoft Graph subscription listening for incoming mail during the next 24 hours in the inbox of the user under which the connection has been made and will signal the URL provided through NotificationUrl when a message comes in EXAMPLE 2 New-PnPGraphSubscription -ChangeType Updates -NotificationUrl https://mywebapiservice/notifications -Resource \"Users\" -ExpirationDateTime (Get-Date).AddHours(1) -ClientState [Guid]::NewGuid().ToString() Creates a new Microsoft Graph subscription listening for changes to user objects during the next hour and will signal the URL provided through NotificationUrl when a change has been made PARAMETERS -ChangeType The event(s) the subscription should trigger on Type: GraphSubscriptionChangeType Parameter Sets: (All) Accepted values: Created, Updated, Deleted Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientState Specifies the value of the clientState property sent by the service in each notification. The maximum length is 128 characters. The client can check that the notification came from the service by comparing the value of the clientState property sent with the subscription with the value of the clientState property received with each notification. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExpirationDateTime The datetime defining how long this subscription should stay alive before which it needs to get extended to stay alive. See https://learn.microsoft.com/graph/api/resources/subscription#maximum-length-of-subscription-per-resource-type for the supported maximum lifetime of the subscriber endpoints. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LatestSupportedTlsVersion Specifies the latest version of Transport Layer Security (TLS) that the notification endpoint, specified by NotificationUrl, supports. If not provided, TLS 1.2 will be assumed. Type: GraphSubscriptionTlsVersion Parameter Sets: (All) Accepted values: v1_0, v1_1, v1_2, v1_3 Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NotificationUrl The URL that should be called when an event matching this subscription occurs Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Resource The resource to monitor for changes. See https://learn.microsoft.com/graph/api/subscription-post-subscriptions#resources-examples for the list with supported options. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPGroup.html": {
    "href": "cmdlets/New-PnPGroup.html",
    "title": "New-PnPGroup | PnP PowerShell",
    "keywords": "New-PnPGroup SYNOPSIS Adds group to the Site Groups List and returns a group object SYNTAX New-PnPGroup -Title <String> [-Description <String>] [-Owner <String>] [-AllowRequestToJoinLeave] [-AutoAcceptRequestToJoinLeave] [-AllowMembersEditMembership] [-DisallowMembersViewMembership] [-RequestToJoinEmail <String>] [-SetAssociatedGroup <AssociatedGroupType>] [-Connection <PnPConnection>] DESCRIPTION This command creates a SharePoint group in the current Site Collection connected to. EXAMPLES EXAMPLE 1 New-PnPGroup -Title \"My Site Users\" PARAMETERS -AllowMembersEditMembership A switch parameter that specifies whether group members can modify membership in the group Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowRequestToJoinLeave A switch parameter that specifies whether to allow users to request membership in the group and to allow users to request to leave the group Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AutoAcceptRequestToJoinLeave A switch parameter that specifies whether users are automatically added or removed when they make a request Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description for the group Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisallowMembersViewMembership A switch parameter that disallows group members to view membership. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner The owner for the group, which can be a user or another group Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequestToJoinEmail The e-mail address to which membership requests are sent Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SetAssociatedGroup {{ Fill SetAssociatedGroup Description }} Type: AssociatedGroupType Parameter Sets: (All) Accepted values: None, Visitors, Members, Owners Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The Title of the group Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPLibraryFileVersionBatchDeleteJob.html": {
    "href": "cmdlets/New-PnPLibraryFileVersionBatchDeleteJob.html",
    "title": "New-PnPLibraryFileVersionBatchDeleteJob | PnP PowerShell",
    "keywords": "New-PnPLibraryFileVersionBatchDeleteJob SYNOPSIS Starts a file version batch trim job for a document library. SYNTAX New-PnPLibraryFileVersionBatchDeleteJob -Identity <ListPipeBind> [-DeleteBeforeDays <int>] [-MajorVersionLimit <int>] [-MajorWithMinorVersionsLimit <int>][Automatic][-Force] DESCRIPTION Starts a file version batch trim job for a document library. EXAMPLES EXAMPLE 1 New-PnPLibraryFileVersionBatchDeleteJob -Identity \"Documents\" -DeleteBeforeDays 360 Starts a file version batch trim job that will delete all file versions that are over 360 days old in the document library. EXAMPLE 2 New-PnPLibraryFileVersionBatchDeleteJob -Identity \"Documents\" -DeleteBeforeDays 360 -Force Starts a file version batch trim job that will delete all file versions that are over 360 days old in the document library, without prompting the user for confirmation. EXAMPLE 3 New-PnPLibraryFileVersionBatchDeleteJob -Identity \"Documents\" -Automatic Starts a file version batch trim job that will delete file versions that expired and set version expiration time for the ones not expired in the document library based on the backend algorithm. EXAMPLE 4 New-PnPLibraryFileVersionBatchDeleteJob -Identity \"Documents\" -MajorVersionLimit 30 -MajorWithMinorVersionsLimit 10 Starts a file version batch trim job that will delete file versions in the document library based on the version count limits. PARAMETERS -Identity The ID, name or Url (Lists/MyList) of the document library to perform the trimming on. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -DeleteBeforeDays The minimum age of file versions to trim. In other words, all file versions that are older than this number of days will be deleted. Type: int Parameter Sets: DeleteOlderThanDays Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Automatic Trim file version using automatic trim. Type: SwitchParameter Parameter Sets: AutomaticTrim Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MajorVersionLimit Trim file version using version count limits. Need to specify MajorWithMinorVersionsLimit as well. Type: int Parameter Sets: CountLimits Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MajorWithMinorVersionsLimit Trim file version using version count limits. Need to specify MajorVersionLimit as well. Type: int Parameter Sets: CountLimits Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force When provided, no confirmation prompts will be shown to the user. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPLibraryFileVersionExpirationReportJob.html": {
    "href": "cmdlets/New-PnPLibraryFileVersionExpirationReportJob.html",
    "title": "New-PnPLibraryFileVersionExpirationReportJob | PnP PowerShell",
    "keywords": "New-PnPLibraryFileVersionExpirationReportJob SYNOPSIS Starts generating file version usage report for a document library. SYNTAX New-PnPLibraryFileVersionExpirationReportJob -Identity <ListPipeBind> -ReportUrl <string> DESCRIPTION Starts generating file version usage report for a document library. EXAMPLES EXAMPLE 1 New-PnPLibraryFileVersionExpirationReportJob -Identity \"Documents\" -ReportUrl \"https://contoso.sharepoint.com/sites/reports/MyReports/VersionReport.csv\" Starts generating file version usage report for a document library, saving the result to a csv file within the site collection. PARAMETERS -Identity The ID, name or Url (Lists/MyList) of the document library to gather a file version usage report on. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ReportUrl The URL of the report to save to. Type: string Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPList.html": {
    "href": "cmdlets/New-PnPList.html",
    "title": "New-PnPList | PnP PowerShell",
    "keywords": "New-PnPList SYNOPSIS Creates a new list SYNTAX New-PnPList -Title <String> -Template <ListTemplateType> [-Url <String>] [-Hidden] [-EnableVersioning] [-EnableContentTypes] [-OnQuickLaunch] [-Connection <PnPConnection>] DESCRIPTION Allows to create a new list. EXAMPLES EXAMPLE 1 New-PnPList -Title Announcements -Template Announcements Create a new announcements list EXAMPLE 2 New-PnPList -Title \"Demo List\" -Url \"lists/DemoList\" -Template Announcements Create an announcements list with a title that is different from the url EXAMPLE 3 New-PnPList -Title HiddenList -Template GenericList -Hidden Create a new custom list and hides it from the SharePoint UI PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableContentTypes Switch parameter if content types should be enabled on this list Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableVersioning Switch parameter if versioning should be enabled Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Hidden Switch parameter if list should be hidden from the SharePoint UI Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OnQuickLaunch Switch parameter if this list should be visible on the QuickLaunch Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template The type of list to create. Type: ListTemplateType Parameter Sets: (All) Accepted values: NoListTemplate, GenericList, DocumentLibrary, Survey, Links, Announcements, Contacts, Events, Tasks, DiscussionBoard, PictureLibrary, DataSources, WebTemplateCatalog, UserInformation, WebPartCatalog, ListTemplateCatalog, XMLForm, MasterPageCatalog, NoCodeWorkflows, WorkflowProcess, WebPageLibrary, CustomGrid, SolutionCatalog, NoCodePublic, ThemeCatalog, DesignCatalog, AppDataCatalog, AppFilesCatalog, DataConnectionLibrary, WorkflowHistory, GanttTasks, HelpLibrary, AccessRequest, PromotedLinks, TasksWithTimelineAndHierarchy, MaintenanceLogs, Meetings, Agenda, MeetingUser, Decision, MeetingObjective, TextBox, ThingsToBring, HomePageLibrary, Posts, Comments, Categories, Facility, Whereabouts, CallTrack, Circulation, Timecard, Holidays, IMEDic, ExternalList, MySiteDocumentLibrary, IssueTracking, AdminTasks, HealthRules, HealthReports, DeveloperSiteDraftApps, ContentCenterModelLibrary, ContentCenterPrimeLibrary, ContentCenterSampleLibrary, AccessApp, AlchemyMobileForm, AlchemyApprovalWorkflow, SharingLinks, HashtagStore, RecipesTable, FormulasTable, WebTemplateExtensionsList, ItemReferenceCollection, ItemReferenceReference, ItemReferenceReferenceCollection, InvalidType Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The Title of the list Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url If set, will override the url of the list. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPMicrosoft365Group.html": {
    "href": "cmdlets/New-PnPMicrosoft365Group.html",
    "title": "New-PnPMicrosoft365Group | PnP PowerShell",
    "keywords": "New-PnPMicrosoft365Group SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.Create, Group.ReadWrite.All Creates a new Microsoft 365 Group SYNTAX Assigned membership (default) New-PnPMicrosoft365Group -DisplayName <String> -Description <String> -MailNickname <String> [-Owners <String[]>] [-Members <String[]>] [-IsPrivate] [-LogoPath <String>] [-CreateTeam] [-HideFromAddressLists <Boolean>] [-HideFromOutlookClients <Boolean>] [-ResourceBehaviorOptions <TeamResourceBehaviorOptions>] [-MailEnabled <Boolean>] [-Force] [-SensitivityLabels <GUID[]>] [-Connection <PnPConnection>] Dynamic membership New-PnPMicrosoft365Group -DisplayName <String> -Description <String> -MailNickname <String> -DynamicMembershipRule <String> [-DynamicMembershipRuleProcessingState <DynamicMembershipRuleProcessingState>] [-Owners <String[]>] [-IsPrivate] [-LogoPath <String>] [-CreateTeam] [-HideFromAddressLists <Boolean>] [-HideFromOutlookClients <Boolean>] [-ResourceBehaviorOptions <TeamResourceBehaviorOptions>] [-Force] [-SensitivityLabels <GUID[]>] [-Connection <PnPConnection>] DESCRIPTION Allows to create a new Microsoft 365 Group. It can have an assigned membership or a dynamically defined membership. EXAMPLES EXAMPLE 1 New-PnPMicrosoft365Group -DisplayName $displayName -Description $description -MailNickname $nickname Creates a public Microsoft 365 Group with an assigned membership providing all the required properties EXAMPLE 2 New-PnPMicrosoft365Group -DisplayName $displayName -Description $description -MailNickname $nickname -Owners \"owner1@domain.com\" -Members \"member1@domain.com\" Creates a public Microsoft 365 Group with an assigned membership providing all the required properties, and with a custom list of Owners and a custom list of Members EXAMPLE 3 New-PnPMicrosoft365Group -DisplayName $displayName -Description $description -MailNickname $nickname -IsPrivate Creates a private Microsoft 365 Group with an assigned membership providing all the required properties EXAMPLE 4 New-PnPMicrosoft365Group -DisplayName $displayName -Description $description -MailNickname $nickname -Owners $arrayOfOwners -Members $arrayOfMembers -IsPrivate Creates a private Microsoft 365 Group with an assigned membership providing all the required properties, and with a custom list of Owners and a custom list of Members EXAMPLE 5 New-PnPMicrosoft365Group -DisplayName \"myPnPDemo1\" -Description $description -MailNickname $nickname -Owners $arrayOfOwners -Members $arrayOfMembers -IsPrivate -ResourceBehaviorOptions WelcomeEmailDisabled, HideGroupInOutlook Creates a new Microsoft 365 Group called \"myPnPDemo1\" with an assigned membership and sets the privacy to Private. Welcome Email will not be sent when the Group is created. The M365 Group will also not be visible in Outlook. EXAMPLE 6 New-PnPMicrosoft365Group -DisplayName $displayName -Description $description -MailNickname $nickname -IsPrivate -SensitivityLabels \"bc98af29-59eb-4869-baaa-9a8dff631aa4\" Creates a private Microsoft 365 Group with an assigned membership and with all the required properties and applies the sensitivity label. EXAMPLE 7 New-PnPMicrosoft365Group -DisplayName $displayName -Description $description -MailNickname $nickname -DynamicMembershipRule \"(user.department -eq \"\"HR\"\")\" Creates a Microsoft 365 Group with all the users having HR in the department field of their profile as members. It will be active and will add users matching the criteria as members. PARAMETERS -CreateTeam Creates a Microsoft Teams team associated with created group Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The Description of the Microsoft 365 Group Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The Display Name of the Microsoft 365 Group Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DynamicMembershipRule The rule that specifies which users should be a member of this group. I.e. (user.department -eq \"HR\") to indicate all users having HR in the department field of their user profile in Entra ID should be a member of this group. Type: String Parameter Sets: Dynamic membership Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DynamicMembershipRuleProcessingState The state of the dynamic membership rule for processing the rules assigned to it. Possible values are: On, Paused. Default is On. Type: String Parameter Sets: Dynamic membership Required: True Position: Named Default value: On Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LogoPath The path to the logo file of to set. Supported formats are .png, .gif and .jpg Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsPrivate Makes the group private when selected Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MailEnabled Boolean indicating if the group should be mail enabled. Default is true. Type: String Parameter Sets: Assigned membership Required: True Position: Named Default value: True Accept pipeline input: False Accept wildcard characters: False -MailNickname The Mail Nickname of the Microsoft 365 Group. Cannot contain spaces. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Members The array UserPrincipalName values of the group's members Type: String[] Parameter Sets: Assigned membership Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners The array UserPrincipalName values of the group's owners Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideFromAddressLists Controls whether the group is hidden or shown in the Global Address List (GAL). Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideFromOutlookClients Controls whether the group shows in the Outlook left-hand navigation. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceBehaviorOptions Allows providing ResourceBehaviorOptions which accepts multiple values that specify group behaviors for a Microsoft 365 Group. Documentation on what each of these options do and default to if not provided can be found here: https://learn.microsoft.com/graph/group-set-options#configure-groups Type: TeamResourceBehaviorOptions Parameter Sets: (All) Accepted values: AllowOnlyMembersToPost, HideGroupInOutlook, SubscribeNewGroupMembers, WelcomeEmailDisabled, CalendarMemberReadOnly, ConnectorsDisabled Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SensitivityLabels The Sensitivity label to be set to the Microsoft 365 Group. To retrieve the sensitivity label Ids you can use Get-PnPAvailableSensitivityLabel. Type: GUID[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/New-PnPMicrosoft365GroupSettings.html": {
    "href": "cmdlets/New-PnPMicrosoft365GroupSettings.html",
    "title": "New-PnPMicrosoft365GroupSettings | PnP PowerShell",
    "keywords": "New-PnPMicrosoft365GroupSettings SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Directory.AccessAsUser.All Creates a new Microsoft 365 Group setting for a specific group or the tenant SYNTAX New-PnPMicrosoft365GroupSettings -Identity <Microsoft365GroupPipeBind> -DisplayName <String> -TemplateId <String> -Values <Hashtable> DESCRIPTION Allows to create a new Microsoft 365 Group setting for a specific group or the tenant. EXAMPLES EXAMPLE 1 New-PnPMicrosoft365GroupSettings -DisplayName \"Group.Unified\" -TemplateId \"62375ab9-6b52-47ed-826b-58e47e0e304b\" -Values @{\"GuestUsageGuidelinesUrl\"=\"https://privacy.contoso.com/privacystatement\";\"EnableMSStandardBlockedWords\"=\"true\"} Creates a tenant-wide Microsoft 365 Group setting EXAMPLE 2 New-PnPMicrosoft365GroupSettings -Identity $groupId -DisplayName \"Group.Unified.Guest\" -TemplateId \"08d542b9-071f-4e16-94b0-74abb372e3d9\" -Values @{\"AllowToAddGuests\"=\"false\"} Creates a Microsoft 365 Group specific setting with all the required properties PARAMETERS -DisplayName The Display Name of the Microsoft 365 Group setting. You can get that by using Get-PnPMicrosoft365GroupSettingTemplates cmdlet Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateId The unique identifier for the template used to create this group of settings. To fetch the values of available templates, use Get-PnPMicrosoft365GroupSettingTemplates. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Values Hashtable of properties for the settings defined in the templated. Use the syntax @{AllowToAddGuests=\"false\";GuestUsageGuidelinesUrl=\"https://google.com/privacy\"}. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Identity of the Microsoft 365 Group for which you want to create setting. These settings will override the tenant wide settings. Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/New-PnPPersonalSite.html": {
    "href": "cmdlets/New-PnPPersonalSite.html",
    "title": "New-PnPPersonalSite | PnP PowerShell",
    "keywords": "New-PnPPersonalSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site SYNTAX New-PnPPersonalSite [-Email] <String[]> [-Connection <PnPConnection>] DESCRIPTION Creates a OneDrive For Business site for the provided user(s) If you want to use this cmdlet in an automated script not requiring manual authentication, you must assign the following permission to your application registration from either Azure Active Directory or done through https://tenant-admin.sharepoint.com/_layouts/appregnew.aspx with the following permission through https://tenant-admin.sharepoint.com/_layouts/appinv.aspx: <AppPermissionRequests AllowAppOnlyPolicy=\"true\"> <AppPermissionRequest Scope=\"http://sharepoint/social/tenant\" Right=\"FullControl\" /> </AppPermissionRequests> You then must connect using: Connect-PnPOnline -Url https://tenant-admin.sharepoint.com -ClientId <clientid> -ClientSecret <clientsecret> Authenticating using a certificate is not possible and will throw an unauthorized exception. It does not require assigning any permissions in Azure Active Directory. If you want to run this cmdlet using an interactive login, you must connect using: Connect-PnPOnline -Url https://tenant-admin.sharepoint.com -UseWebLogin EXAMPLES EXAMPLE 1 New-PnPPersonalSite -Email @('katiej@contoso.onmicrosoft.com','garth@contoso.onmicrosoft.com') Creates a OneDrive For Business site for the provided two users PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Email The UserPrincipalName (UPN) of the users Type: String[] Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPPlannerPlan.html": {
    "href": "cmdlets/New-PnPPlannerPlan.html",
    "title": "New-PnPPlannerPlan | PnP PowerShell",
    "keywords": "New-PnPPlannerPlan SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Creates a new Planner plan. SYNTAX New-PnPPlannerPlan -Group <PlannerGroupPipeBind> -Title <String> DESCRIPTION This cmdlet creates a new Planner plan. EXAMPLES Example 1 New-PnPPlannerPlan -Group \"Marketing\" -Title \"Conference Plan\" This example will add a new plan called \"Conference Plan\" to the \"Marketing\" group. PARAMETERS -Group Specify the group name or id owning the plan. Type: PlannerGroupPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Specify the name of the new plan. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPSdnProvider.html": {
    "href": "cmdlets/New-PnPSdnProvider.html",
    "title": "New-PnPSdnProvider | PnP PowerShell",
    "keywords": "New-PnPSdnProvider SYNOPSIS Adds a new Software-Defined Networking (SDN) provider SYNTAX New-PnPSdnProvider -Identity <String> -License <String> DESCRIPTION This Cmdlet creates a new Software-Defined Networking, and it receives two parameters, the Identity (ID) of the Hive and the License key of the Hive. EXAMPLES EXAMPLE 1 New-PnPSdnProvider -ID \"Hive\" -License \"\" This example creates the Hive for a SDN Provider. PARAMETERS -Identity Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -License Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPSearchExternalConnection.html": {
    "href": "cmdlets/New-PnPSearchExternalConnection.html",
    "title": "New-PnPSearchExternalConnection | PnP PowerShell",
    "keywords": "New-PnPSearchExternalConnection SYNOPSIS Required Permissions Microsoft Graph API : One of ExternalConnection.ReadWrite.OwnedBy, ExternalConnection.ReadWrite.All Creates a new connection to an external datasource for Microsoft Search SYNTAX New-PnPSearchExternalConnection -Identity <String> -Name <String> -Description <String> [-AuthorizedAppIds <String[]>] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet can be used to create a new connection to an external datasource that needs to be indexed into Microsoft Search through a custom connector. Use Set-PnPSearchExternalItem to add items to the index for this connector. EXAMPLES EXAMPLE 1 New-PnPSearchExternalConnection -Identity \"pnppowershell\" -Name \"PnP PowerShell\" -Description \"External content ingested using PnP PowerShell\" This will create a new external connection with the provided name and description. Any application registration with the proper permissions can add items to the index for this connection. EXAMPLE 2 New-PnPSearchExternalConnection -Identity \"pnppowershell\" -Name \"PnP PowerShell\" -Description \"External content ingested using PnP PowerShell\" -AuthorizedAppIds \"00000000-0000-0000-0000-000000000000\",\"11111111-1111-1111-1111-111111111111\" This will create a new external connection with the provided name and description. Only the application registrations of which the client Ids have been provided can add items to the index for this connection. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Unique identifier of the external connection in Microsoft Search. Must be unique within the tenant. Must be between 3 and 32 characters in length. Must only contain alphanumeric characters. Cannot begin with Microsoft or be one of the following values: None, Directory, Exchange, ExchangeArchive, LinkedIn, Mailbox, OneDriveBusiness, SharePoint, Teams, Yammer, Connectors, TaskFabric, PowerBI, Assistant, TopicEngine, MSFT_All_Connectors. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The display name of the connection to be displayed in the Microsoft 365 admin center. Maximum length of 128 characters. Type: String Parameter Sets: (All) Required: True Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Description of the connection displayed in the Microsoft 365 admin center Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AuthorizedAppIds The client Ids of the application registrations that are allowed to add items to the index for this connection. If not provided, any application registration with the proper permissions can add items to the index for this connection. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPSite.html": {
    "href": "cmdlets/New-PnPSite.html",
    "title": "New-PnPSite | PnP PowerShell",
    "keywords": "New-PnPSite SYNOPSIS Creates a communication site, Microsoft 365 group-connected team site or Modern team site not connected to M365 group. SYNTAX TeamSite New-PnPSite -Type TeamSite -Title <String> -Alias <String> [-Description <String>] [-Classification <String>] [-IsPublic] [-Lcid <UInt>] [-Owners <String[]>] [-PreferredDataLocation <Office365Geography>] [-SensitivityLabel <String>] [-HubSiteId <Guid>] [-SiteAlias <String>] [-TimeZone <PnP.Framework.Enums.TimeZone>] [-Members <String[]>] [-WelcomeEmailDisabled <SwitchParameter>] [-SubscribeNewGroupMembers <SwitchParameter>] [-AllowOnlyMembersToPost <SwitchParameter>] [-CalendarMemberReadOnly <SwitchParameter>] [-ConnectorsDisabled <SwitchParameter>] [-HideGroupInOutlook <SwitchParameter>] [-SubscribeMembersToCalendarEventsDisabled <SwitchParameter>] [-SiteDesignId <Guid>] [-Wait] [-Connection <PnPConnection>] CommunicationSite New-PnPSite -Type CommunicationSite -Title <String> -Url <String> [-HubSiteId <Guid>] [-Classification <String>] [-SiteDesign <SiteDesign>] [-SiteDesignId <Guid>] [-Lcid <UInt>] [-Owner <String>] [-PreferredDataLocation <Office365Geography>] [-SensitivityLabel <String>] [-TimeZone <PnP.Framework.Enums.TimeZone>] TeamSiteWithoutMicrosoft365Group New-PnPSite -Type TeamSiteWithoutMicrosoft365Group -Title <String> -Url <String> [-HubSiteId <Guid>] [-Classification <String>] [-SiteDesignId <Guid>] [-Lcid <UInt>] [-Owner <String>] [-PreferredDataLocation <Office365Geography>] [-SensitivityLabel <String>] [-TimeZone <PnP.Framework.Enums.TimeZone>] DESCRIPTION The New-PnPSite cmdlet creates a new site collection for the current tenant. Currently only 'modern' sites like Communication Site , Modern Microsoft 365 group-connected team sites and Modern Team sites not connected to M365 groups are supported. If you want to create a classic site, use New-PnPTenantSite. Note that the -Type parameter is mandatory to be used to indicate which type of site you would like to create. Based on the type of site you specify, you will be able to provide the additional arguments that are valid for that site type, so it is recommended to provide this as the first argument. EXAMPLES EXAMPLE 1 New-PnPSite -Type CommunicationSite -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso This will create a new Communications Site collection with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso' EXAMPLE 2 New-PnPSite -Type CommunicationSite -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -SiteDesign Showcase This will create a new Communications Site collection with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso'. It will use the 'Showcase' design for the site. EXAMPLE 3 New-PnPSite -Type CommunicationSite -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -SiteDesignId ae2349d5-97d6-4440-94d1-6516b72449ac This will create a new Communications Site collection with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso'. It will use the specified custom site design for the site. EXAMPLE 4 New-PnPSite -Type CommunicationSite -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -Classification \"HBI\" This will create a new Communications Site collection with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso'. The classification for the site will be set to \"HBI\" EXAMPLE 5 New-PnPSite -Type CommunicationSite -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -ShareByEmailEnabled This will create a new Communications Site collection with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso'. Allows owners to invite users outside of the organization. EXAMPLE 6 New-PnPSite -Type CommunicationSite -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -Lcid 1040 This will create a new Communications Site collection with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso' and sets the default language to Italian (LCID 1040). EXAMPLE 7 New-PnPSite -Type TeamSite -Title 'Team Contoso' -Alias contoso This will create a new Modern Team Site collection with the title 'Team Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso' or 'https://tenant.sharepoint.com/teams/contoso' based on the managed path configuration in the SharePoint Online Admin portal. EXAMPLE 8 New-PnPSite -Type TeamSite -Title 'Team Contoso' -Alias contoso -IsPublic This will create a new Modern Team Site collection with the title 'Team Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso' or 'https://tenant.sharepoint.com/teams/contoso' based on the managed path configuration in the SharePoint Online Admin portal and sets the site to public. EXAMPLE 9 New-PnPSite -Type TeamSite -Title 'Team Contoso' -Alias contoso -Lcid 1040 This will create a new Modern Team Site collection with the title 'Team Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso' or 'https://tenant.sharepoint.com/teams/contoso' based on the managed path configuration in the SharePoint Online Admin portal and sets the default language of the site to Italian. EXAMPLE 10 New-PnPSite -Type TeamSite -Title 'Team Contoso' -Alias contoso -SiteAlias contoso-site This will create a new Modern Team Site collection with the title 'Team Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso-site' or 'https://tenant.sharepoint.com/teams/contoso-site' based on the managed path configuration in the SharePoint Online Admin portal. The underlying M365 Group will have 'contoso' as the alias. EXAMPLE 11 New-PnPSite -Type TeamSiteWithoutMicrosoft365Group -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso This will create a new Modern team site collection not connected to M365 group with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso' EXAMPLE 12 New-PnPSite -Type TeamSiteWithoutMicrosoft365Group -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -SiteDesignId ae2349d5-97d6-4440-94d1-6516b72449ac This will create a new Modern team site collection not connected to M365 group with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso'. It will use the specified custom site design for the site. EXAMPLE 13 New-PnPSite -Type TeamSiteWithoutMicrosoft365Group -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -Classification \"HBI\" This will create a new Modern team site collection not connected to M365 group with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso'. The classification for the site will be set to \"HBI\" EXAMPLE 14 New-PnPSite -Type TeamSiteWithoutMicrosoft365Group -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -ShareByEmailEnabled This will create a new Modern team site collection not connected to M365 group with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso'. Allows owners to invite users outside of the organization. EXAMPLE 15 New-PnPSite -Type TeamSiteWithoutMicrosoft365Group -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -Lcid 1040 This will create a new Modern team site collection not connected to M365 group with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso' and sets the default language to Italian (LCID 1040). EXAMPLE 16 New-PnPSite -Type TeamSite -TimeZone UTCPLUS0200_HELSINKI_KYIV_RIGA_SOFIA_TALLINN_VILNIUS -Title \"Contoso\" -Alias \"Contoso\" This will create a new Modern team site collection connected to a Microsoft 365 Group with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso' and sets the timezone to UTC + 2 which is the Eastern European time zone. EXAMPLE 17 New-PnPSite -Type TeamSite -TimeZone UTCPLUS0200_HELSINKI_KYIV_RIGA_SOFIA_TALLINN_VILNIUS -Title \"Contoso\" -Alias \"Contoso\" -WelcomeEmailDisabled -SubscribeNewGroupMembers -AllowOnlyMembersToPost -CalendarMemberReadOnly -ConnectorsDisabled -HideGroupInOutlook -SubscribeMembersToCalendarEventsDisabled This will create a new Modern team site collection connected to a Microsoft 365 Group with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso' and sets the timezone to UTC + 2 which is the Eastern European time zone. In addition to that, if application permissions are used , it will also set resource behavior options to disable welcome mails, make calendar read only , hide the group visibility in outlook and other options PARAMETERS -Alias The alias to use for the team site. Type: String Parameter Sets: TeamSite Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Classification The classification to use for the new site. Type: String Parameter Sets: CommunicationSite, TeamSite, TeamSiteWithoutMicrosoft365Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site to create Type: String Parameter Sets: CommunicationSite, TeamSite, TeamSiteWithoutMicrosoft365Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site to create Type: String Parameter Sets: CommunicationSite, TeamSite, TeamSiteWithoutMicrosoft365Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HubSiteId If specified the site will be associated to the hubsite as identified by this id. Note: Only applicable when delegated permissions are used. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsPublic Identifies whether the corresponding Microsoft365 group type is Private or Public. If not specified, group is considered Private. Content in a Public group can be seen by anybody in the organization, and anybody in the organization is able to join the group. Content in a Private group can only be seen by the members of the group and people who want to join a private group have to be approved by a group owner. Type: SwitchParameter Parameter Sets: TeamSite Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -Lcid The language to use for the site. For more information, see Locale IDs supported by SharePoint at https://github.com/pnp/powershell/wiki/Supported-LCIDs-by-SharePoint. To get the list of supported languages on a SharePoint environment use: Get-PnPAvailableLanguage. Type: SwitchParameter Parameter Sets: CommunicationSite, TeamSite, TeamSiteWithoutMicrosoft365Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners Specifies one or more users with full access on the site and owner permissions on the corresponding Microsoft 365 Group. Can be used when Team Site is being created. Requires user object. If this parameter is skipped or a group object is provided, the user running New-PnPSite command will be set as a site owner. Required in case of the app-only connection. Type: String[] Parameter Sets: TeamSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner Specifies a Site Collection Administrator for the new site. Can be used when Communication Site is being created or Teams Site should not get a corresponding Microsoft 365 group. Requires user object. If this parameter is skipped or a group object is provided, the user running New-PnPSite command will be set as a site owner. Required in case of the app-only connection. Type: String Parameter Sets: CommunicationSite, TeamSiteWithoutMicrosoft365Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PreferredDataLocation In case of a multi-geo environment you can specify the preferred data location Type: String Parameter Sets: CommunicationSite, TeamSite, TeamSiteWithoutMicrosoft365Group Accepted values: APC, ARE, AUS, CAN, CHE, DEU, EUR, FRA, GBR, IND, JPN, KOR, NAM, NOR, ZAF Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SensitivityLabel The sensitivity label to specify for the new site. Type: String Parameter Sets: CommunicationSite, TeamSite, TeamSiteWithoutMicrosoft365Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShareByEmailEnabled If specified sharing content by email will be enabled. Type: SwitchParameter Parameter Sets: CommunicationSite, TeamSiteWithoutMicrosoft365Group Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -SiteAlias The site alias to use for the team site URL. If specified, a site collection will be created based on its value, otherwise the value specified in Alias parameter will be used. Type: String Parameter Sets: TeamSite Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteDesign Allows to specify an OOTB (out of the box) site design Type: SwitchParameter Parameter Sets: CommunicationSite Accepted values: Blank, Topic, Showcase Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteDesignId Allows to specify a custom site design Type: Guid Parameter Sets: CommunicationSite, TeamSiteWithoutMicrosoft365Group, TeamSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Specifies the title of the site to create Type: String Parameter Sets: CommunicationSite, TeamSiteWithoutMicrosoft365Group Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TimeZone Specifies the timezone of the site to create. To get the full list of timezone that you can select, you can visit https://pnp.github.io/pnpframework/api/PnP.Framework.Enums.TimeZone.html Type: Framework.Enums.TimeZone Parameter Sets: CommunicationSite, TeamSiteWithoutMicrosoft365Group, TeamSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Members Set the members of the team site connected group. Specify the UPN values in a string array. Note: Only applicable when application permissions are used. Type: String[] Parameter Sets: TeamSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WelcomeEmailDisabled If true, welcome emails are not sent to new members. Note: Only applicable when application permissions are used. Type: SwitchParameter Parameter Sets: TeamSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SubscribeNewGroupMembers If true, group members are subscribed to receive group conversations. Note: Only applicable when application permissions are used. Type: SwitchParameter Parameter Sets: TeamSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SubscribeMembersToCalendarEventsDisabled If true, members are not subscribed to the group's calendar events in Outlook. Note: Only applicable when application permissions are used. Type: SwitchParameter Parameter Sets: TeamSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideGroupInOutlook If true, members are not subscribed to the group's calendar events in Outlook. Note: Only applicable when application permissions are used. Type: SwitchParameter Parameter Sets: TeamSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ConnectorsDisabled If true, changes made to the group in Exchange Online are not synced back to on-premises Active Directory. Note: Only applicable when application permissions are used. Type: SwitchParameter Parameter Sets: TeamSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CalendarMemberReadOnly If true, members can view the group calendar in Outlook but cannot make changes. Note: Only applicable when application permissions are used. Type: SwitchParameter Parameter Sets: TeamSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowOnlyMembersToPost If true, only group members can post conversations to the group. Note: Only applicable when application permissions are used. Type: SwitchParameter Parameter Sets: TeamSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteDesignId The ID of the Site Design to apply. Note: Only applicable when delegated permissions are used. Type: GUID Parameter Sets: TeamSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Type Specifies with type of site to create. Type: SiteType Parameter Sets: (All) Accepted values: CommunicationSite, TeamSite, TeamSiteWithoutMicrosoft365Group Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait If specified the cmdlet will wait until the site has been fully created and all site artifacts have been provisioned by SharePoint. Notice that this can take a while. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices https://pnp.github.io/pnpframework/api/PnP.Framework.Enums.TimeZone.html"
  },
  "cmdlets/New-PnPSiteCollectionTermStore.html": {
    "href": "cmdlets/New-PnPSiteCollectionTermStore.html",
    "title": "New-PnPSiteCollectionTermStore | PnP PowerShell",
    "keywords": "New-PnPSiteCollectionTermStore SYNOPSIS Creates the site collection term store if it doesn't exist yet or if it does it will return the already existing site collection term store SYNTAX New-PnPSiteCollectionTermStore [-Connection <PnPConnection>] DESCRIPTION The site collection scoped term store will be created if it does not exist yet. If it does already exist for the currently connected to site collection, it will return the existing instance. EXAMPLES EXAMPLE 1 New-PnPSiteCollectionTermStore Returns the site collection term store by creating it if it doesn't exist yet or returning the existing instance if it does PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPSiteFileVersionBatchDeleteJob.html": {
    "href": "cmdlets/New-PnPSiteFileVersionBatchDeleteJob.html",
    "title": "New-PnPSiteFileVersionBatchDeleteJob | PnP PowerShell",
    "keywords": "New-PnPSiteFileVersionBatchDeleteJob SYNOPSIS Starts a file version batch trim job targeting all document libraries in a site collection. SYNTAX New-PnPSiteFileVersionBatchDeleteJob -DeleteBeforeDays <int> [-Force] DESCRIPTION Starts a file version batch trim job targeting all document libraries in a site collection. EXAMPLES EXAMPLE 1 New-PnPSiteFileVersionBatchDeleteJob -DeleteBeforeDays 360 Starts a file version batch trim job that will delete all file versions that are over 360 days old in all document libraries in the site collection. EXAMPLE 2 New-PnPSiteFileVersionBatchDeleteJob -DeleteBeforeDays 360 -Force Starts a file version batch trim job that will delete all file versions that are over 360 days old in all document libraries in the site collection, without prompting the user for confirmation. EXAMPLE 3 New-PnPSiteFileVersionBatchDeleteJob -Automatic Starts a file version batch trim job that will delete file versions that expiread and set version expiration time for the ones not expired in the site collection based on the backend algorithm. EXAMPLE 4 New-PnPSiteFileVersionBatchDeleteJob -MajorVersionLimit 30 -MajorWithMinorVersionsLimit 10 Starts a file version batch trim job that will delete file versions in the site collection based on the version count limits. PARAMETERS -DeleteBeforeDays The minimum age of file versions to trim. In other words, all file versions that are older than this number of days will be deleted. Type: int Parameter Sets: DeleteOlderThanDays Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Automatic Trim file version using automatic trim. Type: SwitchParameter Parameter Sets: AutomaticTrim Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MajorVersionLimit Trim file version using version count limits. Need to specify MajorWithMinorVersionsLimit as well. Type: int Parameter Sets: CountLimits Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MajorWithMinorVersionsLimit Trim file version using version count limits. Need to specify MajorVersionLimit as well. Type: int Parameter Sets: CountLimits Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force When provided, no confirmation prompts will be shown to the user. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPSiteFileVersionExpirationReportJob.html": {
    "href": "cmdlets/New-PnPSiteFileVersionExpirationReportJob.html",
    "title": "New-PnPSiteFileVersionExpirationReportJob | PnP PowerShell",
    "keywords": "New-PnPSiteFileVersionExpirationReportJob SYNOPSIS Starts generating file version usage report for a site collection. SYNTAX New-PnPSiteFileVersionExpirationReportJob -ReportUrl <string> DESCRIPTION Starts generating file version usage report for a site collection. EXAMPLES EXAMPLE 1 New-PnPSiteFileVersionExpirationReportJob -ReportUrl \"https://contoso.sharepoint.com/sites/reports/MyReports/VersionReport.csv\" Starts generating file version usage report on for the site collection, saving the result to a csv file within the site collection. PARAMETERS -ReportUrl The URL of the report to save to. Type: string Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPSiteGroup.html": {
    "href": "cmdlets/New-PnPSiteGroup.html",
    "title": "New-PnPSiteGroup | PnP PowerShell",
    "keywords": "New-PnPSiteGroup SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Creates a new group in a SharePoint Online site collection. SYNTAX New-PnPSiteGroup -Name <String> -PermissionLevels <String[]> [-Site <SitePipeBind>] DESCRIPTION A SharePoint group is a set of individual users. SharePoint groups enable you to manage sets of users instead of individual users. EXAMPLES EXAMPLE 1 New-PnPSiteGroup -Site \"https://contoso.sharepoint.com/sites/siteA\" -Name \"Project Leads\" -PermissionLevels \"Full Control\" This example creates a group named Project Leads with the Full Control permission level on the site collection https://contoso.sharepoint.com/sites/siteA. EXAMPLE 2 New-PnPSiteGroup -Site \"https://contoso.sharepoint.com/sites/marketing\" -Name \"NewGroupName\" -PermissionLevels \"Design\" This example creates a group named NewGroupName with the Design permission level on the site collection https://contoso.sharepoint.com/sites/marketing. PARAMETERS -Name Specifies the name of the group to add Type: String Parameter Sets: (All) Aliases: Group Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PermissionLevels Specifies the permission levels to grant to the newly created group. It can be any permission level that exists on the site collection on which the group is being created. Note Permission Levels, are defined on the top-level site of the site collection, please see How to create and edit permission levels for more information. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Specifies the site collection to add the group to. If not specified the currently connected site collection will be used. Type: SitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPSiteTemplate.html": {
    "href": "cmdlets/New-PnPSiteTemplate.html",
    "title": "New-PnPSiteTemplate | PnP PowerShell",
    "keywords": "New-PnPSiteTemplate SYNOPSIS Creates a new provisioning site template object SYNTAX New-PnPSiteTemplate DESCRIPTION Allows to create a new provisioning site template. EXAMPLES EXAMPLE 1 $template = New-PnPSiteTemplate Creates a new instance of a site template object. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPSiteTemplateFromFolder.html": {
    "href": "cmdlets/New-PnPSiteTemplateFromFolder.html",
    "title": "New-PnPSiteTemplateFromFolder | PnP PowerShell",
    "keywords": "New-PnPSiteTemplateFromFolder SYNOPSIS Generates a provisioning template from a given folder, including only files that are present in that folder SYNTAX New-PnPSiteTemplateFromFolder [[-Out] <String>] [[-Folder] <String>] [[-TargetFolder] <String>] [-Match <String>] [-ContentType <ContentTypePipeBind>] [-Properties <Hashtable>] [[-Schema] <XMLPnPSchemaVersion>] [-AsIncludeFile] [-Force] [-Encoding <Encoding>] [-Connection <PnPConnection>] DESCRIPTION Allows to create a new provisioning site template based on a given folder, including files present in it. EXAMPLES EXAMPLE 1 New-PnPSiteTemplateFromFolder -Out template.xml Creates an empty provisioning template, and includes all files in the current folder. EXAMPLE 2 New-PnPSiteTemplateFromFolder -Out template.xml -Folder c:\\temp Creates an empty provisioning template, and includes all files in the c:\\temp folder. EXAMPLE 3 New-PnPSiteTemplateFromFolder -Out template.xml -Folder c:\\temp -Match *.js Creates an empty provisioning template, and includes all files with a JS extension in the c:\\temp folder. EXAMPLE 4 New-PnPSiteTemplateFromFolder -Out template.xml -Folder c:\\temp -Match *.js -TargetFolder \"Shared Documents\" Creates an empty provisioning template, and includes all files with a JS extension in the c:\\temp folder and marks the files in the template to be added to the 'Shared Documents' folder EXAMPLE 5 New-PnPSiteTemplateFromFolder -Out template.xml -Folder c:\\temp -Match *.js -TargetFolder \"Shared Documents\" -ContentType \"Test Content Type\" Creates an empty provisioning template, and includes all files with a JS extension in the c:\\temp folder and marks the files in the template to be added to the 'Shared Documents' folder. It will add a property to the item for the content type. EXAMPLE 6 New-PnPSiteTemplateFromFolder -Out template.xml -Folder c:\\temp -Match *.js -TargetFolder \"Shared Documents\" -Properties @{\"Title\" = \"Test Title\"; \"Category\"=\"Test Category\"} Creates an empty provisioning template, and includes all files with a JS extension in the c:\\temp folder and marks the files in the template to be added to the 'Shared Documents' folder. It will add the specified properties to the file entries. EXAMPLE 7 New-PnPSiteTemplateFromFolder -Out template.pnp Creates an empty provisioning template as a pnp package file, and includes all files in the current folder EXAMPLE 8 New-PnPSiteTemplateFromFolder -Out template.pnp -Folder c:\\temp Creates an empty provisioning template as a pnp package file, and includes all files in the c:\\temp folder PARAMETERS -AsIncludeFile If specified, the output will only contain the <pnp:Files> element. This allows the output to be included in another template. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType An optional content type to use. Type: ContentTypePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Encoding The encoding type of the XML file, Unicode is default Type: Encoding Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder Folder to process. If not specified the current folder will be used. Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Match Optional wildcard pattern to match filenames against. If empty all files will be included. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out Filename to write to, optionally including full path. Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Properties Additional properties to set for every file entry in the generated template. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Schema The schema of the output to use, defaults to the latest schema Type: XMLPnPSchemaVersion Parameter Sets: (All) Accepted values: LATEST, V201503, V201505, V201508, V201512, V201605, V201705, V201801, V201805, V201807, V201903, V201909, V202002, V202103, V202209 Required: False Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -TargetFolder Target folder to provision to files to. If not specified, the current folder name will be used. Type: String Parameter Sets: (All) Required: False Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Encoding"
  },
  "cmdlets/New-PnPTeamsApp.html": {
    "href": "cmdlets/New-PnPTeamsApp.html",
    "title": "New-PnPTeamsApp | PnP PowerShell",
    "keywords": "New-PnPTeamsApp SYNOPSIS Required Permissions Microsoft Graph API : One of AppCatalog.ReadWrite.All, Directory.ReadWrite.All Adds an app to the Teams App Catalog. SYNTAX New-PnPTeamsApp -Path <String> DESCRIPTION Allows to add an app to the Teams App Catalog. EXAMPLES EXAMPLE 1 New-PnPTeamsApp -Path c:\\myapp.zip Adds the app as defined in the zip file to the Teams App Catalog PARAMETERS -Path The path pointing to the packaged/zip file containing the app Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTeamsTeam.html": {
    "href": "cmdlets/New-PnPTeamsTeam.html",
    "title": "New-PnPTeamsTeam | PnP PowerShell",
    "keywords": "New-PnPTeamsTeam SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Creates a new team in Microsoft Teams or teamifies an existing Microsoft 365 Group. If the Microsoft 365 Group does not exist yet, it will create it first and then add a Microsoft Teams team to the group. If it does already exist, it will use the provided Microsoft 365 Group and just teamify it by adding a Microsoft Teams team to it. SYNTAX For an existing group New-PnPTeamsTeam -GroupId <String> [-AllowAddRemoveApps <Boolean>] [-AllowChannelMentions <Boolean>] [-AllowCreateUpdateChannels <Boolean>] [-AllowCreateUpdateRemoveConnectors <Boolean>] [-AllowCreateUpdateRemoveTabs <Boolean>] [-AllowCustomMemes <Boolean>] [-AllowDeleteChannels <Boolean>] [-AllowGiphy <Boolean>] [-AllowGuestCreateUpdateChannels <Boolean>] [-AllowGuestDeleteChannels <Boolean>] [-AllowOwnerDeleteMessages <Boolean>] [-AllowStickersAndMemes <Boolean>] [-AllowTeamMentions <Boolean>] [-AllowUserDeleteMessages <Boolean>] [-AllowUserEditMessages <Boolean>] [-GiphyContentRating <TeamGiphyContentRating>] [-ShowInTeamsSearchAndSuggestions <Boolean>] [-Classification <String>] [-Owners <String[]>] [-Members <String[]>] For a new group New-PnPTeamsTeam -DisplayName <String> [-MailNickName <String>] [-Description <String>] [-AllowAddRemoveApps <Boolean>] [-AllowChannelMentions <Boolean>] [-AllowCreateUpdateChannels <Boolean>] [-AllowCreateUpdateRemoveConnectors <Boolean>] [-AllowCreateUpdateRemoveTabs <Boolean>] [-AllowCustomMemes <Boolean>] [-AllowDeleteChannels <Boolean>] [-AllowGiphy <Boolean>] [-AllowGuestCreateUpdateChannels <Boolean>] [-AllowGuestDeleteChannels <Boolean>] [-AllowOwnerDeleteMessages <Boolean>] [-AllowStickersAndMemes <Boolean>] [-AllowTeamMentions <Boolean>] [-AllowUserDeleteMessages <Boolean>] [-AllowUserEditMessages <Boolean>] [-GiphyContentRating <TeamGiphyContentRating>] [-Visibility <TeamVisibility>] [-ShowInTeamsSearchAndSuggestions <Boolean>] [-Classification <String>] [-Owners <String[]>] [-Members <String[]>] [-ResourceBehaviorOptions <TeamResourceBehaviorOptions>] [-SensitivityLabels <GUID[]>] DESCRIPTION Allows to create new team in Microsoft Teams or to teamify an existing Microsoft 365 Group. If the Microsoft 365 Group does not exist yet, it will create it first and then add a Microsoft Teams team to the group. EXAMPLES EXAMPLE 1 New-PnPTeamsTeam -DisplayName \"myPnPDemo1\" -Visibility Private -AllowCreateUpdateRemoveTabs $false -AllowUserDeleteMessages $false This will create a new Microsoft Teams team called \"myPnPDemo1\" and sets the privacy to Private, as well as preventing users from deleting their messages or update/remove tabs. The user creating the Microsoft Teams team will be added as Owner. EXAMPLE 2 New-PnPTeamsTeam -GroupId $groupId This will create a new Microsoft Teams team from an existing Microsoft 365 Group using the Group ID (teamify) EXAMPLE 3 New-PnPTeamsTeam -DisplayName \"myPnPDemo1\" -Visibility Private -AllowCreateUpdateRemoveTabs $false -AllowUserDeleteMessages $false -ResourceBehaviorOptions WelcomeEmailDisabled This will create a new Microsoft Teams team called \"myPnPDemo1\" and sets the privacy to Private, as well as preventing users from deleting their messages or update/remove tabs. The user creating the Microsoft Teams team will be added as Owner. Welcome Email will not be sent when the Group is created. EXAMPLE 4 New-PnPTeamsTeam -DisplayName \"myPnPDemo1\" -Visibility Private -AllowCreateUpdateRemoveTabs $false -AllowUserDeleteMessages $false -ResourceBehaviorOptions WelcomeEmailDisabled, HideGroupInOutlook This will create a new Microsoft Teams team called \"myPnPDemo1\" and sets the privacy to Private, as well as preventing users from deleting their messages or update/remove tabs. The user creating the Microsoft Teams team will be added as Owner. Welcome Email will not be sent when the Group is created. The M365 Group will also not be visible in Outlook. EXAMPLE 5 New-PnPTeamsTeam -DisplayName \"myPnPDemo1\" -Visibility Private -Owners \"user1@contoso.onmicrosoft.com\",\"user2@contoso.onmicrosoft.com\" -Members \"user3@contoso.onmicrosoft.com\" This will create a new Microsoft Teams team called \"myPnPDemo1\" and sets the privacy to Private. User1 and user2 will be added as owners. User3 will be added as a member. EXAMPLE 6 New-PnPTeamsTeam -DisplayName \"myPnPDemo1\" -Visibility Private -Owners \"user1@contoso.onmicrosoft.com\",\"user2@contoso.onmicrosoft.com\" -Members \"user3@contoso.onmicrosoft.com\" -SensitivityLabels \"bc98af29-59eb-4869-baaa-9a8dff631aa4\" This will create a new Microsoft Teams team called \"myPnPDemo1\" and sets the privacy to Private. User1 and user2 will be added as owners. User3 will be added as a member. The team will also get the sensitivity label value corresponding to the GUID specified. PARAMETERS -AllowAddRemoveApps Boolean value that determines whether or not members (not only owners) are allowed to add apps to the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowChannelMentions Boolean value that determines whether or not channels in the team can be @ mentioned so that all users who follow the channel are notified. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCreateUpdateChannels Setting that determines whether or not members (and not just owners) are allowed to create channels. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCreateUpdateRemoveConnectors Setting that determines whether or not members (and not only owners) can manage connectors in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCreateUpdateRemoveTabs Setting that determines whether or not members (and not only owners) can manage tabs in channels. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCustomMemes Setting that determines whether or not members can use the custom memes functionality in teams. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowDeleteChannels Setting that determines whether or not members (and not only owners) can delete channels in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowGiphy Setting that determines whether or not giphy can be used in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowGuestCreateUpdateChannels Setting that determines whether or not guests can create channels in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowGuestDeleteChannels Setting that determines whether or not guests can delete channels in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowOwnerDeleteMessages Setting that determines whether or not owners can delete messages that they or other members of the team have posted. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowStickersAndMemes Setting that determines whether stickers and memes usage is allowed in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowTeamMentions Setting that determines whether the entire team can be @ mentioned (which means that all users will be notified) Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowUserDeleteMessages Setting that determines whether or not members can delete messages that they have posted. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowUserEditMessages Setting that determines whether or not users can edit messages that they have posted. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Classification Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Team description. Characters Limit - 1024. Type: String Parameter Sets: For a new group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName Team display name. Characters Limit - 256. Type: String Parameter Sets: For a new group Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GiphyContentRating Setting that determines the level of sensitivity of gify usage that is allowed in the team. Accepted values are \"Strict\" or \"Moderate\" Type: TeamGiphyContentRating Parameter Sets: (All) Accepted values: moderate, strict Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GroupId Specify a GroupId to convert to a Team. If specified, you cannot provide the other values that are already specified by the existing group, namely: Visibility, Alias, Description, or DisplayName. Type: String Parameter Sets: For an existing group Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MailNickName The MailNickName parameter specifies the alias for the associated Microsoft 365 Group. This value will be used for the mail enabled object and will be used as PrimarySmtpAddress for this Microsoft 365 Group.The value of the MailNickName parameter has to be unique across your tenant. Type: String Parameter Sets: For a new group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowInTeamsSearchAndSuggestions Setting that determines whether or not private teams should be searchable from Teams clients for users who do not belong to that team. Set to $false to make those teams not discoverable from Teams clients. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Visibility Set to Public to allow all users in your organization to join the group by default. Set to Private to require that an owner approve the join request. Type: TeamVisibility Parameter Sets: For a new group Accepted values: Private, Public Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner User to be added as both a member and an owner of the group. If not specified, the user who creates the team will be added as both a member and an owner. This parameter has been deprecated and will be removed in a future version. Use -Owners instead which allows providing one or even multiple owners at once. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners The User Principal Name(s) of the user(s) to be added to the Microsoft 365 Group as owners. If omitted and the cmdlet is run using a token containing a user identity, such as when logging on with -Interactive or -DeviceLogin, the user used to authenticate with would become the owner. You can provide as many owners as you want, as long as you stay within the Microsoft 365 Groups limits. Notice that e-mail addresses are not accepted, if they differ from the User Principal Name on the same account. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Members The User Principal Name(s) of the user(s) to be added to the Microsoft 365 Group as members. You can provide as many members as you want, as long as you stay within the Microsoft 365 Groups limits. Notice that e-mail addresses are not accepted, if they differ from the User Principal Name on the same account. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceBehaviorOptions Allows providing ResourceBehaviorOptions which accepts multiple values that specify group behaviors for a Microsoft 365 Group. This will only work when you create a new Microsoft 365 Group, it will not work for existing groups. Type: TeamResourceBehaviorOptions Parameter Sets: For a new group Accepted values: AllowOnlyMembersToPost, HideGroupInOutlook, SubscribeNewGroupMembers, WelcomeEmailDisabled Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SensitivityLabels The Sensitivity label to be set to the Microsoft 365 Group and Team. To retrieve the sensitivity label you need to use the Graph API mentioned here. Type: GUID[] Parameter Sets: For a new group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTenantSequence.html": {
    "href": "cmdlets/New-PnPTenantSequence.html",
    "title": "New-PnPTenantSequence | PnP PowerShell",
    "keywords": "New-PnPTenantSequence SYNOPSIS Creates a new tenant sequence object SYNTAX New-PnPTenantSequence [-Id <String>] DESCRIPTION Allows to create a new tenant sequence object. EXAMPLES EXAMPLE 1 $sequence = New-PnPTenantSequence Creates a new instance of a tenant sequence object. EXAMPLE 2 $sequence = New-PnPTenantSequence -Id \"MySequence\" Creates a new instance of a tenant sequence object and sets the Id to the value specified. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id Optional Id of the sequence Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTenantSequenceCommunicationSite.html": {
    "href": "cmdlets/New-PnPTenantSequenceCommunicationSite.html",
    "title": "New-PnPTenantSequenceCommunicationSite | PnP PowerShell",
    "keywords": "New-PnPTenantSequenceCommunicationSite SYNOPSIS Creates a communication site object SYNTAX New-PnPTenantSequenceCommunicationSite -Url <String> -Title <String> [-Language <UInt32>] [-Owner <String>] [-Description <String>] [-Classification <String>] [-SiteDesignId <String>] [-HubSite] [-AllowFileSharingForGuestUsers] [-TemplateIds <String[]>] DESCRIPTION Allows to create a new communication site object. EXAMPLES EXAMPLE 1 $site = New-PnPTenantSequenceCommunicationSite -Url \"/sites/mycommunicationsite\" -Title \"My Team Site\" Creates a new communication site object with the specified variables PARAMETERS -AllowFileSharingForGuestUsers Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Classification Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HubSite Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Language Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteDesignId Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateIds Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTenantSequenceTeamNoGroupSite.html": {
    "href": "cmdlets/New-PnPTenantSequenceTeamNoGroupSite.html",
    "title": "New-PnPTenantSequenceTeamNoGroupSite | PnP PowerShell",
    "keywords": "New-PnPTenantSequenceTeamNoGroupSite SYNOPSIS Creates a new team site without a Microsoft 365 group in-memory object SYNTAX New-PnPTenantSequenceTeamNoGroupSite -Url <String> -Title <String> -TimeZoneId <UInt32> [-Language <UInt32>] [-Owner <String>] [-Description <String>] [-HubSite] [-TemplateIds <String[]>] DESCRIPTION Allows to create a new site without a Microsoft 365 group in-memory object. EXAMPLES EXAMPLE 1 $site = New-PnPTenantSequenceTeamNoGroupSite -Url \"/sites/MyTeamSite\" -Title \"My Team Site\" Creates a new team site object with the specified variables PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HubSite Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Language Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateIds Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TimeZoneId Type: UInt32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTenantSequenceTeamNoGroupSubSite.html": {
    "href": "cmdlets/New-PnPTenantSequenceTeamNoGroupSubSite.html",
    "title": "New-PnPTenantSequenceTeamNoGroupSubSite | PnP PowerShell",
    "keywords": "New-PnPTenantSequenceTeamNoGroupSubSite SYNOPSIS Creates a team site subsite with no Microsoft 365 group object SYNTAX New-PnPTenantSequenceTeamNoGroupSubSite -Url <String> -Title <String> -TimeZoneId <UInt32> [-Language <UInt32>] [-Description <String>] [-TemplateIds <String[]>] [-QuickLaunchDisabled] [-UseDifferentPermissionsFromParentSite] DESCRIPTION Allows to create a new team site subsite with no Microsoft 365 group object. EXAMPLES EXAMPLE 1 $site = New-PnPTenantSequenceTeamNoGroupSubSite -Url \"MyTeamSubsite\" -Title \"My Team Site\" -TimeZoneId 4 Creates a new team site subsite object with the specified variables PARAMETERS -Description Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Language Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -QuickLaunchDisabled Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateIds Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TimeZoneId Type: UInt32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UseDifferentPermissionsFromParentSite Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTenantSequenceTeamSite.html": {
    "href": "cmdlets/New-PnPTenantSequenceTeamSite.html",
    "title": "New-PnPTenantSequenceTeamSite | PnP PowerShell",
    "keywords": "New-PnPTenantSequenceTeamSite SYNOPSIS Creates a team site object SYNTAX New-PnPTenantSequenceTeamSite -Alias <String> -Title <String> [-Description <String>] [-DisplayName <String>] [-Classification <String>] [-Public] [-HubSite] [-TemplateIds <String[]>] DESCRIPTION Allows to create a new team site object. EXAMPLES EXAMPLE 1 $site = New-PnPTenantSequenceTeamSite -Alias \"MyTeamSite\" -Title \"My Team Site\" Creates a new team site object with the specified variables PARAMETERS -Alias Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Classification Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HubSite Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Public Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateIds Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTenantSite.html": {
    "href": "cmdlets/New-PnPTenantSite.html",
    "title": "New-PnPTenantSite | PnP PowerShell",
    "keywords": "New-PnPTenantSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Creates a new (classic) site collection for the current tenant SYNTAX New-PnPTenantSite -Title <String> -Url <String> -Owner <String> [-Lcid <UInt32>] [-Template <String>] -TimeZone <Int32> [-ResourceQuota <Double>] [-ResourceQuotaWarningLevel <Double>] [-StorageQuota <Int64>] [-StorageQuotaWarningLevel <Int64>] [-RemoveDeletedSite] [-SharingCapability <SharingCapabilities>] [-Wait] [-Connection <PnPConnection>] DESCRIPTION The New-PnPTenantSite cmdlet creates a new site collection for the current company. However, creating a new SharePoint Online site collection fails if a deleted site with the same URL exists in the Recycle Bin EXAMPLES EXAMPLE 1 New-PnPTenantSite -Title Contoso -Url \"https://tenant.sharepoint.com/sites/contoso\" -Owner user@example.org -TimeZone 4 -Template STS#0 This will add a site collection with the title 'Contoso', the url 'https://tenant.sharepoint.com/sites/contoso', the timezone 'UTC+01:00',the owner 'user@example.org' and the template used will be STS#0, a TeamSite EXAMPLE 2 New-PnPTenantSite -Title Contoso -Url /sites/contososite -Owner user@example.org -TimeZone 4 -Template STS#0 This will add a site collection with the title 'Contoso', the url 'https://tenant.sharepoint.com/sites/contososite' of which the base part will be picked up from your current connection, the timezone 'UTC+01:00', the owner 'user@example.org' and the template used will be STS#0, a TeamSite PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid Specifies the language of this site collection. For more information, see Locale IDs supported by SharePoint at https://github.com/pnp/powershell/wiki/Supported-LCIDs-by-SharePoint. To get the list of supported languages on a SharePoint environment use: Get-PnPAvailableLanguage. Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner Specifies the user name of the site collection's primary owner. The owner must be a user instead of a security group or an email-enabled security group. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveDeletedSite Specifies if any existing site with the same URL should be removed from the recycle bin Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceQuota Specifies the quota for this site collection in Sandbox Solutions units. This value must not exceed the company's aggregate available Sandbox Solutions quota. The default value is 0. For more information, see Resource Usage Limits on Sandbox Solutions in SharePoint 2010 : https://learn.microsoft.com/previous-versions/office/developer/sharepoint-2010/gg615462(v=office.14). Type: Double Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceQuotaWarningLevel Specifies the warning level for the resource quota. This value must not exceed the value set for the ResourceQuota parameter Type: Double Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StorageQuota Specifies the storage quota for this site collection in megabytes. This value must not exceed the company's available quota. Type: Int64 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StorageQuotaWarningLevel Specifies the warning level for the storage quota in megabytes. This value must not exceed the values set for the StorageQuota parameter Type: Int64 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template Specifies the site collection template type. Use the Get-PnPWebTemplates cmdlet to get the list of valid templates. If no template is specified, one can be added later. The Template and LocaleId parameters must be a valid combination as returned from the Get-PnPWebTemplates cmdlet. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TimeZone Use Get-PnPTimeZoneId to retrieve possible timezone values Type: Int32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Specifies the title of the new site collection Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Specifies the full URL of the new site collection. It must be in a valid managed path in the company's site. For example, for company contoso, valid managed paths are https://contoso.sharepoint.com/sites and https://contoso.sharepoint.com/teams. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait Waits for the site collection to be fully provisioned. Type: SwitchParameter Parameter Sets: (All), (Wait) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingCapability Specifies what the sharing capabilities are for the site. Possible values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly. It will only work if Wait parameter is specified. Type: SwitchParameter Parameter Sets: (Wait) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False Accepted values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTenantTemplate.html": {
    "href": "cmdlets/New-PnPTenantTemplate.html",
    "title": "New-PnPTenantTemplate | PnP PowerShell",
    "keywords": "New-PnPTenantTemplate SYNOPSIS Creates a new tenant template object SYNTAX New-PnPTenantTemplate [-Author <String>] [-Description <String>] [-DisplayName <String>] [-Generator <String>] DESCRIPTION Allows to create a new tenant template object. EXAMPLES EXAMPLE 1 $template = New-PnPTenantTemplate Creates a new instance of a tenant template object. PARAMETERS -Author Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Generator Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTerm.html": {
    "href": "cmdlets/New-PnPTerm.html",
    "title": "New-PnPTerm | PnP PowerShell",
    "keywords": "New-PnPTerm SYNOPSIS Creates a taxonomy term SYNTAX New-PnPTerm -Name <String> [-Id <Guid>] [-Lcid <Int32>] [-TermSet] <TaxonomyTermSetPipeBind> -TermGroup <TaxonomyTermGroupPipeBind> [-Description <String>] [-CustomProperties <Hashtable>] [-LocalCustomProperties <Hashtable>] [-TermStore <TaxonomyTermStorePipeBind>] DESCRIPTION This cmdlet adds a new taxonomy term to a given termset. EXAMPLES Example 1 New-PnPTerm -TermSet \"Departments\" -TermGroup \"Corporate\" -Name \"Finance\" Creates a new taxonomy term named \"Finance\" in the termset Departments which is located in the \"Corporate\" termgroup Example 2 New-PnPTerm -TermSet \"Departments\" -TermGroup \"Corporate\" -Name \"Finance\" -CustomProperties @{\"IsCorporate\"=\"True\"} Creates a new taxonomy term named \"Finance\" in the termset Departments which is located in the \"Corporate\" termgroup and sets a custom property on the termset. PARAMETERS -CustomProperties Sets custom properties. Type: Hashtable Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Descriptive text to help users understand the intended use of this term. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id The Id to use for the term; if not specified, or provided with an empty GUID, a random GUID is generated and used. Type: Guid Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid The locale id to use for the term. Defaults to the default language of the termstore. Type: Int32 Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LocalCustomProperties Sets local custom properties Type: Hashtable Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The name of the term. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermGroup The termgroup to create the term in. Type: TaxonomyTermGroupPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermSet The termset to add the term to. Type: TaxonomyTermSetPipeBind Parameter Sets: (All) Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: TermStoreName Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTermGroup.html": {
    "href": "cmdlets/New-PnPTermGroup.html",
    "title": "New-PnPTermGroup | PnP PowerShell",
    "keywords": "New-PnPTermGroup SYNOPSIS Creates a taxonomy term group SYNTAX New-PnPTermGroup -Name <String> [-Id <Guid>] [-Description <String>] [-TermStore <PnP.PowerShell.Commands.Base.PipeBinds.GenericObjectNameIdPipeBind`1[Microsoft.SharePoint.Client.Taxonomy.TermStore]>] [-Contributors <string []>] [-Managers <string []>] [-Connection <PnPConnection>] DESCRIPTION Allows to create a taxonomy term group. EXAMPLES EXAMPLE 1 New-PnPTermGroup -GroupName \"Countries\" Creates a new taxonomy term group named \"Countries\" EXAMPLE 2 New-PnPTermGroup -GroupName \"Countries\" -Contributors @(\"i:0#.f|membership|pradeepg@gautamdev.onmicrosoft.com\",\"i:0#.f|membership|adelev@gautamdev.onmicrosoft.com\") -Managers @(\"i:0#.f|membership|alexw@gautamdev.onmicrosoft.com\",\"i:0#.f|membership|diegos@gautamdev.onmicrosoft.com\") Creates a new taxonomy term group named \"Countries\" and sets the users as contributors and managers of the term group. The user names for contributors and managers need to be encoded claim for the specified login names. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Description to use for the term group. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id GUID to use for the term group; if not specified, or the empty GUID, a random GUID is generated and used. Type: Guid Parameter Sets: (All) Aliases: GroupId Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Name of the taxonomy term group to create. Type: String Parameter Sets: (All) Aliases: GroupName Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to add the group to; if not specified the default term store is used. Type: PnP.PowerShell.Commands.Base.PipeBinds.GenericObjectNameIdPipeBind`1[Microsoft.SharePoint.Client.Taxonomy.TermStore] Parameter Sets: (All) Aliases: TermStoreName Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Managers The manager of the term group who can create/edit term sets in the group as well as add/remove contributors. The user names for managers need to be encoded claim for the specified login names. Type: string[] Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Contributors The contributor to the term group who can create/edit term sets in the group. The user names for contributors need to be encoded claim for the specified login names. Type: string[] Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTermLabel.html": {
    "href": "cmdlets/New-PnPTermLabel.html",
    "title": "New-PnPTermLabel | PnP PowerShell",
    "keywords": "New-PnPTermLabel SYNOPSIS Creates a localized label for a taxonomy term SYNTAX New-PnPTermLabel -Term <TaxonomyTermPipeBind> -Name <String> -Lcid <Int32> [-IsDefault] DESCRIPTION Creates a localized label for a taxonomy term. Use Get-PnPTerm -Include Labels to request the current labels on a taxonomy term. Setting -IsDefault:$false, will make a new label a synonym. EXAMPLES EXAMPLE 1 New-PnPTermLabel -Name \"Finanzwesen\" -Lcid 1031 -Term (Get-PnPTerm -Identity \"Finance\" -TermSet \"Departments\" -TermGroup \"Corporate\") Creates a new localized taxonomy label in German (LCID 1031) named \"Finanzwesen\" for the term \"Finance\" in the termset Departments which is located in the \"Corporate\" termgroup EXAMPLE 2 Get-PnPTerm -Identity \"Finance\" -TermSet \"Departments\" -TermGroup \"Corporate\" | New-PnPTermLabel -Name \"Finanzwesen\" -Lcid 1031 Creates a new localized taxonomy label in German (LCID 1031) named \"Finanzwesen\" for the term \"Finance\" in the termset Departments which is located in the \"Corporate\" termgroup EXAMPLE 3 Get-PnPTerm -Identity \"Finance\" -TermSet \"Departments\" -TermGroup \"Corporate\" | New-PnPTermLabel -Name \"Finanzwesen\" -Lcid 1031 -IsDefault:$false Creates a new localized taxonomy label in German (LCID 1031) named \"Finanzwesen\" for the term \"Finance\" in the termset Departments which is located in the \"Corporate\" termgroup and make it a synonym. PARAMETERS -IsDefault Makes this new label the default label Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid The locale id to use for the localized term Type: Int32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The localized name of the term Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Term The term to add the localized label to. Type: TaxonomyTermPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTermSet.html": {
    "href": "cmdlets/New-PnPTermSet.html",
    "title": "New-PnPTermSet | PnP PowerShell",
    "keywords": "New-PnPTermSet SYNOPSIS Creates a taxonomy term set SYNTAX New-PnPTermSet -Name <String> [-Id <Guid>] [-Lcid <Int32>] -TermGroup <TermGroupPipeBind> [-Contact <String>] [-Description <String>] [-IsOpenForTermCreation] [-IsNotAvailableForTagging] [-Owner <String>] [-StakeHolders <String[]>] [-CustomProperties <Hashtable>] [-TermStore <PnP.PowerShell.Commands.Base.PipeBinds.GenericObjectNameIdPipeBind`1[Microsoft.SharePoint.Client.Taxonomy.TermStore]>] [-Connection <PnPConnection>] DESCRIPTION Allows to create a taxonomy term set. EXAMPLES EXAMPLE 1 New-PnPTermSet -Name \"Department\" -TermGroup \"Corporate\" Creates a new termset named \"Department\" in the group named \"Corporate\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Contact An e-mail address for term suggestion and feedback. If left blank the suggestion feature will be disabled. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CustomProperties Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Descriptive text to help users understand the intended use of this term set. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id The Id to use for the term set; if not specified, or the empty GUID, a random GUID is generated and used. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsNotAvailableForTagging By default a term set is available to be used by end users and content editors of sites consuming this term set. Specify this switch to turn this off Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsOpenForTermCreation When a term set is closed, only metadata managers can add terms to this term set. When it is open, users can add terms from a tagging application. Not specifying this switch will make the term set closed. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid The locale id to use for the term set. Defaults to the current locale id. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The name of the termset. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Owner The primary user or group of this term set. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StakeHolders People and groups in the organization that should be notified before major changes are made to the term set. You can enter multiple users or groups. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermGroup Name, id or actually termgroup to create the termset in. Type: TermGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: PnP.PowerShell.Commands.Base.PipeBinds.GenericObjectNameIdPipeBind`1[Microsoft.SharePoint.Client.Taxonomy.TermStore] Parameter Sets: (All) Aliases: TermStoreName Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTodoList.html": {
    "href": "cmdlets/New-PnPTodoList.html",
    "title": "New-PnPTodoList | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. New-PnPTodoList SYNOPSIS Required Permissions Microsoft Graph API : One of Tasks.ReadWrite, Tasks.ReadWrite.All Creates a new todo list. SYNTAX New-PnPTodoList [[-DisplayName] <String>] [-[User] <AzureADUserPipeBind>] DESCRIPTION Use the cmdlet to create a Todo list. EXAMPLES EXAMPLE 1 New-PnPTodoList -DisplayName \"Travel items\" This will create a todo list associated with your (logged-in user) account. EXAMPLE 2 New-PnPTodoList -User john@doe.com -DisplayName \"Travel Items\" This will create a todo list associated with John's account. PARAMETERS -DisplayName Display name of the Todo list. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User The UPN, Id or instance of an Azure AD user for which you would like to create the todo list. Type: AzureADUserPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPUPABulkImportJob.html": {
    "href": "cmdlets/New-PnPUPABulkImportJob.html",
    "title": "New-PnPUPABulkImportJob | PnP PowerShell",
    "keywords": "New-PnPUPABulkImportJob SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Submit up a new user profile bulk import job. SYNTAX New-PnPUPABulkImportJob [-Folder] <String> [-Path] <String> [-UserProfilePropertyMapping] <Hashtable> [-IdProperty] <String> [[-IdType] <ImportProfilePropertiesUserIdType>] [-Wait] [-Verbose] [-Connection <PnPConnection>] [-WhatIf] New-PnPUPABulkImportJob -Url <String> [-UserProfilePropertyMapping] <Hashtable> [-IdProperty] <String> [[-IdType] <ImportProfilePropertiesUserIdType>] [-Wait] [-Verbose] [-Connection <PnPConnection>] [-WhatIf] DESCRIPTION See https://learn.microsoft.com/sharepoint/dev/solution-guidance/bulk-user-profile-update-api-for-sharepoint-online for information on the API and how the bulk import process works. EXAMPLES EXAMPLE 1 @\" { \"value\": [ { \"IdName\": \"mikaels@contoso.com\", \"Department\": \"PnP\", }, { \"IdName\": \"vesaj@contoso.com\", \"Department\": \"PnP\", } ] } \"@ > profiles.json New-PnPUPABulkImportJob -Folder \"Shared Documents\" -Path profiles.json -IdProperty \"IdName\" -UserProfilePropertyMapping @{\"Department\"=\"Department\"} This will submit a new user profile bulk import job to SharePoint Online using a local file. EXAMPLE 2 New-PnPUPABulkImportJob -Url \"https://{tenant}.sharepoint.com/Shared Documents/profiles.json\" -IdProperty \"IdName\" -UserProfilePropertyMapping @{\"Department\"=\"Department\"} This will submit a new user profile bulk import job to SharePoint Online using an already uploaded file. EXAMPLE 3 New-PnPUPABulkImportJob -Url \"https://{tenant}.sharepoint.com/sites/userprofilesync/Shared Documents/profiles.json\" -IdProperty \"IdName\" -UserProfilePropertyMapping @{\"Department\"=\"Department\"} -Wait -Verbose This will submit a new user profile bulk import job to SharePoint Online using an already uploaded file and will wait until the import has finished. PARAMETERS -Folder Site or server relative URL of the folder to where you want to store the import job file. Type: String Parameter Sets: Submit up a new user profile bulk import job from local file Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -IdProperty The name of the property identifying the user in your JSON file to update the user profile for Type: String Parameter Sets: (All) Required: True Position: 3 Default value: None Accept pipeline input: False Accept wildcard characters: False -IdType The type of profile identifier (Email/CloudId/PrincipalName). Defaults to Email. Type: ImportProfilePropertiesUserIdType Parameter Sets: (All) Accepted values: Email, CloudId, PrincipalName Required: False Position: 4 Default value: Email Accept pipeline input: False Accept wildcard characters: False -Path The local file path of the JSON file to use for the user profile import Type: String Parameter Sets: Submit up a new user profile bulk import job from local file Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The full url of the JSON file saved in SharePoint Online containing the identities and properties to import into the SharePoint Online User Profiles Type: String Parameter Sets: Submit up a new user profile bulk import job job from url Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UserProfilePropertyMapping Specify user profile property mapping between the import file and UPA property names, i.e. @{\"JobTitle\"=\"Title\"} where the left side represents the property in the JSON file and the right side the name of the property in the SharePoint Online User Profile Service. Type: Hashtable Parameter Sets: (All) Required: True Position: 2 Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait Adding this parameter will cause the script to start the user profile sync operation and wait with proceeding with the rest of the script until the user profiles have been imported into the SharePoint Online user profile. It can take a long time for the user profile sync operation to complete. It will check every 30 seconds for the current status of the job, to avoid getting throttled. The check interval is non configurable. Add -Verbose as well to be notified about the progress while waiting. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while going through the user profile sync steps. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Bulk update custom user profile properties for SharePoint Online"
  },
  "cmdlets/New-PnPUser.html": {
    "href": "cmdlets/New-PnPUser.html",
    "title": "New-PnPUser | PnP PowerShell",
    "keywords": "New-PnPUser SYNOPSIS Adds a user to the built-in Site User Info List and returns a user object SYNTAX New-PnPUser -LoginName <String> [-Connection <PnPConnection>] DESCRIPTION Allows to add a user to current site. EXAMPLES EXAMPLE 1 New-PnPUser -LoginName user@company.com Adds a new user with the login user@company.com to the current site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LoginName The users login name (user@company.com) Type: String Parameter Sets: (All) Aliases: LogonName Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPVivaEngageCommunity.html": {
    "href": "cmdlets/New-PnPVivaEngageCommunity.html",
    "title": "New-PnPVivaEngageCommunity | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. New-PnPVivaEngageCommunity SYNOPSIS Creates a Viva engage community SYNTAX New-PnPVivaEngageCommunity [[-DisplayName] <string> [-Description] <string> [-Privacy] <CommunityPrivacy>] [-Connection <PnPConnection>] DESCRIPTION Creates a Viva engage community EXAMPLES EXAMPLE 1 New-PnPVivaEngageCommunity -DisplayName \"myPnPDemo1\" -Description \"Viva engage community description\" -Privacy Public This will create a new Viva engage community with specified display name, description and the privacy setting. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The display name of the Viva engage community. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Description The description of the Viva engage community. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Privacy The privacy setting of the Viva engage community. Type: CommunityPrivacy Parameter Sets: (All) Required: False Position: Named Default value: Private Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPWeb.html": {
    "href": "cmdlets/New-PnPWeb.html",
    "title": "New-PnPWeb | PnP PowerShell",
    "keywords": "New-PnPWeb SYNOPSIS Creates a new subweb under the current web SYNTAX New-PnPWeb -Title <String> -Url <String> [-Description <String>] [-Locale <Int32>] -Template <String> [-BreakInheritance] [-InheritNavigation] [-Connection <PnPConnection>] DESCRIPTION Allows to create new subweb under the current web. EXAMPLES EXAMPLE 1 New-PnPWeb -Title \"Project A Web\" -Url projectA -Description \"Information about Project A\" -Locale 1033 -Template \"STS#0\" Creates a new subweb under the current web with URL projectA PARAMETERS -BreakInheritance By default the subweb will inherit its security from its parent, specify this switch to break this inheritance Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the new web Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InheritNavigation Specifies whether the site inherits navigation. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Locale The language id of the new web. default = 1033 for English Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template The site definition template to use for the new web, e.g. STS#0. Use Get-PnPWebTemplates to fetch a list of available templates Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the new web Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The URL of the new web Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnpProfileCardProperty.html": {
    "href": "cmdlets/New-PnpProfileCardProperty.html",
    "title": "New-PnpProfileCardProperty | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. New-PnpProfileCardProperty SYNOPSIS Required Permissions Microsoft Graph API : PeopleSettings.ReadWrite.All Adds a property to user profile card SYNTAX New-PnpProfileCardProperty -PropertyName <ProfileCardPropertyName> -DisplayName <String> [-Localizations <Hashtable>] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet may be used to add a property to user profile card. Please note that it may take up to 24 hours to reflect the changes. EXAMPLES EXAMPLE 1 New-PnpProfileCardProperty -PropertyName CustomAttribute1 -DisplayName \"Cost Centre\" This cmdlet will add a property with a display name to user profile card. EXAMPLE 2 $localizations = @{ \"pl\" = \"Centrum kosztów\"; \"de\" = \"Kostenstelle\" } New-PnpProfileCardProperty -PropertyName CustomAttribute1 -DisplayName \"Cost Centre\" -Localizations $localizations This cmdlet will add a property with a display name and specified localizations to user profile card. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PropertyName Name of a property to be added Type: Commands.Enums.ProfileCardPropertyName Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The display name of the property. Type: String Parameter Sets: (All) Required: True Default value: None Accept pipeline input: False Accept wildcard characters: False -Localizations List of display name localizations Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Publish-PnPApp.html": {
    "href": "cmdlets/Publish-PnPApp.html",
    "title": "Publish-PnPApp | PnP PowerShell",
    "keywords": "Publish-PnPApp SYNOPSIS Publishes/Deploys/Trusts an available app in the app catalog SYNTAX Publish-PnPApp [-Identity] <AppMetadataPipeBind> [-SkipFeatureDeployment] [-Scope <AppCatalogScope>] [-Connection <PnPConnection>] [-Force <SwitchParameter>] DESCRIPTION Allows to deploy/trust an available app in the app catalog. EXAMPLES EXAMPLE 1 Publish-PnPApp -Identity 2646ccc3-6a2b-46ef-9273-81411cbbb60f This will deploy/trust an app into the app catalog. Notice that the app needs to be available in the tenant scoped app catalog EXAMPLE 2 Publish-PnPApp -Identity 2646ccc3-6a2b-46ef-9273-81411cbbb60f -Scope Site This will deploy/trust an app into the app catalog. Notice that the app needs to be available in the site collection scoped app catalog PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the Id of the app Type: AppMetadataPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Defines which app catalog to use. Defaults to Tenant Type: AppCatalogScope Parameter Sets: (All) Accepted values: Tenant, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SkipFeatureDeployment Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to change no-script setting. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Publish-PnPContentType.html": {
    "href": "cmdlets/Publish-PnPContentType.html",
    "title": "Publish-PnPContentType | PnP PowerShell",
    "keywords": "Publish-PnPContentType SYNOPSIS Required Permissions Fullcontrol permission on the content type hub site. Publishes or republishes a content type present on content type hub site. SYNTAX Publish-PnPContentType -ContentType <ContentTypePipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to publish a content type present on content type hub site. To check if a content type has been published already, you can use Get-PnPContentTypePublishingStatus. EXAMPLES EXAMPLE 1 Publish-PnPContentType -ContentType 0x0101 This will publish the content type with the given id. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The content type object in the content type hub site which is to be published. Type: ContentType Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Publish-PnPSyntexModel.html": {
    "href": "cmdlets/Publish-PnPSyntexModel.html",
    "title": "Publish-PnPSyntexModel | PnP PowerShell",
    "keywords": "Publish-PnPSyntexModel SYNOPSIS Publishes Microsoft Syntex models to a list. This cmdlet only works when you've connected to a Syntex Content Center site. SYNTAX Single Publish-PnPSyntexModel -Model <SyntexModelPipeBind> -ListWebUrl <string> -List <ListPipeBind> [-PublicationViewOption <MachineLearningPublicationViewOption>] [-Connection <PnPConnection>] Batched Publish-PnPSyntexModel -Model <SyntexModelPipeBind> -TargetSiteUrl <string> -TargetWebServerRelativeUrl <string> -TargetLibraryServerRelativeUrl <string> -Batch <PnPBatch> [-PublicationViewOption <MachineLearningPublicationViewOption>] [-Connection <PnPConnection>] DESCRIPTION This command publishes Syntex document processing models to a list. EXAMPLES EXAMPLE 1 Publish-PnPSyntexModel -Model \"Invoice model\" -ListWebUrl \"https://contoso.sharepoint.com/sites/finance\" -List \"Documents\" Publishes the document processing model named \"Invoice model\" to the list named \"Documents\" in the /sites/finance web. EXAMPLE 2 Publish-PnPSyntexModel -Model \"Invoice model\" -TargetSiteUrl \"https://contoso.sharepoint.com/sites/finance\" -TargetWebServerRelativeUrl \"/sites/finance\" -TargetLibraryServerRelativeUrl \"/sites/finance/shared%20documents\" -Batch $batch Adds the publishing of the document processing model named \"Invoice model\" to the \"Shared Documents\" library into the PnPBatch $batch. Use Invoke-PnPBatch -Batch $batch to execute the batch, use $batch = New-PnPBatch to create a batch. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Model The name or id of the Syntex model. Type: SyntexModelPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ListWebUrl Url of the web hosting the list to publish the model to. Type: String Parameter Sets: Single Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The name or id of the list to publish the model to. Type: ListPipeBind Parameter Sets: Single Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetSiteUrl The fully qualified URL of the site collection hosting the library to publish the model to. Type: String Parameter Sets: Batched Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetWebServerRelativeUrl The server relative url of the web hosting the library to publish the model to. Type: String Parameter Sets: Batched Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetLibraryServerRelativeUrl The server relative url of the library to publish the model to. Type: String Parameter Sets: Batched Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Batch The batch to add this publish request to. Type: PnPBatch Parameter Sets: Batched Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -PublicationViewOption The view options to apply when publishing the model to the list. Type: MachineLearningPublicationViewOption Parameter Sets: (All) Accepted values: NewView, NewViewAsDefault, NoNewView Required: False Position: Named Default value: NewViewAsDefault Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Read-PnPSiteTemplate.html": {
    "href": "cmdlets/Read-PnPSiteTemplate.html",
    "title": "Read-PnPSiteTemplate | PnP PowerShell",
    "keywords": "Read-PnPSiteTemplate SYNOPSIS Loads/Reads a PnP file from the file system, string or stream SYNTAX By Path Read-PnPSiteTemplate [-Path] <String> [-TemplateProviderExtensions <ITemplateProviderExtension[]>] By XML Read-PnPSiteTemplate [-Xml] <String> [-TemplateProviderExtensions <ITemplateProviderExtension[]>] From a Stream Read-PnPSiteTemplate [-Stream] <Stream> [-TemplateProviderExtensions <ITemplateProviderExtension[]>] DESCRIPTION This cmdlet allows you to read a PnP Provisioning Template from disk, by passing in XML as text or from a stream to keep it in memory and not needing to physically save the template anywhere. The template can be modified in memory if needed and then applied to a site. EXAMPLES EXAMPLE 1 Read-PnPSiteTemplate -Path template.pnp Loads a PnP file from the file system EXAMPLE 2 Read-PnPSiteTemplate -Path template.pnp -TemplateProviderExtensions $extensions Loads a PnP file from the file system using some custom template provider extensions while loading the file. EXAMPLE 3 Read-PnPSiteTemplate -Xml $xml Reads a PnP Provisioning template from a string containing the XML of a provisioning template EXAMPLE 4 $stream = Get-PnPFile -Url \"/sites/templates/Site Templates/sample1.pnp\" -AsMemoryStream Read-PnPSiteTemplate -Stream $stream Downloads the contents of a PnP Provisioning template from a SharePoint Online location in memory and parses it as a PnP Provisioning Template PARAMETERS -Path Filename to read from, optionally including full path. Type: String Parameter Sets: By Path Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while loading the template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Xml Variable to read from, containing the valid XML of a provisioning template. Type: String Parameter Sets: By XML Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -Stream Stream containing an XML or PNP provisioning template package Type: Stream Parameter Sets: By Stream Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Read-PnPTenantTemplate.html": {
    "href": "cmdlets/Read-PnPTenantTemplate.html",
    "title": "Read-PnPTenantTemplate | PnP PowerShell",
    "keywords": "Read-PnPTenantTemplate SYNOPSIS Loads/Reads a PnP tenant template from the file system and returns an in-memory instance of this template. SYNTAX By Path (default) Read-PnPTenantTemplate -Path <String> By Stream Read-PnPTenantTemplate -Stream <Stream> By XML Read-PnPTenantTemplate -Xml <String> DESCRIPTION Allows to load a PnP tenant template from the file system, from a stream or from a string to memory and return its instance object. EXAMPLES EXAMPLE 1 Read-PnPTenantTemplate -Path template.pnp Reads a PnP tenant template file from the file system and returns an in-memory instance EXAMPLE 2 $template = Get-PnPFile \"/sites/config/Templates/Default.xml\" -AsMemoryStream Read-PnPTenantTemplate -Stream $template Downloads a PnP Tenant template from the provided location into memory and parses its contents into a TenantTemplate instance which can then be modified and passed on to the Apply-PnPTenantTemplate cmdlet without needing to write anything to disk PARAMETERS -Path Filename to read from, optionally including full path. Type: String Parameter Sets: By Path Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Stream A stream containing the PnP tenant template. Type: String Parameter Sets: By Stream Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Xml A string containing the XML of the PnP tenant template. Type: String Parameter Sets: By XML Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Receive-PnPCopyMoveJobStatus.html": {
    "href": "cmdlets/Receive-PnPCopyMoveJobStatus.html",
    "title": "Receive-PnPCopyMoveJobStatus | PnP PowerShell",
    "keywords": "Receive-PnPCopyMoveJobStatus SYNOPSIS This cmdlets receives Copy or Move job status which is being returned by Copy-PnPFile or Move-PnPFile when using the -NoWait parameter SYNTAX Receive-PnPCopyMoveJobStatus -Job <CopyMigrationInfo> [-Wait] DESCRIPTION This cmdlets outputs the results of a pending/finished copy or move job. EXAMPLES Example 1 $job = Copy-PnPFile -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"SubSite2/Shared Documents\" -NoWait $jobStatus = Receive-PnPCopyMoveJobStatus -Job $job if($jobStatus.JobState == 0) { Write-Host \"Job finished\" } Copies a file named company.docx from the current document library to the documents library in SubSite2. It will not wait for the action to return but returns job information instead. The Receive-PnPCopyMoveJobStatus cmdlet will return the job status. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Job The job which is returned from Copy-PnPFile or Move-PnPFile Type: CopyMigrationInfo Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait If specified the cmdlet will continue to poll the job to be finished. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Register-PnPAppCatalogSite.html": {
    "href": "cmdlets/Register-PnPAppCatalogSite.html",
    "title": "Register-PnPAppCatalogSite | PnP PowerShell",
    "keywords": "Register-PnPAppCatalogSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Creates a new App Catalog Site and sets this site as the Tenant App Catalog SYNTAX Register-PnPAppCatalogSite -Url <String> -Owner <String> -TimeZoneId <Int32> [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to create a new App Catalog Site and sets this site as the Tenant App Catalog. EXAMPLES EXAMPLE 1 Register-PnPAppCatalogSite -Url \"https://yourtenant.sharepoint.com/sites/appcatalog\" -Owner admin@domain.com -TimeZoneId 4 This will create a new appcatalog site if no app catalog is already present. Use -Force to create a new appcatalog site if one has already been registered. If using the same URL as an existing one and Force is present, the current/existing appcatalog site will be deleted. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If specified, and an app catalog is already present, a new app catalog site will be created. If the same URL is used the existing/current app catalog site will be deleted first. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner The login account of the user designated to be the admin for the site, e.g. user@domain.com Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TimeZoneId Use Get-PnPTimeZoneId to retrieve possible timezone values Type: Int32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The full url of the app catalog site to be created, e.g. https://yourtenant.sharepoint.com/sites/appcatalog Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Register-PnPAzureADApp.html": {
    "href": "cmdlets/Register-PnPAzureADApp.html",
    "title": "Register-PnPAzureADApp | PnP PowerShell",
    "keywords": "Register-PnPAzureADApp SYNOPSIS Registers an Azure AD App and optionally creates a new self-signed certificate to use with the application registration. SYNTAX Generate Certificate Register-PnPAzureADApp -ApplicationName <String> -Tenant <String> [-DeviceLogin] [-CommonName <String>] [-OutPath <String>] [-Store <StoreLocation>] [-GraphApplicationPermissions <Permission[]>] [-GraphDelegatePermissions <Permission[]>] [-SharePointApplicationPermissions <Permission[]>] [-SharePointDelegatePermissions <Permission[]>] [-Country <String>] [-State <String>] [-Locality <String>] [-Organization <String>] [-OrganizationUnit <String>] [-ValidYears <Int>] [-CertificatePassword <SecureString>] [-LogoFilePath <string>] [-MicrosoftGraphEndPoint <string>] [-EntraIDLoginEndPoint <string>] [-SignInAudience <EntraIDSignInAudience>] Existing Certificate Register-PnPAzureADApp -CertificatePath <String> -ApplicationName <String> -Tenant <String> [-DeviceLogin] [-GraphApplicationPermissions <Permission[]>] [-GraphDelegatePermissions <Permission[]>] [-SharePointApplicationPermissions <Permission[]>] [-SharePointDelegatePermissions <Permission[]>] [-CertificatePassword <SecureString>] [-LogoFilePath <string>] DESCRIPTION Registers an Azure AD App and optionally creates a new self-signed certificate to use with the application registration. Note: if you want to use the newly created app to authenticate with username/password. Use Register-PnPEntraIDAppForInteractiveLogin to create an app that allows users to login with. EXAMPLES EXAMPLE 1 Register-PnPAzureADApp -ApplicationName TestApp -Tenant yourtenant.onmicrosoft.com -Store CurrentUser Creates a new Azure AD Application registration, creates a new self signed certificate, and adds it to the local certificate store. It will upload the certificate to the azure app registration and it will request the following permissions: Sites.FullControl.All, Group.ReadWrite.All, User.Read.All. A browser window will be shown allowing you to authenticate. EXAMPLE 2 Register-PnPAzureADApp -ApplicationName TestApp -Tenant yourtenant.onmicrosoft.com -CertificatePath c:\\certificate.pfx -CertificatePassword (ConvertTo-SecureString -String \"password\" -AsPlainText -Force) Creates a new Azure AD Application registration which will use the existing private key certificate at the provided path to allow access. It will upload the provided private key certificate to the azure app registration and it will request the following permissions: Sites.FullControl.All, Group.ReadWrite.All, User.Read.All. A browser window will be shown allowing you to authenticate. EXAMPLE 3 Register-PnPAzureADApp -ApplicationName TestApp -Tenant yourtenant.onmicrosoft.com -Store CurrentUser -GraphApplicationPermissions \"User.Read.All\" -SharePointApplicationPermissions \"Sites.Read.All\" Creates a new Azure AD Application registration, creates a new self signed certificate, and adds it to the local certificate store. It will upload the certificate to the azure app registration and it will request the following permissions: Sites.Read.All, User.Read.All. A browser window will be shown allowing you to authenticate. EXAMPLE 4 Register-PnPAzureADApp -ApplicationName TestApp -Tenant yourtenant.onmicrosoft.com -OutPath c:\\ -CertificatePassword (ConvertTo-SecureString -String \"password\" -AsPlainText -Force) Creates a new Azure AD Application registration, creates a new self signed certificate, and stores the public and private key certificates in c:. The private key certificate will be locked with the password \"password\". It will upload the certificate to the azure app registration and it will request the following permissions: Sites.FullControl.All, Group.ReadWrite.All, User.Read.All. A browser window will be shown allowing you to authenticate. EXAMPLE 5 Register-PnPAzureADApp -DeviceLogin -ApplicationName TestApp -Tenant yourtenant.onmicrosoft.com -CertificatePath c:\\certificate.pfx -CertificatePassword (ConvertTo-SecureString -String \"password\" -AsPlainText -Force) Creates a new Azure AD Application registration and asks you to authenticate using device login methods, creates a new self signed certificate, and adds it to the local certificate store. It will upload the certificate to the azure app registration and it will request the following permissions: Sites.FullControl.All, Group.ReadWrite.All, User.Read.All EXAMPLE 6 Register-PnPAzureADApp -ApplicationName TestApp -Tenant yourtenant.onmicrosoft.com -CertificatePath c:\\certificate.pfx -CertificatePassword (ConvertTo-SecureString -String \"password\" -AsPlainText -Force) Creates a new Azure AD Application registration and asks you to authenticate using username and password, creates a new self signed certificate, and adds it to the local certificate store. It will upload the certificate to the azure app registration and it will request the following permissions: Sites.FullControl.All, Group.ReadWrite.All, User.Read.All EXAMPLE 7 Register-PnPAzureADApp -ApplicationName TestApp -Tenant yourtenant.onmicrosoft.com -CertificatePath c:\\certificate.pfx -CertificatePassword (ConvertTo-SecureString -String \"password\" -AsPlainText -Force) -LogoFilePath c:\\logo.png Creates a new Azure AD Application registration which will use the existing private key certificate at the provided path to allow access. It will upload the provided private key certificate to the azure app registration and it will request the following permissions: Sites.FullControl.All, Group.ReadWrite.All, User.Read.All. It will also set the logo.png file as the logo for the Azure AD app. PARAMETERS -DeviceLogin If specified, a device login flow, supporting Multi-Factor Authentication will be used to authenticate towards the Microsoft Graph. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -ApplicationName The name of the Azure AD Application to create. Type: String Parameter Sets: (All) Required: True Position: Named Accept pipeline input: False -CertificatePassword Optional certificate password. Type: SecureString Parameter Sets: (All) Required: False Position: 8 Accept pipeline input: False -CertificatePath File path to use an existing certificate. Type: String Parameter Sets: Existing Certificate Required: True Position: Named Accept pipeline input: False -CommonName Common Name (e.g. server FQDN or YOUR name). It defaults to 'pnp.contoso.com' Type: String Parameter Sets: Generate Certificate Required: False Position: 0 Accept pipeline input: False -Country Country Name (2 letter code). Type: String Parameter Sets: Generate Certificate Required: False Position: 1 Accept pipeline input: False -Locality Locality Name (eg. city). Type: String Parameter Sets: Generate Certificate Required: False Position: 3 Accept pipeline input: False -Organization Organization Name (eg. company). Type: String Parameter Sets: Generate Certificate Required: False Position: 4 Accept pipeline input: False -OrganizationUnit Organizational Unit Name (eg. section). Type: String Parameter Sets: Generate Certificate Required: False Position: 5 Accept pipeline input: False -OutPath Folder to create certificate files in (.CER and .PFX). Type: String Parameter Sets: Generate Certificate Required: False Position: Named Accept pipeline input: False -GraphApplicationPermissions Specify which Microsoft Graph Application permissions to request. Type: Permission[] Parameter Sets: Generate Certificate Required: False Position: 0 Accept pipeline input: False -GraphDelegatePermissions Specify which Microsoft Graph Delegate permissions to request. Type: Permission[] Parameter Sets: Generate Certificate Required: False Position: 0 Accept pipeline input: False -SharePointApplicationPermissions Specify which Microsoft SharePoint Application permissions to request. Type: Permission[] Parameter Sets: Generate Certificate Required: False Position: 0 Accept pipeline input: False -SharePointDelegatePermissions Specify which Microsoft SharePoint Delegate permissions to request. Type: Permission[] Parameter Sets: Generate Certificate Required: False Position: 0 Accept pipeline input: False -State State or Province Name (full name). Type: String Parameter Sets: Generate Certificate Required: False Position: 2 Accept pipeline input: False -Store Local Certificate Store to add the certificate to. Only works on Microsoft Windows. Type: StoreLocation Parameter Sets: Generate Certificate Required: False Position: Named Accept pipeline input: False -Tenant The identifier of your tenant, e.g. mytenant.onmicrosoft.com Type: String Parameter Sets: (All) Required: True Position: Named Accept pipeline input: False -ValidYears Number of years until expiration (default is 10, max is 30). Type: Int Parameter Sets: Generate Certificate Required: False Position: 7 Accept pipeline input: False -AzureEnvironment The Azure environment to use for authentication, the defaults to 'Production' which is the main Azure environment. Type: AzureEnvironment Parameter Sets: (All) Aliases: Accepted values: Production, PPE, China, Germany, USGovernment, USGovernmentHigh, USGovernmentDoD, Custom Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LogoFilePath Sets the logo for the Azure AD application. Provide a full path to a local image file on your disk which you want to use as the logo. Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -EntraIDLoginEndPoint Sets the EntraID login endpoint to be used for creation of the app. This only works if Azure Environment parameter is set to Custom Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -MicrosoftGraphEndPoint Sets the Microsoft Graph endpoint to be used for creation of the app. This only works if Azure Environment parameter is set to Custom Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SignInAudience Sets the sign in audience. Use this to make the app support Single tenant accounts, Multi-tenant accounts, Multi-tenant + personal accounts & personal accounts only. Type: String Parameter Sets: Generate Certificate Required: False Position: Named Accept pipeline input: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Register-PnPEntraIDApp.html": {
    "href": "cmdlets/Register-PnPEntraIDApp.html",
    "title": "Register-PnPEntraIDApp | PnP PowerShell",
    "keywords": "Register-PnPEntraIDApp SYNOPSIS This is an alias for Register-PnPAzureADApp. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Register-PnPEntraIDAppForInteractiveLogin.html": {
    "href": "cmdlets/Register-PnPEntraIDAppForInteractiveLogin.html",
    "title": "Register-PnPEntraIDAppForInteractiveLogin | PnP PowerShell",
    "keywords": "Register-PnPEntraIDAppForInteractiveLogin SYNOPSIS Registers an Entra ID App for use with Interactive login SYNTAX Generate App using Interactive Login Register-PnPEntraIDAppForInteractiveLogin -ApplicationName <String> -Tenant <String> [-GraphApplicationPermissions <Permission[]>] [-GraphDelegatePermissions <Permission[]>] [-SharePointApplicationPermissions <Permission[]>] [-SharePointDelegatePermissions <Permission[]>] [-LogoFilePath <string>] [-MicrosoftGraphEndPoint <string>] [-EntraIDLoginEndPoint <string>] [-SignInAudience <EntraIDSignInAudience>] Generate App using Device Login Register-PnPEntraIDAppForInteractiveLogin -ApplicationName <String> -Tenant <String> -DeviceLogin [-GraphApplicationPermissions <Permission[]>] [-GraphDelegatePermissions <Permission[]>] [-SharePointApplicationPermissions <Permission[]>] [-SharePointDelegatePermissions <Permission[]>] [-LogoFilePath <string>] [-SignInAudience <EntraIDSignInAudience>] DESCRIPTION Registers an Entra ID App for use with the interactive login on Connect-PnPOnline. By default it assumes an Interactive login, but you can decide to use Device Login auth by specifying -DeviceLogin. EXAMPLES EXAMPLE 1 Register-PnPEntraIDAppForInteractiveLogin -ApplicationName TestApp -Tenant yourtenant.onmicrosoft.com Creates a new Entra ID Application registration. The application will be setup with the following delegate permissions to consent: AllSites.FullControl, Group.ReadWrite.All, User.ReadWrite.All, TermStore.ReadWrite.All. A browser window will be shown allowing you to authenticate. EXAMPLE 2 Register-PnPEntraIDAppForInteractiveLogin -ApplicationName TestApp -Tenant yourtenant.onmicrosoft.com -GraphDelegatePermissions \"Group.Read.All\" -SharePointDelegatePermissions \"AllSites.FullControl\" Creates a new Entra ID Application registration. The application will be setup with the following delegate permissions to consent: Group.Read.All, AllSites.FullControl. A browser window will be shown allowing you to authenticate. PARAMETERS -DeviceLogin If specified, a device login flow, supporting Multi-Factor Authentication will be used to authenticate towards the Microsoft Graph. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -ApplicationName The name of the Azure AD Application to create. Type: String Parameter Sets: (All) Required: True Position: Named Accept pipeline input: False -GraphApplicationPermissions Specify which Microsoft Graph Application permissions to request. Type: Permission[] Parameter Sets: Generate Certificate Required: False Position: 0 Accept pipeline input: False -GraphDelegatePermissions Specify which Microsoft Graph Delegate permissions to request. Type: Permission[] Parameter Sets: Generate Certificate Required: False Position: 0 Accept pipeline input: False -SharePointApplicationPermissions Specify which Microsoft SharePoint Application permissions to request. Type: Permission[] Parameter Sets: Generate Certificate Required: False Position: 0 Accept pipeline input: False -SharePointDelegatePermissions Specify which Microsoft SharePoint Delegate permissions to request. Type: Permission[] Parameter Sets: Generate Certificate Required: False Position: 0 Accept pipeline input: False -Tenant The identifier of your tenant, e.g. mytenant.onmicrosoft.com Type: String Parameter Sets: (All) Required: True Position: Named Accept pipeline input: False -AzureEnvironment The Azure environment to use for authentication, the defaults to 'Production' which is the main Azure environment. Type: AzureEnvironment Parameter Sets: (All) Aliases: Accepted values: Production, PPE, China, Germany, USGovernment, USGovernmentHigh, USGovernmentDoD, Custom Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LogoFilePath Sets the logo for the Azure AD application. Provide a full path to a local image file on your disk which you want to use as the logo. Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -EntraIDLoginEndPoint Sets the EntraID login endpoint to be used for creation of the app. This only works if Azure Environment parameter is set to Custom Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -MicrosoftGraphEndPoint Sets the Microsoft Graph endpoint to be used for creation of the app. This only works if Azure Environment parameter is set to Custom Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SignInAudience Sets the sign in audience. Use this to make the app support Single tenant accounts, Multi-tenant accounts, Multi-tenant + personal accounts & personal accounts only. Type: String Parameter Sets: Generate Certificate Required: False Position: Named Accept pipeline input: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Register-PnPHubSite.html": {
    "href": "cmdlets/Register-PnPHubSite.html",
    "title": "Register-PnPHubSite | PnP PowerShell",
    "keywords": "Register-PnPHubSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Registers a site as a hub site. SYNTAX Register-PnPHubSite -Site <SitePipeBind> [-Principals <String[][]>] [-Connection <PnPConnection>] DESCRIPTION Registers a site as a hub site. EXAMPLES EXAMPLE 1 Register-PnPHubSite -Site \"https://tenant.sharepoint.com/sites/myhubsite\" This example registers the specified site as a hub site. EXAMPLE 2 Register-PnPHubSite -Site \"https://tenant.sharepoint.com/sites/myhubsite\" -Principals \"user@contoso.com\" This example registers the specified site as a hub site and specifies that 'user@contoso.com' be granted rights to the hub site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site The site to register as a hub site. Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Principals Specifies one or more principals (user or group) to be granted rights to the specified hub site. Can be used to filter who can associate sites to this hub site. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Register-PnPManagementShellAccess.html": {
    "href": "cmdlets/Register-PnPManagementShellAccess.html",
    "title": "Register-PnPManagementShellAccess | PnP PowerShell",
    "keywords": "Register-PnPManagementShellAccess SYNOPSIS Registers access to the tenant for the PnP Management Shell Multi-Tenant Azure AD Application. SYNTAX Main Register-PnPManagementShellAccess [-AzureEnvironment <AzureEnvironment>] Show Consent Url Register-PnPManagementShellAccess -ShowConsentUrl [-AzureEnvironment] DESCRIPTION This cmdlet grants access to the tenant for the PnP Management Shell Multi-Tenant Azure AD Application which simplifies the use of OAuth based access for PnP PowerShell when using credentials to authenticate. If you are not an administrator that can consent Azure AD Applications, use the -ShowConsentUrl option. It will ask you to log in and provides you with an URL you can share with a person with appropriate access rights to provide consent for the organization. EXAMPLES EXAMPLE 1 Register-PnPManagementShellAccess Grants access to the tenant for the PnP Management Shell Multi-Tenant Azure AD Application. EXAMPLE 2 Register-PnPManagementShellAccess -ShowConsentUrl Launches the consent flow to grant the PnP Management Shell Azure AD Application delegate access to the tenant and also displays the consent URL which can be shared with Azure AD administrators or Global administrators. EXAMPLE 3 Register-PnPManagementShellAccess -ShowConsentUrl -TenantName yourtenant.onmicrosoft.com Displays the consent URL which can be shared with Azure AD administrators or Global administrators. PARAMETERS -ShowConsentUrl If specified you will be asked to authenticate to acquire the tenant id. An url that can be used to provide consent will be returned. Type: SwitchParameter Parameter Sets: Show Consent Url Required: False Position: Named Accept pipeline input: False Accept wildcard characters: False -AzureEnvironment The Azure environment to use for authentication. It defaults to 'Production' which is the main Azure environment. Type: AzureEnvironment Parameter Sets: (All) Accepted values: Production, PPE, China, Germany, USGovernment Required: False Position: Named Default value: Production Accept pipeline input: False Accept wildcard characters: False -TenantName The name of the tenant. Example - ( yourtenant.onmicrosoft.com) Type: SwitchParameter Parameter Sets: Show Consent Url Required: False Position: Named Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPAdaptiveScopeProperty.html": {
    "href": "cmdlets/Remove-PnPAdaptiveScopeProperty.html",
    "title": "Remove-PnPAdaptiveScopeProperty | PnP PowerShell",
    "keywords": "Remove-PnPAdaptiveScopeProperty SYNOPSIS Removes a value from the current web property bag SYNTAX Remove-PnPAdaptiveScopeProperty [-Key] <String> [-Force] [-Connection <PnPConnection>] DESCRIPTION This cmdlet is used to remove a property bag value. Executing this cmdlet removes a value from the current web property bag just like Remove-PnPPropertyBagValue would do, but also takes care of toggling the noscript value to allow for this to be possible in one cmdlet. Using this cmdlet does therefore require having the SharePoint Online Admin role or equivalent app permissions. EXAMPLES EXAMPLE 1 Remove-PnPAdaptiveScopeProperty -Key MyKey This will remove the value with key MyKey from the current web property bag EXAMPLE 2 Remove-PnPAdaptiveScopeProperty -Key MyKey -Force This will remove the value with key MyKey from the current web property bag without prompting for confirmation PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Key of the property bag value to be removed Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft 365 Information Governance Adaptive policy scopes"
  },
  "cmdlets/Remove-PnPAlert.html": {
    "href": "cmdlets/Remove-PnPAlert.html",
    "title": "Remove-PnPAlert | PnP PowerShell",
    "keywords": "Remove-PnPAlert SYNOPSIS Removes an alert for a user. SYNTAX Remove-PnPAlert [-User <UserPipeBind>] -Identity <AlertPipeBind> [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to remove an alert for a user. EXAMPLES EXAMPLE 1 Remove-PnPAlert -Identity 641ac67f-0ce0-4837-874a-743c8f8572a7 Removes the alert with the specified ID for the current user. EXAMPLE 2 Remove-PnPAlert -Identity 641ac67f-0ce0-4837-874a-743c8f8572a7 -User \"i:0#.f|membership|Alice@contoso.onmicrosoft.com\" Removes the alert with the specified ID for the specified user. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The alert id, or the actual alert object to remove. Type: AlertPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User User to remove the alert for. Accepts User ID, login name or actual User object. Skip this parameter to use the current user. Note: Only site owners can remove alerts for other users. Type: UserPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPApp.html": {
    "href": "cmdlets/Remove-PnPApp.html",
    "title": "Remove-PnPApp | PnP PowerShell",
    "keywords": "Remove-PnPApp SYNOPSIS Removes an app from the app catalog. SYNTAX Remove-PnPApp [-Identity] <AppMetadataPipeBind> [-Scope <AppCatalogScope>] [-Connection <PnPConnection>] [-Force <SwitchParameter>] DESCRIPTION Allows to remove an app from the app catalog. EXAMPLES EXAMPLE 1 Remove-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will remove the specified app from the tenant app catalog. EXAMPLE 2 Remove-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Site This will remove the specified app from the site collection app catalog. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the Id of the Add-in Instance. Type: AppMetadataPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Defines which app catalog to use. Defaults to Tenant. Type: AppCatalogScope Parameter Sets: (All) Accepted values: Tenant, Site Required: False Position: Named Default value: Tenant Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to change no-script setting. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPApplicationCustomizer.html": {
    "href": "cmdlets/Remove-PnPApplicationCustomizer.html",
    "title": "Remove-PnPApplicationCustomizer | PnP PowerShell",
    "keywords": "Remove-PnPApplicationCustomizer SYNOPSIS Removes a SharePoint Framework client side extension application customizer SYNTAX Custom Action Id Remove-PnPApplicationCustomizer [[-Identity] <UserCustomActionPipeBind>] [-Scope <CustomActionScope>] [-Force] [-Connection <PnPConnection>] Client Side Component Id Remove-PnPApplicationCustomizer -ClientSideComponentId <Guid> [-Scope <CustomActionScope>] [-Force] [-Connection <PnPConnection>] DESCRIPTION Removes a SharePoint Framework client side extension application customizer by removing a user custom action from a web or sitecollection. EXAMPLES EXAMPLE 1 Remove-PnPApplicationCustomizer -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 Removes the custom action representing the client side extension registration with the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2'. EXAMPLE 2 Remove-PnPApplicationCustomizer -ClientSideComponentId aa66f67e-46c0-4474-8a82-42bf467d07f2 -Scope web Removes the custom action(s) being registered for a SharePoint Framework solution having the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2' in its manifest from the current web. PARAMETERS -ClientSideComponentId The Client Side Component Id of the SharePoint Framework client side extension application customizer found in the manifest for which existing custom action(s) should be removed. Type: Guid Parameter Sets: Client Side Component Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Use the -Force flag to bypass the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The id or name of the CustomAction representing the client side extension registration that needs to be removed or a CustomAction instance itself. Type: UserCustomActionPipeBind Parameter Sets: Custom Action Id Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Define if the CustomAction representing the client side extension registration is to be found at the web or site collection scope. Specify All to allow deletion from either web or site collection (default). Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPAvailableSiteClassification.html": {
    "href": "cmdlets/Remove-PnPAvailableSiteClassification.html",
    "title": "Remove-PnPAvailableSiteClassification | PnP PowerShell",
    "keywords": "Remove-PnPAvailableSiteClassification SYNOPSIS Required Permissions Microsoft Graph API: Directory.ReadWrite.All Removes one or more existing classic site classification values from the list of available values on the tenant SYNTAX Remove-PnPAvailableSiteClassification -Classifications <System.Collections.Generic.List`1[System.String]> DESCRIPTION Allows to remove existing classic site classification values. EXAMPLES EXAMPLE 1 Remove-PnPAvailableSiteClassification -Classifications \"HBI\" Removes the \"HBI\" site classification from the list of available values. EXAMPLE 2 Remove-PnPAvailableSiteClassification -Classifications \"HBI\",\"Top Secret\" Removes the \"HBI\" and \"Top Secret\" site classification from the list of available values. PARAMETERS -Classifications Type: System.Collections.Generic.List`1[System.String] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided or set to $true, a confirmation will be asked before the actual remove takes place. If omitted or set to $false, it will remove the site classification(s) without asking for confirmation. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPAzureADApp.html": {
    "href": "cmdlets/Remove-PnPAzureADApp.html",
    "title": "Remove-PnPAzureADApp | PnP PowerShell",
    "keywords": "Remove-PnPAzureADApp SYNOPSIS Required Permissions Microsoft Graph API: Application.ReadWrite.All Removes an Azure AD App registration. SYNTAX Remove-PnPAzureADApp [-Identity] <AzureADAppPipeBind> [-Force] DESCRIPTION This cmdlet removes an Azure AD App registration. EXAMPLES Example 1 Remove-PnPAzureADApp -Identity MyApp Removes the specified app. Example 2 Remove-PnPAzureADApp -Identity 93a9772d-d0af-4ed8-9821-17282b64690e Removes the specified app. PARAMETERS -Force If specified the confirmation question will be skipped. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the name, id or app id for the app to remove. Type: AzureADAppPipeBind Parameter Sets: (All) Aliases: Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPAzureADGroup.html": {
    "href": "cmdlets/Remove-PnPAzureADGroup.html",
    "title": "Remove-PnPAzureADGroup | PnP PowerShell",
    "keywords": "Remove-PnPAzureADGroup SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Removes one Azure Active Directory group. This can be a security or Microsoft 365 group. Distribution lists are not currently supported by Graph API. SYNTAX Remove-PnPAzureADGroup -Identity <AzureADGroupPipeBind> DESCRIPTION Allows to remove Azure Active Directory group. EXAMPLES EXAMPLE 1 Remove-PnPAzureADGroup -Identity $groupId Removes an Azure Active Directory group based on its ID EXAMPLE 2 Remove-PnPAzureADGroup -Identity $group Removes the provided Azure Active Directory group PARAMETERS -Identity The Identity of the Azure Active Directory group Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPAzureADGroupMember.html": {
    "href": "cmdlets/Remove-PnPAzureADGroupMember.html",
    "title": "Remove-PnPAzureADGroupMember | PnP PowerShell",
    "keywords": "Remove-PnPAzureADGroupMember SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All, GroupMember.ReadWrite.All Removes members from a particular Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. SYNTAX Remove-PnPAzureADGroupMember -Identity <AzureADGroupPipeBind> -Users <String[]> DESCRIPTION Allows to remove members from Azure Active Directory group. EXAMPLES EXAMPLE 1 Remove-PnPAzureADGroupMember -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" Removes the provided two users as members from the Azure Active Directory group named \"Project Team\" PARAMETERS -Identity The Identity of the Azure Active Directory group to remove members from Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Users The UPN(s) of the user(s) to remove as members from the Azure Active Directory group Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Remove-PnPAzureADGroupOwner.html": {
    "href": "cmdlets/Remove-PnPAzureADGroupOwner.html",
    "title": "Remove-PnPAzureADGroupOwner | PnP PowerShell",
    "keywords": "Remove-PnPAzureADGroupOwner SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All Removes owners from a particular Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. SYNTAX Remove-PnPAzureADGroupOwner -Identity <AzureADGroupPipeBind> -Users <String[]> [-Verbose] DESCRIPTION Allows to remove owners from Azure Active Directory group. EXAMPLES EXAMPLE 1 Remove-PnPAzureADGroupOwner -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" Removes the provided two users as owners from the Azure Active Directory group named \"Project Team\". PARAMETERS -Identity The Identity of the Azure Active Directory group to remove owners from. Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Users The UPN(s) of the user(s) to remove as owners from the Azure Active Directory group. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Remove-PnPAzureADServicePrincipalAssignedAppRole.html": {
    "href": "cmdlets/Remove-PnPAzureADServicePrincipalAssignedAppRole.html",
    "title": "Remove-PnPAzureADServicePrincipalAssignedAppRole | PnP PowerShell",
    "keywords": "Remove-PnPAzureADServicePrincipalAssignedAppRole SYNOPSIS Required Permissions Microsoft Graph API: AppRoleAssignment.ReadWrite.All Removes app roles configured on a service principal/application registration in Azure Active Directory. SYNTAX By instance Remove-PnPAzureADServicePrincipalAssignedAppRole -Identity <ServicePrincipalAssignedAppRoleBind> [-Connection <PnPConnection>] By assigned app role Remove-PnPAzureADServicePrincipalAssignedAppRole -Principal <ServicePrincipalPipeBind> [-Identity <ServicePrincipalAssignedAppRoleBind>] [-Connection <PnPConnection>] By app role name Remove-PnPAzureADServicePrincipalAssignedAppRole -Principal <ServicePrincipalPipeBind> -AppRoleName <String> [-Connection <PnPConnection>] DESCRIPTION Allows removal of one or more assigned app roles on a specific service principals/app registration in Azure Active Directory. EXAMPLES EXAMPLE 1 Remove-PnPAzureADServicePrincipalAssignedAppRole -Principal 797ee8a7-a950-4eb8-945d-7f10cc68a933 -AppRoleName \"User.ReadWrite.All\" Removes the app role \"User.ReadWrite.All\" from the application registration with the object Id 797ee8a7-a950-4eb8-945d-7f10cc68a933 EXAMPLE 2 Remove-PnPAzureADServicePrincipalAssignedAppRole -Principal \"My application\" -AppRoleName \"Group.ReadWrite.All\" Removes the app role \"Group.ReadWrite.All\" from the application registration with the name \"My application\" EXAMPLE 3 Remove-PnPAzureADServicePrincipalAssignedAppRole -Principal 797ee8a7-a950-4eb8-945d-7f10cc68a933 Removes all app roles from the application registration with the object Id 797ee8a7-a950-4eb8-945d-7f10cc68a933 EXAMPLE 4 Remove-PnPAzureADServicePrincipalAssignedAppRole -Principal \"My application\" Removes all app roles from the application registration with the name \"My application\" EXAMPLE 5 Get-PnPAzureADServicePrincipal -AppId fd885e69-86dc-4f3b-851e-ad04920031cf | Remove-PnPAzureADServicePrincipalAssignedAppRole Removes all app roles from the application registration with the app Id/Client Id fd885e69-86dc-4f3b-851e-ad04920031cf PARAMETERS -Principal The object id, name or instance of the service principal/application registration to remove app roles for Type: ServicePrincipalPipeBind Parameter Sets: By assigned app role, By app role name Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -Identity The object id, name or instance of the application role to remove from the service principal/application registration Type: ServicePrincipalAssignedAppRoleBind Parameter Sets: By assigned app role, By instance Required: True (By instance), False (By assigned app role) Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AppRoleName The name of the permission to remove, i.e. Sites.Read.All Type: ServicePrincipalAssignedAppRoleBind Parameter Sets: By app role name Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Remove-PnPAzureADUser.html": {
    "href": "cmdlets/Remove-PnPAzureADUser.html",
    "title": "Remove-PnPAzureADUser | PnP PowerShell",
    "keywords": "Remove-PnPAzureADUser SYNOPSIS Required Permissions Microsoft Graph API: User.ReadWrite.All Removes a user from Azure Active Directory / Microsoft Entra ID. SYNTAX Remove-PnPAzureADUser -Identity <AzureADUserPipeBind> [-WhatIf] [-Connection <PnPConnection>] [-Verbose] DESCRIPTION Allows a user to be removed from Azure Active Directory / Microsoft Entra ID. When the user is deleted, the user will be moved to the recycle bin and can be restored within 30 days. After 30 days the user will be permanently deleted. EXAMPLES EXAMPLE 1 Remove-PnPAzureADUser -Identity johndoe@contoso.onmicrosoft.com The user with the provided UPN will be removed from Azure Active Directory. EXAMPLE 2 Remove-PnPAzureADUser -Identity 5a4c547a-1440-4f64-9952-a0c6f1c9e7ea The user with the provided guid will be removed from Azure Active Directory. EXAMPLE 3 Get-PnPEntraIDUser | Where-Object { $_.OfficeLocation -eq \"London\" } | Remove-PnPAzureADUser Removes all users that have their OfficeLocation set to London from Azure Active Directory. EXAMPLE 4 Get-PnPEntraIDUser -Filter \"accountEnabled eq false\" | Remove-PnPAzureADUser Removes all disabled user accounts from Azure Active Directory. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the user to remove. This can be the UPN, the GUID or an instance of the user. Type: AzureADUserPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf When used in combination with -Verbose, it will show what would happen if the cmdlet runs. The user will not be deleted. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPClientSidePage.html": {
    "href": "cmdlets/Remove-PnPClientSidePage.html",
    "title": "Remove-PnPClientSidePage | PnP PowerShell",
    "keywords": "Remove-PnPClientSidePage SYNOPSIS This is an alias for Remove-PnPPage. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPContainer.html": {
    "href": "cmdlets/Remove-PnPContainer.html",
    "title": "Remove-PnPContainer | PnP PowerShell",
    "keywords": "Remove-PnPContainer SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site The Remove-PnPContainer cmdlet removes a container from the SharePoint tenant. The container to remove is specified by the Identity parameter, which accepts a ContainerPipeBind object. When admins delete a Container, it is moved into the Recycle Bin. A deleted Container can be restored from the Recycle Bin within 93 days. If a Container is deleted from the Recycle Bin, or it exceeds the 93-day retention period, it is permanently deleted. Deleting a Container deletes everything within it, including all documents and files. You can view all deleted Containers in the Recycle Bin with the Get-PnPDeletedContainer cmdlet. SYNTAX Remove-PnPContainer [-Identity] <ContainerPipeBind> [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPContainer -Identity \"b!aBrXSxKDdUKZsaK3Djug6C5rF4MG3pRBomypnjOHiSrjkM_EBk_1S57U3gD7oW-1\" Removes the specified container by using the container id. EXAMPLE 2 Remove-PnPContainer -Identity \"https://contoso.sharepoint.com/contentstorage/CSP_4bd71a68-8312-4275-99b1-a2b70e3ba0e8\" Removes the the specified container by using the container url PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify container site url or container id. Type: ContainerPipeBind Parameter Sets: (All) Required: true Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPContainerType.html": {
    "href": "cmdlets/Remove-PnPContainerType.html",
    "title": "Remove-PnPContainerType | PnP PowerShell",
    "keywords": "Remove-PnPContainerType SYNOPSIS Required Permissions SharePoint Embedded Administrator or Global Administrator role is required The Remove-PnPContainerType cmdlet removes a trial container from the SharePoint tenant. The container to remove is specified by the Identity parameter. SYNTAX Remove-PnPContainerType [-Identity] <Guid> [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPContainerType -Identity 00be1092-0c75-028a-18db-89e57908e7d6 Removes the specified trial container by using the container id. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the container id. Type: Guid Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPContentType.html": {
    "href": "cmdlets/Remove-PnPContentType.html",
    "title": "Remove-PnPContentType | PnP PowerShell",
    "keywords": "Remove-PnPContentType SYNOPSIS Removes a content type from a web. SYNTAX Remove-PnPContentType [-Identity] <ContentTypePipeBind> [-Force] [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows to remove a content type from the current web. EXAMPLES EXAMPLE 1 Remove-PnPContentType -Identity \"Project Document\" This will remove a content type called \"Project Document\" from the current web. EXAMPLE 2 Remove-PnPContentType -Identity \"Project Document\" -Force This will remove a content type called \"Project Document\" from the current web without asking for confirmation. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name or ID of the content type to remove. Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPContentTypeFromDocumentSet.html": {
    "href": "cmdlets/Remove-PnPContentTypeFromDocumentSet.html",
    "title": "Remove-PnPContentTypeFromDocumentSet | PnP PowerShell",
    "keywords": "Remove-PnPContentTypeFromDocumentSet SYNOPSIS Removes a content type from a document set. SYNTAX Remove-PnPContentTypeFromDocumentSet -ContentType <ContentTypePipeBind> -DocumentSet <DocumentSetPipeBind> [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows to remove a content type from a document set. EXAMPLES EXAMPLE 1 Remove-PnPContentTypeFromDocumentSet -ContentType \"Test CT\" -DocumentSet \"Test Document Set\" This will remove the content type called 'Test CT' from the document set called 'Test Document Set'. EXAMPLE 2 Remove-PnPContentTypeFromDocumentSet -ContentType 0x0101001F1CEFF1D4126E4CAD10F00B6137E969 -DocumentSet 0x0120D520005DB65D094035A241BAC9AF083F825F3B This will remove the content type with ID '0x0101001F1CEFF1D4126E4CAD10F00B6137E969' from the document set with ID '0x0120D520005DB65D094035A241BAC9AF083F825F3B'. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The content type to remove. Either specify name, an id, or a content type object. Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DocumentSet The document set to remove the content type from. Either specify a name, a document set template object, an id, or a content type object. Type: DocumentSetPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPContentTypeFromList.html": {
    "href": "cmdlets/Remove-PnPContentTypeFromList.html",
    "title": "Remove-PnPContentTypeFromList | PnP PowerShell",
    "keywords": "Remove-PnPContentTypeFromList SYNOPSIS Removes a content type from a list. SYNTAX Remove-PnPContentTypeFromList -List <ListPipeBind> -ContentType <ContentTypePipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to remove a content type from a list. EXAMPLES EXAMPLE 1 Remove-PnPContentTypeFromList -List \"Documents\" -ContentType \"Project Document\" This will remove a content type called \"Project Document\" from the \"Documents\" list. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The name of a content type, its ID or an actual content type object that needs to be removed from the specified list. Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The name of the list, its ID or an actual list object the content type needs to be removed from. Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPCustomAction.html": {
    "href": "cmdlets/Remove-PnPCustomAction.html",
    "title": "Remove-PnPCustomAction | PnP PowerShell",
    "keywords": "Remove-PnPCustomAction SYNOPSIS Removes a custom action. SYNTAX Remove-PnPCustomAction [[-Identity] <UserCustomActionPipeBind>] [-Scope <CustomActionScope>] [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to remove a custom action. EXAMPLES EXAMPLE 1 Remove-PnPCustomAction -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 Removes the custom action with the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2'. EXAMPLE 2 Remove-PnPCustomAction -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 -Scope web Removes the custom action with the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2' from the current web. EXAMPLE 3 Remove-PnPCustomAction -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 -Force Removes the custom action with the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2' without asking for confirmation. EXAMPLE 4 Get-PnPCustomAction -Scope All | ? Location -eq ScriptLink | Remove-PnPCustomAction Removes all custom actions that are ScriptLinks. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Use the -Force flag to bypass the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The id or name of the CustomAction that needs to be removed or a CustomAction instance itself. Type: UserCustomActionPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Define if the CustomAction is to be found at the web or site collection scope. Specify All to allow deletion from either web or site collection. Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: Web Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPDeletedMicrosoft365Group.html": {
    "href": "cmdlets/Remove-PnPDeletedMicrosoft365Group.html",
    "title": "Remove-PnPDeletedMicrosoft365Group | PnP PowerShell",
    "keywords": "Remove-PnPDeletedMicrosoft365Group SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Permanently removes one deleted Microsoft 365 Group SYNTAX Remove-PnPDeletedMicrosoft365Group -Identity <Microsoft365GroupPipeBind> DESCRIPTION Allows to permanently remove a deleted Microsoft 365 Group. EXAMPLES EXAMPLE 1 Remove-PnPDeletedMicrosoft365Group -Identity 38b32e13-e900-4d95-b860-fb52bc07ca7f Permanently removes a deleted Microsoft 365 Group based on its ID EXAMPLE 2 $group = Get-PnPDeletedMicrosoft365Group -Identity 38b32e13-e900-4d95-b860-fb52bc07ca7f Remove-PnPDeletedMicrosoft365Group -Identity $group Permanently removes the provided deleted Microsoft 365 Group PARAMETERS -Identity The identity of the deleted Microsoft 365 Group to be deleted Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPEntraIDApp.html": {
    "href": "cmdlets/Remove-PnPEntraIDApp.html",
    "title": "Remove-PnPEntraIDApp | PnP PowerShell",
    "keywords": "Remove-PnPEntraIDApp SYNOPSIS This is an alias for Remove-PnPAzureADApp. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPEntraIDGroup.html": {
    "href": "cmdlets/Remove-PnPEntraIDGroup.html",
    "title": "Remove-PnPEntraIDGroup | PnP PowerShell",
    "keywords": "Remove-PnPEntraIDGroup SYNOPSIS This is an alias for Remove-PnPAzureADGroup. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPEntraIDGroupMember.html": {
    "href": "cmdlets/Remove-PnPEntraIDGroupMember.html",
    "title": "Remove-PnPEntraIDGroupMember | PnP PowerShell",
    "keywords": "Remove-PnPEntraIDGroupMember SYNOPSIS This is an alias for Remove-PnPAzureADGroupMember. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPEntraIDGroupOwner.html": {
    "href": "cmdlets/Remove-PnPEntraIDGroupOwner.html",
    "title": "Remove-PnPEntraIDGroupOwner | PnP PowerShell",
    "keywords": "Remove-PnPEntraIDGroupOwner SYNOPSIS This is an alias for Remove-PnPAzureADGroupOwner. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPEntraIDServicePrincipalAssignedAppRole.html": {
    "href": "cmdlets/Remove-PnPEntraIDServicePrincipalAssignedAppRole.html",
    "title": "Remove-PnPEntraIDServicePrincipalAssignedAppRole | PnP PowerShell",
    "keywords": "Remove-PnPEntraIDServicePrincipalAssignedAppRole SYNOPSIS This is an alias for Remove-PnPAzureADServicePrincipalAssignedAppRole. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPEntraIDUser.html": {
    "href": "cmdlets/Remove-PnPEntraIDUser.html",
    "title": "Remove-PnPEntraIDUser | PnP PowerShell",
    "keywords": "Remove-PnPEntraIDUser SYNOPSIS This is an alias for Remove-PnPAzureADUser. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPEventReceiver.html": {
    "href": "cmdlets/Remove-PnPEventReceiver.html",
    "title": "Remove-PnPEventReceiver | PnP PowerShell",
    "keywords": "Remove-PnPEventReceiver SYNOPSIS Remove an event receiver. SYNTAX Remove-PnPEventReceiver -Identity <EventReceiverPipeBind> [-List <ListPipeBind>] [-Scope <EventReceiverScope>] [-Force] [-Connection <PnPConnection>] DESCRIPTION Removes/unregister a specific event receiver. EXAMPLES EXAMPLE 1 Remove-PnPEventReceiver -Identity fb689d0e-eb99-4f13-beb3-86692fd39f22 This will remove the event receiver with ReceiverId \"fb689d0e-eb99-4f13-beb3-86692fd39f22\" from the current web. EXAMPLE 2 Remove-PnPEventReceiver -List ProjectList -Identity fb689d0e-eb99-4f13-beb3-86692fd39f22 This will remove the event receiver with ReceiverId \"fb689d0e-eb99-4f13-beb3-86692fd39f22\" from the \"ProjectList\" list. EXAMPLE 3 Remove-PnPEventReceiver -List ProjectList -Identity MyReceiver This will remove the event receiver with ReceiverName \"MyReceiver\" from the \"ProjectList\" list. EXAMPLE 4 Remove-PnPEventReceiver -List ProjectList This will remove all event receivers from the \"ProjectList\" list. EXAMPLE 5 Remove-PnPEventReceiver This will remove all event receivers from the current web. EXAMPLE 6 Get-PnPEventReceiver | ? ReceiverUrl -Like \"*azurewebsites.net*\" | Remove-PnPEventReceiver This will remove all event receivers from the current web which are pointing to a service hosted on Azure Websites. EXAMPLE 7 Remove-PnPEventReceiver -Scope Site This will remove all the event receivers defined on the current site collection. EXAMPLE 8 Remove-PnPEventReceiver -Scope Web This will remove all the event receivers defined on the current web. EXAMPLE 9 Remove-PnPEventReceiver -Scope All This will remove all the event receivers defined on the current site and web. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Guid or name of the event receiver. Type: EventReceiverPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The list object from where to remove the event receiver object. Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope The scope of the event receivers to remove. Type: EventReceiverScope Parameter Sets: Scope Accepted values: Web, Site, All Required: False Position: Named Default value: Web Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPExternalUser.html": {
    "href": "cmdlets/Remove-PnPExternalUser.html",
    "title": "Remove-PnPExternalUser | PnP PowerShell",
    "keywords": "Remove-PnPExternalUser SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes one or more external users from the tenant. SYNTAX Remove-PnPExternalUser -UniqueIDs <String[]> [-Confirm] DESCRIPTION The Remove-PnPExternalUser cmdlet permanently removes a collection of external users from the tenant. Users who are removed lose access to all tenant resources. EXAMPLES EXAMPLE 1 $user = Get-PnPExternalUser -Filter someone@example.com Remove-PnPExternalUser -UniqueIDs @($user.UniqueId) This example removes a specific external user who has the address \"someone@example.com\". Organization members may still see the external user name displayed in the Shared With dialog, but the external user will not be able to sign in and will not be able to access any tenant resources. PARAMETERS -UniqueIDs Specifies an ID that can be used to identify an external user based on their Windows Live ID. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPField.html": {
    "href": "cmdlets/Remove-PnPField.html",
    "title": "Remove-PnPField | PnP PowerShell",
    "keywords": "Remove-PnPField SYNOPSIS Removes a field from a list or a site. SYNTAX Remove-PnPField [-Identity] <FieldPipeBind> [[-List] <ListPipeBind>] [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to remove a field from a list or a site. EXAMPLES EXAMPLE 1 Remove-PnPField -Identity \"Speakers\" Removes the \"Speakers\" field from the site columns. EXAMPLE 2 Remove-PnPField -List \"Demo list\" -Identity \"Speakers\" Removes the speakers field from the list \"Demo list\". EXAMPLE 3 $batch = New-PnPBatch Remove-PnPField -List \"Demo list\" -Identity \"Speakers\" -Batch $batch Remove-PnPField -List \"Demo list\" -Identity \"Sponsors\" -Batch $batch Remove-PnPField -List \"Demo list\" -Identity \"Organizers\" -Batch $batch Remove-PnPField -Identity \"Test\" -Batch $batch Invoke-PnPBatch $batch Removes the speakers, sponsors and organizers fields from the list \"Demo list\" as well as Test field from the web in a batch. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The field object or name to remove. Type: FieldPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The list object or name where to remove the field from. Type: ListPipeBind Parameter Sets: (All) Required: False Position: 1 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Batch Batch object used to remove fields in a batched manner. See above example on how to use this. Type: PnPBatch Parameter Sets: (All) Required: False Position: named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPFieldFromContentType.html": {
    "href": "cmdlets/Remove-PnPFieldFromContentType.html",
    "title": "Remove-PnPFieldFromContentType | PnP PowerShell",
    "keywords": "Remove-PnPFieldFromContentType SYNOPSIS Removes a site column from a content type SYNTAX Remove-PnPFieldFromContentType -Field <FieldPipeBind> -ContentType <ContentTypePipeBind> [-DoNotUpdateChildren] [-Connection <PnPConnection>] DESCRIPTION Allows to remove a field from a content type. EXAMPLES EXAMPLE 1 Remove-PnPFieldFromContentType -Field \"Project_Name\" -ContentType \"Project Document\" This will remove the site column with an internal name of \"Project_Name\" from a content type called \"Project Document\" EXAMPLE 2 Remove-PnPFieldFromContentType -Field \"Project_Name\" -ContentType \"Project Document\" -DoNotUpdateChildren This will remove the site column with an internal name of \"Project_Name\" from a content type called \"Project Document\". It will not update content types that inherit from the \"Project Document\" content type. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The content type where the field is to be removed from Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DoNotUpdateChildren If specified, inherited content types will not be updated Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Field The field to remove Type: FieldPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPFile.html": {
    "href": "cmdlets/Remove-PnPFile.html",
    "title": "Remove-PnPFile | PnP PowerShell",
    "keywords": "Remove-PnPFile SYNOPSIS Removes a file. SYNTAX Server Relative Remove-PnPFile [-ServerRelativeUrl] <String> [-Recycle] [-Force] [-Connection <PnPConnection>] Site Relative Remove-PnPFile [-SiteRelativeUrl] <String> [-Recycle] [-Force] [-Connection <PnPConnection>] DESCRIPTION This cmdlet removes the specified file based on the site-relative or server-relative url. EXAMPLES EXAMPLE 1 Remove-PnPFile -ServerRelativeUrl /sites/project/_catalogs/themes/15/company.spcolor Removes the file company.spcolor. EXAMPLE 2 Remove-PnPFile -SiteRelativeUrl _catalogs/themes/15/company.spcolor Removes the file company.spcolor. EXAMPLE 3 Remove-PnPFile -SiteRelativeUrl _catalogs/themes/15/company.spcolor -Recycle Removes the file company.spcolor and saves it to the Recycle Bin. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to remove the file, but instead it will silently be removed. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Recycle When provided, the file will be moved to recycle bin. If omitted, the file will be deleted directly. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativeUrl Server relative URL of the file. Type: String Parameter Sets: Server Relative Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -SiteRelativeUrl Site relative URL of the file. Type: String Parameter Sets: Site Relative Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPFileFromSiteTemplate.html": {
    "href": "cmdlets/Remove-PnPFileFromSiteTemplate.html",
    "title": "Remove-PnPFileFromSiteTemplate | PnP PowerShell",
    "keywords": "Remove-PnPFileFromSiteTemplate SYNOPSIS Removes a file from a PnP Provisioning Template SYNTAX Remove-PnPFileFromSiteTemplate [-Path] <String> [-FilePath] <String> [[-TemplateProviderExtensions] <ITemplateProviderExtension[]>] DESCRIPTION Allows to remove a file from a PnP Provisioning Template. EXAMPLES EXAMPLE 1 Remove-PnPFileFromSiteTemplate -Path template.pnp -FilePath filePath Removes a file from an in-memory PnP Provisioning Template PARAMETERS -FilePath The relative File Path of the file to remove from the in-memory template Type: String Parameter Sets: (All) Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Filename to read the template from, optionally including full path. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while saving the template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: 2 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPFileSharingLink.html": {
    "href": "cmdlets/Remove-PnPFileSharingLink.html",
    "title": "Remove-PnPFileSharingLink | PnP PowerShell",
    "keywords": "Remove-PnPFileSharingLink SYNOPSIS Removes sharing links associated with a file. SYNTAX Remove-PnPFileSharingLink -FileUrl <String> -Identity <String> -Force <SwitchParamter> [-Connection <PnPConnection>] DESCRIPTION Removes sharing links associated with a file. EXAMPLES EXAMPLE 1 Remove-PnPFileSharingLink -FileUrl \"/sites/demo/Shared Documents/Test.docx\" This will delete all the sharing links associated with the Test.docx file in the Shared Documents document library. EXAMPLE 2 Remove-PnPFileSharingLink -FileUrl \"/sites/demo/Shared Documents/Test.docx\" -Force This will delete all the sharing links associated with the Test.docx file in the Shared Documents document library. User will not be prompted for confirmation. EXAMPLE 3 $sharingLinks = Get-PnPFileSharingLink -FileUrl \"/sites/demo/Shared Documents/Test.docx\" Remove-PnPFileSharingLink -FileUrl \"/sites/demo/Shared Documents/Test.docx\" -Identity $sharingLinks[0].Id -Force This will delete the first sharing link associated with the Test.docx file in the Shared Documents document library. User will not be prompted for confirmation. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FileUrl The file in the site Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Id of the sharing link associated with the file. You can retrieve the identity using Get-PnPFileSharingLink cmdlet. Type: Identity Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be requested and the action will be performed Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPFileVersion.html": {
    "href": "cmdlets/Remove-PnPFileVersion.html",
    "title": "Remove-PnPFileVersion | PnP PowerShell",
    "keywords": "Remove-PnPFileVersion SYNOPSIS Removes all or a specific file version. SYNTAX Return as file object (Default) Remove-PnPFileVersion -Url <String> [-Recycle] [-Force] [-Connection <PnPConnection>] All Remove-PnPFileVersion -Url <String> [-All] [-Recycle] [-Force] [-Connection <PnPConnection>] By Id Remove-PnPFileVersion -Url <String> [-Identity <FileVersionPipeBind>] [-Recycle] [-Force] [-Connection <PnPConnection>] DESCRIPTION This cmdlet removes all versions or one specific version for the specified file. EXAMPLES EXAMPLE 1 Remove-PnPFileVersion -Url Documents/MyDocument.docx -Identity 512 Removes the file version with Id 512. EXAMPLE 2 Remove-PnPFileVersion -Url Documents/MyDocument.docx -Identity \"Version 1.0\" Removes the file version with label \"Version 1.0\". EXAMPLE 3 Remove-PnPFileVersion -Url Documents/MyDocument.docx -All Removes all file versions. PARAMETERS -All Specifies whether all file versions should be removed. Type: SwitchParameter Parameter Sets: All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be requested and the action will be performed. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the version. Use ID or label. Type: FileVersionPipeBind Parameter Sets: By Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Recycle Specifies whether the version(s) should go to the recycle bin. Type: SwitchParameter Parameter Sets: By Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Server relative url or site relative url of the file. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPFlow.html": {
    "href": "cmdlets/Remove-PnPFlow.html",
    "title": "Remove-PnPFlow | PnP PowerShell",
    "keywords": "Remove-PnPFlow SYNOPSIS Required Permissions Azure: management.azure.com Removes the specified flow. SYNTAX Remove-PnPFlow [-Environment <PowerAutomateEnvironmentPipeBind>] -Identity <PowerAutomateFlowPipeBind> [-AsAdmin] [-Force] [-ThrowExceptionIfPowerAutomateNotFound] [-Connection <PnPConnection>] DESCRIPTION This cmdlet removes the specified flow. EXAMPLES Example 1 Remove-PnPFlow -Identity fba63225-baf9-4d76-86a1-1b42c917a182 This removes the specified flow from the default environment. Example 2 Remove-PnPFlow -Environment (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") -Identity fba63225-baf9-4d76-86a1-1b42c917a182 -ThrowExceptionIfPowerAutomateNotFound This removes the specified flow located in the specified environment and throws an exception if the specified flow is not present. PARAMETERS -AsAdmin If specified removes the flow as an administrator. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Identity The name of, or a flow object to remove. Type: PowerAutomateFlowPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThrowExceptionIfPowerAutomateNotFound Switch parameter if an exception should be thrown if the requested flow does not exist (true) or if omitted, nothing will be returned in case the flow does not exist Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If specified, no confirmation question will be asked. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPFlowOwner.html": {
    "href": "cmdlets/Remove-PnPFlowOwner.html",
    "title": "Remove-PnPFlowOwner | PnP PowerShell",
    "keywords": "Remove-PnPFlowOwner SYNOPSIS Required Permissions Azure: management.azure.com Removes owner permissions to a Power Automate flow SYNTAX Remove-PnPFlowOwner [-Environment <PowerAutomateEnvironmentPipeBind>] -Identity <PowerPlatformPipeBind> -User <String> [-AsAdmin] [-Force] [-Verbose] DESCRIPTION This cmdlet removes owner permissions for a user from a Power Automate flow. EXAMPLES Example 1 Remove-PnPFlowOwner -Identity f07c34a9-a586-4e58-91fb-e7ea19741b61 -User username@tenant.onmicrosoft.com Removes the specified user from the specified Power Automate flow located in the default environment Example 2 Remove-PnPFlowOwner -Identity f07c34a9-a586-4e58-91fb-e7ea19741b61 -User 6844c04a-8ee7-40ad-af66-28f6e948cd04 Removes the specified user from the specified Power Automate flow located in the default environment Example 3 Remove-PnPFlowOwner (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") -Identity f07c34a9-a586-4e58-91fb-e7ea19741b61 -User username@tenant.onmicrosoft.com -AsAdmin Removes the specified user from the specified Power Automate flow as an admin in the specified environment Example 4 Remove-PnPFlowOwner (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment) -Identity f07c34a9-a586-4e58-91fb-e7ea19741b61 -User username@tenant.onmicrosoft.com -AsAdmin -Force Removes the specified user from the specified Power Automate Flow as admin, without asking for confirmation, in the specified environment PARAMETERS -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Identity The Name, Id or instance of the Power Automate Flow to add the permissions to. Type: PowerPlatformPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User The user principal name or Id of the user to remove its permissions from the Power Automate Flow. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AsAdmin If specified, the permission will be removed as an admin. If not specified only the flows to which the current user already has access can be modified. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Providing the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPFolder.html": {
    "href": "cmdlets/Remove-PnPFolder.html",
    "title": "Remove-PnPFolder | PnP PowerShell",
    "keywords": "Remove-PnPFolder SYNOPSIS Deletes a folder within a parent folder. SYNTAX Remove-PnPFolder -Name <String> -Folder <FolderPipeBind> [-Recycle] [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to remove a folder. EXAMPLES EXAMPLE 1 Remove-PnPFolder -Name NewFolder -Folder _catalogs/masterpage Removes the folder 'NewFolder' from '_catalogsmasterpage'. EXAMPLE 2 Remove-PnPFolder -Name NewFolder -Folder _catalogs/masterpage -Recycle Removes the folder 'NewFolder' from '_catalogsmasterpage' and saves it in the Recycle Bin. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The parent folder in the site. Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The folder name. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Recycle When provided, the folder will be moved to the recycle bin. If omitted, the folder will be directly deleted. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPFolderSharingLink.html": {
    "href": "cmdlets/Remove-PnPFolderSharingLink.html",
    "title": "Remove-PnPFolderSharingLink | PnP PowerShell",
    "keywords": "Remove-PnPFolderSharingLink SYNOPSIS Removes sharing links associated with a folder. SYNTAX Remove-PnPFolderSharingLink -Folder <FolderPipeBind> -Identity <String> -Force <SwitchParamter> [-Connection <PnPConnection>] DESCRIPTION Removes sharing links associated with a folder. EXAMPLES EXAMPLE 1 Remove-PnPFolderSharingLink -Folder \"/sites/demo/Shared Documents/Test\" This will delete all the sharing links associated with the Test folder in the Shared Documents document library. EXAMPLE 2 Remove-PnPFolderSharingLink -Folder \"/sites/demo/Shared Documents/Test\" -Force This will delete all the sharing links associated with the Test folder in the Shared Documents document library. User will not be prompted for confirmation. EXAMPLE 3 $sharingLinks = Get-PnPFolderSharingLink -Folder \"/sites/demo/Shared Documents/Test\" Remove-PnPFolderSharingLink -Folder \"/sites/demo/Shared Documents/Test\" -Identity $sharingLinks[0].Id -Force This will delete the first sharing link associated with the Test folder in the Shared Documents document library. User will not be prompted for confirmation. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The folder in the site Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Id of the sharing link associated with the folder. You can retrieve the identity using Get-PnPFolderSharingLink cmdlet. Type: Identity Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be requested and the action will be performed Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPGraphSubscription.html": {
    "href": "cmdlets/Remove-PnPGraphSubscription.html",
    "title": "Remove-PnPGraphSubscription | PnP PowerShell",
    "keywords": "Remove-PnPGraphSubscription SYNOPSIS Removes an existing Microsoft Graph subscription. Required Azure Active Directory application permission depends on the resource the subscription exists on, see https://learn.microsoft.com/graph/api/subscription-delete#permissions. SYNTAX Remove-PnPGraphSubscription -Identity <GraphSubscriptionPipeBind> DESCRIPTION Allows to remove an existing Microsoft Graph subscription. EXAMPLES EXAMPLE 1 Remove-PnPGraphSubscription -Identity bc204397-1128-4911-9d70-1d8bceee39da Removes the Microsoft Graph subscription with the id 'bc204397-1128-4911-9d70-1d8bceee39da' PARAMETERS -Identity The unique id or an instance of a Microsoft Graph Subscription Type: GraphSubscriptionPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPGroup.html": {
    "href": "cmdlets/Remove-PnPGroup.html",
    "title": "Remove-PnPGroup | PnP PowerShell",
    "keywords": "Remove-PnPGroup SYNOPSIS Removes a group from a web. SYNTAX Remove-PnPGroup [[-Identity] <GroupPipeBind>] [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to remove a group from web. EXAMPLES EXAMPLE 1 Remove-PnPGroup -Identity \"My Users\" Removes the group \"My Users\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity A group object, an ID or a name of a group to remove Type: GroupPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPGroupMember.html": {
    "href": "cmdlets/Remove-PnPGroupMember.html",
    "title": "Remove-PnPGroupMember | PnP PowerShell",
    "keywords": "Remove-PnPGroupMember SYNOPSIS Removes a user from a group SYNTAX Remove-PnPGroupMember -LoginName <String> -Group <GroupPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to remove a user from group. EXAMPLES EXAMPLE 1 Remove-PnPGroupMember -LoginName user@company.com -Group 'Marketing Site Members' Removes the user user@company.com from the Group 'Marketing Site Members' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group A group object, an ID or a name of a group Type: GroupPipeBind Parameter Sets: (All) Aliases: GroupName Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LoginName A valid login name of a user (user@company.com) Type: String Parameter Sets: (All) Aliases: LogonName Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPHomeSite.html": {
    "href": "cmdlets/Remove-PnPHomeSite.html",
    "title": "Remove-PnPHomeSite | PnP PowerShell",
    "keywords": "Remove-PnPHomeSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes the currently set site as the home site SYNTAX Remove-PnPHomeSite [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to remove a site which currently is set as home site. EXAMPLES EXAMPLE 1 Remove-PnPHomeSite Removes the currently set site as the home site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPHubSiteAssociation.html": {
    "href": "cmdlets/Remove-PnPHubSiteAssociation.html",
    "title": "Remove-PnPHubSiteAssociation | PnP PowerShell",
    "keywords": "Remove-PnPHubSiteAssociation SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a hub site association from a site. SYNTAX Remove-PnPHubSiteAssociation -Site <SitePipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to remove a hub site association from a site. EXAMPLES EXAMPLE 1 Remove-PnPHubSiteAssociation -Site \"https://tenant.sharepoint.com/sites/mysite\" This example removes the hub site association from the specified site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site The site to disconnect from its hubsite Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPHubToHubAssociation.html": {
    "href": "cmdlets/Remove-PnPHubToHubAssociation.html",
    "title": "Remove-PnPHubToHubAssociation | PnP PowerShell",
    "keywords": "Remove-PnPHubToHubAssociation SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes the selected hub site from its parent hub. SYNTAX By Id Remove-PnPHubToHubAssociation -HubSiteId <Guid> By Url Remove-PnPHubToHubAssociation -HubSiteUrl <string> DESCRIPTION Use this cmdlet to remove the selected hub site from its parent hub. EXAMPLES EXAMPLE 1 Remove-PnPHubToHubAssociation -HubSiteId 6638bd4c-d88d-447c-9eb2-c84f28ba8b15 This example removes the hubsite with id 6638bd4c-d88d-447c-9eb2-c84f28ba8b15 from its parent hub. EXAMPLE 2 Remove-PnPHubToHubAssociation -HubSiteUrl \"https://yourtenant.sharepoint.com/sites/sourcehub\" This example removes the hubsite with id https://yourtenant.sharepoint.com/sites/sourcehub from its parent hub. PARAMETERS -HubSiteId Id of the hubsite to remove from its parent. Type: Guid Parameter Sets: By Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HubSiteUrl Url of the hubsite to remove from its parent. Type: String Parameter Sets: By Url Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPIndexedProperty.html": {
    "href": "cmdlets/Remove-PnPIndexedProperty.html",
    "title": "Remove-PnPIndexedProperty | PnP PowerShell",
    "keywords": "Remove-PnPIndexedProperty SYNOPSIS Removes a key from propertybag to be indexed by search. The key and it's value remain in the propertybag, however it will not be indexed anymore. SYNTAX Remove-PnPIndexedProperty [-Key] <String> [-List <ListPipeBind>] [-Connection <PnPConnection>] DESCRIPTION Allows to remove indexed property from the current web. EXAMPLES EXAMPLE 1 Remove-PnPIndexedProperty -key \"MyIndexProperty\" Removes the Indexed property \"MyIndexProperty\" from the current web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Key of the property bag value to be removed from indexing Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name from where to remove the indexed properties Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPJavaScriptLink.html": {
    "href": "cmdlets/Remove-PnPJavaScriptLink.html",
    "title": "Remove-PnPJavaScriptLink | PnP PowerShell",
    "keywords": "Remove-PnPJavaScriptLink SYNOPSIS Removes a JavaScript link or block from a web or sitecollection SYNTAX Remove-PnPJavaScriptLink [[-Identity] <UserCustomActionPipeBind>] [-Force] [-Scope <CustomActionScope>] [-Connection <PnPConnection>] DESCRIPTION Allows to remove JavaScript link or block from a web or sitecollection. EXAMPLES EXAMPLE 1 Remove-PnPJavaScriptLink -Identity jQuery Removes the injected JavaScript file with the name jQuery from the current web after confirmation EXAMPLE 2 Remove-PnPJavaScriptLink -Identity jQuery -Scope Site Removes the injected JavaScript file with the name jQuery from the current site collection after confirmation EXAMPLE 3 Remove-PnPJavaScriptLink -Identity jQuery -Scope Site -Confirm:$false Removes the injected JavaScript file with the name jQuery from the current site collection and will not ask for confirmation EXAMPLE 4 Remove-PnPJavaScriptLink -Scope Site Removes all the injected JavaScript files from the current site collection after confirmation for each of them EXAMPLE 5 Remove-PnPJavaScriptLink -Identity faea0ce2-f0c2-4d45-a4dc-73898f3c2f2e -Scope All Removes the injected JavaScript file with id faea0ce2-f0c2-4d45-a4dc-73898f3c2f2e from both the Web and Site scopes EXAMPLE 6 Get-PnPJavaScriptLink -Scope All | ? Sequence -gt 1000 | Remove-PnPJavaScriptLink Removes all the injected JavaScript files from both the Web and Site scope that have a sequence number higher than 1000 PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Use the -Force flag to bypass the confirmation question Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Name or id of the JavaScriptLink to remove. Omit if you want to remove all JavaScript Links. Type: UserCustomActionPipeBind Parameter Sets: (All) Aliases: Key, Name Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Define if the JavaScriptLink is to be found at the web or site collection scope. Specify All to allow deletion from either web or site collection. Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPKnowledgeHubSite.html": {
    "href": "cmdlets/Remove-PnPKnowledgeHubSite.html",
    "title": "Remove-PnPKnowledgeHubSite | PnP PowerShell",
    "keywords": "Remove-PnPKnowledgeHubSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes the Knowledge Hub Site setting for your tenant SYNTAX Remove-PnPKnowledgeHubSite [-Connection <PnPConnection>] DESCRIPTION Allows to remove Knowledge Hub Site setting for your tenant. EXAMPLES EXAMPLE 1 Remove-PnPKnowledgeHubSite Removes the Knowledge Hub Site setting for your tenant PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPLibraryFileVersionBatchDeleteJob.html": {
    "href": "cmdlets/Remove-PnPLibraryFileVersionBatchDeleteJob.html",
    "title": "Remove-PnPLibraryFileVersionBatchDeleteJob | PnP PowerShell",
    "keywords": "Remove-PnPLibraryFileVersionBatchDeleteJob SYNOPSIS Cancels further processing of a file version batch trim job for a document library. SYNTAX Remove-PnPLibraryFileVersionBatchDeleteJob -Identity <ListPipeBind> [-Force] DESCRIPTION Cancels further processing of a file version batch trim job for a document library. EXAMPLES EXAMPLE 1 Remove-PnPLibraryFileVersionBatchDeleteJob -Identity \"Documents\" Cancels further processing of the file version batch trim job for the document library. EXAMPLE 2 Remove-PnPLibraryFileVersionBatchDeleteJob -Identity \"Documents\" -DeleteBeforeDays 360 -Force Cancels further processing of the file version batch trim job for the document library, without prompting the user for confirmation. PARAMETERS -Identity The ID, name or Url (Lists/MyList) of the document library to stop further trimming on. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Force When provided, no confirmation prompts will be shown to the user. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPList.html": {
    "href": "cmdlets/Remove-PnPList.html",
    "title": "Remove-PnPList | PnP PowerShell",
    "keywords": "Remove-PnPList SYNOPSIS Deletes a list. SYNTAX Remove-PnPList [-Identity] <ListPipeBind> [-Recycle] [-LargeList] [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to remove a list. EXAMPLES EXAMPLE 1 Remove-PnPList -Identity Announcements Removes the list named 'Announcements'. Asks for confirmation. EXAMPLE 2 Remove-PnPList -Identity Announcements -Force Removes the list named 'Announcements' without asking for confirmation. EXAMPLE 3 Remove-PnPList -Identity Announcements -Recycle Removes the list named 'Announcements' and moves it to the Recycle Bin. EXAMPLE 4 Remove-PnPList -Identity Announcements -Recycle -LargeList Removes the large list named 'Announcements' and moves it to the Recycle Bin. Run Get-PnPLargeListOperationStatus -ListId -OperationId to check the status of the operation. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID or Title of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Recycle When provided, the list will be moved to recycle bin. If omitted, the list will directly be deleted. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -LargeList When provided, the large list will be moved to recycle bin through a timer job. It must be paired with the Recycle Parameter. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPListDesign.html": {
    "href": "cmdlets/Remove-PnPListDesign.html",
    "title": "Remove-PnPListDesign | PnP PowerShell",
    "keywords": "Remove-PnPListDesign SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a list design. SYNTAX Remove-PnPListDesign -Identity <TenantListDesignPipeBind> [-Force] [-WhatIf] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION Allows to remove a list design. EXAMPLES EXAMPLE 1 Remove-PnPListDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Removes the specified list design. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If specified you will not be asked to confirm removing the specified list design. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the list design to remove. Type: TenantListDesignPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPListItem.html": {
    "href": "cmdlets/Remove-PnPListItem.html",
    "title": "Remove-PnPListItem | PnP PowerShell",
    "keywords": "Remove-PnPListItem SYNOPSIS Deletes an item from a list SYNTAX Single Remove-PnPListItem [-List] <ListPipeBind> -Identity <ListItemPipeBind> [-Recycle] [-Force] Batched Remove-PnPListItem [-List] <ListPipeBind> -Identity <ListItemPipeBind> -Batch <PnPBatch> [-Recycle] DESCRIPTION Allows to remove a list item. EXAMPLES EXAMPLE 1 Remove-PnPListItem -List \"Demo List\" -Identity \"1\" -Force Removes the listitem with id \"1\" from the \"Demo List\" list EXAMPLE 2 Remove-PnPListItem -List \"Demo List\" -Identity \"1\" -Force -Recycle Removes the listitem with id \"1\" from the \"Demo List\" list and saves it in the Recycle Bin EXAMPLE 3 $batch = New-PnPBatch 1..50 | Foreach-Object{Remove-PnPListItem -List \"DemoList\" -Identity $_ -Batch $batch} Invoke-PnPBatch -Batch $batch Removes all the items with Id 1 to Id 50 in the \"Demo List\" list EXAMPLE 4 Remove-PnPListItem -List \"Demo List\" Removes all items from the \"Demo List\" list after asking for confirmation PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Recycle When provided, items will be sent to the recycle bin. When omitted, items will permanently be deleted. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Batch Batch object used to add items in a batched manner. See examples on how to use this. Type: PnPBatch Parameter Sets: Batched Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPListItemAttachment.html": {
    "href": "cmdlets/Remove-PnPListItemAttachment.html",
    "title": "Remove-PnPListItemAttachment | PnP PowerShell",
    "keywords": "Remove-PnPListItemAttachment SYNOPSIS Removes attachment from the specified list item in the SharePoint list. SYNTAX Remove attachment from list item Remove-PnPListItemAttachment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-FileName <String>] [-Recycle <SwitchParameter>] [-Force <SwitchParameter>] [-Connection <PnPConnection>] Remove all attachment files from list item Remove-PnPListItemAttachment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-All <SwitchParameter>] [-Recycle <SwitchParameter>] [-Force <SwitchParameter>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet removes one or all attachments from the specified list item in a SharePoint list. EXAMPLES EXAMPLE 1 Remove-PnPListItemAttachment -List \"Demo List\" -Identity 1 -FileName test.txt Permanently delete an attachment from the list item with Id \"1\" in the \"Demo List\" SharePoint list with file name as test.txt. EXAMPLE 2 Remove-PnPListItemAttachment -List \"Demo List\" -Identity 1 -FileName test.txt -Recycle Removes an attachment from the list item with Id \"1\" in the \"Demo List\" SharePoint list with file name as test.txt and sends it to recycle bin. EXAMPLE 3 Remove-PnPListItemAttachment -List \"Demo List\" -Identity 1 -FileName test.txt -Recycle -Force Removes an attachment from the list item with Id \"1\" in the \"Demo List\" SharePoint list with file name as test.txt and sends it to recycle bin. It will not ask for confirmation from user. EXAMPLE 4 Remove-PnPListItemAttachment -List \"Demo List\" -Identity 1 -All -Recycle -Force Removes all attachments from the list item with Id \"1\" in the \"Demo List\" SharePoint list and sends them to recycle bin. It will not ask for confirmation from user. EXAMPLE 5 Remove-PnPListItemAttachment -List \"Demo List\" -Identity 1 -All Permanently deletes all attachments from the list item with Id \"1\" in the \"Demo List\" SharePoint list and sends them to recycle bin. PARAMETERS -FileName Specify name of the attachment to delete from list item. The filename is not case sensitive. Type: String Parameter Sets: (Single) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -All Specify if you want to delete or recycle all the list item attachments. Type: SwitchParameter Parameter Sets: (Multiple) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Recycle Specify if you want to send the attachment(s) to the recycle bin. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Note that when providing the name of the list, the list name is case-sensitive. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Identity The ID of the list item, or actual ListItem object. Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPListItemComments.html": {
    "href": "cmdlets/Remove-PnPListItemComments.html",
    "title": "Remove-PnPListItemComment | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Remove-PnPListItemComment SYNOPSIS Deletes a comment or all comments from a list item in a SharePoint list. SYNTAX Single Remove-PnPListItemComment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-Text] [-Force] All Remove-PnPListItemComment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-All] [-Force] DESCRIPTION Allows to remove comments from list item. EXAMPLES EXAMPLE 1 Remove-PnPListItemComment -List \"Demo List\" -Identity \"1\" -Text \"test comment\" -Force Removes the comment with text \"test comment\" from list item with id \"1\" from the \"Demo List\" list. The text needs to be case sensitive. It may not work with comments containing mentions. EXAMPLE 2 Remove-PnPListItemComment -List \"Demo List\" -Identity \"1\" -Text \"test comment\" Removes the comment with text \"test comment\" from list item with id \"1\" from the \"Demo List\" list after asking for confirmation. The text needs to be case sensitive. It will may work with comments containing mentions. EXAMPLE 3 Remove-PnPListItemComment -List \"Demo List\" -Identity \"1\" -All -Force Removes all comments from list item with id \"1\" from the \"Demo List\" list. EXAMPLE 4 Remove-PnPListItemComment -List \"Demo List\" -Identity \"1\" -All Removes all comments from list item with id \"1\" from the \"Demo List\" list after asking for confirmation. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Text When provided, item comments with specified text will be deleted. The text is case sensitive. If the comment contains mentions, it may not work. Type: String Parameter Sets: Single Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -All When specified, it will delete all comments for the specified list item. Type: SwitchParameter Parameter Sets: Multiple Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPListItemVersion.html": {
    "href": "cmdlets/Remove-PnPListItemVersion.html",
    "title": "Remove-PnPListItemVersion | PnP PowerShell",
    "keywords": "Remove-PnPListItemVersion SYNOPSIS Removes a specific list item version. SYNTAX Remove-PnPListItemVersion -List <ListPipeBind> -Identity <ListItemPipeBind> -Version <ListItemVersionPipeBind> [-Force] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet removes a specific list item version. EXAMPLES EXAMPLE 1 Remove-PnPListItemVersion -List \"Demo List\" -Identity 1 -Version 512 Removes the list item version with Id 512. EXAMPLE 2 Remove-PnPListItemVersion -List \"Demo List\" -Identity 1 -Version \"1.0\" Removes the list item version with version label \"1.0\". PARAMETERS -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object. Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Version The ID or label of the version. Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Force If provided, no confirmation will be requested and the action will be performed. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPManagedAppId.html": {
    "href": "cmdlets/Remove-PnPManagedAppId.html",
    "title": "Remove-PnPManagedAppId | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Remove-PnPManagedAppId SYNOPSIS Removes an App Id from the Credential Manager SYNTAX Remove-PnPManagedAppId -Url <String> [-Force] DESCRIPTION Removes an App Id from the Credential Manager EXAMPLES EXAMPLE 1 Remove-PnPManagedAppId -Url \"https://tenant.sharepoint.com\" Removes the specified App Id from the Credential Manager PARAMETERS -Force If specified you will not be asked for confirmation Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The Url for which to remove the App Id Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPMicrosoft365Group.html": {
    "href": "cmdlets/Remove-PnPMicrosoft365Group.html",
    "title": "Remove-PnPMicrosoft365Group | PnP PowerShell",
    "keywords": "Remove-PnPMicrosoft365Group SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Removes one Microsoft 365 Group SYNTAX Remove-PnPMicrosoft365Group -Identity <Microsoft365GroupPipeBind> DESCRIPTION Allows to remove Microsoft 365 Group. EXAMPLES EXAMPLE 1 Remove-PnPMicrosoft365Group -Identity $groupId Removes an Microsoft 365 Group based on its ID EXAMPLE 2 Remove-PnPMicrosoft365Group -Identity $group Removes the provided Microsoft 365 Group EXAMPLE 3 Get-PnPMicrosoft365Group | ? Visibility -eq \"Public\" | Remove-PnPMicrosoft365Group Removes all the public Microsoft 365 Groups PARAMETERS -Identity The Identity of the Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPMicrosoft365GroupMember.html": {
    "href": "cmdlets/Remove-PnPMicrosoft365GroupMember.html",
    "title": "Remove-PnPMicrosoft365GroupMember | PnP PowerShell",
    "keywords": "Remove-PnPMicrosoft365GroupMember SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All, GroupMember.ReadWrite.All Removes members from a particular Microsoft 365 Group SYNTAX Remove-PnPMicrosoft365GroupMember -Identity <Microsoft365GroupPipeBind> -Users <String[]> DESCRIPTION Allows to remove members from a specified Microsoft 365 Group. EXAMPLES EXAMPLE 1 Remove-PnPMicrosoft365GroupMember -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" Removes the provided two users as members from the Microsoft 365 Group named \"Project Team\" PARAMETERS -Identity The Identity of the Microsoft 365 Group to remove members from Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Users The UPN(s) of the user(s) to remove as members from the Microsoft 365 Group Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Remove-PnPMicrosoft365GroupOwner.html": {
    "href": "cmdlets/Remove-PnPMicrosoft365GroupOwner.html",
    "title": "Remove-PnPMicrosoft365GroupOwner | PnP PowerShell",
    "keywords": "Remove-PnPMicrosoft365GroupOwner SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All Removes owners from a particular Microsoft 365 Group SYNTAX Remove-PnPMicrosoft365GroupOwner -Identity <Microsoft365GroupPipeBind> -Users <String[]> DESCRIPTION Allows to remove owners from a specified Microsoft 365 Group. EXAMPLES EXAMPLE 1 Remove-PnPMicrosoft365GroupOwner -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" Removes the provided two users as owners from the Microsoft 365 Group named \"Project Team\" PARAMETERS -Identity The Identity of the Microsoft 365 Group to remove owners from Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Users The UPN(s) of the user(s) to remove as owners from the Microsoft 365 Group Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Remove-PnPMicrosoft365GroupPhoto.html": {
    "href": "cmdlets/Remove-PnPMicrosoft365GroupPhoto.html",
    "title": "Remove-PnPMicrosoft365GroupPhoto | PnP PowerShell",
    "keywords": "Remove-PnPMicrosoft365GroupPhoto SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All Removes the profile photo from a particular Microsoft 365 Group SYNTAX Remove-PnPMicrosoft365GroupPhoto -Identity <Microsoft365GroupPipeBind> DESCRIPTION Allows to remove profile photo from a specified Microsoft 365 Group. EXAMPLES EXAMPLE 1 Remove-PnPMicrosoft365GroupPhoto -Identity \"Project Team\" Removes profile photo from the Microsoft 365 Group named \"Project Team\" PARAMETERS -Identity The Identity of the Microsoft 365 Group to remove profile photo from Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Remove-PnPMicrosoft365GroupSettings.html": {
    "href": "cmdlets/Remove-PnPMicrosoft365GroupSettings.html",
    "title": "Remove-PnPMicrosoft365GroupSettings | PnP PowerShell",
    "keywords": "Remove-PnPMicrosoft365GroupSettings SYNOPSIS Required Permissions Microsoft Graph API: One of Directory.ReadWrite.All , Directory.AccessAsUser.All Removes Microsoft 365 Group settings from the tenant or the specified Microsoft 365 Group. SYNTAX Remove-PnPMicrosoft365GroupSettings -Identity <string> -Group <Microsoft365GroupPipeBind> DESCRIPTION Allows to remove Microsoft 365 Group settings from the tenant or the specified group. EXAMPLES EXAMPLE 1 Remove-PnPMicrosoft365GroupSettings -Identity \"10f686b9-9deb-4ad8-ba8c-1f9b7a00a22b\" Removes a tenant wide Microsoft 365 Group setting based on its ID. You can get the ID of the setting using Get-PnPMicrosoft365GroupSettings cmdlet. EXAMPLE 2 Remove-PnPMicrosoft365GroupSettings -Identity \"10f686b9-9deb-4ad8-ba8c-1f9b7a00a22b\" -Group $groupId Removes the Microsoft 365 Group setting with Id from the specified group. You can get the ID of the setting using Get-PnPMicrosoft365GroupSettings -Group cmdlet. PARAMETERS -Identity The Identity of the Microsoft 365 Group setting Type: string Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The Identity of the Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Remove-PnPNavigationNode.html": {
    "href": "cmdlets/Remove-PnPNavigationNode.html",
    "title": "Remove-PnPNavigationNode | PnP PowerShell",
    "keywords": "Remove-PnPNavigationNode SYNOPSIS Removes a menu item from either the quick launch or top navigation. SYNTAX Remove a node by ID (Default) Remove-PnPNavigationNode [-Identity] <NavigationNodePipeBind> [-Force] [-Connection <PnPConnection>] Remove node by Title Remove-PnPNavigationNode [-Location] <NavigationType> -Title <String> [-Header <String>] [-Force] [-Connection <PnPConnection>] All Nodes Remove-PnPNavigationNode [-All] [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to remove menu item from either the quick launch or top navigation. EXAMPLES EXAMPLE 1 Remove-PnPNavigationNode -Identity 1032 Removes the navigation node with the specified id. EXAMPLE 2 Get-PnPNavigationNode -Location Footer | Select-Object -First 1 | Remove-PnPNavigationNode -Force Removes the first node of the footer navigation without asking for confirmation. EXAMPLE 3 Remove-PnPNavigationNode -Title Recent -Location QuickLaunch Removes the recent navigation node from the quick launch in the current web after confirmation has been given that it should be deleted. EXAMPLE 4 Remove-PnPNavigationNode -Title Home -Location TopNavigationBar -Force Removes the home navigation node from the top navigation bar in the current web without prompting for a confirmation. EXAMPLE 5 Get-PnPNavigationNode -Location QuickLaunch | Remove-PnPNavigationNode -Force Removes all the navigation nodes from the quick launch bar in the current web without prompting for a confirmation. PARAMETERS -All Specifying the All parameter will remove all the nodes from specified Location. Type: SwitchParameter Parameter Sets: All Nodes Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Header Obsolete. Type: String Parameter Sets: Remove node by Title Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Id or node object to delete. Type: NavigationNodePipeBind Parameter Sets: Remove a node by ID Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Location Obsolete. Type: NavigationType Parameter Sets: Remove node by Title Accepted values: TopNavigationBar, QuickLaunch, SearchNav, Footer Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Obsolete. Type: String Parameter Sets: Remove node by Title Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPOrgAssetsLibrary.html": {
    "href": "cmdlets/Remove-PnPOrgAssetsLibrary.html",
    "title": "Remove-PnPOrgAssetsLibrary | PnP PowerShell",
    "keywords": "Remove-PnPOrgAssetsLibrary SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a given document library as an organizational asset source. SYNTAX Remove-PnPOrgAssetsLibrary -LibraryUrl <String> [-ShouldRemoveFromCdn <Boolean>] [-CdnType <SPOTenantCdnType>] [-Connection <PnPConnection>] DESCRIPTION Removes a given document library as an organizational asset source based on its server relative URL in your SharePoint Online tenant. It will not remove the document library itself. It may take some time before this change will be reflected in the web interface. EXAMPLES EXAMPLE 1 Remove-PnPOrgAssetsLibrary -LibraryUrl \"sites/branding/logos\" This example removes the document library \"logos\" residing in the site collection with the url \"sites/branding\" from the list with organizational assets keeping it as an Office 365 CDN source. EXAMPLE 2 Remove-PnPOrgAssetsLibrary -LibraryUrl \"sites/branding/logos\" -ShouldRemoveFromCdn $true This example removes the document library \"logos\" residing in the site collection with the url \"sites/branding\" from the list with organizational assets also removing it as a Public Office 365 CDN source. EXAMPLE 3 Remove-PnPOrgAssetsLibrary -LibraryUrl \"sites/branding/logos\" -ShouldRemoveFromCdn $true -CdnType Private This example removes the document library \"logos\" residing in the site collection with the url \"sites/branding\" from the list with organizational assets also removing it as a Private Office 365 CDN source. PARAMETERS -CdnType Indicates what type of Office 365 CDN source the document library that will no longer be flagged as an organizational asset was of Type: SPOTenantCdnType Parameter Sets: (All) Accepted values: Public, Private Required: False Position: Named Default value: Public Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LibraryUrl The server relative url of the document library flagged as organizational asset which you want to remove, i.e. \"sites/branding/logos\" Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShouldRemoveFromCdn Boolean indicating if the document library that will no longer be flagged as an organizational asset also needs to be removed as an Office 365 CDN source. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPOrgNewsSite.html": {
    "href": "cmdlets/Remove-PnPOrgNewsSite.html",
    "title": "Remove-PnPOrgNewsSite | PnP PowerShell",
    "keywords": "Remove-PnPOrgNewsSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a given site from the list of organizational news sites. SYNTAX Remove-PnPOrgNewsSite -OrgNewsSiteUrl <SitePipeBind> [-Connection <PnPConnection>] DESCRIPTION Removes a given site from the list of organizational news sites based on its URL in your SharePoint Online tenant. EXAMPLES EXAMPLE 1 Remove-PnPOrgNewsSite -OrgNewsSiteUrl \"https://tenant.sharepoint.com/sites/mysite\" This example removes the specified site from the list of organization's news sites. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OrgNewsSiteUrl The site to be removed from the list of organization's news sites. Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPPage.html": {
    "href": "cmdlets/Remove-PnPPage.html",
    "title": "Remove-PnPPage | PnP PowerShell",
    "keywords": "Remove-PnPPage SYNOPSIS Removes a page SYNTAX Remove-PnPPage [-Identity] <PagePipeBind> [-Force] [-Recycle] [-Connection <PnPConnection>] DESCRIPTION Allows to remove a page. EXAMPLES EXAMPLE 1 Remove-PnPPage -Identity \"MyPage\" Removes the page named 'MyPage.aspx' EXAMPLE 2 Remove-PnPPage -Identity \"Templates/MyPageTemplate\" Removes the specified page which is located in the Templates folder of the Site Pages library. EXAMPLE 3 Remove-PnPPage $page Removes the specified page which is contained in the $page variable. EXAMPLE 4 Remove-PnPPage -Identity \"MyPage\" -Recycle Removes the page named 'MyPage.aspx' and sends it to the recycle bin. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name of the page Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Recycle Specifying the Recycle parameter will delete the page and send it to recycle bin. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPPageComponent.html": {
    "href": "cmdlets/Remove-PnPPageComponent.html",
    "title": "Remove-PnPPageComponent | PnP PowerShell",
    "keywords": "Remove-PnPPageComponent SYNOPSIS Removes a page component from a page. SYNTAX Remove-PnPPageComponent [-Page] <PagePipeBind> -InstanceId <Guid> [-Force] [-Connection <PnPConnection>] DESCRIPTION This cmdlet removes specified page component from a page. EXAMPLES EXAMPLE 1 Remove-PnPPageComponent -Page Home -InstanceId a2875399-d6ff-43a0-96da-be6ae5875f82 Removes the specified control from the page. EXAMPLE 2 $webpart = Get-PnPPageComponent -Page \"Home\" | Where-Object { $_.Title -eq \"Site activity\" } Remove-PnPPageComponent -Page \"Home\" -InstanceId $webpart.InstanceId -Force Finds a web part with the title \"Site activity\" on the Home.aspx page, then removes it from the page. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If specified you will not receive the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InstanceId The instance id of the component. Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Page The name of the page. Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPPlannerBucket.html": {
    "href": "cmdlets/Remove-PnPPlannerBucket.html",
    "title": "Remove-PnPPlannerBucket | PnP PowerShell",
    "keywords": "Remove-PnPPlannerBucket SYNOPSIS Required Permissions Microsoft Graph API: One of Tasks.ReadWrite, Tasks.ReadWrite.All, Group.ReadWrite.All Removes a planner bucket SYNTAX By Name Remove-PnPPlannerBucket -Group <PlannerGroupPipeBind> -Plan <PlannerPlanPipeBind> -Identity <PlannerBucketPipeBind> [-Confirm] By Bucket Id Remove-PnPPlannerBucket -BucketId <String> -Identity <PlannerBucketPipeBind> [-Confirm] DESCRIPTION This cmdlet removes a Planner bucket. EXAMPLES Example 1 Remove-PnPPlannerBucket -Group \"Marketing\" -Plan \"Conference\" -Identity \"Pre-conference Todos\" This removes the \"Pre-conference Todos\" bucket from the specified plan. PARAMETERS -BucketId The id of a bucket to remove Type: String Parameter Sets: By Bucket Id Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Specify the group id or name of the group owning the plan. Type: PlannerGroupPipeBind Parameter Sets: By Name Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the id or name of the bucket. Type: PlannerBucketPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Plan Specify the id or name of the plan owning the bucket. Type: PlannerPlanPipeBind Parameter Sets: By Name Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPPlannerPlan.html": {
    "href": "cmdlets/Remove-PnPPlannerPlan.html",
    "title": "Remove-PnPPlannerPlan | PnP PowerShell",
    "keywords": "Remove-PnPPlannerPlan SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Removes a Planner plan. SYNTAX Remove-PnPPlannerPlan -Group <PlannerGroupPipeBind> -Identity <PlannerPlanPipeBind> [-Connection <PnPConnection>] [-Confirm] DESCRIPTION This cmdlet removes a Planner plan. EXAMPLES Example 1 Remove-PnPPlannerPlan -Group \"Marketing\" -Identity \"Conference Planning\" This removes the plan identified. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Specify the id or name of the group owning the plan. Type: PlannerGroupPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the name or id of the plan. Type: PlannerPlanPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPPlannerRoster.html": {
    "href": "cmdlets/Remove-PnPPlannerRoster.html",
    "title": "Remove-PnPPlannerRoster | PnP PowerShell",
    "keywords": "Remove-PnPPlannerRoster SYNOPSIS Removes a Microsoft Planner Roster SYNTAX Remove-PnPPlannerRoster -Identity <PlannerRosterPipeBind> [-Connection <PnPConnection>] DESCRIPTION Removes a Microsoft Planner Roster EXAMPLES EXAMPLE 1 Remove-PnPPlannerRoster -Identity \"6519868f-868f-6519-8f86-19658f861965\" Removes the Microsoft Planner Roster with the provided identifier PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name or ID of the Microsoft Planner Roster to remove Type: PlannerRosterPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPPlannerRosterMember.html": {
    "href": "cmdlets/Remove-PnPPlannerRosterMember.html",
    "title": "Remove-PnPPlannerRosterMember | PnP PowerShell",
    "keywords": "Remove-PnPPlannerRosterMember SYNOPSIS Removes a member from a Microsoft Planner Roster. SYNTAX Remove-PnPPlannerRosterMember -Identity <PlannerRosterPipeBind> [-Connection <PnPConnection>] DESCRIPTION Removes a member from a Microsoft Planner Roster. EXAMPLES EXAMPLE 1 Remove-PnPPlannerRosterMember -Identity \"6519868f-868f-6519-8f86-19658f861965\" -User \"johndoe@contoso.onmicrosoft.com\" Removes the provided user from the Microsoft Planner Roster with the provided identifier. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Identity of the Microsoft Planner Roster to remove the member from. Type: PlannerRosterPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User User principal name of the user to remove from being a member. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPPlannerTask.html": {
    "href": "cmdlets/Remove-PnPPlannerTask.html",
    "title": "Remove-PnPPlannerTask | PnP PowerShell",
    "keywords": "Remove-PnPPlannerTask SYNOPSIS Required Permissions Microsoft Graph API: One of Tasks.ReadWrite, Tasks.ReadWrite.All, Group.ReadWrite.All Removes a Planner task. SYNTAX Remove-PnPPlannerTask -Task <PlannerTaskPipeBind> DESCRIPTION This cmdlet removes a specific Planner task. EXAMPLES Example 1 Remove-PnPPlannerTask -Task _LIqnL4lZUqurT71i2-iY5YALFLk Removes the task with the specified id. PARAMETERS -Task Specify the id or Task object to delete. Type: PlannerTaskPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPProfileCardProperty.html": {
    "href": "cmdlets/Remove-PnPProfileCardProperty.html",
    "title": "Remove-PnPProfileCardProperty | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Remove-PnPProfileCardProperty SYNOPSIS Required Permissions Microsoft Graph API : PeopleSettings.ReadWrite.All Removes a specific property from user profile card SYNTAX Remove-PnPProfileCardProperty -PropertyName <ProfileCardPropertyName> [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet can be used to remove a property from user profile card EXAMPLES EXAMPLE 1 Remove-PnPProfileCardProperty -PropertyName CustomAttribute1 This will remove the connection to the external datasource with the specified identity from Microsoft Search. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Unique identifier or an instance of the external connection in Microsoft Search that needs to be removed. Type: SearchExternalConnectionPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Remove-PnPPropertyBagValue.html": {
    "href": "cmdlets/Remove-PnPPropertyBagValue.html",
    "title": "Remove-PnPPropertyBagValue | PnP PowerShell",
    "keywords": "Remove-PnPPropertyBagValue SYNOPSIS Removes a value from the property bag. SYNTAX Remove-PnPPropertyBagValue [-Key] <String> [-Folder <String>] [-Force] [-Connection <PnPConnection>] DESCRIPTION Removes a value from the property bag. If working with a modern SharePoint Online site or having noscript enabled, you will have to disable this yourself temporarily using Set-PnPTenantSite -Url <url> -NoScriptSite:$false to be able to make the change. EXAMPLES EXAMPLE 1 Remove-PnPPropertyBagValue -Key MyKey This will remove the value with key MyKey from the current web property bag. EXAMPLE 2 Remove-PnPPropertyBagValue -Key MyKey -Folder /MyFolder This will remove the value with key MyKey from the folder MyFolder which is located in the root folder of the current web. EXAMPLE 3 Remove-PnPPropertyBagValue -Key MyKey -Folder / This will remove the value with key MyKey from the root folder of the current web. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder Site relative url of the folder. See examples for use. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to remove the value from the property bag. It will also temporarily enable scripts on the site and then disable it after removing property bag. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Key of the property bag value to be removed. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPPublishingImageRendition.html": {
    "href": "cmdlets/Remove-PnPPublishingImageRendition.html",
    "title": "Remove-PnPPublishingImageRendition | PnP PowerShell",
    "keywords": "Remove-PnPPublishingImageRendition SYNOPSIS Removes an existing image rendition SYNTAX Remove-PnPPublishingImageRendition [-Identity] <ImageRenditionPipeBind> [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to remove an existing image rendition. EXAMPLES EXAMPLE 1 Remove-PnPPublishingImageRendition -Name \"MyImageRendition\" -Width 800 -Height 600 PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to remove the Image Rendition. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The display name or id of the Image Rendition. Type: ImageRenditionPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPRoleDefinition.html": {
    "href": "cmdlets/Remove-PnPRoleDefinition.html",
    "title": "Remove-PnPRoleDefinition | PnP PowerShell",
    "keywords": "Remove-PnPRoleDefinition SYNOPSIS Removes a role definition from a site. SYNTAX Remove-PnPRoleDefinition [-Identity] <RoleDefinitionPipeBind> [-Force] [-Connection <PnPConnection>] DESCRIPTION This cmdlet removes the specified role definition from a site collection. EXAMPLES EXAMPLE 1 Remove-PnPRoleDefinition -Identity MyRoleDefinition Removes the specified role definition (permission level) from the current site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Do not ask for confirmation to delete the role definition. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the role definition, either a RoleDefinition object or the name of role definition. Type: RoleDefinitionPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSdnProvider.html": {
    "href": "cmdlets/Remove-PnPSdnProvider.html",
    "title": "Remove-PnPSdnProvider | PnP PowerShell",
    "keywords": "Remove-PnPSdnProvider SYNOPSIS Removes Software-Defined Networking (SDN) Support in your SharePoint Online tenant. SYNTAX Remove-PnPSdnProvider [-Confirm] DESCRIPTION Removes SDN Support in your SharePoint Online tenant. EXAMPLES EXAMPLE 1 Remove-PnPSdnProvider -Confirm:false This command removes the SDN support for your Online Tenant without confirmation. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSearchConfiguration.html": {
    "href": "cmdlets/Remove-PnPSearchConfiguration.html",
    "title": "Remove-PnPSearchConfiguration | PnP PowerShell",
    "keywords": "Remove-PnPSearchConfiguration SYNOPSIS Removes the search configuration. SYNTAX Config Remove-PnPSearchConfiguration -Configuration <String> [-Scope <SearchConfigurationScope>] [-Connection <PnPConnection>] Path Remove-PnPSearchConfiguration -Path <String> [-Scope <SearchConfigurationScope>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet removes the search configuration from a single web, site collection or a tenant, using path or a configuration string. EXAMPLES EXAMPLE 1 Remove-PnPSearchConfiguration -Configuration $config Removes the search configuration for the current web (does not remove managed property mappings). EXAMPLE 2 Remove-PnPSearchConfiguration -Configuration $config -Scope Site Removes the search configuration for the current site collection (does not remove managed property mappings). EXAMPLE 3 Remove-PnPSearchConfiguration -Configuration $config -Scope Subscription Removes the search configuration for the current tenant (does not remove managed property mappings). EXAMPLE 4 Remove-PnPSearchConfiguration -Path searchconfig.xml -Scope Subscription Reads the search configuration from the specified XML file and removes it for the current tenant (does not remove managed property mappings). PARAMETERS -Configuration Search configuration string. Type: String Parameter Sets: Config Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Path to the search configuration. Type: String Parameter Sets: Path Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Scope to remove the configuration from. The default is Web. Type: SearchConfigurationScope Parameter Sets: (All) Accepted values: Web, Site, Subscription Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSearchExternalConnection.html": {
    "href": "cmdlets/Remove-PnPSearchExternalConnection.html",
    "title": "Remove-PnPSearchExternalConnection | PnP PowerShell",
    "keywords": "Remove-PnPSearchExternalConnection SYNOPSIS Required Permissions Microsoft Graph API : One of ExternalConnection.ReadWrite.OwnedBy, ExternalConnection.ReadWrite.All Removes a specific connection to external datasources belonging to Microsoft Search SYNTAX Remove-PnPSearchExternalConnection -Identity <SearchExternalConnectionPipeBind> [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet can be used to remove a connection to an external datasource that is being indexed into Microsoft Search through a custom connector. EXAMPLES EXAMPLE 1 Remove-PnPSearchExternalConnection -Identity \"pnppowershell\" This will remove the connection to the external datasource with the specified identity from Microsoft Search. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Unique identifier or an instance of the external connection in Microsoft Search that needs to be removed. Type: SearchExternalConnectionPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSearchExternalItem.html": {
    "href": "cmdlets/Remove-PnPSearchExternalItem.html",
    "title": "Remove-PnPSearchExternalItem | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Remove-PnPSearchExternalItem SYNOPSIS Required Permissions Microsoft Graph API : One of ExternalItem.ReadWrite.OwnedBy, ExternalItem.ReadWrite.All as a delegate or application permission Removes an external item from an external connector in Microsoft Search SYNTAX Remove-PnPSearchExternalItem -ItemId <String> -ConnectionId <SearchExternalConnectionPipeBind> [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet can be used to remove a specific external item from a Microsoft Search custom connector. The item will be removed from the index and will no longer be available for search results. EXAMPLES EXAMPLE 1 Remove-PnPSearchExternalItem -ConnectionId \"pnppowershell\" -ItemId \"12345\" This will remove the external item with the identifier \"12345\" from the external Microsoft Search index connector named \"pnppowershell\". PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ItemId Unique identifier of the external item in Microsoft Search that you wish to remove. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ConnectionId The Connection ID or connection instance of the custom connector to use. This is the ID that was entered when registering the custom connector and will indicate for which custom connector this external item is being removed from the Microsoft Search index. Type: SearchExternalConnectionPipeBind Parameter Sets: (All) Required: True Default value: None Accept pipeline input: True Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Remove-PnPSiteCollectionAdmin.html": {
    "href": "cmdlets/Remove-PnPSiteCollectionAdmin.html",
    "title": "Remove-PnPSiteCollectionAdmin | PnP PowerShell",
    "keywords": "Remove-PnPSiteCollectionAdmin SYNOPSIS Removes one or more users as site collection administrators from the site collection in the current context SYNTAX Remove-PnPSiteCollectionAdmin -Owners <System.Collections.Generic.List`1[PnP.PowerShell.Commands.Base.PipeBinds.UserPipeBind]> [-Connection <PnPConnection>] DESCRIPTION This command allows removing one to many users as site collection administrators from the site collection in the current context. All existing site collection administrators not included in this command will remain site collection administrator. EXAMPLES EXAMPLE 1 Remove-PnPSiteCollectionAdmin -Owners \"user@contoso.onmicrosoft.com\" This will remove user@contoso.onmicrosoft.com as a site collection owner from the site collection in the current context EXAMPLE 2 Remove-PnPSiteCollectionAdmin -Owners @(\"user1@contoso.onmicrosoft.com\", \"user2@contoso.onmicrosoft.com\") This will remove user1@contoso.onmicrosoft.com and user2@contoso.onmicrosoft.com as site collection owners from the site collection in the current context EXAMPLE 3 Get-PnPUser | ? Title -Like \"*Doe\" | Remove-PnPSiteCollectionAdmin This will remove all users with their title ending with \"Doe\" as site collection owners from the site collection in the current context EXAMPLE 4 Get-PnPSiteCollectionAdmin | Remove-PnPSiteCollectionAdmin This will remove all existing site collection administrators from the site collection in the current context PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners Specifies owner(s) to remove as site collection administrators. Can be both users and groups. Type: System.Collections.Generic.List`1[PnP.PowerShell.Commands.Base.PipeBinds.UserPipeBind] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSiteCollectionAppCatalog.html": {
    "href": "cmdlets/Remove-PnPSiteCollectionAppCatalog.html",
    "title": "Remove-PnPSiteCollectionAppCatalog | PnP PowerShell",
    "keywords": "Remove-PnPSiteCollectionAppCatalog SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a site collection scoped app catalog from a site. SYNTAX Remove-PnPSiteCollectionAppCatalog -Site <SitePipeBind> [-Connection <PnPConnection>] DESCRIPTION Notice that this will not remove the App Catalog list and its contents from the site. EXAMPLES EXAMPLE 1 Remove-PnPSiteCollectionAppCatalog -Site \"https://contoso.sharepoint.com/sites/FinanceTeamsite\" This will remove a site collection app catalog from the specified site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Url of the site to remove the app catalog from. Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSiteCollectionTermStore.html": {
    "href": "cmdlets/Remove-PnPSiteCollectionTermStore.html",
    "title": "Remove-PnPSiteCollectionTermStore | PnP PowerShell",
    "keywords": "Remove-PnPSiteCollectionTermStore SYNOPSIS Removes the site collection term store if it exists or else nothing will happen. SYNTAX Remove-PnPSiteCollectionTermStore [-Connection <PnPConnection>] DESCRIPTION Removes the site collection scoped term store for the currently connected site collection. If it does not exist yet, it will not do anything. EXAMPLES EXAMPLE 1 Remove-PnPSiteCollectionTermStore Removes the site collection term store. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSiteDesign.html": {
    "href": "cmdlets/Remove-PnPSiteDesign.html",
    "title": "Remove-PnPSiteDesign | PnP PowerShell",
    "keywords": "Remove-PnPSiteDesign SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a site design. SYNTAX Remove-PnPSiteDesign [-Identity] <TenantSiteDesignPipeBind> [-Force] [-Connection <PnPConnection>] DESCRIPTION This cmdlet removes the specified site design. EXAMPLES EXAMPLE 1 Remove-PnPSiteDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Removes the specified site design. EXAMPLE 2 $siteDesign = Get-PnPSiteDesign -Identity c234b254-b51a-4ca8-8ba3-939659a66832 Remove-PnPSiteDesign -Identity $siteDesign Removes the specified site design. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If specified you will not be asked to confirm removing the specified site design. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the site design to remove. Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSiteDesignTask.html": {
    "href": "cmdlets/Remove-PnPSiteDesignTask.html",
    "title": "Remove-PnPSiteDesignTask | PnP PowerShell",
    "keywords": "Remove-PnPSiteDesignTask SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a site design task. SYNTAX Remove-PnPSiteDesignTask [-Identity] <TenantSiteDesignTaskPipeBind> [-Force] [-Connection <PnPConnection>] DESCRIPTION This cmdlet removes a site design task. If the execution of the associated site script has already started, the execution will not be terminated. EXAMPLES EXAMPLE 1 Remove-PnPSiteDesignTask -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Removes the specified site design task. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If specified you will not be asked to confirm removing the specified site design. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the site design task to remove. Type: TenantSiteDesignTaskPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSiteFileVersionBatchDeleteJob.html": {
    "href": "cmdlets/Remove-PnPSiteFileVersionBatchDeleteJob.html",
    "title": "Remove-PnPSiteFileVersionBatchDeleteJob | PnP PowerShell",
    "keywords": "Remove-PnPSiteFileVersionBatchDeleteJob SYNOPSIS Cancels further processing of a file version batch trim job for a site collection. SYNTAX Remove-PnPSiteFileVersionBatchDeleteJob [-Force] DESCRIPTION Cancels further processing of a file version batch trim job for a site collection. EXAMPLES EXAMPLE 1 Remove-PnPSiteFileVersionBatchDeleteJob Cancels further processing of the file version batch trim job for the site collection. EXAMPLE 2 Remove-PnPSiteFileVersionBatchDeleteJob -Force Cancels further processing of the file version batch trim job for the site collection, without prompting the user for confirmation. PARAMETERS -Force When provided, no confirmation prompts will be shown to the user. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSiteGroup.html": {
    "href": "cmdlets/Remove-PnPSiteGroup.html",
    "title": "Remove-PnPSiteGroup | PnP PowerShell",
    "keywords": "Remove-PnPSiteGroup SYNOPSIS Removes a group from a web. SYNTAX Remove-PnPSiteGroup -Identity <String> [-Site <SitePipeBind>] [-Confirm] DESCRIPTION Allows to remove a group from specified site. EXAMPLES EXAMPLE 1 Remove-PnPSiteGroup -Identity GroupToRemove -Site \"https://contoso.sharepoint.com/sites/marketing\" This example removes a group named GroupToRemove from the site collection https://contoso.sharepoint.com/sites/marketing. EXAMPLE 2 Remove-PnPSiteGroup -Identity GroupToRemove This example removes a group named GroupToRemove from the current site collection that has been connected to with Connect-PnPOnline. PARAMETERS -Identity Specifies the name of the group to remove. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Specifies the site collection to remove the group from. Type: SitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSiteScript.html": {
    "href": "cmdlets/Remove-PnPSiteScript.html",
    "title": "Remove-PnPSiteScript | PnP PowerShell",
    "keywords": "Remove-PnPSiteScript SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a site script. SYNTAX Remove-PnPSiteScript [-Identity] <TenantSiteScriptPipeBind> [-Force] [-Connection <PnPConnection>] DESCRIPTION This cmdlet removes specified site script. EXAMPLES EXAMPLE 1 Remove-PnPSiteScript -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Removes the specified site script. EXAMPLE 2 $sitescript = Get-PnPSiteScript -Identity MySiteScript Remove-PnPSiteScript -Identity $sitescript Removes the specified site script. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If specified you will not be asked to confirm removing the specified site script. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the site script to remove. Type: TenantSiteScriptPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSiteUserInvitations.html": {
    "href": "cmdlets/Remove-PnPSiteUserInvitations.html",
    "title": "Remove-PnPSiteUserInvitations | PnP PowerShell",
    "keywords": "Remove-PnPSiteUserInvitations SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Searches against all stored sharing links and removes an email invite. SYNTAX Remove-PnPSiteUserInvitations [[-Site] <SitePipeBind>] [-EmailAddress] <string> [-Connection <PnPConnection>] DESCRIPTION Searches against all stored sharing links on a Site and removes an email invites. If the site parameter is omitted the current site will be searched. EXAMPLES EXAMPLE 1 Remove-PnPSiteUserInvitations -Site \"https://contoso.sharepoint.com/sites/ContosoWeb1/\" -EmailAddress someone@example.com This example removes the email invite stored in the ContosoWeb1 site for the user with email address someone@example.com. PARAMETERS -Site Specifies the URL of the site collection. Type: SitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EmailAddress Email Address of the user. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPStorageEntity.html": {
    "href": "cmdlets/Remove-PnPStorageEntity.html",
    "title": "Remove-PnPStorageEntity | PnP PowerShell",
    "keywords": "Remove-PnPStorageEntity SYNOPSIS Remove Storage Entities / Farm Properties from either the tenant scoped app catalog or the current site collection if the site has a site collection scoped app catalog SYNTAX Remove-PnPStorageEntity -Key <String> [-Scope <StorageEntityScope>] [-Connection <PnPConnection>] DESCRIPTION Allows to remove Storage Entities / Farm Properties from either the tenant scoped app catalog or the current site collection app catalog. EXAMPLES EXAMPLE 1 Remove-PnPStorageEntity -Key MyKey Removes an existing storage entity / farm property. EXAMPLE 2 Remove-PnPStorageEntity -Key MyKey -Scope Site Removes an existing storage entity from the current site collection. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key The key of the value to remove. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Defines the scope of the storage entity. Defaults to Tenant. Type: StorageEntityScope Parameter Sets: (All) Accepted values: Site, Tenant Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPStoredCredential.html": {
    "href": "cmdlets/Remove-PnPStoredCredential.html",
    "title": "Remove-PnPStoredCredential | PnP PowerShell",
    "keywords": "Remove-PnPStoredCredential SYNOPSIS Removes a credential from the Credential Manager SYNTAX Remove-PnPStoredCredential -Name <String> [-Force] DESCRIPTION Removes a stored credential from the Credential Manager EXAMPLES EXAMPLE 1 Remove-PnPStoredCredential -Name \"https://tenant.sharepoint.com\" Removes the specified credential from the Credential Manager PARAMETERS -Force If specified you will not be asked for confirmation Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The credential to remove Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTaxonomyItem.html": {
    "href": "cmdlets/Remove-PnPTaxonomyItem.html",
    "title": "Remove-PnPTaxonomyItem | PnP PowerShell",
    "keywords": "Remove-PnPTaxonomyItem SYNOPSIS Removes a taxonomy item. SYNTAX Remove-PnPTaxonomyItem [-TermPath] <String> [-Force] [-Connection <PnPConnection>] DESCRIPTION This cmdlet removes a taxonomy item. EXAMPLES EXAMPLE 1 Remove-PnPTaxonomyItem -TermPath \"HR|Recruitment|Marketing\" Removes the term called \"Marketing\" located in \"Recruitment\" term set in \"HR\" term group. EXAMPLE 2 Remove-PnPTaxonomyItem -TermPath \"HR|Recruitment|Marketing\" -Force Removes the term called \"Marketing\" located in \"Recruitment\" term set in \"HR\" term group, and skips the confirmation question. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermPath The path, delimited by | of the taxonomy item to remove, alike GROUPLABEL|TERMSETLABEL|TERMLABEL Type: String Parameter Sets: (All) Aliases: Term Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTeamsApp.html": {
    "href": "cmdlets/Remove-PnPTeamsApp.html",
    "title": "Remove-PnPTeamsApp | PnP PowerShell",
    "keywords": "Remove-PnPTeamsApp SYNOPSIS Required Permissions Microsoft Graph API: AppCatalog.ReadWrite.All Removes an app from the Teams AppCatalog. SYNTAX Remove-PnPTeamsApp -Identity <TeamsAppPipeBind> [-Force] DESCRIPTION Allows to remove an app from the Teams AppCatalog. EXAMPLES EXAMPLE 1 Remove-PnPTeamsApp -Identity ac139d8b-fa2b-4ffe-88b3-f0b30158b58b Removes an app from the Teams AppCatalog by using the id. EXAMPLE 2 Remove-PnPTeamsApp -Identity \"My Teams App\" Removes the app \"My teams App\" from the Teams AppCatalog by using display name. PARAMETERS -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The id, external id or display name of the app. Type: TeamsAppPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTeamsChannel.html": {
    "href": "cmdlets/Remove-PnPTeamsChannel.html",
    "title": "Remove-PnPTeamsChannel | PnP PowerShell",
    "keywords": "Remove-PnPTeamsChannel SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Removes a channel from a Microsoft Teams instance. SYNTAX Remove-PnPTeamsChannel -Team <TeamsTeamPipeBind> -Identity <TeamsChannelPipeBind> [-Force] DESCRIPTION Allows to remove a channel from specified team. EXAMPLES EXAMPLE 1 Remove-PnPTeamsChannel -Team 4efdf392-8225-4763-9e7f-4edeb7f721aa -Identity \"My Channel\" Removes the channel specified from the team specified PARAMETERS -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the channel id or display name of the channel to delete. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTeamsChannelUser.html": {
    "href": "cmdlets/Remove-PnPTeamsChannelUser.html",
    "title": "Remove-PnPTeamsChannelUser | PnP PowerShell",
    "keywords": "Remove-PnPTeamsChannelUser SYNOPSIS Required Permissions Microsoft Graph API: ChannelMember.ReadWrite.All Removes a specified user of a specified Microsoft Teams private Channel. SYNTAX Remove-PnPTeamsChannelUser -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> -Identity <TeamsChannelMemberPipeBind> [-Force] DESCRIPTION Allows to remove a user from specified private channel. EXAMPLES EXAMPLE 1 Remove-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Channel\" -Identity MCMjMiMjMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwIyMxOTowMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMEB0aHJlYWQuc2t5cGUjIzAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMA== Removes the user with specific membership ID from the specified Teams channel. EXAMPLE 2 Remove-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Channel\" -Identity 00000000-0000-0000-0000-000000000000 Removes the user with ID \"00000000-0000-0000-0000-000000000000\" from the specified Teams channel. EXAMPLE 3 Remove-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Channel\" -Identity john.doe@contoso.com -Force Removes the user \"john.doe@contoso.com\" from the specified Teams channel without confirmation prompt. PARAMETERS -Identity Specify membership id, UPN or user ID of the channel member. Type: TeamsChannelMemberPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Channel Specify id or name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTeamsTab.html": {
    "href": "cmdlets/Remove-PnPTeamsTab.html",
    "title": "Remove-PnPTeamsTab | PnP PowerShell",
    "keywords": "Remove-PnPTeamsTab SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Removes a Microsoft Teams tab in a channel. SYNTAX Remove-PnPTeamsTab -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> -Identity <TeamsTabPipeBind> [-Force] DESCRIPTION Allows to remove a tab from channel. EXAMPLES EXAMPLE 1 Remove-PnPTeamsTab -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -Channel \"General\" -Identity Wiki Removes the tab with the display name 'Wiki' from the General channel using display name. EXAMPLE 2 Remove-PnPTeamsTab -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -Channel 19:796d063b63e34497aeaf092c8fb9b44e@thread.skype -Identity Wiki Removes the tab with the display name 'Wiki' from the channel using id. EXAMPLE 3 Remove-PnPTeamsTab -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -Channel 19:796d063b63e34497aeaf092c8fb9b44e@thread.skype -Identity fcef815d-2e8e-47a5-b06b-9bebba5c7852 Removes a tab with the specified id from the channel PARAMETERS -Channel Specify the channel id or display name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the id of the tab Type: TeamsTabPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTeamsTag.html": {
    "href": "cmdlets/Remove-PnPTeamsTag.html",
    "title": "Remove-PnPTeamsTag | PnP PowerShell",
    "keywords": "Remove-PnPTeamsTag SYNOPSIS Required Permissions Microsoft Graph API: TeamworkTag.ReadWrite, Group.Read.All Removes a Microsoft Teams Tag in a Team. SYNTAX Remove-PnPTeamsTag -Team <TeamsTeamPipeBind> -Identity <TeamsTagPipeBind> [-Force] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPTeamsTag -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -Identity \"ZmY1ZjdmMjctZDhiNy00MWRkLTk2ZDQtYzcyYmVhMWIwOGYxIyM3ZTVhNGRmZS1kNWNlLTRkOTAtODM4MC04ZDIxM2FkYzYzOGIjI3RiVlVpR01rcg==\" Removes the Tag with the specified Id from the Teams team. PARAMETERS -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the id of the Tag Type: TeamsTagPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTeamsTeam.html": {
    "href": "cmdlets/Remove-PnPTeamsTeam.html",
    "title": "Remove-PnPTeamsTeam | PnP PowerShell",
    "keywords": "Remove-PnPTeamsTeam SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Removes a Microsoft Teams Team instance and its corresponding Microsoft 365 Group SYNTAX Remove-PnPTeamsTeam -Identity <TeamsTeamPipeBind> [-Force] DESCRIPTION Removes a Microsoft Teams Team. This also removes the associated Microsoft 365 Group, and is functionally identical to Remove-PnPMicrosoft365Group EXAMPLES EXAMPLE 1 Remove-PnPTeamsTeam -Identity 5beb63c5-0571-499e-94d5-3279fdd9b6b5 Removes the specified Team EXAMPLE 2 Remove-PnPTeamsTeam -Identity testteam Removes the specified Team. If there are multiple teams with the same display name it will not proceed deleting the team. PARAMETERS -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the group id, mailNickname or display name of the team to remove. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTeamsUser.html": {
    "href": "cmdlets/Remove-PnPTeamsUser.html",
    "title": "Remove-PnPTeamsUser | PnP PowerShell",
    "keywords": "Remove-PnPTeamsUser SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All, TeamMember.ReadWrite.All Removes a user from a team. SYNTAX Remove-PnPTeamsUser -Team <TeamsTeamPipeBind> -User <String> [-Role <String>] [-Force] DESCRIPTION Allows to remove user from a team. EXAMPLES EXAMPLE 1 Remove-PnPTeamsUser -Team MyTeam -User john@doe.com Removes the user specified from both owners and members of the team. EXAMPLE 2 Remove-PnPTeamsUser -Team MyTeam -User john@doe.com -Role Owner Removes the user john@doe.com from the owners of the team, but retains the user as a member. EXAMPLE 3 Remove-PnPTeamsUser -Team MyTeam -Users \"john@doe.com\",\"jane@doe.com\",\"mark@doe.com\" Removes the users john@doe.com, jane@doe.com and mark@doe.com from the team. PARAMETERS -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Role Specify the role of the user you are removing from the team. Accepts \"Owner\" and \"Member\" as possible values. If specified as \"Member\" then the specified user is removed from the Team completely even if they were the owner of the Team. If \"Owner\" is specified in the -Role parameter then the specified user is removed as an owner of the team but stays as a team member. Defaults to \"Member\". Note: The last owner cannot be removed from the team. Type: String Parameter Sets: (User) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User Specify the UPN (e.g. john@doe.com) Type: String Parameter Sets: (User) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Users Specify the list of UPN (e.g. john@doe.com) Type: String Parameter Sets: (Users) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTenantCdnOrigin.html": {
    "href": "cmdlets/Remove-PnPTenantCdnOrigin.html",
    "title": "Remove-PnPTenantCdnOrigin | PnP PowerShell",
    "keywords": "Remove-PnPTenantCdnOrigin SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes an origin from the Public or Private content delivery network (CDN). SYNTAX Remove-PnPTenantCdnOrigin -OriginUrl <String> -CdnType <SPOTenantCdnType> [-Connection <PnPConnection>] DESCRIPTION Removes an origin from the Public or Private content delivery network (CDN). You must be a SharePoint Online Administrator to run the cmdlet. EXAMPLES EXAMPLE 1 Remove-PnPTenantCdnOrigin -OriginUrl /sites/site/subfolder -CdnType Public This example removes the specified origin from the public CDN. PARAMETERS -CdnType The cdn type to remove the origin from. Type: SPOTenantCdnType Parameter Sets: (All) Accepted values: Public, Private Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OriginUrl The origin to remove. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTenantDeletedSite.html": {
    "href": "cmdlets/Remove-PnPTenantDeletedSite.html",
    "title": "Remove-PnPTenantDeletedSite | PnP PowerShell",
    "keywords": "Remove-PnPTenantDeletedSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a site collection from the Tenant recycle bin. SYNTAX Remove-PnPTenantDeletedSite [-Url] <String> [-Force] [-NoWait] [-Connection <PnPConnection>] [-Verbose] DESCRIPTION Removes a site collection which is listed in your tenant administration site from the tenant's recycle bin. EXAMPLES EXAMPLE 1 Remove-PnPTenantDeletedSite -Identity \"https://tenant.sharepoint.com/sites/contoso\" This will remove the site collection with the url 'https://tenant.sharepoint.com/sites/contoso' from the recycle bin. EXAMPLE 2 Remove-PnPTenantDeletedSite -Identity \"https://tenant.sharepoint.com/sites/contoso\" -Force This will remove the site collection with the url 'https://tenant.sharepoint.com/sites/contoso' with force from the recycle bin. PARAMETERS -Identity Specifies the full URL of the site collection that needs to be deleted. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Force Do not ask for confirmation. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoWait If specified the task will return immediately after creating the delete site job. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTenantRestrictedSearchAllowedList.html": {
    "href": "cmdlets/Remove-PnPTenantRestrictedSearchAllowedList.html",
    "title": "Remove-PnPTenantRestrictedSearchAllowedList | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Remove-PnPTenantRestrictedSearchAllowedList SYNOPSIS Removes site URLs from the allowed list when Restricted SharePoint Search is enabled. The URLs can be provided as a string array or read from a CSV file. SYNTAX Remove-PnPTenantRestrictedSearchAllowedList [-SitesListFileUrl <String>] [-SitesList <String[]>] [-ContainsHeaders <SwitchParameter>] [-Connection <PnPConnection>] DESCRIPTION Removes site URLs from the allowed list when Restricted SharePoint Search is enabled. The URLs can be provided directly as a string array or read from a CSV file. At present, a maximum of 100 sites can be added to the allowed list. EXAMPLES EXAMPLE 1 Remove-PnPTenantRestrictedSearchAllowedList -SitesListFileUrl \"C:\\temp\\sitelist.csv\" -ContainsHeader Removes site URLs from the allowed list from a CSV file. The first line, which is assumed to be a header, is skipped. Sample CSV file content with Header SiteUrl https://contoso.sharepoint.com/sites/Company311 https://contoso.sharepoint.com/sites/contosoportal EXAMPLE 2 Remove-PnPTenantRestrictedSearchAllowedList -SitesListFileUrl \"C:\\temp\\sitelist.csv\" Removes site URLs from the allowed list from a CSV file. Sample CSV file content without Header https://contoso.sharepoint.com/sites/Company311 https://contoso.sharepoint.com/sites/contosoportal EXAMPLE 3 Remove-PnPTenantRestrictedSearchAllowedList -SitesList @(\"https://contoso.sharepoint.com/sites/Company311\",\"https://contoso.sharepoint.com/sites/contosoportal\") Removes the specified sites from the allowed list. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SitesListFileUrl Specifies the path of the CSV file that contains a list of site URLs to be removed from the allowed list when the tenant is set to Restricted Tenant Search Mode. Type: String Parameter Sets: File Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SitesList Specifies a collection of sites to remove from the allowed list. Type: String[] Parameter Sets: SiteList Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Containsheader If specified, this switch skips the first line from the CSV file, which is assumed to be a header. Type: SwitchParamter Parameter Sets: File Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False RELATED LINKS How does Restricted SharePoint Search work? Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTenantSite.html": {
    "href": "cmdlets/Remove-PnPTenantSite.html",
    "title": "Remove-PnPTenantSite | PnP PowerShell",
    "keywords": "Remove-PnPTenantSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a site collection SYNTAX Remove-PnPTenantSite [-Url] <String> [-SkipRecycleBin] [-Force] [-Connection <PnPConnection>] DESCRIPTION Removes a site collection which is listed in your tenant administration site. EXAMPLES EXAMPLE 1 Remove-PnPTenantSite -Url \"https://tenant.sharepoint.com/sites/contoso\" This will remove the site collection with the url 'https://tenant.sharepoint.com/sites/contoso' and put it in the recycle bin. EXAMPLE 2 Remove-PnPTenantSite -Url \"https://tenant.sharepoint.com/sites/contoso\" -Force -SkipRecycleBin This will remove the site collection with the url 'https://tenant.sharepoint.com/sites/contoso' with force and it will skip the recycle bin. EXAMPLE 3 Remove-PnPTenantSite -Url \"https://tenant.sharepoint.com/sites/contoso\" -FromRecycleBin This will remove the site collection with the url 'https://tenant.sharepoint.com/sites/contoso' from the recycle bin. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Do not ask for confirmation. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SkipRecycleBin Do not add to the tenant scoped recycle bin when selected. Type: SwitchParameter Parameter Sets: (All) Aliases: SkipTrash Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Specifies the full URL of the site collection that needs to be deleted Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTenantSyncClientRestriction.html": {
    "href": "cmdlets/Remove-PnPTenantSyncClientRestriction.html",
    "title": "Remove-PnPTenantSyncClientRestriction | PnP PowerShell",
    "keywords": "Remove-PnPTenantSyncClientRestriction SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes organization-level OneDrive synchronization restrictions SYNTAX Remove-PnPTenantSyncClientRestriction DESCRIPTION The Remove-PnPTenantSyncClientRestriction cmdlet disables the feature for the tenant, but does not remove any present domain GUID entries from the safe sender recipient list. After the Remove-PnPTenantSyncClientRestriction cmdlet is run it can take up to 24 hours for change to take effect. This parameter will also remove any values set from the GrooveBlockOption parameter for syncing. EXAMPLES EXAMPLE 1 Remove-PnPTenantSyncClientRestriction This example disables this feature for the tenant. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTenantTheme.html": {
    "href": "cmdlets/Remove-PnPTenantTheme.html",
    "title": "Remove-PnPTenantTheme | PnP PowerShell",
    "keywords": "Remove-PnPTenantTheme SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a theme. SYNTAX Remove-PnPTenantTheme [-Identity] <ThemePipeBind> [-Connection <PnPConnection>] DESCRIPTION Removes the specified theme from the tenant configuration. EXAMPLES EXAMPLE 1 Remove-PnPTenantTheme -Name \"MyCompanyTheme\" Removes the specified theme. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name of the theme to remove. Type: ThemePipeBind Parameter Sets: (All) Aliases: Name Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTerm.html": {
    "href": "cmdlets/Remove-PnPTerm.html",
    "title": "Remove-PnPTerm | PnP PowerShell",
    "keywords": "Remove-PnPTerm SYNOPSIS Removes a taxonomy term from the term store. SYNTAX By Term Id Remove-PnPTerm -Identity <Guid> [-TermStore <TaxonomyTermStorePipeBind>] [-Confirm] By Term Name Remove-PnPTerm -Identity <String> -TermSet <TaxonomyTermSetPipeBind> -TermGroup <TaxonomyTermGroupPipeBind> [-TermStore <TaxonomyTermStorePipeBind>] [-Connection <PnPConnection>] [-Confirm] DESCRIPTION This cmdlet removes a term from the term store. EXAMPLES Example 1 Remove-PnPTerm -Identity 3d9e60e8-d89c-4cd4-af61-a010cf93b380 Removes a term by id. Example 2 Remove-PnPTerm -Identity \"Marketing\" -TermSet \"Departments\" -TermGroup \"Corporate\" Removes a term by name. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies which term to remove. Type: TaxonomyTermPipeBind Parameter Sets: (All) Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermGroup Specifies which termgroup to find the termset in. Type: TaxonomyTermGroupPipeBind Parameter Sets: By Term Name Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermSet Specifies which termset to find the term in if the identity of the term is specified as a string. Type: TaxonomyTermSetPipeBind Parameter Sets: By Term Name Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTermGroup.html": {
    "href": "cmdlets/Remove-PnPTermGroup.html",
    "title": "Remove-PnPTermGroup | PnP PowerShell",
    "keywords": "Remove-PnPTermGroup SYNOPSIS Removes a taxonomy term group and all its term sets. SYNTAX Remove-PnPTermGroup -Identity <TaxonomyTermGroupPipeBind> [-TermStore <TaxonomyTermStorePipeBind>] [-Force] DESCRIPTION This cmdlet removes a term group and all the contained term sets. EXAMPLES Example 1 Remove-PnPTermGroup -Identity 3d9e60e8-d89c-4cd4-af61-a010cf93b380 Removes the specified term group. Example 2 Remove-PnPTermGroup -Identity \"Corporate\" Removes the specified term group. Example 3 Remove-PnPTermGroup -Identity \"HR\" -Force Removes the specified term group without prompting for confirmation. PARAMETERS -Identity The name or GUID of the group to remove. Type: TaxonomyTermGroupPipeBind Parameter Sets: (All) Aliases: GroupName Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTermLabel.html": {
    "href": "cmdlets/Remove-PnPTermLabel.html",
    "title": "Remove-PnPTermLabel | PnP PowerShell",
    "keywords": "Remove-PnPTermLabel SYNOPSIS Removes a single label/translation from a term. SYNTAX By Term Id Remove-PnPTermLabel -Label <String> -Term <Guid> -Lcid <Int32> [-TermStore <Guid>] [-Connection <PnPConnection>] [-Confirm] By Name Remove-PnPTermLabel -Label <String> -Term <String> -Lcid <Int32> -TermSet <Name|Guid> -TermGroup <Name|Guid> [-TermStore <Guid>] [-Connection <PnPConnection>] [-Confirm] DESCRIPTION This cmdlet removes a label/translation from a term. EXAMPLES Example 1 Remove-PnPTermLabel -Label \"Marknadsföring\" -Lcid 1053 -Term 2d1f298b-804a-4a05-96dc-29b667adec62 Removes the Swedish label from the specified term. Example 2 Remove-PnPTermLabel -Label \"Marknadsföring\" -Lcid 1053 -Term \"Marketing\" -TermSet \"Departments\" -TermGroup \"Corporate\" Removes the Swedish label from the specified term. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Label The label to remove. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid Language code identifier of the term label. Type: Int32 Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Term Identity of term to update. Either a name or a GUID. Type: Guid Parameter Sets: By Term Id Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False Type: String Parameter Sets: By Name Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermGroup The term group containing the term set. Type: Guid or String Parameter Sets: By Name Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermSet The term set containing the term. Type: Guid or String Parameter Sets: By Name Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore The Term store containing the term group. Type: Guid Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTodoList.html": {
    "href": "cmdlets/Remove-PnPTodoList.html",
    "title": "Remove-PnPTodoList | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Remove-PnPTodoList SYNOPSIS Required Permissions Microsoft Graph API : Tasks.ReadWrite Removes a new todo list. SYNTAX Remove-PnPTodoList [[-Identity] <String>] [-[User] <AzureADUserPipeBind>] DESCRIPTION Use the cmdlet to delete a Todo list. EXAMPLES EXAMPLE 1 Remove-PnPTodoList -Identity \"AAMkAGU4MGE1OTRiLTUzMGEtNDRjZi05ZmVmLWFiMTkyYmQxODRjOQAuAAAAAACQV8RStyZCQJ4ydzjIK5HmAQD2LFcxdwYMRqbupn47nEYYAASYG0vWAAA=\" This will delete a todo list with specified Id associated with your (logged-in user) account. EXAMPLE 2 Remove-PnPTodoList -Identity \"AAMkAGU4MGE1OTRiLTUzMGEtNDRjZi05ZmVmLWFiMTkyYmQxODRjOQAuAAAAAACQV8RStyZCQJ4ydzjIK5HmAQD2LFcxdwYMRqbupn47nEYYAASYG0vWAAA=\" -User john@doe.com This will delete a todo list with specified Id associated with John's account. PARAMETERS -Identity Id of the Todo list. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User The UPN, Id or instance of an Azure AD user for which you would like to create the todo list. Type: AzureADUserPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPUser.html": {
    "href": "cmdlets/Remove-PnPUser.html",
    "title": "Remove-PnPUser | PnP PowerShell",
    "keywords": "Remove-PnPUser SYNOPSIS Removes a specific user from the site collection User Information List SYNTAX Remove-PnPUser [-Identity] <UserPipeBind> [-Force] [-Connection <PnPConnection>] DESCRIPTION This command will allow the removal of a specific user from the User Information List EXAMPLES EXAMPLE 1 Remove-PnPUser -Identity 23 Remove the user with Id 23 from the User Information List of the current site collection EXAMPLE 2 Remove-PnPUser -Identity i:0#.f|membership|user@tenant.onmicrosoft.com Remove the user with LoginName i:0#.f|membership|user@tenant.onmicrosoft.com from the User Information List of the current site collection EXAMPLE 3 Get-PnPUser | ? Email -eq \"user@tenant.onmicrosoft.com\" | Remove-PnPUser Remove the user with e-mail address user@tenant.onmicrosoft.com from the User Information List of the current site collection EXAMPLE 4 Remove-PnPUser -Identity i:0#.f|membership|user@tenant.onmicrosoft.com -Force:$false Remove the user with LoginName i:0#.f|membership|user@tenant.onmicrosoft.com from the User Information List of the current site collection without asking to confirm the removal first PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity User ID or login name Type: UserPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPUserInfo.html": {
    "href": "cmdlets/Remove-PnPUserInfo.html",
    "title": "Remove-PnPUserInfo | PnP PowerShell",
    "keywords": "Remove-PnPUserInfo SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a user from the user information list of a specific site collection. SYNTAX Remove-PnPUserInfo -LoginName <String> [-Site <String>] DESCRIPTION Removes user information from the site user information list. EXAMPLES EXAMPLE 1 Remove-PnPUserInfo -LoginName user@domain.com -Site \"https://yoursite.sharepoint.com/sites/team\" This removes a user who has the e-mail address user@domain.com from the user information list of https://contoso.sharepoint.com/sites/team site collection. PARAMETERS -LoginName Specifies the login name of the user to remove. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Specifies the URL of the site collection. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPUserProfile.html": {
    "href": "cmdlets/Remove-PnPUserProfile.html",
    "title": "Remove-PnPUserProfile | PnP PowerShell",
    "keywords": "Remove-PnPUserProfile SYNOPSIS Removes a SharePoint User Profile from the tenant. Required Permissions SharePoint: Access to the SharePoint Tenant Administration site SYNTAX Remove-PnPUserProfile -LoginName <String> DESCRIPTION Removes SharePoint User Profile data from the tenant. Note The User must first be deleted from AAD before the user profile can be deleted. You can use the Azure AD cmdlet Remove-AzureADUser for this action. EXAMPLES EXAMPLE 1 Remove-PnPUserProfile -LoginName user@domain.com This removes user profile data with the email address user@domain.com. PARAMETERS -LoginName Specifies the login name of the user to remove. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPUserProfilePhoto.html": {
    "href": "cmdlets/Remove-PnPUserProfilePhoto.html",
    "title": "Remove-PnPUserProfilePhoto | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Remove-PnPUserProfilePhoto SYNOPSIS Required Permissions Microsoft Graph API: One of ProfilePhoto.ReadWrite.All, User.ReadWrite or User.ReadWrite.All Remove the profile picture of a user. SYNTAX Remove-PnPUserProfilePhoto -Identity <AzureADUserPipeBind> [-Connection <PnPConnection>] DESCRIPTION Notice that this cmdlet will immediately return but it can take a few hours before the changes are reflected in profile picture of the user everywhere in M365. EXAMPLES EXAMPLE 1 Remove-PnPUserProfilePhoto -Identity \"john@contoso.onmicrosoft.com\" Removes the picture for the user with user principal name john PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the user to remove. This can be the UPN, the GUID or an instance of the user. Type: AzureADUserPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPView.html": {
    "href": "cmdlets/Remove-PnPView.html",
    "title": "Remove-PnPView | PnP PowerShell",
    "keywords": "Remove-PnPView SYNOPSIS Deletes a view from a list SYNTAX Remove-PnPView [-Identity] <ViewPipeBind> [-List] <ListPipeBind> [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to remove view from a list. EXAMPLES EXAMPLE 1 Remove-PnPView -List \"Demo List\" -Identity \"All Items\" Removes the view with title \"All Items\" from the \"Demo List\" list. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID or Title of the view. Type: ViewPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The ID or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 1 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPVivaConnectionsDashboardACE.html": {
    "href": "cmdlets/Remove-PnPVivaConnectionsDashboardACE.html",
    "title": "Remove-PnPVivaConnectionsDashboardACE | PnP PowerShell",
    "keywords": "Remove-PnPVivaConnectionsDashboardACE SYNOPSIS Removes the Adaptive card extensions from the Viva connections dashboard page. This requires that you connect to a SharePoint Home site and have configured the Viva connections page. SYNTAX Remove-PnPVivaConnectionsDashboardACE [-Identity <VivaACEPipeBind>] [-Connection <PnPConnection>] DESCRIPTION Allows to remove Adaptive card extensions from the Viva connections dashboard page. EXAMPLES EXAMPLE 1 Remove-PnPVivaConnectionsDashboardACE -Identity \"58108715-185e-4214-8786-01218e7ab9ef\" Removes the adaptive card extensions with Instance Id 58108715-185e-4214-8786-01218e7ab9ef from the Viva connections dashboard page PARAMETERS -Identity The instance Id of the Adaptive Card extension present on the Viva connections dashboard page. You can retrieve the value for this parameter by executing Get-PnPVivaConnectionsDashboardACE cmdlet. This parameter takes either the Instance Id, the Id or the Title property. But as the latter two are not necessarily unique within the dashboard, the preferred value is to use the Instance Id of the ACE. Type: VivaACEPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPVivaEngageCommunity.html": {
    "href": "cmdlets/Remove-PnPVivaEngageCommunity.html",
    "title": "Remove-PnPVivaEngageCommunity | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Remove-PnPVivaEngageCommunity SYNOPSIS Deletes the Viva engage community in the tenant. SYNTAX Remove-PnPVivaEngageCommunity [[-Identity] <string>] [-Connection <PnPConnection>] DESCRIPTION Deletes Viva engage community. EXAMPLES EXAMPLE 1 Remove-PnPVivaEngageCommunity -Identity \"eyJfdHlwZSI6Ikdyb3VwIiwiaWQiOiIyMTI0ODA3MTI3MDQifQ\" This will delete the Viva Engage community in the tenant with the specified Id. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Id of the Viva engage community. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPWeb.html": {
    "href": "cmdlets/Remove-PnPWeb.html",
    "title": "Remove-PnPWeb | PnP PowerShell",
    "keywords": "Remove-PnPWeb SYNOPSIS Removes a subsite. SYNTAX Remove-PnPWeb -Identity <WebPipeBind> [-Force] [-Connection <PnPConnection>] DESCRIPTION This cmdlet removes the specified subsite. EXAMPLES EXAMPLE 1 Remove-PnPWeb -Identity projectA Removes the subsite called projectA and will ask for confirmation before doing so. EXAMPLE 2 Remove-PnPWeb -Identity 5fecaf67-6b9e-4691-a0ff-518fc9839aa0 Removes the subsite with the provided Id and will ask for confirmation before doing so. EXAMPLE 3 Get-PnPSubWeb | Remove-PnPWeb -Force Removes all subsites while not asking for confirmation to do so. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Do not ask for confirmation to delete the subweb. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identifier of a subsite, the subsite instance or name of the subsite. Type: WebPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPWebPart.html": {
    "href": "cmdlets/Remove-PnPWebPart.html",
    "title": "Remove-PnPWebPart | PnP PowerShell",
    "keywords": "Remove-PnPWebPart SYNOPSIS Removes a web part from a page SYNTAX ID Remove-PnPWebPart -Identity <Guid> -ServerRelativePageUrl <String> [-Connection <PnPConnection>] NAME Remove-PnPWebPart -Title <String> -ServerRelativePageUrl <String> [-Connection <PnPConnection>] DESCRIPTION Allows to remove web part from a page. EXAMPLES EXAMPLE 1 Remove-PnPWebPart -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" -Identity a2875399-d6ff-43a0-96da-be6ae5875f82 This will remove the web part specified by ID to the specified page in the first row and the first column of the HTML table present on the page EXAMPLE 2 Remove-PnPWebPart -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" -Title MyWebpart This will remove the web part specified by title to the specified page in the first row and the first column of the HTML table present on the page PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Guid of the web part Type: Guid Parameter Sets: ID Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl Server relative url of the web part page, e.g. /sites/demo/sitepages/home.aspx Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The name of the web part Type: String Parameter Sets: NAME Aliases: Name Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPWebhookSubscription.html": {
    "href": "cmdlets/Remove-PnPWebhookSubscription.html",
    "title": "Remove-PnPWebhookSubscription | PnP PowerShell",
    "keywords": "Remove-PnPWebhookSubscription SYNOPSIS Removes a Webhook subscription from the resource SYNTAX Remove-PnPWebhookSubscription [-Identity] <WebhookSubscriptionPipeBind> [-List <ListPipeBind>] [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to remove Webhook subscription from list. EXAMPLES EXAMPLE 1 Remove-PnPWebhookSubscription -List MyList -Identity ea1533a8-ff03-415b-a7b6-517ee50db8b6 Removes the Webhook subscription with the specified id from the list MyList EXAMPLE 2 $subscriptions = Get-PnPWebhookSubscriptions -List MyList Remove-PnPWebhookSubscription -Identity $subscriptions[0] -List MyList Removes the first Webhook subscription from the list MyList EXAMPLE 3 $subscriptions = Get-PnPWebhookSubscriptions -List MyList $subscriptions[0] | Remove-PnPWebhookSubscription -List MyList Removes the first Webhook subscription from the list MyList PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the Webhook subscription to remove Type: WebhookSubscriptionPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The list object or name which the Webhook subscription will be removed from Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPWikiPage.html": {
    "href": "cmdlets/Remove-PnPWikiPage.html",
    "title": "Remove-PnPWikiPage | PnP PowerShell",
    "keywords": "Remove-PnPWikiPage SYNOPSIS Removes a wiki page. SYNTAX SERVER Remove-PnPWikiPage [-ServerRelativePageUrl] <String> [-Connection <PnPConnection>] SITE Remove-PnPWikiPage [-SiteRelativePageUrl] <String> [-Connection <PnPConnection>] DESCRIPTION This cmdlet removes a single wiki page specified by server relative url or site relative url. EXAMPLES EXAMPLE 1 Remove-PnPWikiPage -PageUrl '/pages/wikipage.aspx' Removes the page '/pages/wikipage.aspx'. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl Specifies the wiki page url based on the server relative url. Type: String Parameter Sets: SERVER Aliases: PageUrl Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -SiteRelativePageUrl Specifies the wiki page url based on the site relative url. Type: String Parameter Sets: SITE Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Rename-PnPFile.html": {
    "href": "cmdlets/Rename-PnPFile.html",
    "title": "Rename-PnPFile | PnP PowerShell",
    "keywords": "Rename-PnPFile SYNOPSIS Renames a file in its current location SYNTAX SERVER Rename-PnPFile [-ServerRelativeUrl] <String> [-TargetFileName] <String> [-OverwriteIfAlreadyExists] [-Force] [-Connection <PnPConnection>] SITE Rename-PnPFile [-SiteRelativeUrl] <String> [-TargetFileName] <String> [-OverwriteIfAlreadyExists] [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to rename a file. EXAMPLES EXAMPLE 1 Rename-PnPFile -ServerRelativeUrl /sites/project/Documents/company.docx -TargetFileName mycompany.docx Renames a file named company.docx located in the document library called Documents located in the projects sitecollection under the managed path sites to mycompany.docx. If a file named mycompany.aspx already exists, it won't perform the rename. EXAMPLE 2 Rename-PnPFile -SiteRelativeUrl Documents/company.aspx -TargetFileName mycompany.docx Renames a file named company.docx located in the document library called Documents located in the current site to mycompany.aspx. If a file named mycompany.aspx already exists, it won't perform the rename. EXAMPLE 3 Rename-PnPFile -ServerRelativeUrl /sites/project/Documents/company.docx -TargetFileName mycompany.docx -OverwriteIfAlreadyExists Renames a file named company.docx located in the document library called Documents located in the projects sitecollection under the managed path sites to mycompany.aspx. If a file named mycompany.aspx already exists, it will still perform the rename and replace the original mycompany.aspx file. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be requested and the action will be performed Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OverwriteIfAlreadyExists If provided, if a file already exist with the provided TargetFileName, it will be overwritten. If omitted, the rename operation will be canceled if a file already exists with the TargetFileName file name. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativeUrl Server relative Url specifying the file to rename. Must include the file name. Type: String Parameter Sets: SERVER Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -SiteRelativeUrl Site relative Url specifying the file to rename. Must include the file name. Type: String Parameter Sets: SITE Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetFileName File name to rename the file to. Should only be the file name and not include the path to its location. Use Move-PnPFile to move the file to another location. Type: String Parameter Sets: (All) Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Rename-PnPFolder.html": {
    "href": "cmdlets/Rename-PnPFolder.html",
    "title": "Rename-PnPFolder | PnP PowerShell",
    "keywords": "Rename-PnPFolder SYNOPSIS Renames a folder SYNTAX Rename-PnPFolder -Folder <FolderPipeBind> -TargetFolderName <String> [-Connection <PnPConnection>] DESCRIPTION Allows to rename a folder. EXAMPLES EXAMPLE 1 Rename-PnPFolder -Folder Documents/Reports -TargetFolderName 'Archived Reports' This will rename the folder Reports in the Documents library to 'Archived Reports' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The folder to rename Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TargetFolderName The new folder name Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Rename-PnPTenantSite.html": {
    "href": "cmdlets/Rename-PnPTenantSite.html",
    "title": "Rename-PnPTenantSite | PnP PowerShell",
    "keywords": "Rename-PnPTenantSite SYNOPSIS Starts a rename of a site on a SharePoint Online site. SYNTAX Rename-PnPTenantSite [[-Identity] <SPOSitePipeBind>] [[-NewSiteUrl] <String>] [[-NewSiteTitle] <string>] [[-SuppressMarketplaceAppCheck] [<SwitchParameter>]] [[-SuppressWorkflow2013Check] [<SwitchParameter>]] [[-SuppressBcsCheck] [<SwitchParameter>]] [-Connection <PnPConnection>] DESCRIPTION This cmdlet starts a rename of a site on a SharePoint Online site. You can change the URL, and optionally the site title along with changing the URL. This will not work between Multi-geo environments. EXAMPLES EXAMPLE 1 $currentSiteUrl = \"https://<tenant>.sharepoint.com/site/samplesite\" $updatedSiteUrl = \"https://<tenant>.sharepoint.com/site/renamed\" Rename-PnPTenantSite -Identity $currentSiteUrl -NewSiteUrl $updatedSiteUrl Starts the rename of the SharePoint Online site with name \"samplesite\" to \"renamed\" without modifying the title. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the full URL of the SharePoint Online site collection that needs to be renamed. Type: SPOSitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -NewSiteUrl Specifies the full URL of the SharePoint Online site collection to which it needs to be renamed. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NewSiteTitle Specifies the new title of the SharePoint Site. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SuppressMarketplaceAppCheck Suppress checking compatibility of marketplace SharePoint Add-ins deployed to the associated site. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SuppressWorkflow2013Check Suppress checking compatibility of SharePoint 2013 Workflows deployed to the associated site. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SuppressBcsCheck Suppress checking compatibility of BCS connections deployed to the associated site. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -Wait Wait till the renaming of the new site collection is successful. If not specified, a job will be created which you can use to check for its status. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Repair-PnPSite.html": {
    "href": "cmdlets/Repair-PnPSite.html",
    "title": "Repair-PnPSite | PnP PowerShell",
    "keywords": "Repair-PnPSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Checks and repairs the site collection and its contents. SYNTAX Repair-PnPSite -Identity <SitePipeBind> [-RuleId <Guid>] [-RunAlways <SwitchParameter>] DESCRIPTION The Repair-PnPSite cmdlet runs one or all site collection health checks on the site collection and its contents. This cmdlet will make changes if issues are found and automatically repairable. The cmdlet reports the health check rules with a summary of the results. The rules might not support automatic repair. Tests without repair mode can be initiated by running the Test-PnPSite cmdlet. EXAMPLES EXAMPLE 1 Repair-PnPSite -Identity \"https://contoso.sharepoint.com/sites/marketing\" This example runs all the site collection health checks in repair mode on the https://contoso.sharepoint.com/sites/marketing site collection. EXAMPLE 2 Repair-PnPSite -Identity \"https://contoso.sharepoint.com/sites/marketing\" -RuleID \"ee967197-ccbe-4c00-88e4-e6fab81145e1\" This example runs the Missing Galleries Check rule in repair mode on the https://contoso.sharepoint.com/sites/marketing site collection. PARAMETERS -Identity Specifies the SharePoint Online site collection on which to run the repairs. Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RuleId Specifies a health check rule to run. For example: \"ee967197-ccbe-4c00-88e4-e6fab81145e1\" for Missing Galleries. \"befe203b-a8c0-48c2-b5f0-27c10f9e1622\" for Conflicting Content Types. \"a9a6769f-7289-4b9f-ae7f-5db4b997d284\" for Missing Parent Content Types. \"5258ccf5-e7d6-4df7-b8ae-12fcc0513ebd\" for Missing Site Templates. \"99c946f7-5751-417c-89d3-b9c8bb2d1f66\" for Unsupported Language Pack References. \"6da06aab-c539-4e0d-b111-b1da4408859a\" for Unsupported MUI References. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RunAlways Specifies whether the rules will be run as a result of this call or cached results from a previous run can be returned. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Request-PnPPersonalSite.html": {
    "href": "cmdlets/Request-PnPPersonalSite.html",
    "title": "Request-PnPPersonalSite | PnP PowerShell",
    "keywords": "Request-PnPPersonalSite SYNOPSIS Requests that one or more users be enqueued for a OneDrive for Business site to be created for them. SYNTAX Request-PnPPersonalSite -UserEmails <String[]> [-NoWait] [-Connection <PnPConnection>] [-Verbose] DESCRIPTION The Request-PnPPersonalSite cmdlet requests that the users specified be enqueued so that a Personal Site be created for each. The actual OneDrive for Business site is created by a Timer Job later. Note • You must specify a string array of user logins that contains one or more valid user email (logins) and cannot contain any empty fields. The command will stop if it encounters any empty strings in the array. A maximum of 200 users can be specified. • The actor executing this cmdlet must be at least assigned the SharePoint Online administrator role and have been assigned a SharePoint Online license to be able to provision the OneDrive for Business sites. The users who the sites will be provisioned for must also have a SharePoint license assigned. • This cmdlet is NOT OneDrive Multi-Geo aware. If you need to request Personal Sites for Multi-Geo enabled tenants, you must run this cmdlet for users in the region their data is to be hosted in. To retrieve users with a specific PDL, use the following sample: Get-MSOLUser | Where {$_.PreferredDataLocation -eq \"EUR\"} • If you want to use this cmdlet in an automated script not requiring manual authentication, you must assign the following permission to your application registration from either Azure Active Directory or done through https://tenant-admin.sharepoint.com/_layouts/appregnew.aspx with the following permission through https://tenant-admin.sharepoint.com/_layouts/appinv.aspx: <AppPermissionRequests AllowAppOnlyPolicy=\"true\"> <AppPermissionRequest Scope=\"http://sharepoint/social/tenant\" Right=\"FullControl\" /> </AppPermissionRequests> You then must connect using Connect-PnPOnline -Url https://tenant-admin.sharepoint.com -ClientId <clientid> -ClientSecret <clientsecret> Authenticating using a certificate is not possible and will throw an unauthorized exception. It does not require assigning any permissions in Azure Active Directory. If you want to run this cmdlet using an interactive login, you must connect using: Connect-PnPOnline -Url https://tenant-admin.sharepoint.com -UseWebLogin EXAMPLES EXAMPLE 1 Request-PnPPersonalSite -UserEmails @(\"user1@contoso.com\", \"user2@contoso.com\") This example requests that two users to be enqueued for the creation of a OneDrive for Business Site EXAMPLE 2 Request-PnPPersonalSite -UserEmails \"user1@contoso.com\" This example requests that for the provided user a OneDrive for Business site will be created PARAMETERS -UserEmails Specifies one or more user logins to be enqueued for the creation of a Personal Site. The Personal site is created by a Timer Job later. You can specify between 1 and 200 users. Note If you are Pre-Provisioning OneDrive for many users, it might take up to 24 hours for the OneDrive locations to be created. If a user's OneDrive isn't ready after 24 hours, please contact Support. Type: String[] Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -NoWait Continues without the status being polled. Polling the action can slow its progress if lots of user emails are specified. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Request-PnPReIndexList.html": {
    "href": "cmdlets/Request-PnPReIndexList.html",
    "title": "Request-PnPReIndexList | PnP PowerShell",
    "keywords": "Request-PnPReIndexList SYNOPSIS Marks the list for full indexing during the next incremental crawl SYNTAX Request-PnPReIndexList [-Identity] <ListPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to mark the list for full indexing during the next incremental crawl. EXAMPLES EXAMPLE 1 Request-PnPReIndexList -Identity \"Demo List\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Request-PnPReIndexWeb.html": {
    "href": "cmdlets/Request-PnPReIndexWeb.html",
    "title": "Request-PnPReIndexWeb | PnP PowerShell",
    "keywords": "Request-PnPReIndexWeb SYNOPSIS Marks the web for full indexing during the next incremental crawl. SYNTAX Request-PnPReIndexWeb [-Connection <PnPConnection>] DESCRIPTION This cmdlet marks the web for full indexing during the next incremental crawl. EXAMPLES EXAMPLE 1 Request-PnPReIndexWeb This example requests that the site be reindexed during the next crawl. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Request-PnPSyntexClassifyAndExtract.html": {
    "href": "cmdlets/Request-PnPSyntexClassifyAndExtract.html",
    "title": "Request-PnPSyntexClassifyAndExtract | PnP PowerShell",
    "keywords": "Request-PnPSyntexClassifyAndExtract SYNOPSIS Requests for a file, folder or all files in a library to be classified and extracted via the published Microsoft Syntex models on the libraries hosting the files. SYNTAX File Request-PnPSyntexClassifyAndExtract -FileUrl <string> [-Batch <PnPBatch>] [-Connection <PnPConnection>] Folder Request-PnPSyntexClassifyAndExtract -Folder <FolderPipeBind> [-Connection <PnPConnection>] List Request-PnPSyntexClassifyAndExtract -List <ListPipeBind> [-OffPeak <SwitchParameter>] [-Force <SwitchParameter>] [-Connection <PnPConnection>] DESCRIPTION This command requests for all files in a library, folder or individual files to be classified and extracted via the published Syntex models on the libraries hosting the files. When using with the OffPeak switch then the files are send to the off peak Syntex document processing queue, this way there's no need to enumerate all files in the library and submit them to the regular queue. When using the Force switch without setting OffPeak then all files are enumerated and sent to the regular queue, regardless of whether they were processed in the past. When the list contains more than 5000 files or when using the folder parameter the cmdlet will use the off peak Syntex queue. EXAMPLES EXAMPLE 1 Request-PnPSyntexClassifyAndExtract -FileUrl \"/sites/finance/invoices/invoice1.docx\" Requests the classification and extraction of invoice1.docx in library \"Invoices\". EXAMPLE 2 Request-PnPSyntexClassifyAndExtract -List \"Invoices\" Requests the classification and extraction of all files in library \"Invoices\" that never were classified and extracted before. EXAMPLE 3 Request-PnPSyntexClassifyAndExtract -Folder (Get-PnPFolder -Url \"invoices/Q1/jan\") Requests the classification and extraction of all files in the folder \"jan\" in library \"invoices\" that never were classified and extracted before. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The name or list holding the files to classify and extract. Type: ListPipeBind Parameter Sets: List Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Force If set, then all files (even if classified and extracted before) are classified and extracted. If the list contains more than 5000 items this option will not apply and off-peak processing is used. Type: SwitchParameter Parameter Sets: List Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OffPeak If set, then the files to classify are sent to the off peak queue without enumerating them. If the list contains more than 5000 items then off-peak processing is always used. Type: SwitchParameter Parameter Sets: List Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The folder holding the files to classify and extract. When using this parameter, files will be send to the off peak queue. Type: FolderPipeBind Parameter Sets: Folder Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -FileUrl The server relative URL of the file to be classified and extracted. Type: String Parameter Sets: File Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Batch The batch to add this file classification and extraction request to. Type: PnPBatch Parameter Sets: File Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Reset-PnPDocumentId.html": {
    "href": "cmdlets/Reset-PnPDocumentId.html",
    "title": "Reset-PnPDocumentId | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Reset-PnPDocumentId SYNOPSIS Requests the unique document ID of a file to be recalculated and reassigned. SYNTAX Reset-PnPDocumentId -Identity <FilePipeBind> [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows requesting SharePoint Online to recalculate and reassign the unique document ID of a file. This can be useful if the document ID of a file has been lost, has gotten corrupted or duplicated. The unique document ID will be calculated based on an internal predictable algorithm and will contain parts of the site collection, web, list and listitem. It should only take seconds for it to recalculate and reassign the document ID. If it remains the same after running this cmdlet, it means the assigned document ID is correct. There's no use of running it multiple times on the same file. You need to be connected to the same site collection in which the file on which you wish to perform the operation resides. EXAMPLES EXAMPLE 1 Reset-PnPDocumentId -Identity \"/sites/demo/Shared Documents/MyDocument.docx\" This will request SharePoint Online to recalculate and reassign the unique document ID of the file MyDocument.docx in the Shared Documents library of the demo site collection. EXAMPLE 2 Get-PnPFileInFolder -Recurse -FolderSiteRelativeUrl \"Shared Documents\" -ItemName \"MyDocument.docx\" | Reset-PnPDocumentId This will request SharePoint Online to recalculate and reassign the unique document ID of the file MyDocument.docx in the Shared Documents library of the current site collection. PARAMETERS -Identity The ID, listitem instance, File instance or server relative path of the file for which you want to request a document id reset. Type: FilePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Reset-PnPFileVersion.html": {
    "href": "cmdlets/Reset-PnPFileVersion.html",
    "title": "Reset-PnPFileVersion | PnP PowerShell",
    "keywords": "Reset-PnPFileVersion SYNOPSIS Resets a file to its previous version SYNTAX Reset-PnPFileVersion -ServerRelativeUrl <String> [-CheckinType <CheckinType>] [-CheckInComment <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to rollback a file to its previous version. EXAMPLES EXAMPLE 1 Reset-PnPFileVersion -ServerRelativeUrl \"/sites/test/office365.png\" EXAMPLE 2 Reset-PnPFileVersion -ServerRelativeUrl \"/sites/test/office365.png\" -CheckinType MajorCheckin -Comment \"Restored to previous version\" PARAMETERS -CheckInComment The comment added to the check-in. Defaults to 'Restored to previous version'. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CheckinType The check in type to use. Defaults to Major. Type: CheckinType Parameter Sets: (All) Accepted values: MinorCheckIn, MajorCheckIn, OverwriteCheckIn Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativeUrl The server relative URL of the file. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Reset-PnPMicrosoft365GroupExpiration.html": {
    "href": "cmdlets/Reset-PnPMicrosoft365GroupExpiration.html",
    "title": "Reset-PnPMicrosoft365GroupExpiration | PnP PowerShell",
    "keywords": "Reset-PnPMicrosoft365GroupExpiration SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All Renews the Microsoft 365 Group by extending its expiration with the number of days defined in the group expiration policy set on the Azure Active Directory. SYNTAX Reset-PnPMicrosoft365GroupExpiration -Identity <Microsoft365GroupPipeBind> DESCRIPTION Allows to extend the Microsoft 365 Group expiration date by the number of days defined in the group expiration policy. EXAMPLES EXAMPLE 1 Reset-PnPMicrosoft365GroupExpiration Renews the Microsoft 365 Group by extending its expiration with the number of days defined in the group expiration policy set on the Azure Active Directory. PARAMETERS -Identity The Identity of the Microsoft 365 Group. Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Accept pipeline input: True RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Reset-PnPRetentionLabel.html": {
    "href": "cmdlets/Reset-PnPRetentionLabel.html",
    "title": "Reset-PnPRetentionLabel | PnP PowerShell",
    "keywords": "Reset-PnPRetentionLabel SYNOPSIS Resets a retention label on the specified list or library to None, or resets a retention label on specified list items in a list or a library SYNTAX Reset on a list Reset-PnPRetentionLabel [-List] <ListPipeBind> [-SyncToItems <Boolean>] [-Connection <PnPConnection>] Reset on items in bulk Reset-PnPRetentionLabel [-List] <ListPipeBind> -ItemIds <List<Int32>> [-BatchSize <Int32>] [-Connection <PnPConnection>] [-Verbose] DESCRIPTION Removes the retention label on a list or library and its items, or removes the retention label from specified items in a list or a library. Does not work for sensitivity labels. When resetting retention label on specified items, cmdlet allows passing of unlimited number of items - items will be split and processed in batches (CSOM method SetComplianceTagOnBulkItems has a hard count limit on number of processed items in one go). If needed, batch size may be adjusted with BatchSize parameter. EXAMPLES EXAMPLE 1 Reset-PnPRetentionLabel -List \"Demo List\" This resets an O365 label on the specified list or library to None EXAMPLE 2 Reset-PnPRetentionLabel -List \"Demo List\" -SyncToItems $true This resets an O365 label on the specified list or library to None and resets the label on all the items in the list and library except Folders and where the label has been manually or previously automatically assigned EXAMPLE 3 Set-PnPRetentionLabel -List \"Demo List\" -ItemIds @(1,2,3) This clears a retention label from items with ids 1, 2 and 3 on a list \"Demo List\" PARAMETERS -BatchSize Optional batch size when resetting a label on specified items. Type: Int32 Parameter Sets: (BulkItems) Required: True Position: Named Default value: 25 Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ItemIds List of iist item IDs to reset label. Type: List<Int32> Parameter Sets: (BulkItems) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID or Url of the list Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -SyncToItems Reset label on existing items in the library Type: Boolean Parameter Sets: (List) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False ## RELATED LINKS [Microsoft 365 Patterns and Practices](https://aka.ms/m365pnp) [Microsoft Learn article on applying retention labels](https://learn.microsoft.com/en-us/sharepoint/dev/apis/csom-methods-for-applying-retention-labels)"
  },
  "cmdlets/Reset-PnPUserOneDriveQuotaToDefault.html": {
    "href": "cmdlets/Reset-PnPUserOneDriveQuotaToDefault.html",
    "title": "Reset-PnPUserOneDriveQuotaToDefault | PnP PowerShell",
    "keywords": "Reset-PnPUserOneDriveQuotaToDefault SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Resets the current quota set on the OneDrive for Business site for a specific user to the tenant default SYNTAX Reset-PnPUserOneDriveQuotaToDefault [-Account] <String> [-Connection <PnPConnection>] DESCRIPTION This command allows you to reset the quota set on the OneDrive for Business site of a specific user to the default as set on the tenant. You must connect to the tenant admin website (https://: -admin.sharepoint.com) with Connect-PnPOnline in order to use this cmdlet. EXAMPLES EXAMPLE 1 Reset-PnPUserOneDriveQuotaToDefault -Account 'user@domain.com' Resets the quota set on the OneDrive for Business site for the specified user to the tenant default PARAMETERS -Account The account of the user, formatted either as a login name, or as a claims identity, e.g. i:0#.f|membership|user@domain.com Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Resolve-PnPFolder.html": {
    "href": "cmdlets/Resolve-PnPFolder.html",
    "title": "Resolve-PnPFolder | PnP PowerShell",
    "keywords": "Resolve-PnPFolder SYNOPSIS Returns a folder from a given site relative path, and will create it if it does not exist. SYNTAX Resolve-PnPFolder [-SiteRelativePath] <String> [-Connection <PnPConnection>] [-Includes <String[]>] DESCRIPTION Returns a folder from a given site relative path, and will create it if it does not exist. If you do not want the folder to be created, for instance just to test if a folder exists, use Get-PnPFolder EXAMPLES EXAMPLE 1 Resolve-PnPFolder -SiteRelativePath \"demofolder/subfolder\" Creates a folder called subfolder in a folder called demofolder located in the root folder of the site. If the folder hierarchy does not exist, it will be created. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteRelativePath Site Relative Folder Path Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Includes Optionally allows properties to be retrieved for the folder which are not included in the response by default Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Get-PnPFolder"
  },
  "cmdlets/Restart-PnPFlowRun.html": {
    "href": "cmdlets/Restart-PnPFlowRun.html",
    "title": "Restart-PnPFlowRun | PnP PowerShell",
    "keywords": "Restart-PnPFlowRun SYNOPSIS Required Permissions Azure: management.azure.com Restarts/resubmits a specific flow run for the specified Microsoft Power Automate flow. SYNTAX Restart-PnPFlowRun [-Environment <PowerAutomateEnvironmentPipeBind>] -Flow <PowerAutomateFlowPipeBind> -Identity <PowerAutomateFlowRunPipeBind> [-Force] DESCRIPTION This cmdlet restarts/resubmits a specific Power Automate flow run. EXAMPLES Example 1 Restart-PnPFlowRun -Flow fba63225-baf9-4d76-86a1-1b42c917a182 -Identity 08585531682024670884771461819CU230 This restarts the specified flow run of the specified flow located in the default environment Example 2 $environment = Restart-PnPFlowRun -Environment (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") -Flow fba63225-baf9-4d76-86a1-1b42c917a182 -Identity 08585531682024670884771461819CU230 -Force This restarts the specified flow run of the specified flow without confirmation located in the specified environment PARAMETERS -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Flow The Name/Id of the flow to retrieve the available flow runs for. Type: PowerAutomateFlowPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Name/Id of the flow run to restart. Type: PowerAutomateFlowRunPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Restore-PnPDeletedContainer.html": {
    "href": "cmdlets/Restore-PnPDeletedContainer.html",
    "title": "Restore-PnPDeletedContainer | PnP PowerShell",
    "keywords": "Restore-PnPDeletedContainer SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site The Restore-PnPDeletedContainer recovers a deleted Container from the Recycle Bin. SYNTAX Restore-PnPDeletedContainer -Identity <string> [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Restore-PnPDeletedContainer -Identity \"b!jKRbiovfMEWUWKabObEnjC5rF4MG3pRBomypnjOHiSrjkM_EBk_1S57U3gD7oW-1\" Restores the Container with ContainerId \"b!jKRbiovfMEWUWKabObEnjC5rF4MG3pRBomypnjOHiSrjkM_EBk_1S57U3gD7oW-1\" from the Recycle Bin. PARAMETERS -Identity The ContainerId of the deleted container to be restored. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Restore-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Restore-PnPDeletedMicrosoft365Group.html": {
    "href": "cmdlets/Restore-PnPDeletedMicrosoft365Group.html",
    "title": "Restore-PnPDeletedMicrosoft365Group | PnP PowerShell",
    "keywords": "Restore-PnPDeletedMicrosoft365Group SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Restores one deleted Microsoft 365 Group SYNTAX Restore-PnPDeletedMicrosoft365Group -Identity <Microsoft365GroupPipeBind> DESCRIPTION EXAMPLES EXAMPLE 1 Restore-PnPDeletedMicrosoft365Group -Identity 38b32e13-e900-4d95-b860-fb52bc07ca7f Restores a deleted Microsoft 365 Group based on its ID EXAMPLE 2 $group = Get-PnPDeletedMicrosoft365Group -Identity 38b32e13-e900-4d95-b860-fb52bc07ca7f Restore-PnPDeletedMicrosoft365Group -Identity $group Restores the provided deleted Microsoft 365 Group PARAMETERS -Identity The Identity of the deleted Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Restore-PnPFileVersion.html": {
    "href": "cmdlets/Restore-PnPFileVersion.html",
    "title": "Restore-PnPFileVersion | PnP PowerShell",
    "keywords": "Restore-PnPFileVersion SYNOPSIS Restores a specific file version. SYNTAX Restore-PnPFileVersion -Url <String> -Identity <FileVersionPipeBind> [-Force] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet restores a specific file version. EXAMPLES EXAMPLE 1 Restore-PnPFileVersion -Url Documents/MyDocument.docx -Identity 512 Restores the file version with Id 512. EXAMPLE 2 Restore-PnPFileVersion -Url /sites/HRSite/Documents/MyDocument.docx -Identity 512 Restores the file version with Id 512 for MyDocument.docx. EXAMPLE 3 Restore-PnPFileVersion -Url Documents/MyDocument.docx -Identity \"Version 1.0\" Restores the file version with label \"Version 1.0\". PARAMETERS -Identity The identity of the version. Use ID or label. Type: FileVersionPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Server relative url or site relative url of the file. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be requested and the action will be performed. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Restore-PnPFlow.html": {
    "href": "cmdlets/Restore-PnPFlow.html",
    "title": "Restore-PnPFlow | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Restore-PnPFlow SYNOPSIS Required Permissions Azure: management.azure.com Restores a specific flow SYNTAX Restore-PnPFlow [-Environment <PowerAutomateEnvironmentPipeBind>] -Identity <PowerAutomateFlowPipeBind> [-Connection <PnPConnection>] DESCRIPTION This cmdlet Restores a specific flow EXAMPLES Example 1 Restore-PnPFlow -Identity fba63225-baf9-4d76-86a1-1b42c917a182 Restores the specified flow located in the default environment. Example 2 Restore-PnPFlow -Environment (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") -Identity fba63225-baf9-4d76-86a1-1b42c917a182 Restores the specified flow located in the specified environment PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Identity Identity of the flow to Restore. Type: PowerAutomateFlowPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Restore-PnPListItemVersion.html": {
    "href": "cmdlets/Restore-PnPListItemVersion.html",
    "title": "Restore-PnPListItemVersion | PnP PowerShell",
    "keywords": "Restore-PnPListItemVersion SYNOPSIS Restores a specific list item version. SYNTAX Restore-PnPListItemVersion -List <ListPipeBind> -Identity <ListItemPipeBind> -Version <ListItemVersionPipeBind> [-Force] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet restores a specific list item version. EXAMPLES EXAMPLE 1 Restore-PnPListItemVersion -List \"Demo List\" -Identity 1 -Version 512 Restores the list item version with Id 512. EXAMPLE 2 Restore-PnPListItemVersion -List \"Demo List\" -Identity 1 -Version \"1.0\" Restores the list item version with version label \"1.0\". PARAMETERS -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object. Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Version The ID or label of the version. Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Force If provided, no confirmation will be requested and the action will be performed. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Restore-PnPRecycleBinItem.html": {
    "href": "cmdlets/Restore-PnPRecycleBinItem.html",
    "title": "Restore-PnPRecycleBinItem | PnP PowerShell",
    "keywords": "Restore-PnPRecycleBinItem SYNOPSIS Restores the provided recycle bin item to its original location. SYNTAX Restore-PnPRecycleBinItem -Identity <RecycleBinItemPipeBind> [-Force] [-RowLimit <Int32>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet restores the specified item from the recycle bin to its original location. EXAMPLES EXAMPLE 1 Restore-PnPRecycleBinItem -Identity 72e4d749-d750-4989-b727-523d6726e442 Restores the recycle bin item with Id 72e4d749-d750-4989-b727-523d6726e442 to its original location. EXAMPLE 2 Get-PnPRecycleBinItem | ? -Property LeafName -like \"*.docx\" | Restore-PnPRecycleBinItem Restores all the items of which the filename ends with the .docx extension from the first and second stage recycle bins to their original location. EXAMPLE 3 Get-PnPRecycleBinItem -RowLimit 10000 | Restore-PnPRecycleBinItem -Force Permanently restores up to 10,000 items in the recycle bin without asking for confirmation. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to restore the recycle bin item. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Id of the recycle bin item or the recycle bin item object itself to restore. Type: RecycleBinItemPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -RowLimit Limits restoration to specified number of items. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Restore-PnPTenantRecycleBinItem.html": {
    "href": "cmdlets/Restore-PnPTenantRecycleBinItem.html",
    "title": "Restore-PnPTenantRecycleBinItem | PnP PowerShell",
    "keywords": "Restore-PnPTenantRecycleBinItem SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Restores a site collection from the tenant scoped recycle bin SYNTAX Restore-PnPTenantRecycleBinItem -Url <String> [-Wait] [-Force] [-Connection <PnPConnection>] DESCRIPTION The Restore-PnPTenantRecycleBinItem cmdlet allows a site collection that has been deleted and still exists in the tenant recycle bin to be restored to its original location. EXAMPLES EXAMPLE 1 Restore-PnPTenantRecycleBinItem -Url \"https://tenant.sharepoint.com/sites/contoso\" This will restore the deleted site collection with the url 'https://tenant.sharepoint.com/sites/contoso' to its original location EXAMPLE 2 Restore-PnPTenantRecycleBinItem -Url \"https://tenant.sharepoint.com/sites/contoso\" -Wait This will restore the deleted site collection with the url 'https://tenant.sharepoint.com/sites/contoso' to its original location and will wait with executing further PowerShell commands until the site collection restore has completed PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to restore the site collection from the tenant recycle bin Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Url of the site collection to restore from the tenant recycle bin Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait If provided, the PowerShell execution will halt until the site restore process has completed Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Restore-PnPTenantSite.html": {
    "href": "cmdlets/Restore-PnPTenantSite.html",
    "title": "Restore-PnPTenantSite | PnP PowerShell",
    "keywords": "Restore-PnPTenantSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Restores a site collection from the Tenant recycle bin. SYNTAX Restore-PnPTenantSite [-Identity] <String> [-Force] [-NoWait] [-Connection <PnPConnection>] [-Verbose] DESCRIPTION Restores a site collection which is listed in your tenant administration site from the tenant's recycle bin. EXAMPLES EXAMPLE 1 Restore-PnPTenantSite -Identity \"https://tenant.sharepoint.com/sites/contoso\" This will restore the site collection with the url 'https://tenant.sharepoint.com/sites/contoso' from the recycle bin asking for confirmation to restore the site collection and will wait with the execution of the script until the site collection is restored. EXAMPLE 2 Restore-PnPTenantSite -Identity \"https://tenant.sharepoint.com/sites/contoso\" -Force This will restore the site collection with the url 'https://tenant.sharepoint.com/sites/contoso' from the recycle bin not asking for confirmation to restore the site collection and will wait with the execution of the script until the site collection is restored. EXAMPLE 3 Restore-PnPTenantSite -Identity \"https://tenant.sharepoint.com/sites/contoso\" -Force -NoWait This will restore the site collection with the url 'https://tenant.sharepoint.com/sites/contoso' from the recycle bin not asking for confirmation to restore the site collection and will immediately continue with the execution of the script PARAMETERS -Identity Specifies the full URL of the site collection that needs to be restored. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Force Do not ask for confirmation. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoWait If specified the task will return immediately after creating the restore site job. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Revoke-PnPAzureADAppSitePermission.html": {
    "href": "cmdlets/Revoke-PnPAzureADAppSitePermission.html",
    "title": "Revoke-PnPAzureADAppSitePermission | PnP PowerShell",
    "keywords": "Revoke-PnPAzureADAppSitePermission SYNOPSIS Required Permissions Microsoft Graph API: Sites.FullControl.All Revokes permissions for a given app. SYNTAX Revoke-PnPAzureADAppSitePermission -PermissionId <String> [-Site <SitePipeBind>] [-Connection <PnPConnection>] DESCRIPTION This cmdlets revokes permissions for a given app in a site. EXAMPLES EXAMPLE 1 Revoke-PnPAzureADAppSitePermission -PermissionId ABSDFefsdfef33fsdFSvsadf3e3fsdaffsa Revoke permission specified with the Id. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PermissionId Specify the permission id that should be revoked. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Optional url to a site to set the permissions for. Defaults to the current site. Type: SitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Revoke-PnPEntraIDAppSitePermission.html": {
    "href": "cmdlets/Revoke-PnPEntraIDAppSitePermission.html",
    "title": "Revoke-PnPEntraIDAppSitePermission | PnP PowerShell",
    "keywords": "Revoke-PnPEntraIDAppSitePermission SYNOPSIS This is an alias for Revoke-PnPAzureADAppSitePermission. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Revoke-PnPHubSiteRights.html": {
    "href": "cmdlets/Revoke-PnPHubSiteRights.html",
    "title": "Revoke-PnPHubSiteRights | PnP PowerShell",
    "keywords": "Revoke-PnPHubSiteRights SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Revoke permissions to the permissions already in place to associate sites to Hub Sites for one or more specific users SYNTAX Revoke-PnPHubSiteRights [-Identity] <HubSitePipeBind> -Principals <String[]> [-Connection <PnPConnection>] DESCRIPTION Allows to revoke permissions from existing once to associate sites to Hub Sites for specified users. EXAMPLES EXAMPLE 1 Revoke-PnPHubSiteRights -Identity \"https://contoso.sharepoint.com/sites/hubsite\" -Principals \"myuser@mydomain.com\",\"myotheruser@mydomain.com\" This example shows how to revoke the rights of myuser and myotheruser to associate their sites with the provided Hub Site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify hub site url to revoke rights from Type: HubSitePipeBind Parameter Sets: (All) Aliases: HubSite Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Principals Specify user(s) login name i.e user@company.com to revoke rights for Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Revoke-PnPSiteDesignRights.html": {
    "href": "cmdlets/Revoke-PnPSiteDesignRights.html",
    "title": "Revoke-PnPSiteDesignRights | PnP PowerShell",
    "keywords": "Revoke-PnPSiteDesignRights SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Revokes the specified principals rights to use the site design. SYNTAX Revoke-PnPSiteDesignRights [-Identity] <TenantSiteDesignPipeBind> -Principals <String[]> [-Connection <PnPConnection>] DESCRIPTION Revokes the rights to use the site design for the specified users. EXAMPLES EXAMPLE 1 Revoke-PnPSiteDesignRights -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd -Principals \"myuser@mydomain.com\",\"myotheruser@mydomain.com\" Revokes rights of the specified principals on the specified site design. EXAMPLE 2 Get-PnPSiteDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd | Revoke-PnPSiteDesignRights -Principals \"myuser@mydomain.com\",\"myotheruser@mydomain.com\" Revokes rights of the specified principals on the specified site design. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The site design to use. Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Principals One or more principals to revoke. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Revoke-PnPTenantServicePrincipalPermission.html": {
    "href": "cmdlets/Revoke-PnPTenantServicePrincipalPermission.html",
    "title": "Revoke-PnPTenantServicePrincipalPermission | PnP PowerShell",
    "keywords": "Revoke-PnPTenantServicePrincipalPermission SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Microsoft Graph API : Directory.ReadWrite.All Revokes a permission that was previously granted to the \"SharePoint Online Client Extensibility Web Application Service Principal\" service principal. SYNTAX Revoke-PnPTenantServicePrincipalPermission -Scope <String> [-Resource <String>] [-Force] [-Connection <PnPConnection>] DESCRIPTION Revokes a permission that was previously granted to the \"SharePoint Online Client Extensibility Web Application Service Principal\" service principal. EXAMPLES EXAMPLE 1 Revoke-PnPTenantServicePrincipalPermission -Scope \"Group.Read.All\" Removes the Group.Read.All permission scope from the service principal. PARAMETERS -Scope The scope to grant the permission for Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Resource The resource to grant the permission for. Defaults to \"Microsoft Graph\" Type: String Parameter Sets: (All) Required: True Position: Named Default value: Microsoft Graph Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Revoke-PnPUserSession.html": {
    "href": "cmdlets/Revoke-PnPUserSession.html",
    "title": "Revoke-PnPUserSession | PnP PowerShell",
    "keywords": "Revoke-PnPUserSession SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Provides IT administrators the ability to logout a user's O365 sessions across all their devices. SYNTAX Revoke-PnPUserSession -User <String> [-Confirm] DESCRIPTION User will be signed out of browser, desktop and mobile applications accessing Office 365 resources across all devices. It is not applicable to guest users. EXAMPLES EXAMPLE 1 Revoke-PnPUserSession -User user1@contoso.com This example signs out user1 in the contoso tenancy from all devices. PARAMETERS -User Specifies a user name. For example, user1@contoso.com Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Save-PnPPageConversionLog.html": {
    "href": "cmdlets/Save-PnPPageConversionLog.html",
    "title": "Save-PnPPageConversionLog | PnP PowerShell",
    "keywords": "Save-PnPPageConversionLog SYNOPSIS Persists the current client side page conversion log data to the loggers linked to the last used page transformation run. Needs to be used in conjunction with the -LogSkipFlush flag on the ConvertTo-PnPPage cmdlet. SYNTAX Save-PnPPageConversionLog [-Connection <PnPConnection>] EXAMPLES EXAMPLE 1 Save-PnPPageConversionLog Persists the current client side page conversion log data to the loggers linked to the last used page transformation run. Needs to be used in conjunction with the -LogSkipFlush flag on the ConvertTo-PnPPage cmdlet. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Save-PnPSiteTemplate.html": {
    "href": "cmdlets/Save-PnPSiteTemplate.html",
    "title": "Save-PnPSiteTemplate | PnP PowerShell",
    "keywords": "Save-PnPSiteTemplate SYNOPSIS Saves a PnP site template to the file system SYNTAX Save-PnPSiteTemplate -Template <SiteTemplatePipeBind> [-Out] <String> [-Schema <XMLPnPSchemaVersion>] [-Force] [-TemplateProviderExtensions <ITemplateProviderExtension[]>] DESCRIPTION Allows to save a PnP site template to the file system. EXAMPLES EXAMPLE 1 Save-PnPSiteTemplate -Template .\\template.xml -Out .\\template.pnp Saves a PnP provisioning template to the file system as a PnP file. EXAMPLE 2 $template = Read-PnPSiteTemplate -Path template.xml Save-PnPSiteTemplate -Template $template -Out .\\template.pnp Saves a PnP site template to the file system as a PnP file. The schema used will the latest released schema when creating the PnP file regardless of the original schema EXAMPLE 3 $template = Read-PnPSiteTemplate -Path template.xml Save-PnPSiteTemplate -Template $template -Out .\\template.pnp -Schema V202002 Saves a PnP site template to the file system as a PnP file and converts the template in the PnP file to the specified schema. EXAMPLE 4 Read-PnPSiteTemplate -Path template.xml | Save-PnPSiteTemplate -Out .\\template.pnp Saves a PnP site template to the file system as a PnP file. PARAMETERS -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out Filename to write to, optionally including full path. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Schema The optional schema to use when creating the PnP file. Always defaults to the latest schema. Type: XMLPnPSchemaVersion Parameter Sets: (All) Accepted values: LATEST, V201503, V201505, V201508, V201512, V201605, V201705, V201801, V201805, V201807, V201903, V201909, V202002, V202103, V202209 Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template Allows you to provide an in-memory instance of the SiteTemplate type of the PnP Core Component. When using this parameter, the -Out parameter refers to the path for saving the template and storing any supporting file for the template. Type: SiteTemplatePipeBind Parameter Sets: (All) Aliases: InputInstance Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify the ITemplateProviderExtension to execute while saving a template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Save-PnPTenantTemplate.html": {
    "href": "cmdlets/Save-PnPTenantTemplate.html",
    "title": "Save-PnPTenantTemplate | PnP PowerShell",
    "keywords": "Save-PnPTenantTemplate SYNOPSIS Saves a PnP provisioning hierarchy to the file system. SYNTAX Save-PnPTenantTemplate -Template <ProvisioningHierarchyPipeBind> [-Out] <String> [-Schema <XMLPnPSchemaVersion>] [-Force] DESCRIPTION This cmdlet saves the tenant template for provisioning hierarchy to the file system in the latest or specified schema. EXAMPLES EXAMPLE 1 Save-PnPTenantTemplate -Template template.xml -Out .\\tenanttemplate.pnp Saves a PnP tenant template to the file system. EXAMPLE 2 $template = Read-PnPTenantTemplate -Path template.xml Save-PnPTenantTemplate -Template $template -Out .\\template.pnp Saves a PnP tenant template to the file system as a PnP file. The schema used will be the latest released schema when creating the PnP file regardless of the original schema. EXAMPLE 3 $template = Read-PnPTenantTemplate -Path template.xml Save-PnPTenantTemplate -Template $template -Out .\\template.pnp -Schema V202002 Saves a PnP tenant template to the file system as a PnP file and converts the template in the PnP file to the specified schema. EXAMPLE 4 Read-PnPTenantTemplate -Path template.xml | Save-PnPTenantTemplate -Out .\\template.pnp Saves a PnP tenant template to the file system as a PnP file. PARAMETERS -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out Filename to write to, optionally including full path. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Schema The optional schema to use when creating the PnP file. Always defaults to the latest schema. Type: XMLPnPSchemaVersion Parameter Sets: (All) Accepted values: LATEST, V201503, V201505, V201508, V201512, V201605, V201705, V201801, V201805, V201807, V201903, V201909, V202002, V202103, V202209 Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template Allows you to provide an in-memory instance of a Tenant Template or a filename of a template file in XML format. When using this parameter, the -Out parameter refers to the path for saving the template and storing any supporting file for the template. Type: ProvisioningHierarchyPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Send-PnPMail.html": {
    "href": "cmdlets/Send-PnPMail.html",
    "title": "Send-PnPMail | PnP PowerShell",
    "keywords": "Send-PnPMail SYNOPSIS Allows sending an e-mail SYNTAX Send through Microsoft Graph with attachments from local file system Send-PnPMail -From <String> -To <String[]> -Subject <String> -Body <String> [-Cc <String[]>] [-Bcc <String[]>] [-ReplyTo <String[]>] [-Importance <MessageImportanceType>] [-BodyContentType <MessageBodyContentType>] [-SaveToSentItems <bool>] [-Connection <PnPConnection>] [-Verbose] [-Attachments <String[]>] Send through Microsoft Graph with attachments from SharePoint Online Send-PnPMail -From <String> -To <String[]> -Subject <String> -Body <String> [-Cc <String[]>] [-Bcc <String[]>] [-ReplyTo <String[]>] [-Importance <MessageImportanceType>] [-BodyContentType <MessageBodyContentType>] [-SaveToSentItems <bool>] [-Connection <PnPConnection>] [-Verbose] [-Files <String[]>] Send through SharePoint Online (Default) Send-PnPMail -To <String[]> -Subject <String> -Body <String> [-Cc <String[]>] [-Bcc <String[]>] [-Connection <PnPConnection>] [-Verbose] DESCRIPTION Allows sending an e-mail through SharePoint Online or Microsoft Graph. Sending e-mail through Microsoft Graph requires the Mail.Send permission. In October 2025, Microsoft will remove the API which is being used to send e-mail through SharePoint. It is therefore highly recommended to use the Microsoft Graph option listed above instead. EXAMPLES EXAMPLE 1 Send-PnPMail -From \"user@contoso.onmicrosoft.com\" -To \"recipient@contoso.com\" -Subject \"Test message\" -Body \"This is a test message\" Sends an e-mail using Microsoft Graph to one recipient. E-mail is sent from the user specified in the From parameter and can be sent to both internal and external addresses. A copy of the sent e-mail will be stored in the mailbox of the user specified in the From parameter. EXAMPLE 2 Send-PnPMail -From \"sharedmailbox@contoso.onmicrosoft.com\" -To \"recipient1@contoso.com\",\"recipient2@contoso.com\",\"recipient3@contoso.com\" -Cc \"recipient4@contoso.com\" -Bcc \"recipient5@contoso.com\" -Subject \"Test message\" -Body \"This is a test message\" -Importance Low Sends an e-mail using Microsoft Graph from a shared mailbox to multiple recipients. E-mail is sent from the shared mailbox specified in the From parameter and can be sent to both internal and external addresses. A copy of the sent e-mail will be stored in the shared mailbox. EXAMPLE 3 Send-PnPMail -To \"address@tenant.microsoftonline.com\" -Subject \"Test message\" -Body \"This is a test message\" Sends an e-mail using the SharePoint Online SendEmail method using the current context. E-mail is sent from the SharePoint Online no-reply e-mail address and can only be sent to accounts in the same tenant. The from address will show the title of the site you are connected with along with the e-mail address no-reply@sharepointonline.com. EXAMPLE 4 Send-PnPMail -From \"user@contoso.onmicrosoft.com\" -To \"recipient@contoso.com\" -Subject \"Test message\" -Body \"This is a test message\" -Attachments \"C:\\PnPCommunity\\Test\\test.docx\" Sends an e-mail using Microsoft Graph to one recipient. E-mail is sent from the user specified in the From parameter and can be sent to both internal and external addresses. A copy of the sent e-mail will be stored in the mailbox of the user specified in the From parameter. It will also upload the file from the local file system as attachment. EXAMPLE 5 Send-PnPMail -From \"user@contoso.onmicrosoft.com\" -To \"recipient@contoso.com\" -Subject \"Test message\" -Body \"This is a test message\" -Files \"/sites/test/Shared Documents/Test.docx\" Sends an e-mail using Microsoft Graph to one recipient. E-mail is sent from the user specified in the From parameter and can be sent to both internal and external addresses. A copy of the sent e-mail will be stored in the mailbox of the user specified in the From parameter. It will also upload the file from the SharePoint site collection and send it as attachment. PARAMETERS -Body Body of the email. Accepts simple HTML as &lt;h1&gt;&lt;/h1&gt;, &lt;br/&gt; etc. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Cc List of recipients on CC Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Bcc List of recipients on BCC Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BodyContentType Allows defining what type of content is in the Body parameter. Defaults to HTML. Type: MessageBodyContentType Parameter Sets: Send through Microsoft Graph with attachments from SPO, Send through Microsoft Graph with attachments from local file system Accepted values: Html, Text Required: False Position: Named Default value: Html Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -From The sender of the e-mail. When Microsoft Graph is used, this can be a user or a shared mailbox. Type: String Parameter Sets: Send through Microsoft Graph with attachments from SPO, Send through Microsoft Graph with attachments from local file system Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Importance Allows defining what the importance of the e-mail is. Defaults to Normal. Type: MessageImportanceType Parameter Sets: Send through Microsoft Graph with attachments from SPO, Send through Microsoft Graph with attachments from local file system Accepted values: Low, Normal, High Required: False Position: Named Default value: Normal Accept pipeline input: False Accept wildcard characters: False -ReplyTo List of return addresses to use for the e-mail Type: String[] Parameter Sets: Send through Microsoft Graph with attachments from SPO, Send through Microsoft Graph with attachments from local file system Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SaveToSentItems Allows indicating if the sent e-mail should be stored in the Sent Items of the mailbox used to send out the e-mail. Type: String[] Parameter Sets: Send through Microsoft Graph with attachments from SPO, Send through Microsoft Graph with attachments from local file system Required: False Position: Named Default value: True Accept pipeline input: False Accept wildcard characters: False -Subject Subject of the email Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -To List of recipients as a string array Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Attachments List of attachments from local file system to be uploaded and sent as attachments. Type: String[] Parameter Sets: Send through Microsoft Graph with attachments from local file system Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Files List of files from the SharePoint site collection to be sent as attachments. Type: String[] Parameter Sets: Send through Microsoft Graph with attachments from SPO Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPAdaptiveScopeProperty.html": {
    "href": "cmdlets/Set-PnPAdaptiveScopeProperty.html",
    "title": "Set-PnPAdaptiveScopeProperty | PnP PowerShell",
    "keywords": "Set-PnPAdaptiveScopeProperty SYNOPSIS Sets an indexed value to the current web property bag. SYNTAX Web Set-PnPAdaptiveScopeProperty -Key <String> -Value <String> [-Connection <PnPConnection>] DESCRIPTION This cmdlet is used to set or create an indexed property bag value for use in SharePoint site scopes with adaptive policy scopes. Executing this cmdlet is similar to setting or adding an indexed value to the current web property bag using Set-PnPPropertyBagValue with the -Indexed parameter with the addition that it will also ensure the noscript is temporarily disabled to allow for this to happen. It will revert its state back to what it was after adding or updating the property bag value. Using this cmdlet does therefore require having the SharePoint Online Admin role or equivalent app permissions. EXAMPLES EXAMPLE 1 Set-PnPAdaptiveScopeProperty -Key MyKey -Value MyValue This sets or adds an indexed value to the current web property bag. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Key of the property to set. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Value Value to set. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft 365 Information Governance Adaptive policy scopes"
  },
  "cmdlets/Set-PnPAppSideLoading.html": {
    "href": "cmdlets/Set-PnPAppSideLoading.html",
    "title": "Set-PnPAppSideLoading | PnP PowerShell",
    "keywords": "Set-PnPAppSideLoading SYNOPSIS Enables the App SideLoading Feature on a site SYNTAX On Set-PnPAppSideLoading [-On] [-Connection <PnPConnection>] Off Set-PnPAppSideLoading [-Off] [-Connection <PnPConnection>] DESCRIPTION This cmdlet enables or disables the app side loading feature on the site. Allows to enable the App SideLoading Feature on a site. EXAMPLES EXAMPLE 1 Set-PnPAppSideLoading -On This will turn on App side loading. EXAMPLE 2 Set-PnPAppSideLoading -Off This will turn off App side loading. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Off Turns the feature off. Type: SwitchParameter Parameter Sets: Off Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -On Turns the feature on. Type: SwitchParameter Parameter Sets: On Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPApplicationCustomizer.html": {
    "href": "cmdlets/Set-PnPApplicationCustomizer.html",
    "title": "Set-PnPApplicationCustomizer | PnP PowerShell",
    "keywords": "Set-PnPApplicationCustomizer SYNOPSIS Updates a SharePoint Framework client side extension application customizer SYNTAX Custom Action Id Set-PnPApplicationCustomizer [[-Identity] <UserCustomActionPipeBind>] [-Scope <CustomActionScope>] [-Title <String>] [-Description <String>] [-Sequence <Int32>] [-ClientSideComponentProperties <String>] [-ClientSideHostProperties> <String>] [-Connection <PnPConnection>] Client Side Component Id Set-PnPApplicationCustomizer [-ClientSideComponentId <Guid>] [-Scope <CustomActionScope>] [-Title <String>] [-Description <String>] [-Sequence <Int32>] [-ClientSideComponentProperties <String>] [-ClientSideHostProperties> <String>] [-Connection <PnPConnection>] DESCRIPTION Updates a SharePoint Framework client side extension application customizer by updating its custom action. Only the properties that will be provided will be updated. Others will remain as they are. EXAMPLES EXAMPLE 1 Set-PnPApplicationCustomizer -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 Updates the custom action representing the client side extension registration with the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2'. EXAMPLE 2 Set-PnPApplicationCustomizer -ClientSideComponentId aa66f67e-46c0-4474-8a82-42bf467d07f2 -Scope web -ClientSideComponentProperties \"{`\"sourceTermSet`\":`\"PnP-CollabFooter-SharedLinks`\",`\"personalItemsStorageProperty`\":`\"PnP-CollabFooter-MyLinks`\"}\" Updates the custom action(s) properties being registered for a SharePoint Framework solution having the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2' in its manifest from the current web. PARAMETERS -ClientSideComponentId The Client Side Component Id of the SharePoint Framework client side extension application customizer found in the manifest for which existing custom action(s) should be updated Type: Guid Parameter Sets: Client Side Component Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSideComponentProperties The Client Side Component Properties of the application customizer to update. Specify values as a json string : \"{Property1 : 'Value1', Property2: 'Value2'}\". Omit to not update this property. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSideHostProperties The Client Side Host Properties of the application customizer to update. Omit to not update this property. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the application customizer. Omit to not update this property. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The id or name of the CustomAction representing the client side extension registration that needs to be updated or a CustomAction instance itself Type: UserCustomActionPipeBind Parameter Sets: Custom Action Id Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Define if the CustomAction representing the client side extension registration is to be found at the web or site collection scope. Specify All to update the component on both web and site collection level. Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Sequence Sequence of this application customizer being injected. Use when you have a specific sequence with which to have multiple application customizers being added to the page. Omit to not update this property. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the application customizer. Omit to not update this property. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPAuditing.html": {
    "href": "cmdlets/Set-PnPAuditing.html",
    "title": "Set-PnPAuditing | PnP PowerShell",
    "keywords": "Set-PnPAuditing SYNOPSIS Set Auditing setting for a site SYNTAX Enable all Set-PnPAuditing [-EnableAll] [-RetentionTime <Int32>] [-TrimAuditLog] [-Connection <PnPConnection>] Disable All Set-PnPAuditing [-DisableAll] [-Connection <PnPConnection>] Specific flags Set-PnPAuditing [-RetentionTime <Int32>] [-TrimAuditLog] [-EditItems] [-CheckOutCheckInItems] [-MoveCopyItems] [-DeleteRestoreItems] [-EditContentTypesColumns] [-SearchContent] [-EditUsersPermissions] [-Connection <PnPConnection>] DESCRIPTION Allows to modify Auditing setting for a site. EXAMPLES EXAMPLE 1 Set-PnPAuditing -EnableAll Enables all auditing settings for the current site EXAMPLE 2 Set-PnPAuditing -DisableAll Disables all auditing settings for the current site EXAMPLE 3 Set-PnPAuditing -RetentionTime 7 Sets the audit log trimming to 7 days, this also enables the automatic trimming of the audit log EXAMPLE 4 Set-PnPAuditing -TrimAuditLog Enables the automatic trimming of the audit log EXAMPLE 5 Set-PnPAuditing -RetentionTime 7 -CheckOutCheckInItems -MoveCopyItems -SearchContent Sets the audit log trimming to 7 days, this also enables the automatic trimming of the audit log. Do auditing for: Checking out or checking in items Moving or copying items to another location in the site Searching site content PARAMETERS -CheckOutCheckInItems Audit checking out or checking in items Type: SwitchParameter Parameter Sets: Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DeleteRestoreItems Audit deleting or restoring items Type: SwitchParameter Parameter Sets: Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableAll Disable all audit flags Type: SwitchParameter Parameter Sets: Disable All Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EditContentTypesColumns Audit editing content types and columns Type: SwitchParameter Parameter Sets: Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EditItems Audit editing items Type: SwitchParameter Parameter Sets: Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EditUsersPermissions Audit editing users and permissions Type: SwitchParameter Parameter Sets: Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableAll Enable all audit flags Type: SwitchParameter Parameter Sets: Enable all Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MoveCopyItems Audit moving or copying items to another location in the site. Type: SwitchParameter Parameter Sets: Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RetentionTime Set the retention time Type: Int32 Parameter Sets: Enable all, Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SearchContent Audit searching site content Type: SwitchParameter Parameter Sets: Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TrimAuditLog Trim the audit log Type: SwitchParameter Parameter Sets: Enable all, Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPAvailablePageLayouts.html": {
    "href": "cmdlets/Set-PnPAvailablePageLayouts.html",
    "title": "Set-PnPAvailablePageLayouts | PnP PowerShell",
    "keywords": "Set-PnPAvailablePageLayouts SYNOPSIS Sets the available page layouts for the current site. SYNTAX SPECIFIC Set-PnPAvailablePageLayouts -PageLayouts <String[]> [-Connection <PnPConnection>] ALL Set-PnPAvailablePageLayouts [-AllowAllPageLayouts] [-Connection <PnPConnection>] INHERIT Set-PnPAvailablePageLayouts [-InheritPageLayouts] [-Connection <PnPConnection>] DESCRIPTION This cmdlet sets the available page layouts for the current site. It requires NoScript feature to be disabled. EXAMPLES EXAMPLE 1 Set-PnPAvailablePageLayouts -AllowAllPageLayouts Allows all page layouts for the current site. PARAMETERS -AllowAllPageLayouts Allows all page layout files to be available for the site. Type: SwitchParameter Parameter Sets: ALL Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InheritPageLayouts Sets the available page layouts to inherit from the parent site. Type: SwitchParameter Parameter Sets: INHERIT Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PageLayouts An array of page layout files to set as available page layouts for the site. Type: String[] Parameter Sets: SPECIFIC Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPAzureADAppSitePermission.html": {
    "href": "cmdlets/Set-PnPAzureADAppSitePermission.html",
    "title": "Set-PnPAzureADAppSitePermission | PnP PowerShell",
    "keywords": "Set-PnPAzureADAppSitePermission SYNOPSIS Required Permissions Microsoft Graph API: Sites.FullControl.All Updates permissions for a given Azure Active Directory application registration. SYNTAX Set-PnPAzureADAppSitePermission -PermissionId <String> -Permissions <Read|Write|Manage|FullControl> [-Site <SitePipeBind>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet updates permissions for a given Azure Active Directory application registration in a site collection. It is used in conjunction with the Azure Active Directory SharePoint application permission Sites.Selected. EXAMPLES EXAMPLE 1 Set-PnPAzureADAppSitePermission -PermissionId ABSDFefsdfef33fsdFSvsadf3e3fsdaffsa -Permissions Read Updates the Azure Active Directory application registration with the specific permission id and sets the rights to 'Read' access for the currently connected site collection. EXAMPLE 2 Set-PnPAzureADAppSitePermission -PermissionId ABSDFefsdfef33fsdFSvsadf3e3fsdaffsa -Permissions FullControl -Site https://contoso.microsoft.com/sites/projects Updates the Azure Active Directory application registration with the specific permission id and sets the rights to 'FullControl' access for the site collection at the provided URL. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PermissionId The permission with the specified id will be updated. Use Get-PnPAzureADAppSitePermission to discover currently set permissions which can be updated. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Permissions Specifies the permissions to set for the Azure Active Directory application registration which can either be Read, Write, Manage or FullControl. Type: String Parameter Sets: (All) Required: True Accepted values: Read, Write, Manage, FullControl Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Optional url of a site to set the permissions for. Defaults to the current site if not provided. Type: SitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: Currently connected site Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPAzureADGroup.html": {
    "href": "cmdlets/Set-PnPAzureADGroup.html",
    "title": "Set-PnPAzureADGroup | PnP PowerShell",
    "keywords": "Set-PnPAzureADGroup SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Sets the properties of a specific Azure Active Directory group. SYNTAX Set-PnPAzureADGroup -Identity <AzureADGroupPipeBind> [-DisplayName <String>] [-Description <String>] [-Owners <String[]>] [-Members <String[]>] [-SecurityEnabled] [-MailEnabled] [-HideFromAddressLists <Boolean>] [-HideFromOutlookClients <Boolean>] DESCRIPTION This cmdlet sets the properties of a specific Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. EXAMPLES EXAMPLE 1 Set-PnPAzureADGroup -Identity $group -DisplayName \"My DisplayName\" Sets the display name of the group where $group is a Group entity. EXAMPLE 2 Set-PnPAzureADGroup -Identity $groupId -Descriptions \"My Description\" -DisplayName \"My DisplayName\" Sets the display name and description of a group based upon its ID. EXAMPLE 3 Set-PnPAzureADGroup -Identity $group -Owners demo@contoso.com Sets demo@contoso.com as the owner of the group. PARAMETERS -SecurityEnabled Sets the Azure Active Directory group to be allowed to be used for setting permissions. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MailEnabled Sets the Azure Active Directory group to be allowed to be used for receiving e-mail. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the group to set. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The display name of the group to set. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideFromAddressLists Controls whether the group is hidden or shown in the Global Address List (GAL). Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideFromOutlookClients Controls whether the group shows in the Outlook left-hand navigation. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the Azure Active Directory group. Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Members The array UPN values of members to set to the group. Note: Will replace members. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners The array UPN values of owners to set to the group. Note: Will replace owners. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Set-PnPBrowserIdleSignout.html": {
    "href": "cmdlets/Set-PnPBrowserIdleSignout.html",
    "title": "Set-PnPBrowserIdleSignOut | PnP PowerShell",
    "keywords": "Set-PnPBrowserIdleSignOut SYNOPSIS Sets the current configuration values for Idle session sign-out policy. SYNTAX Enable Set-PnPBrowserIdleSignOut -Enabled:$true -WarnAfter <TimeSpan> -SignOutAfter <TimeSpan> Disable Set-PnPBrowserIdleSignOut -Enabled:$false DESCRIPTION Use this cmdlet to set the current configuration values for Idle session sign-out, the time at which users are warned and subsequently signed out of Microsoft 365 after a period of browser inactivity in SharePoint Online and OneDrive. EXAMPLES EXAMPLE 1 Set-PnPBrowserIdleSignOut -Enabled:$true -WarnAfter \"0.00:45:00\" -SignOutAfter \"0.01:00:00\" This example enables the browser idle sign-out policy, sets a warning at 45 minutes and signs out users after a period of 60 minutes of browser inactivity. EXAMPLE 2 Set-PnPBrowserIdleSignOut -Enabled:$true -WarnAfter (New-TimeSpan -Minutes 45) -SignOutAfter (New-TimeSpan -Hours 1) This example enables the browser idle sign-out policy, sets a warning at 45 minutes and signs out users after a period of 60 minutes of browser inactivity. EXAMPLE 3 Set-PnPBrowserIdleSignOut -Enabled:$false This example disables the browser idle sign-out policy. PARAMETERS -Enabled Enables the browser idle sign-out policy. Type: Boolean Parameter Sets: DisableBrowserIdleSignOut, EnableBrowserIdleSignOut Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SignOutAfter Specifies a time interval. This parameter is used to specify a time value for Get-PnPBrowserIdleSignOut parameters such as SignOutAfter. Specify the time interval in the following format: [-]D.H:M:S.F where: D = Days (0 to 10675199) H = Hours (0 to 23) M = Minutes (0 to 59) S = Seconds (0 to 59) F = Fractions of a second (0 to 9999999) Type: TimeSpan Parameter Sets: EnableBrowserIdleSignOut Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WarnAfter Specifies a time interval. This parameter is used to specify a time value for Get-PnPBrowserIdleSignOut parameters such as WarnAfter. Specify the time interval in the following format: [-]D.H:M:S.F where: D = Days (0 to 10675199) H = Hours (0 to 23) M = Minutes (0 to 59) S = Seconds (0 to 59) F = Fractions of a second (0 to 9999999) Type: TimeSpan Parameter Sets: EnableBrowserIdleSignOut Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPBuiltInDesignPackageVisibility.html": {
    "href": "cmdlets/Set-PnPBuiltInDesignPackageVisibility.html",
    "title": "Set-PnPBuiltInDesignPackageVisibility | PnP PowerShell",
    "keywords": "Set-PnPBuiltInDesignPackageVisibility SYNOPSIS Sets the visibility of the available built-in Design Packages at the moment of site creation. SYNTAX Set-PnPBuiltInDesignPackageVisibility [-IsVisible] <Boolean> [-DesignPackage] <DesignPackageType> [-Connection <PnPConnection>] DESCRIPTION Sets the visibility of the available built-in Design Packages. EXAMPLES EXAMPLE 1 Set-PnPBuiltInDesignPackageVisibility -DesignPackage Showcase -IsVisible:$false This example sets the visibility state of Showcase built-in design package to false. EXAMPLE 2 Set-PnPBuiltInDesignPackageVisibility -DesignPackage TeamSite -IsVisible:$true This example sets the visibility state of TeamSite design package to true. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DesignPackage Name of the design package, available names are Topic Showcase Blank TeamSite Type: DesignPackageType Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsVisible Sets the visibility of the design package. Type: Boolean Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPBuiltInSiteTemplateSettings.html": {
    "href": "cmdlets/Set-PnPBuiltInSiteTemplateSettings.html",
    "title": "Set-PnPBuiltInSiteTemplateSettings | PnP PowerShell",
    "keywords": "Set-PnPBuiltInSiteTemplateSettings SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Allows configuration of the built-in SharePoint Online site templates. SYNTAX Configure through the site template identifier Set-PnPBuiltInSiteTemplateSettings -Identity <BuiltInSiteTemplateSettingsPipeBind> -IsHidden <Boolean> [-Connection <PnPConnection>] [-WhatIf] Configure through the site template name Set-PnPBuiltInSiteTemplateSettings -Template <BuiltInSiteTemplates> -IsHidden <Boolean> [-Connection <PnPConnection>] [-WhatIf] DESCRIPTION This cmdlet allows the built-in SharePoint Online site templates to be shown or hidden. EXAMPLES EXAMPLE 1 Set-PnPBuiltInSiteTemplateSettings -Identity 9522236e-6802-4972-a10d-e98dc74b3344 -IsHidden $false Makes the Event Planning template visible. EXAMPLE 2 Set-PnPBuiltInSiteTemplateSettings -Identity 00000000-0000-0000-0000-000000000000 -IsHidden $true Hides all the default built-in SharePoint Online site templates, except those specifically configured to be visible again. EXAMPLE 3 Set-PnPBuiltInSiteTemplateSettings -Template CrisisManagement -IsHidden $true Hides the Crisis Management template. EXAMPLE 4 Set-PnPBuiltInSiteTemplateSettings -Template All -IsHidden $false Shows by the default all the built-in SharePoint Online site templates, except those specifically configured to be hidden. PARAMETERS -Identity Id of the built-in site template to configure. You can hide all templates by specifying an empty ID of \"00000000-0000-0000-0000-000000000000\". Settings specified for a specific template will take precedence over the \"all templates\" setting. You can hide all templates and then selectively make specific templates visible. All site templates are displayed by default. Team site templates Template ID Internal name Event planning 9522236e-6802-4972-a10d-e98dc74b3344 EventPlanning Project management f0a3abf4-afe8-4409-b7f3-484113dee93e ProjectManagement Training and courses 695e52c9-8af7-4bd3-b7a5-46aca95e1c7e TrainingAndCourses Training and development team 64aaa31e-7a1e-4337-b646-0b700aa9a52c TrainingAndDevelopmentTeam Team collaboration 6b96e7b1-035f-430b-92ca-31511c51ca72 TeamCollaboration Retail management e4ec393e-da09-4816-b6b2-195393656edd RetailManagement Communication site templates Template ID Internal name Crisis management 905bb0b4-01e8-4f55-b73c-f07f08aee3a4 CrisisManagement Department 73495f08-0140-499b-8927-dd26a546f26a Department Leadership connection cd4c26b2-b231-419a-8bb4-9b1d9b83aef6 LeadershipConnection Learning central b8ef3134-92a2-4c9d-bca6-c2f14e79fe98 LearningCentral New employee onboarding 2a23fa44-52b0-4814-baba-06fef1ab931e NewEmployeeOnboarding Showcase 89f21161-0892-497a-91cb-5783eeb1f5f2 Showcase Healthcare 5215c092-152f-4912-a12a-7e1efdcc6878 Healthcare Store collaboration 811ecf9a-b33f-44e6-81bd-da77729906dc StoreCollaboration Volunteer center b6e04a41-1535-4313-a856-6f3515d31999 VolunteerCenter Topic a30fef54-a4e5-4beb-a8b5-962c528d753a Topic Blank 665da395-e0f9-4c92-b35c-773d8c292f2d Blank Type: Guid Parameter Sets: ByIdentity Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -Template Internal name of the template. Type: BuiltInSiteTemplates Parameter Sets: ByTemplate Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsHidden Defines if the built in site template should be hidden ($true) or visible ($false). Type: Boolean Parameter Sets: (All) Aliases: cf Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. No changes will be made. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False ## RELATED LINKS [Microsoft 365 Patterns and Practices](https://aka.ms/m365pnp)"
  },
  "cmdlets/Set-PnPClientSidePage.html": {
    "href": "cmdlets/Set-PnPClientSidePage.html",
    "title": "Set-PnPClientSidePage | PnP PowerShell",
    "keywords": "Set-PnPClientSidePage SYNOPSIS This is an alias for Set-PnPPage. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPContentType.html": {
    "href": "cmdlets/Set-PnPContentType.html",
    "title": "Set-PnPContentType | PnP PowerShell",
    "keywords": "Set-PnPContentType SYNOPSIS Updates a content type in a web or a list SYNTAX Set-PnPContentType [-Identity] <ContentTypePipeBind> [-List] <ListPipeBind> [-InSiteHierarchy] <SwitchParameter> [-UpdateChildren] <SwitchParameter> [-Name] <String> [-Description] <String> [-Group] <String> [-Hidden] <String> [-ReadOnly] <String> [-Sealed] <String> [-Connection <PnPConnection>] [-Verbose] DESCRIPTION Allows modification of the settings of a content type in a list or site. EXAMPLES EXAMPLE 1 Set-PnPContentType -Identity \"Project Document\" -UpdateChildren -Name \"Project Documentation\" -Description \"Documentation for projects\" This will update a content type called \"Project Document\" in the current web and rename it to \"Project Documentation\" and change its description to \"Documentation for projects\" EXAMPLE 2 Set-PnPContentType -Identity \"Project Document\" -UpdateChildren -Group \"Custom Content Types\" -Hidden This will update a content type called \"Project Document\" in the current web, make it hidden and change its group to \"Custom Content Types\". EXAMPLE 3 Set-PnPContentType -Identity \"Project Document\" -List \"Projects\" -Name \"Project Documentation\" -Description \"Documentation for projects\" This will update a content type called \"Project Document\" in the list called \"Projects\" in the current web and rename it to \"Project Documentation\" and change its description to \"Documentation for projects\". EXAMPLE 4 Set-PnPContentType -Identity \"Project Document\" -List \"Projects\" -FormClientSideComponentId \"dfed9a30-ec25-4aaf-ae9f-a68f3598f13a\" -FormClientSideComponentProperties '{ \"someKey\": \"some value\" }' This will update a content type called \"Project Document\" in the list called \"Projects\" in the current web and connect an SPFx Form Customizer to it for form customization purposes. It updates the display, new item and edit item forms all at the same time. EXAMPLE 5 Set-PnPContentType -Identity \"Project Document\" -List \"Projects\" -DisplayFormClientSideComponentId \"dfed9a30-ec25-4aaf-ae9f-a68f3598f13a\" -DisplayFormClientSideComponentProperties '{ \"someKey\": \"some value\" }' This will update a content type called \"Project Document\" in the list called \"Projects\" in the current web and connect an SPFx Form Customizer to it for form customization purposes. It only updates the display form, leaving the new item and edit item forms as they are. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name or ID of the content type to update Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The list in which the content type to be updated resides. Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InSiteHierarchy Search site hierarchy for content types Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UpdateChildren Specify if you want to update the child content types Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The updated name of the content type. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The updated description of the content type. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayFormClientSideComponentId The component ID of an SPFx Form Customizer to connect to this content type for usage with display forms. Type: String Parameter Sets: Form Customizers Options Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayFormClientSideComponentProperties The component properties of an SPFx Form Customizer to connect to this content type for usage with display forms. Type: String Parameter Sets: Form Customizers Options Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NewFormClientSideComponentId The component ID of an SPFx Form Customizer to connect to this content type for usage with new item forms. Type: String Parameter Sets: Form Customizers Options Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NewFormClientSideComponentProperties The component properties of an SPFx Form Customizer to connect to this content type for usage with new item forms. Type: String Parameter Sets: Form Customizers Options Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EditFormClientSideComponentId The component ID of an SPFx Form Customizer to connect to this content type for usage with edit item forms. Type: String Parameter Sets: Form Customizers Options Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EditFormClientSideComponentProperties The component properties of an SPFx Form Customizer to connect to this content type for usage with edit item forms. Type: String Parameter Sets: Form Customizers Options Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FormClientSideComponentId Convenience option to set the component ID of an SPFx Form Customizer to connect to this content type for usage with new, edit and display forms. Type: String Parameter Sets: Form Customizers Convenience Options Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FormClientSideComponentProperties Convenience option to set the component properties of an SPFx Form Customizer to connect to this content type for usage with new, edit and display forms. Type: String Parameter Sets: Form Customizers Convenience Options Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The updated group to which the content type belongs. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Hidden Specify if you want to hide the content type. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ReadOnly Specify if you want to set the content type as read only. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Sealed Specify if you want to seal the content type. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while updating the content type. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPContext.html": {
    "href": "cmdlets/Set-PnPContext.html",
    "title": "Set-PnPContext | PnP PowerShell",
    "keywords": "Set-PnPContext SYNOPSIS Set the ClientContext SYNTAX Set-PnPContext -Context <ClientContext> [-Connection <PnPConnection>] DESCRIPTION Sets the Client Context to be used by the cmdlets, which allows easy context switching. See examples for details. EXAMPLES EXAMPLE 1 Connect-PnPOnline -Url $siteAurl -Credentials $credentials $ctx = Get-PnPContext Get-PnPList # returns the lists from site specified with $siteAurl Connect-PnPOnline -Url $siteBurl -Credentials $credentials Get-PnPList # returns the lists from the site specified with $siteBurl Set-PnPContext -Context $ctx # switch back to site A Get-PnPList # returns the lists from site A PARAMETERS -Context The ClientContext to set Type: ClientContext Parameter Sets: (All) Required: True Position: 1 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by specifying -ReturnConnection on Connect-PnPOnline. If not provided, the connection will be retrieved from the current context. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPCopilotAdminLimitedMode.html": {
    "href": "cmdlets/Set-PnPCopilotAdminLimitedMode.html",
    "title": "Set-PnPCopilotAdminLimitedMode | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPCopilotAdminLimitedMode SYNOPSIS Required Permissions Microsoft Graph API: CopilotSettings-LimitedMode.ReadWrite as delegated permission. Application permission not supported. Allows configuring whether Copilot in Teams Meetings should respond to sentiment related prompts. SYNTAX Set-PnPCopilotAdminLimitedMode -IsEnabledForGroup <boolean> -GroupId <String> [-Verbose] [-Connection <PnPConnection>] DESCRIPTION Represents a setting that controls whether Microsoft 365 Copilot in Teams Meetings users can receive responses to sentiment-related prompts. If this setting is enabled, Copilot in Teams Meetings doesn't respond to sentiment-related prompts and questions asked by the user. If the setting is disabled, Copilot in Teams Meetings responds to sentiment-related prompts and questions asked by the user. Copilot in Teams Meetings currently honors this setting. By default, the setting is disabled. EXAMPLES EXAMPLE 1 Set-PnPCopilotAdminLimitedMode -IsEnabledForGroup:$true -GroupId 32b5ad0f-b502-4083-9d01-0f192f15b2b6 This cmdlet will prevent Copilot in Teams Meetings from responding to sentiment related prompts for the specified group. EXAMPLE 2 Set-PnPCopilotAdminLimitedMode -IsEnabledForGroup:$false This cmdlet will allow Copilot in Teams Meetings to respond to sentiment related prompts for everyone. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsEnabledForGroup Enables the user to be in limited mode for Copilot in Teams meetings. When enabled, users in this mode can ask any questions, but Copilot doesn't respond to certain questions related to inferring emotions, behavior, or judgments. When disabled, the current mode for Copilot, it responds to any types of questions grounded to the meeting conversation. The default value is false. Type: Boolean Parameter Sets: (All) Required: True Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -GroupId The ID of a Microsoft Entra group, of which the value of IsEnabledForGroup is applied value for its members. The default value is null. This parameter is optional. If isEnabledForGroup is set to true, the groupId value must be provided for the IsEnabledForGroup to be enabled for the members of the group. Type: String Parameter Sets: (All) Required: False Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Set-PnPDefaultColumnValues.html": {
    "href": "cmdlets/Set-PnPDefaultColumnValues.html",
    "title": "Set-PnPDefaultColumnValues | PnP PowerShell",
    "keywords": "Set-PnPDefaultColumnValues SYNOPSIS Sets default column values for a document library SYNTAX Set-PnPDefaultColumnValues [-List] <ListPipeBind> -Field <FieldPipeBind> -Value <String[]> [-Folder <String>] [-Connection <PnPConnection>] DESCRIPTION Sets default column values for a document library, per folder, or for the root folder if the folder parameter has not been specified. Supports both text and taxonomy fields. EXAMPLES EXAMPLE 1 Set-PnPDefaultColumnValues -List Documents -Field TaxKeyword -Value \"Company|Locations|Stockholm\" Sets a default value for the enterprise keywords field on a library to a term called \"Stockholm\", located in the \"Locations\" term set, which is part of the \"Company\" term group EXAMPLE 2 Set-PnPDefaultColumnValues -List Documents -Field TaxKeyword -Value \"15c4c4e4-4b67-4894-a1d8-de5ff811c791\" Sets a default value for the enterprise keywords field on a library to a term with the id \"15c4c4e4-4b67-4894-a1d8-de5ff811c791\". You need to ensure the term is valid for the field. EXAMPLE 3 Set-PnPDefaultColumnValues -List Documents -Field MyTextField -Value \"DefaultValue\" -Folder \"My folder\" Sets a default value for the MyTextField text field on the folder \"My folder\" in a library to a value of \"DefaultValue\" EXAMPLE 4 Set-PnPDefaultColumnValues -List Documents -Field MyPeopleField -Value \"1;#Foo Bar\" Sets a default value for the MyPeopleField people field on a library to a value of \"Foo Bar\" using the id from the user information list. EXAMPLE 5 $user = New-PnPUser -LoginName foobar@contoso.com Set-PnPDefaultColumnValues -List Documents -Field MyPeopleField -Value \"$($user.Id);#$($user.LoginName)\" Sets a default value for the MyPeopleField people field on a library to a value of \"Foo Bar\" using the id from the user information list. EXAMPLE 6 $user1 = New-PnPUser -LoginName user1@contoso.com $user2 = New-PnPUser -LoginName user2@contoso.com Set-PnPDefaultColumnValues -List Documents -Field MyMultiPeopleField -Value \"$($user1.Id);#$($user1.LoginName)\",\"$($user2.Id);#$($user2.LoginName)\" Sets a default value for the MyMultiPeopleField people field on a library to a value of \"User 1\" and \"User 2\" using the id from the user information list. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Field The internal name, id or a reference to a field Type: FieldPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder A library relative folder path, if not specified it will set the default column values on the root folder of the library ('/') Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Name or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Value A list of values. In case of a text field the values will be concatenated, separated by a semi-colon. In case of a taxonomy field multiple values will added. In case of people field multiple values will be added. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPDefaultContentTypeToList.html": {
    "href": "cmdlets/Set-PnPDefaultContentTypeToList.html",
    "title": "Set-PnPDefaultContentTypeToList | PnP PowerShell",
    "keywords": "Set-PnPDefaultContentTypeToList SYNOPSIS Sets the default content type for a list SYNTAX Set-PnPDefaultContentTypeToList -List <ListPipeBind> -ContentType <ContentTypePipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to modify the default content type for a list. EXAMPLES EXAMPLE 1 Set-PnPDefaultContentTypeToList -List \"Project Documents\" -ContentType \"Project\" This will set the Project content type (which has already been added to a list) as the default content type PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The content type object that needs to be set as the default content type on the list. Content Type needs to be present on the list. Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The name of a list, an ID or the actual list object to update Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPDefaultPageLayout.html": {
    "href": "cmdlets/Set-PnPDefaultPageLayout.html",
    "title": "Set-PnPDefaultPageLayout | PnP PowerShell",
    "keywords": "Set-PnPDefaultPageLayout SYNOPSIS Sets a specific page layout to be the default page layout for a publishing site SYNTAX TITLE Set-PnPDefaultPageLayout -Title <String> [-Connection <PnPConnection>] INHERIT Set-PnPDefaultPageLayout [-InheritFromParentSite] [-Connection <PnPConnection>] DESCRIPTION Allows to set the default page layout for a publishing site. EXAMPLES EXAMPLE 1 Set-PnPDefaultPageLayout -Title projectpage.aspx Sets projectpage.aspx to be the default page layout for the current web EXAMPLE 2 Set-PnPDefaultPageLayout -Title test/testpage.aspx Sets a page layout in a folder in the Master Page & Page Layout gallery, such as _catalog/masterpage/test/testpage.aspx, to be the default page layout for the current web EXAMPLE 3 Set-PnPDefaultPageLayout -InheritFromParentSite Sets the default page layout to be inherited from the parent site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InheritFromParentSite Set the default page layout to be inherited from the parent site. Type: SwitchParameter Parameter Sets: INHERIT Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Title of the page layout Type: String Parameter Sets: TITLE Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPDisableSpacesActivation.html": {
    "href": "cmdlets/Set-PnPDisableSpacesActivation.html",
    "title": "Set-PnPDisableSpacesActivation | PnP PowerShell",
    "keywords": "Set-PnPDisableSpacesActivation SYNOPSIS Sets if SharePoint Spaces should be disabled. SYNTAX Set-PnPDisableSpacesActivation -Disable <SwitchParameter> [-Scope <String>] [-Identity <SitePipeBind>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet disables or enables SharePoint Spaces for a specific site collection or entire SharePoint tenant. EXAMPLES EXAMPLE 1 Set-PnPDisableSpacesActivation -Disable:$true -Scope Tenant Disables SharePoint Spaces on the entire tenant. EXAMPLE 2 Set-PnPDisableSpacesActivation -Disable -Scope Site -Identity \"https://contoso.sharepoint.com\" Disables SharePoint Spaces on https://contoso.sharepoint.com EXAMPLE 3 Set-PnPDisableSpacesActivation -Disable:$false -Scope Site -Identity \"https://contoso.sharepoint.com\" Enables SharePoint Spaces on https://contoso.sharepoint.com PARAMETERS -Disable Sets if SharePoint Spaces should be enabled or disabled. Type: SwitchParameter Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the URL of the SharePoint Site on which SharePoint Spaces should be disabled. Must be provided if Scope is set to Site. Type: SPOSitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -Scope Defines if SharePoint Spaces should be disabled for the entire tenant or for a specific site collection. Type: DisableSpacesScope Parameter Sets: (All) Accepted values: Tenant, Site Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPDocumentSetField.html": {
    "href": "cmdlets/Set-PnPDocumentSetField.html",
    "title": "Set-PnPDocumentSetField | PnP PowerShell",
    "keywords": "Set-PnPDocumentSetField SYNOPSIS Sets a site column from the available content types to a document set SYNTAX Set-PnPDocumentSetField -DocumentSet <DocumentSetPipeBind> -Field <FieldPipeBind> [-SetSharedField] [-SetWelcomePageField] [-RemoveSharedField] [-RemoveWelcomePageField] [-Connection <PnPConnection>] DESCRIPTION Allows to set a site column from the available content types to a document set. EXAMPLES EXAMPLE 1 Set-PnPDocumentSetField -Field \"Test Field\" -DocumentSet \"Test Document Set\" -SetSharedField -SetWelcomePageField This will set the field, available in one of the available content types, as a Shared Field and as a Welcome Page Field. EXAMPLE 2 Set-PnPDocumentSetField -Field \"Test Field\" -DocumentSet \"Test Document Set\" -RemoveSharedField -RemoveWelcomePageField This will remove the field, available in one of the available content types, as a Shared Field and as a Welcome Page Field. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DocumentSet The document set in which to set the field. Either specify a name, a document set template object, an id, or a content type object Type: DocumentSetPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Field The field to set. The field needs to be available in one of the available content types. Either specify a name, an id or a field object Type: FieldPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveSharedField Removes the field as a Shared Field Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveWelcomePageField Removes the field as a Welcome Page Field Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SetSharedField Set the field as a Shared Field Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SetWelcomePageField Set the field as a Welcome Page field Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPEntraIDAppSitePermission.html": {
    "href": "cmdlets/Set-PnPEntraIDAppSitePermission.html",
    "title": "Set-PnPEntraIDAppSitePermission | PnP PowerShell",
    "keywords": "Set-PnPEntraIDAppSitePermission SYNOPSIS This is an alias for Set-PnPAzureADAppSitePermission. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPEntraIDGroup.html": {
    "href": "cmdlets/Set-PnPEntraIDGroup.html",
    "title": "Set-PnPEntraIDGroup | PnP PowerShell",
    "keywords": "Set-PnPEntraIDGroup SYNOPSIS This is an alias for Set-PnPAzureADGroup. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPField.html": {
    "href": "cmdlets/Set-PnPField.html",
    "title": "Set-PnPField | PnP PowerShell",
    "keywords": "Set-PnPField SYNOPSIS Changes one or more properties of a field in a specific list or for the whole site SYNTAX Set-PnPField [-List <ListPipeBind>] [-Identity <FieldPipeBind>] [-Values <Hashtable>] [-ShowInFiltersPane <ShowInFiltersPaneStatus>] [-UpdateExistingLists] [-Connection <PnPConnection>] DESCRIPTION Allows to modify a field in a specific list or for the whole site. EXAMPLES EXAMPLE 1 Set-PnPField -Identity AssignedTo -Values @{JSLink=\"customrendering.js\";Group=\"My fields\"} Updates the AssignedTo field on the current web to use customrendering.js for the JSLink and sets the group name the field is categorized in to \"My Fields\". Lists that are already using the AssignedTo field will not be updated. EXAMPLE 2 Set-PnPField -Identity AssignedTo -Values @{JSLink=\"customrendering.js\";Group=\"My fields\"} -UpdateExistingLists Updates the AssignedTo field on the current web to use customrendering.js for the JSLink and sets the group name the field is categorized in to \"My Fields\". Lists that are already using the AssignedTo field will also be updated. EXAMPLE 3 Set-PnPField -List \"Tasks\" -Identity \"AssignedTo\" -Values @{JSLink=\"customrendering.js\"} Updates the AssignedTo field on the Tasks list to use customrendering.js for the JSLink PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The field object, internal field name (case sensitive) or field id to update Type: FieldPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The list object, name or id where to update the field. If omitted the field will be updated on the web. Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -UpdateExistingLists If provided, the field will be updated on existing lists that use it as well. If not provided or set to $false, existing lists using the field will remain unchanged but new lists will get the updated field. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Values Hashtable of properties to update on the field. Use the syntax @{property1=\"value\";property2=\"value\"}. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowInFiltersPane Allows configuring a field to either always be shown (Pinned), never be shown (Removed) or have SharePoint define if it should be shown (Auto = default). Type: Commands.Enums.ShowInFiltersPaneStatus Parameter Sets: (All) Accepted values: Auto, Removed, Pinned Required: False Position: Named Default value: Auto Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPFileCheckedIn.html": {
    "href": "cmdlets/Set-PnPFileCheckedIn.html",
    "title": "Set-PnPFileCheckedIn | PnP PowerShell",
    "keywords": "Set-PnPFileCheckedIn SYNOPSIS Checks in a file. SYNTAX Set-PnPFileCheckedIn -Url <String> [-CheckInType <CheckInType>] [-Comment <String>] [-Approve] [-Connection <PnPConnection>] DESCRIPTION This cmdlet checks in a single file, optionally with a comment. EXAMPLES EXAMPLE 1 Set-PnPFileCheckedIn -Url \"/Documents/Contract.docx\" Checks in the file \"Contract.docx\" in the \"Documents\" library located in the root site collection EXAMPLE 2 Set-PnPFileCheckedIn -Url \"/sites/news/Documents/Article.docx\" Checks in the file \"Article.docx\" in the \"Documents\" library located in the site collection called news EXAMPLE 3 Set-PnPFileCheckedIn -Url \"/Documents/Contract.docx\" -CheckInType MinorCheckIn -Comment \"Smaller changes\" Checks in the file \"Contract.docx\" in the \"Documents\" library as a minor version and adds the check in comment \"Smaller changes\" PARAMETERS -Approve Approves the file. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CheckInType The check in type to use. Defaults to MajorCheckIn. Type: CheckInType Parameter Sets: (All) Accepted values: MinorCheckIn, MajorCheckIn, OverwriteCheckIn Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Comment The check in comment. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The server relative url of the file to check in. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPFileCheckedOut.html": {
    "href": "cmdlets/Set-PnPFileCheckedOut.html",
    "title": "Set-PnPFileCheckedOut | PnP PowerShell",
    "keywords": "Set-PnPFileCheckedOut SYNOPSIS Checks out a file SYNTAX Set-PnPFileCheckedOut [-Url] <String> [-Connection <PnPConnection>] DESCRIPTION Allows to check out a file. EXAMPLES EXAMPLE 1 Set-PnPFileCheckedOut -Url \"/sites/testsite/subsite/Documents/Contract.docx\" Checks out the file \"Contract.docx\" in the \"Documents\" library. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The server relative url of the file to check out Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPFolderPermission.html": {
    "href": "cmdlets/Set-PnPFolderPermission.html",
    "title": "Set-PnPFolderPermission | PnP PowerShell",
    "keywords": "Set-PnPFolderPermission SYNOPSIS Sets or clears permissions on folders within SharePoint Online. SYNTAX User (Default) Set-PnPFolderPermission [-List] <ListPipeBind> -Identity <FolderPipeBind> -User <String> [-AddRole <String>] [-RemoveRole <String>] [-ClearExisting] [-SystemUpdate] [-Connection <PnPConnection>] Group Set-PnPFolderPermission [-List] <ListPipeBind> -Identity <FolderPipeBind> -Group <GroupPipeBind> [-AddRole <String>] [-RemoveRole <String>] [-ClearExisting] [-SystemUpdate] [-Connection <PnPConnection>] Inherit Set-PnPFolderPermission [-List] <ListPipeBind> -Identity <FolderPipeBind> [-InheritPermissions] [-SystemUpdate] [-Connection <PnPConnection>] DESCRIPTION Sets or clears permissions on folders within SharePoint Online. When adding permissions, if you don't use -InheritPermissions, the library will get unique permissions that initially match those of its parent. Use Get-PnPRoleDefinition to retrieve all available roles you can add or remove using this cmdlet. EXAMPLES EXAMPLE 1 Set-PnPFolderPermission -List 'Shared Documents' -Identity 'Shared Documents/Folder' -User 'user@contoso.com' -AddRole 'Contribute' Adds the 'Contribute' permission to the user 'user@contoso.com' for the folder named 'Folder' located in the root of the library 'Shared Documents'. EXAMPLE 2 Set-PnPFolderPermission -List 'AnotherDocumentLibrary' -Identity 'AnotherDocumentLibrary/Folder/Subfolder' -User 'user@contoso.com' -RemoveRole 'Contribute' Removes the 'Contribute' permission from the user 'user@contoso.com' for the folder named 'Subfolder' located in the folder 'Folder' which is located in the root of the library 'AnotherDocumentLibrary'. EXAMPLE 3 Set-PnPFolderPermission -List 'Shared Documents' -Identity 'Shared Documents/Folder' -User 'user@contoso.com' -AddRole 'Contribute' -ClearExisting Adds the 'Contribute' permission to the user 'user@contoso.com' for the folder named 'Folder' located in the root of the library 'Shared Documents' and removes all other permissions. EXAMPLE 4 Get-PnPFolder -Url 'Shared Documents/Folder' | Set-PnPFolderPermission -List 'Shared Documents' -InheritPermissions Resets permissions for the folder named 'Folder' located in the root of the library 'Shared Documents' to inherit permissions from the library 'Shared Documents'. PARAMETERS -AddRole The role that must be assigned to the group or user. Type: String Parameter Sets: User, Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClearExisting Clears all existing permissions. Type: SwitchParameter Parameter Sets: User, Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The ID, name or instance of a SharePoint Group to add or remove permissions to/from. Type: GroupPipeBind Parameter Sets: Group Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the folder, the server relative URL to the folder or actual Folder object. Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -InheritPermissions Inherit permissions from the parent, removing unique permissions. Type: SwitchParameter Parameter Sets: Inherit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list the folder is part of. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveRole The role that must be removed from the group or user. Type: String Parameter Sets: User, Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SystemUpdate Update the folder permissions without creating a new version or triggering Microsoft Power Automate Flow. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User A valid login name of a user (e.g. john@doe.com) or an Entra ID Group (ADGroup). Type: String Parameter Sets: User Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPFooter.html": {
    "href": "cmdlets/Set-PnPFooter.html",
    "title": "Set-PnPFooter | PnP PowerShell",
    "keywords": "Set-PnPFooter SYNOPSIS Configures the footer of the current web. SYNTAX Set-PnPFooter [-Enabled] [-Layout <FooterLayoutType>] [-BackgroundTheme <FooterVariantThemeType>] [-Title <String>] [-LogoUrl <String>] [-Connection <PnPConnection>] DESCRIPTION Allows the footer to be enabled or disabled and fine tuned in the current web. For modifying the navigation links shown in the footer, use Add-PnPNavigationNode -Location Footer. EXAMPLES EXAMPLE 1 Set-PnPFooter -Enabled:$true Enables the footer to be shown on the current web. EXAMPLE 2 Set-PnPFooter -Enabled:$true -Layout Extended -BackgroundTheme Neutral Enables the footer to be shown on the current web with the extended layout using a neutral background. EXAMPLE 3 Set-PnPFooter -Title \"Contoso Inc.\" -LogoUrl \"/sites/communication/Shared Documents/logo.png\" Sets the title and logo shown in the footer. EXAMPLE 4 Set-PnPFooter -LogoUrl \"\" Removes the current logo shown in the footer. PARAMETERS -BackgroundTheme Defines the background emphasis of the content in the footer. Type: FooterVariantThemeType Parameter Sets: (All) Accepted values: Strong, Neutral, Soft, None Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Enabled Indicates if the footer should be shown on the current web ($true) or if it should be hidden ($false). Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Layout Defines how the footer should look like. Type: FooterLayoutType Parameter Sets: (All) Accepted values: Simple, Extended, Stacked Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LogoUrl Defines the server relative URL to the logo to be displayed in the footer. Provide an empty string to remove the current logo. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Defines the title displayed in the footer. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPGraphSubscription.html": {
    "href": "cmdlets/Set-PnPGraphSubscription.html",
    "title": "Set-PnPGraphSubscription | PnP PowerShell",
    "keywords": "Set-PnPGraphSubscription SYNOPSIS Updates an existing Microsoft Graph subscription. Required Azure Active Directory application permission depends on the resource the subscription exists on, see https://learn.microsoft.com/graph/api/subscription-delete#permissions. SYNTAX Set-PnPGraphSubscription -Identity <GraphSubscriptionPipeBind> -ExpirationDate <DateTime> [-Connection <PnPConnection>] DESCRIPTION Allows to update an existing Microsoft Graph subscription. EXAMPLES EXAMPLE 1 Set-PnPGraphSubscription -Identity bc204397-1128-4911-9d70-1d8bceee39da -ExpirationDate \"2020-11-22T18:23:45.9356913Z\" Updates the Microsoft Graph subscription with the id 'bc204397-1128-4911-9d70-1d8bceee39da' to expire at the mentioned date. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExpirationDate Date and time to set the expiration to. Take notice of the maximum allowed lifetime of the subscription endpoints as documented at https://learn.microsoft.com/graph/api/resources/subscription#maximum-length-of-subscription-per-resource-type Type: DateTime Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The unique id or an instance of a Microsoft Graph Subscription. Type: GraphSubscriptionPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPGroup.html": {
    "href": "cmdlets/Set-PnPGroup.html",
    "title": "Set-PnPGroup | PnP PowerShell",
    "keywords": "Set-PnPGroup SYNOPSIS Updates a group. SYNTAX Set-PnPGroup -Identity <GroupPipeBind> [-SetAssociatedGroup <AssociatedGroupType>] [-AddRole <String>] [-RemoveRole <String>] [-Title <String>] [-Owner <String>] [-Description <String>] [-AllowRequestToJoinLeave <Boolean>] [-AutoAcceptRequestToJoinLeave <Boolean>] [-AllowMembersEditMembership <Boolean>] [-OnlyAllowMembersViewMembership <Boolean>] [-RequestToJoinEmail <String>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet updates the roles and settings of the specified group. EXAMPLES EXAMPLE 1 Set-PnPGroup -Identity 'My Site Members' -SetAssociatedGroup Members Sets the SharePoint group with the name 'My Site Members' as the associated members group. EXAMPLE 2 Set-PnPGroup -Identity 'My Site Members' -Owner 'site owners' Sets the SharePoint group with the name 'site owners' as the owner of the SharePoint group with the name 'My Site Members'. PARAMETERS -AddRole Name of the role (permission level) to add to the SharePoint group. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowMembersEditMembership Specifies whether group members can modify membership in the group. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowRequestToJoinLeave Specifies whether users are allowed to request membership in the group or to request to leave the group. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AutoAcceptRequestToJoinLeave Specifies whether users are automatically added or removed when they make a request. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the group. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity A group object, an ID or a name of a group. Type: GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OnlyAllowMembersViewMembership Specifies whether only group members are allowed to view the list of members in the group. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner The owner of the group. It can be a user or another group. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveRole Name of the role (permission level) to remove from the SharePoint group. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequestToJoinEmail The e-mail address to which membership requests are sent. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SetAssociatedGroup One of the associated group types (Visitors, Members, Owners). Type: AssociatedGroupType Parameter Sets: (All) Accepted values: None, Visitors, Members, Owners Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the group. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPGroupPermissions.html": {
    "href": "cmdlets/Set-PnPGroupPermissions.html",
    "title": "Set-PnPGroupPermissions | PnP PowerShell",
    "keywords": "Set-PnPGroupPermissions SYNOPSIS Adds and/or removes permissions of a specific SharePoint group. SYNTAX Set-PnPGroupPermissions [-Identity] <GroupPipeBind> [-List <ListPipeBind>] [-AddRole <String[]>] [-RemoveRole <String[]>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet adds or removes roles (permissions) of a specified group on a site or list level. EXAMPLES EXAMPLE 1 Set-PnPGroupPermissions -Identity 'My Site Members' -AddRole Contribute Adds the 'Contribute' permission to the SharePoint group with the name 'My Site Members'. EXAMPLE 2 Set-PnPGroupPermissions -Identity 'My Site Members' -RemoveRole 'Full Control' -AddRole 'Read' Removes the 'Full Control' from and adds the 'Read' permissions to the SharePoint group with the name 'My Site Members'. EXAMPLE 3 Set-PnPGroupPermissions -Identity 'My Site Members' -AddRole @('Contribute', 'Design') Adds the 'Contribute' and 'Design' permissions to the SharePoint group with the name 'My Site Members'. EXAMPLE 4 Set-PnPGroupPermissions -Identity 'My Site Members' -RemoveRole @('Contribute', 'Design') Removes the 'Contribute' and 'Design' permissions from the SharePoint group with the name 'My Site Members'. EXAMPLE 5 Set-PnPGroupPermissions -Identity 'My Site Members' -List 'MyList' -RemoveRole @('Contribute') Removes the 'Contribute' permissions from the list 'MyList' for the group with the name 'My Site Members'. PARAMETERS -AddRole Name of the role (permission level) to add to the SharePoint group. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity A group object, an ID or a name of a group. Type: GroupPipeBind Parameter Sets: (All) Aliases: Name Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List Specify the Id, title or an instance of the list where permissions should be updated. Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveRole Name of the role (permission level) to remove from the SharePoint group. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPHideDefaultThemes.html": {
    "href": "cmdlets/Set-PnPHideDefaultThemes.html",
    "title": "Set-PnPHideDefaultThemes | PnP PowerShell",
    "keywords": "Set-PnPHideDefaultThemes SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Defines if the default out of the box themes should be visible to users or not. SYNTAX Set-PnPHideDefaultThemes -HideDefaultThemes <Boolean> [-Connection <PnPConnection>] DESCRIPTION Use this cmdlet to hide or show the default themes to users as an option to change the look of their site. You must be a SharePoint Online Administrator to run the cmdlet. EXAMPLES EXAMPLE 1 Set-PnPHideDefaultThemes -HideDefaultThemes $true The out of the box themes will be hidden. EXAMPLE 2 Set-PnPHideDefaultThemes -HideDefaultThemes $false The out of the box themes will be shown. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideDefaultThemes Defines if the default themes should be visible or hidden. Type: Boolean Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPHomePage.html": {
    "href": "cmdlets/Set-PnPHomePage.html",
    "title": "Set-PnPHomePage | PnP PowerShell",
    "keywords": "Set-PnPHomePage SYNOPSIS Sets the home page of the current web. SYNTAX Set-PnPHomePage [-RootFolderRelativeUrl] <String> [-Connection <PnPConnection>] [-Verbose] DESCRIPTION Allows to set the home page of the current site. EXAMPLES EXAMPLE 1 Set-PnPHomePage -RootFolderRelativeUrl SitePages/Home.aspx Sets the home page to the home.aspx file which resides in the SitePages library. EXAMPLE 2 Set-PnPHomePage -RootFolderRelativeUrl Lists/Sample/AllItems.aspx Sets the home page to be the Sample list. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RootFolderRelativeUrl The root folder relative url of the homepage, e.g. 'sitepages/home.aspx'. Notice that the url is relative to the root folder of the web. Type: String Parameter Sets: (All) Aliases: Path Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPHomeSite.html": {
    "href": "cmdlets/Set-PnPHomeSite.html",
    "title": "Set-PnPHomeSite | PnP PowerShell",
    "keywords": "Set-PnPHomeSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Sets the home site for your tenant. The home site needs to be a communication site. SYNTAX Set-PnPHomeSite -HomeSiteUrl <String> [VivaConnectionsDefaultStart <SwitchParameter>] [-Force <SwitchParameter>] [-DraftMode <SwitchParameter>] [-Connection <PnPConnection>] DESCRIPTION Allows to set the home site of the current tenant. EXAMPLES EXAMPLE 1 Set-PnPHomeSite -HomeSiteUrl \"https://yourtenant.sharepoint.com/sites/myhome\" Sets the home site to the provided site collection url. EXAMPLE 2 Set-PnPHomeSite -HomeSiteUrl \"https://yourtenant.sharepoint.com/sites/myhome\" -VivaConnectionsDefaultStart:$true Sets the home site to the provided site collection url and keeps the Viva Connections landing experience to the SharePoint home site. EXAMPLE 3 Set-PnPHomeSite -HomeSiteUrl \"https://yourtenant.sharepoint.com/sites/myhome\" -VivaConnectionsDefaultStart:$true -DraftMode:$true Sets the home site to the provided site collection url and keeps the Viva Connections landing experience to the SharePoint home site but it will be in draft mode. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HomeSiteUrl The url of the site to set as the home site. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -VivaConnectionsDefaultStart When set to $true, the VivaConnectionsDefaultStart parameter will keep the Viva Connections landing experience to the SharePoint home site. If set to $false the Viva Connections home experience will be used. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: true Accept pipeline input: False Accept wildcard characters: False -DraftMode When set to $true, the DraftMode parameter will keep the Viva Connections landing experience to the SharePoint home site in draft mode. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: true Accept pipeline input: False Accept wildcard characters: False -Force Use the -Force flag to bypass the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: true Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Set up a home site for your organization Customize and edit the Viva Connections home experience"
  },
  "cmdlets/Set-PnPHubSite.html": {
    "href": "cmdlets/Set-PnPHubSite.html",
    "title": "Set-PnPHubSite | PnP PowerShell",
    "keywords": "Set-PnPHubSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Sets hub site properties. SYNTAX Set-PnPHubSite [-Identity] <HubSitePipeBind> [-Title <String>] [-LogoUrl <String>] [-Description <String>] [-SiteDesignId <Guid>] [-HideNameInNavigation] [-RequiresJoinApproval] [-EnablePermissionsSync] [-ParentHubSiteId <Guid>] [-Connection <PnPConnection>] DESCRIPTION Allows configuring a hub site. EXAMPLES EXAMPLE 1 Set-PnPHubSite -Identity \"https://tenant.sharepoint.com/sites/myhubsite\" -Title \"My New Title\" Sets the title of the hub site. EXAMPLE 2 Set-PnPHubSite -Identity \"https://tenant.sharepoint.com/sites/myhubsite\" -Description \"My updated description\" Sets the description of the hub site. EXAMPLE 3 Set-PnPHubSite -Identity \"https://tenant.sharepoint.com/sites/myhubsite\" -SiteDesignId df8a3ef1-9603-44c4-abd9-541aea2fa745 Sets the site design which should be applied to sites joining the hub site. EXAMPLE 4 Set-PnPHubSite -Identity \"https://tenant.sharepoint.com/sites/myhubsite\" -LogoUrl \"https://tenant.sharepoint.com/SiteAssets/Logo.png\" Sets the logo of the hub site. EXAMPLE 5 Set-PnPHubSite -Identity \"https://tenant.sharepoint.com/sites/myhubsite\" -EnablePermissionsSync Syncs hub permissions to associated sites. EXAMPLE 6 Set-PnPHubSite -Identity \"https://tenant.sharepoint.com/sites/myhubsite\" -RequiresJoinApproval:$false Disables the join approval requirement. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Description of the hub site collection. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideNameInNavigation Hides the name of the hub site in the navigation. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The URL of the hub site collection. Type: HubSitePipeBind Parameter Sets: (All) Aliases: HubSite Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -LogoUrl The logoUrl of the Hub site. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequiresJoinApproval Requires new associated sites to obtain approval to join the hub site. Note that if set to $true, sites will be able to join the hub only if there is an active approval flow available. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteDesignId GUID of the SharePoint Site Design which should be applied when a site joins the hub site. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the hub site collection. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnablePermissionsSync Sync hub permissions to associated sites. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ParentHubSiteId The ID of the parent hub site. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPImageListItemColumn.html": {
    "href": "cmdlets/Set-PnPImageListItemColumn.html",
    "title": "Set-PnPImageListItemColumn | PnP PowerShell",
    "keywords": "Set-PnPImageListItemColumn SYNOPSIS Updates the image column value of a list item. SYNTAX Upload an image and set it as thumbnail Set-PnPImageListItemColumn [-List <ListPipeBind>] -Identity <ListItemPipeBind> [-Field <FieldPipeBind>] [-Path <string>] [-UpdateType <UpdateType>] [-Connection <PnPConnection>] Use an already uploaded image and set it as thumbnail Set-PnPImageListItemColumn [-List <ListPipeBind>] -Identity <ListItemPipeBind> [-Field <FieldPipeBind>] [-ServerRelativePath <string>] [-UpdateType <UpdateType>] [-Connection <PnPConnection>] DESCRIPTION Allows setting the Image/Thumbnail column value of a list item. EXAMPLES EXAMPLE 1 Set-PnPImageListItemColumn -List \"Demo List\" -Identity 1 -Field \"Thumbnail\" -ServerRelativePath \"/sites/contoso/SiteAssets/test.png\" Sets the image/thumbnail field value in the list item with ID 1 in the \"Demo List\". Notice, use the internal names of fields. EXAMPLE 2 Set-PnPImageListItemColumn -List \"Demo List\" -Identity 1 -Field \"Thumbnail\" -Path sample.png Sets the image/thumbnail field value in the list item with ID 1 in the \"Demo List\". Notice, use the internal names of fields. Here, we upload the file to a folder in Site Assets library. In this scenario, ensure that the user has contribute rights to the Site Assets library. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the list item, or actual ListItem object. Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Field The ID, Title or Internal name of the field. Type: FieldPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ServerRelativePath Use the server relative path of an existing image in your SharePoint document library. Type: String Parameter Sets: (ParameterSet_ASServerRelativeUrl) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Use the path from the local file system. Type: String Parameter Sets: (ParameterSet_ASPath) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UpdateType Specifies the update type to use when updating the listitem. Possible values are \"Update\", \"SystemUpdate\", \"UpdateOverwriteVersion\". Update: Sets field values and creates a new version if versioning is enabled for the list SystemUpdate: Sets field values and does not create a new version. Any events on the list will trigger. UpdateOverwriteVersion: Sets field values and does not create a new version. No events on the list will trigger. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPInPlaceRecordsManagement.html": {
    "href": "cmdlets/Set-PnPInPlaceRecordsManagement.html",
    "title": "Set-PnPInPlaceRecordsManagement | PnP PowerShell",
    "keywords": "Set-PnPInPlaceRecordsManagement SYNOPSIS Activates or deactivates in place records management feature. SYNTAX Set-PnPInPlaceRecordsManagement -Enabled <Boolean> [-Connection <PnPConnection>] DESCRIPTION Activates or deactivates in place records management feature in the site collection. EXAMPLES EXAMPLE 1 Set-PnPInPlaceRecordsManagement -Enabled $true Activates in place records management. EXAMPLE 2 Set-PnPInPlaceRecordsManagement -Enabled $false Deactivates in place records management. PARAMETERS -Enabled Specifies whether in place records management should be enabled. Type: Boolean Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPIndexedProperties.html": {
    "href": "cmdlets/Set-PnPIndexedProperties.html",
    "title": "Set-PnPIndexedProperties | PnP PowerShell",
    "keywords": "Set-PnPIndexedProperties SYNOPSIS Marks values of the propertybag to be indexed by search. SYNTAX Set-PnPIndexedProperties -Keys <System.Collections.Generic.List`1[System.String]> [-Connection <PnPConnection>] DESCRIPTION Marks values of the propertybag to be indexed by search. Notice that this will overwrite the existing flags, i.e. only the properties you define with the cmdlet will be indexed. EXAMPLES EXAMPLE 1 Set-PnPIndexedProperties -Keys SiteClosed, PolicyName Example 1 overwrites the existing properties from the index and sets SiteClosed and PolicyName properties to be indexed. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Keys Property keys to be indexed. Type: System.Collections.Generic.List`1[System.String] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPKnowledgeHubSite.html": {
    "href": "cmdlets/Set-PnPKnowledgeHubSite.html",
    "title": "Set-PnPKnowledgeHubSite | PnP PowerShell",
    "keywords": "Set-PnPKnowledgeHubSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Sets the Knowledge Hub Site for your tenant. SYNTAX Set-PnPKnowledgeHubSite -KnowledgeHubSiteUrl <String> [-Connection <PnPConnection>] DESCRIPTION Allows to set Knowledge Hub Site of the current tenant. EXAMPLES EXAMPLE 1 Set-PnPKnowledgeHubSite -KnowledgeHubSiteUrl \"https://yoursite.sharepoint.com/sites/knowledge\" Sets the Knowledge Hub Site for your tenant. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -KnowledgeHubSiteUrl Specifies the URL of the site to be set as the Knowledge Hub Site. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPList.html": {
    "href": "cmdlets/Set-PnPList.html",
    "title": "Set-PnPList | PnP PowerShell",
    "keywords": "Set-PnPList SYNOPSIS Updates list settings. SYNTAX Set-PnPList -Identity <ListPipeBind> [-EnableContentTypes <Boolean>] [-BreakRoleInheritance] [-ResetRoleInheritance] [-CopyRoleAssignments] [-ClearSubScopes] [-Title <String>] [-Description <String>] [-Hidden <Boolean>] [-AllowDeletion <Boolean>] [-ForceCheckout <Boolean>] [-ListExperience <ListExperience>] [-EnableAttachments <Boolean>] [-EnableFolderCreation <Boolean>] [-EnableVersioning <Boolean>] [-EnableMinorVersions <Boolean>] [-MajorVersions <UInt32>] [-MinorVersions <UInt32>] [-EnableModeration <Boolean>] [-DraftVersionVisibility <DraftVisibilityType>] [-ReadSecurity <ListReadSecurity>] [-WriteSecurity <ListWriteSecurity>] [-NoCrawl] [-ExemptFromBlockDownloadOfNonViewableFiles <Boolean>] [-DisableGridEditing <Boolean>] [-DisableCommenting <Boolean>] [-EnableAutoExpirationVersionTrim <Boolean>] [-ExpireVersionsAfterDays <UInt32>] [-DefaultSensitivityLabelForLibrary <SensitivityLabelPipeBind>] [-Path <String>] [-OpenDocumentsMode <DocumentLibraryOpenDocumentsInMode>] [-Color <ListColor>] [-Icon <ListIcon>] [-Connection <PnPConnection>] DESCRIPTION Allows the configuration of a specific SharePoint Online list to be set. EXAMPLES EXAMPLE 1 Set-PnPList -Identity \"Demo List\" -EnableContentTypes $true Switches the Enable Content Type switch on the list. EXAMPLE 2 Set-PnPList -Identity \"Demo List\" -Hidden $true Hides the list from the SharePoint UI. EXAMPLE 3 Set-PnPList -Identity \"Demo List\" -EnableVersioning $true Turns on major versions on a list. EXAMPLE 4 Set-PnPList -Identity \"Demo List\" -EnableVersioning $true -MajorVersions 20 Turns on major versions on a list and sets the maximum number of major versions to keep at 20. EXAMPLE 5 Set-PnPList -Identity \"Demo Library\" -EnableVersioning $true -EnableMinorVersions $true -MajorVersions 20 -MinorVersions 5 Turns on major versions on a document library, sets the maximum number of major versions to keep at 20, and sets the maximum number of minor versions to 5. EXAMPLE 6 Set-PnPList -Identity \"Demo List\" -EnableAttachments $true Turns on attachments for a list. EXAMPLE 7 Set-PnPList -Identity \"Demo List\" -Title \"Demo List 2\" -Path \"Lists/DemoList2\" Renames a list, including its URL. EXAMPLE 8 Set-PnPList -Identity \"Demo List\" -EnableAutoExpirationVersionTrim $true Enables AutoExpiration file version trim mode on a document library. EXAMPLE 9 Set-PnPList -Identity \"Demo List\" -EnableAutoExpirationVersionTrim $false -ExpireVersionsAfterDays 30 -MajorVersions 500 Enables ExpireAfter file version trim mode on a document library. MinorVersions parameter is also needed when minor version is enabled. EXAMPLE 10 Set-PnPList -Identity \"Demo List\" -EnableAutoExpirationVersionTrim $false -ExpireVersionsAfterDays 0 -MajorVersions 500 Enables NoExpiration file version trim mode on a document library. MinorVersions parameter is also needed when minor version is enabled. EXAMPLE 11 Set-PnPList -Identity \"Demo List\" -DefaultSensitivityLabelForLibrary \"Confidential\" Sets the default sensitivity label for a document library to Confidential. EXAMPLE 12 Set-PnPList -Identity \"Demo List\" -Color Green -Icon \"Plane\" Changes the icon of the list to a plane, and the background color of the icon to green. PARAMETERS -BreakRoleInheritance If used, the security inheritance is broken for this list from its parent, the web in which it resides. Permissions can be added using Set-PnPListPermission. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResetRoleInheritance If used, the security inheritance is reset for this list, meaning it will not copy the permissions from its parent but will start with an empty list of permissions. Permissions can be added using Set-PnPListPermission. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClearSubScopes If used, the unique permissions are cleared from child objects and they can inherit role assignments from this object. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CopyRoleAssignments If used, the role assignments are copied from the parent web. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the list. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultSensitivityLabelForLibrary The instance, Id or name of the sensitivity label to set as the default for the library. If $null is provided, the default label will be removed. Type: SensitivityLabelPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableAttachments Enable or disable attachments. Set to $true to enable, $false to disable. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableContentTypes Set to $true to enable content types, set to $false to disable content types. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableFolderCreation Enable or disable folder creation. Set to $true to enable, $false to disable. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableMinorVersions Enable or disable minor versions versioning. Set to $true to enable, $false to disable. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableModeration Enable or disable whether content approval is enabled for the list. Set to $true to enable, $false to disable. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DraftVersionVisibility Specify which users should be able to view drafts in this list. Type: DraftVisibilityType Parameter Sets: (All) Accepted values: Approver, Author, Reader Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableVersioning Enable or disable versioning. Set to $true to enable, $false to disable. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ForceCheckout Enable or disable force checkout. Set to $true to enable, $false to disable. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Hidden Hide the list from the SharePoint UI. Set to $true to hide, $false to show. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowDeletion Allow or prevent deletion of the list from the SharePoint UI. Set to $true to allow, $false to prevent. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListExperience Set the list experience: Auto, NewExperience or ClassicExperience Type: ListExperience Parameter Sets: (All) Accepted values: Auto, NewExperience, ClassicExperience Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MajorVersions Maximum major versions to keep. Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MinorVersions Maximum major versions for which to keep minor versions. Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OpenDocumentsMode Allows configuring the \"Opening Documents in the Browser\" advanced setting on document libraries. Set to ClientApplication to have documents opened in the locally installed Word, PowerPoint, or Excel client, or set to Browser to have documents opened in the browser. It is not possible to set it to \"Use the server default mode\". Type: DocumentLibraryOpenDocumentsInMode Parameter Sets: (All) Accepted values: ClientApplication, Browser Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ReadSecurity Sets the read security for the list. Type: ListReadSecurity Parameter Sets: (All) Accepted values: AllUsersReadAccess, AllUsersReadAccessOnItemsTheyCreate Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WriteSecurity Sets the write security for the list. Type: ListWriteSecurity Parameter Sets: (All) Accepted values: WriteAllItems, WriteOnlyMyItems, WriteNoItems Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the list. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoCrawl Switch parameter to specify whether this list should be excluded from search indexing. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExemptFromBlockDownloadOfNonViewableFiles Allows to configure access capabilities for un-managed devices for the list. If set to $true, the list will be accessible by un-managed devices as well. For more information, see SharePoint and OneDrive un-managed device access controls for administrators. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableGridEditing Enable or disable whether edit grid editing is enabled for the list. Set to $true to disable, $false to enable. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableCommenting Enable or disable whether commenting is enabled for the list. Set to $true to disable, $false to enable. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path The new URL path of the list. The parent folder must exist and be in the same site/web. I.e. lists\\newname. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableAutoExpirationVersionTrim Enable or disable AutoExpiration version trim for the document library. Set to $true to enable, $false to disable. Parameter ExpireVersionsAfterDays is required when EnableAutoExpirationVersionTrim is false. Set ExpireVersionsAfterDays to 0 for NoExpiration, set it to greater or equal 30 for ExpireAfter. Parameter MajorVersions is required when EnableAutoExpirationVersionTrim is false. Parameter MinorVersions is required when EnableAutoExpirationVersionTrim is false and minor version is enabled. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExpireVersionsAfterDays Works with parameter EnableAutoExpirationVersionTrim. Please see description in EnableAutoExpirationVersionTrim. Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableClassicAudienceTargeting Enable classic audience targeting in a SharePoint list. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableModernAudienceTargeting Enable modern audience targeting in a SharePoint list. Please make sure the following feature ModernAudienceTargeting with ID \"bc13eaf7-67c7-4f85-a80f-a4b0dae5e5bd\" is activated first on the site by using Enable-PnPFeature. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Icon The icon of the list. Type: ListIcon Parameter Sets: (All) Accepted values: Bug, Calendar, Target, Clipboard, Plane, Rocket, ColorPalette, Lightbulb, Cube, Beaker, Robot, PiggyBank, Playlist, Hospital, Bank, MapPin, CoffeCup, ShoppingCart, BirthdayCake Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Color The background color of the list icon. Type: ListColor Parameter Sets: (All) Accepted values: DarkRed, Red, Orange, Green, DarkGreen, Teal, Blue, NavyBlue, BluePurple, DarkBlue, Lavender , Pink Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPListInformationRightsManagement.html": {
    "href": "cmdlets/Set-PnPListInformationRightsManagement.html",
    "title": "Set-PnPListInformationRightsManagement | PnP PowerShell",
    "keywords": "Set-PnPListInformationRightsManagement SYNOPSIS Enables Information Rights Management (IRM) on the list. SYNTAX Set-PnPListInformationRightsManagement -List <ListPipeBind> [-Enable <Boolean>] [-EnableExpiration <Boolean>] [-EnableRejection <Boolean>] [-AllowPrint <Boolean>] [-AllowScript <Boolean>] [-AllowWriteCopy <Boolean>] [-DisableDocumentBrowserView <Boolean>] [-DocumentAccessExpireDays <Int32>] [-DocumentLibraryProtectionExpireDate <DateTime>] [-EnableDocumentAccessExpire <Boolean>] [-EnableDocumentBrowserPublishingView <Boolean>] [-EnableGroupProtection <Boolean>] [-EnableLicenseCacheExpire <Boolean>] [-LicenseCacheExpireDays <Int32>] [-GroupName <String>] [-PolicyDescription <String>] [-PolicyTitle <String>] [-TemplateId <String>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet enables Information Rights Management (IRM) on the list and updates the IRM settings. EXAMPLES EXAMPLE 1 Set-PnPListInformationRightsManagement -List \"Documents\" -Enable $true Enables Information Rights Management (IRM) on the list. EXAMPLE 2 Set-PnPListInformationRightsManagement -List \"Documents\" -Enable $true -EnableDocumentAccessExpire $true -DocumentAccessExpireDays 14 This example enables Information Rights Management (IRM) on the list and sets the document access to expire 14 days after the file has been downloaded. PARAMETERS -AllowPrint Sets a value indicating whether the viewer can print the downloaded document. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowScript Sets a value indicating whether the viewer can run a script on the downloaded document. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowWriteCopy Sets a value indicating whether the viewer can write on a copy of the downloaded document. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableDocumentBrowserView Sets a value indicating whether to block Office Web Application Companion applications (WACs) from showing this document. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DocumentAccessExpireDays Sets the number of days after which the downloaded document will expire. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DocumentLibraryProtectionExpireDate Sets the date after which the Information Rights Management (IRM) protection of this document library will stop. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Enable Specifies whether Information Rights Management (IRM) is enabled for the list. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableDocumentAccessExpire Sets a value indicating whether the downloaded document will expire. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableDocumentBrowserPublishingView Sets a value indicating whether to enable Office Web Application Companion applications (WACs) to publishing view. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableExpiration Specifies whether Information Rights Management (IRM) expiration is enabled for the list. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableGroupProtection Sets a value indicating whether the permission of the downloaded document is applicable to a group. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableLicenseCacheExpire Sets whether a user must verify their credentials after some interval. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableRejection Specifies whether Information Rights Management (IRM) rejection is enabled for the list. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GroupName Sets the group name (email address) that the permission is also applicable to. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LicenseCacheExpireDays Sets the number of days that the application that opens the document caches the IRM license. When these elapse, the application will connect to the IRM server to validate the license. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list to set Information Rights Management (IRM) settings for. Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PolicyDescription Sets the permission policy description. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PolicyTitle Sets the permission policy title. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateId Specifies the predefined IRM (Information Rights Management) template. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPListItem.html": {
    "href": "cmdlets/Set-PnPListItem.html",
    "title": "Set-PnPListItem | PnP PowerShell",
    "keywords": "Set-PnPListItem SYNOPSIS Updates a list item. SYNTAX Single Set-PnPListItem [-List <ListPipeBind>] -Identity <ListItemPipeBind> [-ContentType <ContentTypePipeBind>] [-Values <Hashtable>] [-UpdateType <UpdateType>] [-Label <String>] [-ClearLabel] [-Force] [-Connection <PnPConnection>] Batched Set-PnPListItem [-List <ListPipeBind>] -Identity <ListItemPipeBind> -Batch <PnPBatch> [-ContentType <ContentTypePipeBind>] [-Values <Hashtable>] [-UpdateType <UpdateType>] [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to modify a list item. EXAMPLES EXAMPLE 1 Set-PnPListItem -List \"Demo List\" -Identity 1 -Values @{\"Title\" = \"Test Title\"; \"Category\"=\"Test Category\"} Sets fields value in the list item with ID 1 in the \"Demo List\". It sets both the Title and Category fields with the specified values. Notice, use the internal names of fields. EXAMPLE 2 Set-PnPListItem -List \"Demo List\" -Identity 1 -ContentType \"Company\" -Values @{\"Title\" = \"Test Title\"; \"Category\"=\"Test Category\"} Sets fields value in the list item with ID 1 in the \"Demo List\". It sets the content type of the item to \"Company\" and it sets both the Title and Category fields with the specified values. Notice, use the internal names of fields. EXAMPLE 3 Set-PnPListItem -List \"Demo List\" -Identity $item -Values @{\"Title\" = \"Test Title\"; \"Category\"=\"Test Category\"} Sets fields value in the list item which has been retrieved by for instance Get-PnPListItem. It sets the content type of the item to \"Company\" and it sets both the Title and Category fields with the specified values. Notice, use the internal names of fields. EXAMPLE 4 Set-PnPListItem -List \"Demo List\" -Identity 1 -Label \"Public\" Sets the retention label in the list item with ID 1 in the \"Demo List\". EXAMPLE 5 $batch = New-PnPBatch for($i=1;$i -lt 100;$i++) { Set-PnPListItem -List \"Demo List\" -Identity $i -Values @{\"Title\"=\"Updated Title\"} -Batch $batch } Invoke-PnPBatch -Batch $batch This example updates the items with ids 0 to 100 with a new title in a batched manner. EXAMPLE 6 Set-PnPListItem -List \"Demo List\" -Identity 1 -Values @{\"Editor\"=\"testuser@domain.com\"} -UpdateType UpdateOverwriteVersion This example updates the modified by value of the list item and does not increase the version number. PARAMETERS -Batch Optional batch object used to add items in a batched manner. See examples on how to use this. Type: PnPBatch Parameter Sets: Batched Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType Specify either the name, ID or an actual content type. Type: ContentTypePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object. Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Label The name of the retention label. Type: String Parameter Sets: Single Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -UpdateType Specifies the update type to use when updating the listitem. Possible values are \"Update\", \"SystemUpdate\", \"UpdateOverwriteVersion\". Update: Sets field values and creates a new version if versioning is enabled for the list. The \"Modified By\" and \"Modified\" fields will be updated to reflect the time of the update and the user who made the change. SystemUpdate: Sets field values and does not create a new version. Any events on the list will trigger. The \"Modified By\" and \"Modified\" fields are not updated and can not be set. UpdateOverwriteVersion: Sets field values and does not create a new version. No events on the list will trigger. The \"Modified By\" and \"Modified\" fields are not updated but can be set by passing the field values in the update. HINT: use 'Editor' to set the \"Modified By\" field. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClearLabel Clears the retention label of the item. Type: SwitchParameter Parameter Sets: Single Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Values Use the internal names of the fields when specifying field names. Single line of text: -Values @{\"TextField\" = \"Title New\"} Multiple lines of text: -Values @{\"MultiTextField\" = \"New text\\`n\\`nMore text\"} Rich text: -Values @{\"MultiTextField\" = \"&lt;strong&gt;New&lt;/strong&gt; text\"} Choice: -Values @{\"ChoiceField\" = \"Value 1\"} Multi-Choice: -Values @{\"MultiChoice\" = \"Choice 1\",\"Choice 2\"} Number: -Values @{\"NumberField\" = \"10\"} Currency: -Values @{\"CurrencyField\" = \"10\"} Date and Time: -Values @{\"DateAndTimeField\" = \"03/13/2015 14:16\"} Lookup (id of lookup value): -Values @{\"LookupField\" = \"2\"} Multi value lookup (id of lookup values as array 1): -Values @{\"MultiLookupField\" = \"1\",\"2\"} Multi value lookup (id of lookup values as array 2): -Values @{\"MultiLookupField\" = 1,2} Multi value lookup (id of lookup values as string): -Values @{\"MultiLookupField\" = \"1,2\"} Yes/No: -Values @{\"YesNoField\" = $false} Person/Group (id of user/group in Site User Info List or email of the user, separate multiple values with a comma): -Values @{\"PersonField\" = \"user1@domain.com\",\"21\"} If the user is not present, in the site user information list, you need to add that user using New-PnPUser cmdlet. Managed Metadata (single value with path to term): -Values @{\"MetadataField\" = \"CORPORATE|DEPARTMENTS|FINANCE\"} Managed Metadata (single value with id of term): -Values @{\"MetadataField\" = \"fe40a95b-2144-4fa2-b82a-0b3d0299d818\"} with Id of term Managed Metadata (multiple values with paths to terms): -Values @{\"MetadataField\" = (\"CORPORATE|DEPARTMENTS|FINANCE\",\"CORPORATE|DEPARTMENTS|HR\")} Managed Metadata (multiple values with ids of terms): -Values @{\"MetadataField\" = (\"fe40a95b-2144-4fa2-b82a-0b3d0299d818\",\"52d88107-c2a8-4bf0-adfa-04bc2305b593\")} Hyperlink or Picture: -Values @{\"HyperlinkField\" = \"https://pnp.github.com/powershell, PnP PowerShell Home\"} Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Forces update of the list item even if there are no value changes. This can be useful for triggering webhooks, event receivers, Flows, etc. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPListItemAsRecord.html": {
    "href": "cmdlets/Set-PnPListItemAsRecord.html",
    "title": "Set-PnPListItemAsRecord | PnP PowerShell",
    "keywords": "Set-PnPListItemAsRecord SYNOPSIS Declares a list item as a record, for more information, see https://learn.microsoft.com/sharepoint/governance/records-management-in-sharepoint-server SYNTAX Set-PnPListItemAsRecord [-List] <ListPipeBind> -Identity <ListItemPipeBind> [-DeclarationDate <DateTime>] [-Connection <PnPConnection>] DESCRIPTION Allows to set a list item as a record. EXAMPLES EXAMPLE 1 Set-PnPListItemAsRecord -List \"Documents\" -Identity 4 Declares the document in the documents library with id 4 as a record. EXAMPLE 2 Set-PnPListItemAsRecord -List \"Documents\" -Identity 4 -DeclarationDate $date Declares the document in the documents library with id 4 as a record. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DeclarationDate The declaration date. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object. Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPListItemPermission.html": {
    "href": "cmdlets/Set-PnPListItemPermission.html",
    "title": "Set-PnPListItemPermission | PnP PowerShell",
    "keywords": "Set-PnPListItemPermission SYNOPSIS Sets list item permissions. SYNTAX User (Default) Set-PnPListItemPermission [-List] <ListPipeBind> -Identity <ListItemPipeBind> -User <String> [-AddRole <String>] [-RemoveRole <String>] [-ClearExisting] [-SystemUpdate] [-Connection <PnPConnection>] Group Set-PnPListItemPermission [-List] <ListPipeBind> -Identity <ListItemPipeBind> -Group <GroupPipeBind> [-AddRole <String>] [-RemoveRole <String>] [-ClearExisting] [-SystemUpdate] [-Connection <PnPConnection>] Inherit Set-PnPListItemPermission [-List] <ListPipeBind> -Identity <ListItemPipeBind> [-InheritPermissions] [-SystemUpdate] [-Connection <PnPConnection>] DESCRIPTION Allows to modify list item permissions. Use Get-PnPRoleDefinition to retrieve all available roles you can add or remove using this cmdlet. Use Get-PnPGroup to retrieve all groups available that you can add or remove using this cmdlet when using the -group parameter. EXAMPLES EXAMPLE 1 Set-PnPListItemPermission -List 'Documents' -Identity 1 -User 'user@contoso.com' -AddRole 'Contribute' Adds the 'Contribute' permission to the user 'user@contoso.com' for listitem with id 1 in the list 'Documents'. EXAMPLE 2 Set-PnPListItemPermission -List 'Documents' -Identity 1 -User 'user@contoso.com' -RemoveRole 'Contribute' Removes the 'Contribute' permission from the user 'user@contoso.com' for listitem with id 1 in the list 'Documents'. EXAMPLE 3 Set-PnPListItemPermission -List 'Documents' -Identity 1 -User 'user@contoso.com' -AddRole 'Contribute' -ClearExisting Adds the 'Contribute' permission to the user 'user@contoso.com' for listitem with id 1 in the list 'Documents' and removes all other permissions. EXAMPLE 4 Set-PnPListItemPermission -List 'Documents' -Identity 1 -InheritPermissions Resets permissions for listitem with id 1 to inherit permissions from the list 'Documents'. EXAMPLE 5 Set-PnPListItemPermission -List 'Documents' -Identity 1 -AddRole 'Read' -RemoveRole 'Contribute' -Group \"Site collection Visitors\" Adds the 'Read' permission to the group of Site collection Visitors while removing the 'Contribute' permissions. PARAMETERS -AddRole The role that must be assigned to the group or user. Type: RoleDefinitionPipeBind Parameter Sets: User, Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClearExisting Clear all existing permissions. Type: SwitchParameter Parameter Sets: User, Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group A group object, an ID or a name of a group. Type: GroupPipeBind Parameter Sets: Group Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object. Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -InheritPermissions Inherit permissions from the list, removing unique permissions. Type: SwitchParameter Parameter Sets: Inherit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -RemoveRole The role that must be removed from the group or user. Type: RoleDefinitionPipeBind Parameter Sets: User, Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SystemUpdate Update the item permissions without creating a new version or triggering MS Flow. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User A valid login name of a user (e.g. john@doe.com). Type: String Parameter Sets: User Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPListPermission.html": {
    "href": "cmdlets/Set-PnPListPermission.html",
    "title": "Set-PnPListPermission | PnP PowerShell",
    "keywords": "Set-PnPListPermission SYNOPSIS Allows permissions on a SharePoint list to be changed. SYNTAX Group Set-PnPListPermission -Identity <ListPipeBind> -Group <GroupPipeBind> [-AddRole <String>] [-RemoveRole <String>] [-Connection <PnPConnection>] User Set-PnPListPermission -Identity <ListPipeBind> -User <String> [-AddRole <String>] [-RemoveRole <String>] [-Connection <PnPConnection>] DESCRIPTION Allows changing permissions on a SharePoint list. In case you would like to break the permission inheritance on a list from its parent, you can use Set-PnPList -BreakRoleInheritance. Use Get-PnPRoleDefinition to retrieve all available roles you can add or remove using this cmdlet. EXAMPLES EXAMPLE 1 Set-PnPListPermission -Identity 'Documents' -User 'user@contoso.com' -AddRole 'Contribute' Adds the 'Contribute' permission to the user 'user@contoso.com' for the list 'Documents'. EXAMPLE 2 Set-PnPListPermission -Identity 'Documents' -User 'user@contoso.com' -RemoveRole 'Contribute' Removes the 'Contribute' permission from the user 'user@contoso.com' for the list 'Documents'. PARAMETERS -Identity The Id, title or an instance of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AddRole The name of the role that must be assigned to the group or user. The name of the role is localized and depends on the language in which the site has been created, so i.e. for an English site you would use Full Control, but for a Dutch site you would use Volledig beheer. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveRole The name of the role that must be removed from the group or user. The name of the role is localized and depends on the language in which the site has been created, so i.e. for an English site you would use Full Control, but for a Dutch site you would use Volledig beheer. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group A group object, an ID or a name of a group. Type: GroupPipeBind Parameter Sets: Group Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User A valid login name of a user (e.g. john@doe.com). Type: String Parameter Sets: User Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPListRecordDeclaration.html": {
    "href": "cmdlets/Set-PnPListRecordDeclaration.html",
    "title": "Set-PnPListRecordDeclaration | PnP PowerShell",
    "keywords": "Set-PnPListRecordDeclaration SYNOPSIS Updates record declaration settings of a list. SYNTAX Set-PnPListRecordDeclaration -List <ListPipeBind> [-ManualRecordDeclaration <EcmListManualRecordDeclaration>] [-AutoRecordDeclaration <Boolean>] [-Connection <PnPConnection>] DESCRIPTION The RecordDeclaration parameter supports 3 values: AlwaysAllowManualDeclaration NeverAllowManualDeclaration UseSiteCollectionDefaults EXAMPLES EXAMPLE 1 Set-PnPListRecordDeclaration -List \"Documents\" -ManualRecordDeclaration NeverAllowManualDeclaration Sets the manual record declaration to never allow. EXAMPLE 2 Set-PnPListRecordDeclaration -List \"Documents\" -AutoRecordDeclaration $true Turns on auto record declaration for the list. PARAMETERS -AutoRecordDeclaration Turns on or off auto record declaration on the list. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list to set the manual record declaration settings for. Specify title, list id, or list object. Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ManualRecordDeclaration Defines the manual record declaration setting for the lists. Type: EcmListManualRecordDeclaration Parameter Sets: (All) Accepted values: UseSiteCollectionDefaults, AlwaysAllowManualDeclaration, NeverAllowManualDeclaration Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPManagedAppId.html": {
    "href": "cmdlets/Set-PnPManagedAppId.html",
    "title": "Set-PnPManagedAppId | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPManagedAppId SYNOPSIS Sets/Adds an App Id for use with Connect-PnPOnline to the Windows Credential Manager or Mac OS Key Chain Entry. If you the PowerShell Module Microsoft.PowerShell.SecretsStore and Microsoft.PowerShell.SecretsManagement installed and you have defined a default vault without a password than that will be used to store the App Id. SYNTAX Set-PnPManagedAppId -Url <String> -AppId <String> [-Overwrite] DESCRIPTION Adds an App Id entry to the Windows Credential Manager or Mac OS Key Chain Entry. PnP PowerShell will check if an App Id is available when you connect using Connect-PnPOnline -Interactive. If it finds a matching URL it will use the associated App Id. You do not need to specify the -ClientId parameter then. If you add a Credential with a name of \"https://yourtenant.sharepoint.com\" it will find a match when you connect to \"https://yourtenant.sharepoint.com\" but also when you connect to \"https://yourtenant.sharepoint.com/sites/demo1\". Of course you can specify more granular entries, allow you to automatically provide App Ids for different URLs. EXAMPLES EXAMPLE 1 Set-PnPManagedAppId -Name \"https://tenant.sharepoint.com\" -AppId d96c0a07-770d-46f4-bb38-a54084254bf7 This will add an entry for the specified App Id to be use when connecting with Connect-PnPOnline to the URL specified. PARAMETERS -Url The URL to associate the App Id with Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Overwrite Use parameter to overwrite existing Mac OS Key Chain Entry. Not required on Windows. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AppId The App Id to associate with the Url. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPMasterPage.html": {
    "href": "cmdlets/Set-PnPMasterPage.html",
    "title": "Set-PnPMasterPage | PnP PowerShell",
    "keywords": "Set-PnPMasterPage SYNOPSIS Set the masterpage. SYNTAX Server Relative Set-PnPMasterPage [-MasterPageServerRelativeUrl <String>] [-CustomMasterPageServerRelativeUrl <String>] [-Connection <PnPConnection>] Site Relative Set-PnPMasterPage [-MasterPageSiteRelativeUrl <String>] [-CustomMasterPageSiteRelativeUrl <String>] [-Connection <PnPConnection>] DESCRIPTION Sets the default master page of the current web. EXAMPLES EXAMPLE 1 Set-PnPMasterPage -MasterPageServerRelativeUrl /sites/projects/_catalogs/masterpage/oslo.master Sets the master page based on a server relative URL. EXAMPLE 2 Set-PnPMasterPage -MasterPageServerRelativeUrl /sites/projects/_catalogs/masterpage/oslo.master -CustomMasterPageServerRelativeUrl /sites/projects/_catalogs/masterpage/oslo.master Sets the master page and custom master page based on a server relative URL. EXAMPLE 3 Set-PnPMasterPage -MasterPageSiteRelativeUrl _catalogs/masterpage/oslo.master Sets the master page based on a site relative URL. EXAMPLE 4 Set-PnPMasterPage -MasterPageSiteRelativeUrl _catalogs/masterpage/oslo.master -CustomMasterPageSiteRelativeUrl _catalogs/masterpage/oslo.master Sets the master page and custom master page based on a site relative URL. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CustomMasterPageServerRelativeUrl Specifies the custom Master page URL based on the server relative URL. Type: String Parameter Sets: Server Relative Aliases: CustomMasterPageUrl Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CustomMasterPageSiteRelativeUrl Specifies the custom Master page URL based on the site relative URL. Type: String Parameter Sets: Site Relative Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MasterPageServerRelativeUrl Specifies the Master page URL based on the server relative URL. Type: String Parameter Sets: Server Relative Aliases: MasterPageUrl Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MasterPageSiteRelativeUrl Specifies the Master page URL based on the site relative URL. Type: String Parameter Sets: Site Relative Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPMessageCenterAnnouncementAsArchived.html": {
    "href": "cmdlets/Set-PnPMessageCenterAnnouncementAsArchived.html",
    "title": "Set-PnPMessageCenterAnnouncementAsArchived | PnP PowerShell",
    "keywords": "Set-PnPMessageCenterAnnouncementAsArchived SYNOPSIS Required Permissions Microsoft Graph API : ServiceMessageViewpoint.Write (delegated) Marks one or multiple message center announcements of the Office 365 Services as archived. SYNTAX Set-PnPMessageCenterAnnouncementAsArchived [-Identity <Ids>] [-Connection <PnPConnection>] DESCRIPTION Allows to mark message center announcements as archived. EXAMPLES EXAMPLE 1 Set-PnPMessageCenterAnnouncementAsArchived -Identity \"MC123456\" Marks message center announcement MC123456 as archived for the current user. EXAMPLE 2 Set-PnPMessageCenterAnnouncementAsArchived -Identity \"MC123456\", \"MC234567\" Marks message center announcements MC123456 and MC234567 as archived for the current user. EXAMPLE 3 Set-PnPMessageCenterAnnouncementAsArchived Marks all message center announcements as archived for the current user. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Marks the message center announcement or announcements with the provided Ids as archived. Type: String[] Parameter Sets: None Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPMessageCenterAnnouncementAsFavorite.html": {
    "href": "cmdlets/Set-PnPMessageCenterAnnouncementAsFavorite.html",
    "title": "Set-PnPMessageCenterAnnouncementAsFavorite | PnP PowerShell",
    "keywords": "Set-PnPMessageCenterAnnouncementAsFavorite SYNOPSIS Required Permissions Microsoft Graph API : ServiceMessageViewpoint.Write (delegated) Marks one or multiple message center announcements of the Office 365 Services as favorite$. SYNTAX Set-PnPMessageCenterAnnouncementAsFavorite [-Identity <Ids>] [-Connection <PnPConnection>] DESCRIPTION Allows to mark message center announcements as favorite. EXAMPLES EXAMPLE 1 Set-PnPMessageCenterAnnouncementAsFavorite -Identity \"MC123456\" Marks message center announcement MC123456 as favorite for the current user. EXAMPLE 2 Set-PnPMessageCenterAnnouncementAsFavorite -Identity \"MC123456\", \"MC234567\" Marks message center announcements MC123456 and MC234567 as favorite for the current user. EXAMPLE 3 Set-PnPMessageCenterAnnouncementAsFavorite Marks all message center announcements as favorite for the current user. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Marks a particular message center announcement or announcements with the provided Ids as favorite. Type: String[] Parameter Sets: None Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPMessageCenterAnnouncementAsNotArchived.html": {
    "href": "cmdlets/Set-PnPMessageCenterAnnouncementAsNotArchived.html",
    "title": "Set-PnPMessageCenterAnnouncementAsNotArchived | PnP PowerShell",
    "keywords": "Set-PnPMessageCenterAnnouncementAsNotArchived SYNOPSIS Required Permissions Microsoft Graph API : ServiceMessageViewpoint.Write (delegated) Marks one or multiple message center announcements of the Office 365 Services as not archived. SYNTAX Set-PnPMessageCenterAnnouncementAsNotArchived [-Identity <Ids>] [-Connection <PnPConnection>] DESCRIPTION Allows to mark message center announcements as not archived. EXAMPLES EXAMPLE 1 Set-PnPMessageCenterAnnouncementAsNotArchived -Identity \"MC123456\" Marks message center announcement MC123456 as not archived for the current user. EXAMPLE 2 Set-PnPMessageCenterAnnouncementAsNotArchived -Identity \"MC123456\", \"MC234567\" Marks message center announcements MC123456 and MC234567 as not archived for the current user. EXAMPLE 3 Set-PnPMessageCenterAnnouncementAsNotArchived Marks all message center announcements as not archived for the current user. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Marks a particular message center announcement or announcements with the provided Ids as not archived. Type: String[] Parameter Sets: None Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPMessageCenterAnnouncementAsNotFavorite.html": {
    "href": "cmdlets/Set-PnPMessageCenterAnnouncementAsNotFavorite.html",
    "title": "Set-PnPMessageCenterAnnouncementAsNotFavorite | PnP PowerShell",
    "keywords": "Set-PnPMessageCenterAnnouncementAsNotFavorite SYNOPSIS Required Permissions Microsoft Graph API : ServiceMessageViewpoint.Write (delegated) Marks one or multiple message center announcements of the Office 365 Services as not favorite. SYNTAX Set-PnPMessageCenterAnnouncementAsNotFavorite [-Identity <Ids>] [-Connection <PnPConnection>] DESCRIPTION Allows to mark message center announcements as not favorite. EXAMPLES EXAMPLE 1 Set-PnPMessageCenterAnnouncementAsNotFavorite -Identity \"MC123456\" Marks message center announcement MC123456 as not favorite for the current user. EXAMPLE 2 Set-PnPMessageCenterAnnouncementAsNotFavorite -Identity \"MC123456\", \"MC234567\" Marks message center announcements MC123456 and MC234567 as not favorite for the current user. EXAMPLE 3 Set-PnPMessageCenterAnnouncementAsNotFavorite Marks all message center announcements as not favorite for the current user. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Marks the message center announcement or announcements with the provided Ids as not favorite. Type: String[] Parameter Sets: None Required: false Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPMessageCenterAnnouncementAsRead.html": {
    "href": "cmdlets/Set-PnPMessageCenterAnnouncementAsRead.html",
    "title": "Set-PnPMessageCenterAnnouncementAsRead | PnP PowerShell",
    "keywords": "Set-PnPMessageCenterAnnouncementAsRead SYNOPSIS Required Permissions Microsoft Graph API : ServiceMessageViewpoint.Write (delegated) Marks one or multiple message center announcements of the Office 365 Services as read. SYNTAX Set-PnPMessageCenterAnnouncementAsRead [-Identity <Ids>] [-Connection <PnPConnection>] DESCRIPTION Allows to mark message center announcements as read. EXAMPLES EXAMPLE 1 Set-PnPMessageCenterAnnouncementAsRead -Identity \"MC123456\" Marks message center announcement MC123456 as read for the current user. EXAMPLE 2 Set-PnPMessageCenterAnnouncementAsRead -Identity \"MC123456\", \"MC234567\" Marks message center announcements MC123456 and MC234567 as read for the current user. EXAMPLE 3 Set-PnPMessageCenterAnnouncementAsRead Marks all message center announcements as read for the current user. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Marks the message center announcement or announcements with the provided Ids as read. Type: String[] Parameter Sets: None Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPMessageCenterAnnouncementAsUnread.html": {
    "href": "cmdlets/Set-PnPMessageCenterAnnouncementAsUnread.html",
    "title": "Set-PnPMessageCenterAnnouncementAsUnread | PnP PowerShell",
    "keywords": "Set-PnPMessageCenterAnnouncementAsUnread SYNOPSIS Required Permissions Microsoft Graph API : ServiceMessageViewpoint.Write (delegated) Marks one or multiple message center announcements of the Office 365 Services as unread. SYNTAX Set-PnPMessageCenterAnnouncementAsUnread [-Identity <String[]>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet marks one or multiple message center announcements of the Office 365 Services as unread for the current user. EXAMPLES EXAMPLE 1 Set-PnPMessageCenterAnnouncementAsUnread -Identity \"MC123456\" Marks message center announcement MC123456 as unread for the current user. EXAMPLE 2 Set-PnPMessageCenterAnnouncementAsUnread -Identity \"MC123456\", \"MC234567\" Marks message center announcements MC123456 and MC234567 as unread for the current user. EXAMPLE 3 Set-PnPMessageCenterAnnouncementAsUnread Marks all message center announcements as unread for the current user. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Id(s) of the message center announcements to mark as unread. Type: String[] Parameter Sets: None Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPMicrosoft365Group.html": {
    "href": "cmdlets/Set-PnPMicrosoft365Group.html",
    "title": "Set-PnPMicrosoft365Group | PnP PowerShell",
    "keywords": "Set-PnPMicrosoft365Group SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Sets Microsoft 365 Group properties. SYNTAX Set-PnPMicrosoft365Group -Identity <Microsoft365GroupPipeBind> [-DisplayName <String>] [-Description <String>] [-Owners <String[]>] [-Members <String[]>] [-IsPrivate] [-LogoPath <String>] [-CreateTeam] [-HideFromAddressLists <Boolean>] [-HideFromOutlookClients <Boolean>] [-RequireSenderAuthenticationEnabled <Boolean>] [-AutoSubscribeNewMembers <Boolean>] [-MailNickname <String>] [-SensitivityLabels <GUID[]>] [-Verbose] DESCRIPTION Allows to modify Microsoft 365 Group. EXAMPLES EXAMPLE 1 Set-PnPMicrosoft365Group -Identity $group -DisplayName \"My DisplayName\" Sets the display name of the group where $group is a Group entity. EXAMPLE 2 Set-PnPMicrosoft365Group -Identity $groupId -Description \"My Description\" -DisplayName \"My DisplayName\" Sets the display name and description of a group based upon its ID. EXAMPLE 3 Set-PnPMicrosoft365Group -Identity $group -GroupLogoPath \".\\MyLogo.png\" Sets a specific Microsoft 365 Group logo. EXAMPLE 4 Set-PnPMicrosoft365Group -Identity $group -IsPrivate:$false Sets a group to be Public if previously Private. EXAMPLE 5 Set-PnPMicrosoft365Group -Identity $group -Owners demo@contoso.com Sets demo@contoso.com as owner of the group. EXAMPLE 6 Set-PnPMicrosoft365Group -Identity $group -SensitivityLabels \"bc98af29-59eb-4869-baaa-9a8dff631aa4\" Sets the sensitivity label of the group. PARAMETERS -AllowExternalSenders Allows configuring if the Microsoft 365 Group should accept e-mail from senders outside of the organisation (true) or if both internal as well as external senders can send e-mail to the e-mail address of the Microsoft 365 group (false). In the Exchange Online PowerShell cmdlet this would be the RequireSenderAuthenticationEnabled property, but then inversed, so when that would be set to $true it would not accept e-mail from outside the organisation and when set to $false it would. This property can only be set using a Delegated logon, not with an Application logon. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AutoSubscribeNewMembers The AutoSubscribeNewMembers switch specifies whether to automatically subscribe new members that are added to the Microsoft 365 Group to conversations and calendar events. Only users that are added to the group after you enable this setting are automatically subscribed to the group. To subscribe new members to conversations and calendar events, use this exact syntax: -AutoSubscribeNewMembers:$true. If you don't want to subscribe new members to conversations and calendar events, use this exact syntax: -AutoSubscribeNewMembers:$false. Note: This property is evaluated only when you add internal members from your organization. Guest user accounts are always subscribed when added as a member. This property can only be set using a Delegated logon, not with an Application logon. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CreateTeam Creates a Microsoft Teams team associated with the created group. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The Description of the group to set. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The DisplayName of the group to set. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideFromAddressLists Controls whether the group is hidden or shown in the Global Address List (GAL). Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideFromOutlookClients Controls whether the group shows in the Outlook left-hand navigation. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Identity of the Microsoft 365 Group. Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -IsPrivate Makes the group private when selected. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LogoPath The path to the logo file of to set. Logo must be at least 48 pixels wide and may be at most 4 MB in size. Requires Site.ReadWrite.All permissions. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MailNickname The mail alias for the group, unique for Microsoft 365 groups in the organization. Maximum length is 64 characters. This property can contain only characters in the ASCII character set 0 - 127 except the following: @ () \\ [] \" ; : . <> , SPACE Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Members The array UPN values of members to set to the group. Note: Will replace members. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners The array UPN values of owners to set to the group. Note: Will replace owners. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SensitivityLabels The Sensitivity label to be set to the Microsoft 365 Group. To retrieve the sensitivity label Ids you can use Get-PnPAvailableSensitivityLabel. Type: GUID[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Set-PnPMicrosoft365GroupSettings.html": {
    "href": "cmdlets/Set-PnPMicrosoft365GroupSettings.html",
    "title": "Set-PnPMicrosoft365GroupSettings | PnP PowerShell",
    "keywords": "Set-PnPMicrosoft365GroupSettings SYNOPSIS Required Permissions Microsoft Graph API: One of Directory.ReadWrite.All, Directory.AccessUser.All Updates Microsoft 365 Group settings for the tenant or specified Group. SYNTAX Set-PnPMicrosoft365GroupSettings -Identity <string> [-Values <Hashtable>] [-Group <Microsoft365GroupPipeBind>] DESCRIPTION Allows to modify Microsoft 365 Group settings for tenant or specified group. EXAMPLES EXAMPLE 1 Set-PnPMicrosoft365GroupSettings -Identity $groupSettingId -Values @{\"AllowToAddGuests\"=\"true\"} Sets the properties of the setting where $groupSettingId is a Group setting ID. You can get the Group setting using the Get-PnPMicrosoft365GroupSettings cmdlet. EXAMPLE 2 Set-PnPMicrosoft365GroupSettings -Identity $groupSettingId -Values @{\"AllowToAddGuests\"=\"true\"} -Group $groupId Sets the properties of the Microsoft 365 group specific setting where $groupSettingId is a setting ID of that group. You can get the Group setting using the Get-PnPMicrosoft365GroupSettings -Group cmdlet. PARAMETERS -Identity The Identity of the Microsoft 365 Group setting Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Values Hashtable of properties for the settings. Use the syntax @{AllowToAddGuests=\"false\";GuestUsageGuidelinesUrl=\"https://google.com/privacy\"}. Type: Hashtable Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The Identity of the Microsoft 365 Group for which you want to update setting. Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Set-PnPOrgAssetsLibrary.html": {
    "href": "cmdlets/Set-PnPOrgAssetsLibrary.html",
    "title": "Set-PnPOrgAssetsLibrary | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPOrgAssetsLibrary SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Updates a document library which was already defined as an organizational asset source SYNTAX Set-PnPOrgAssetsLibrary -LibraryUrl <String> [-ThumbnailUrl <String>] [-OrgAssetType <OrgAssetType>] [-IsCopilotSearchable <bool>] [-Connection <PnPConnection>] DESCRIPTION Updates a document library which was already set as an organizational asset source in your SharePoint Online Tenant. It may take some time before this change will be reflected in the web interface. EXAMPLES EXAMPLE 1 Set-PnPOrgAssetsLibrary -LibraryUrl \"https://yourtenant.sharepoint.com/sites/branding/logos\" -ThumbnailUrl \"https://yourtenant.sharepoint.com/sites/branding/logos/thumbnail.jpg\" Updates the tumbnail for the document library with the url \"logos\" located in the sitecollection at \"https://yourtenant.sharepoint.com/sites/branding\" EXAMPLE 2 Set-PnPOrgAssetsLibrary -LibraryUrl \"https://yourtenant.sharepoint.com/sites/branding/logos\" -IsCopilotSearchable:$true Enables Microsoft 365 Copilot to use the organizational assets library with the url \"logos\" located in the sitecollection at \"https://yourtenant.sharepoint.com/sites/branding\" for searching corporate images PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsCopilotSearchable Indicates that the organizational assets library should be searchable in the CoPilot search experience in Office applications to locate corporate images. Only works when the OrgAssetType is set to ImageDocumentLibrary. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LibraryUrl The full url of the document library to be marked as one of organization's assets sources Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OrgAssetType Indicates the type of content in this library. Currently supported values are \"ImageDocumentLibrary\" and \"OfficeTemplateLibrary\". ImageDocumentLibrary is the default OrgAssetType and is best used for images. You can access the contents of this library from any site or page in the SharePoint filepicker. OfficeTemplateLibrary is the suggested type for Office files and will show up in the UI of all Office desktop apps and Office online in the templates section. Type: OrgAssetType Parameter Sets: (All) Accepted values: ImageDocumentLibrary, OfficeTemplateLibrary Required: False Position: Named Default value: ImageDocumentLibrary Accept pipeline input: False Accept wildcard characters: False -ThumbnailUrl The full url to an image that should be used as a thumbnail for showing this source. The image must reside in the same site as the document library you specify. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPage.html": {
    "href": "cmdlets/Set-PnPPage.html",
    "title": "Set-PnPPage | PnP PowerShell",
    "keywords": "Set-PnPPage SYNOPSIS Sets parameters of a page. SYNTAX Set-PnPPage -Identity <PagePipeBind> [-Name <String>] [-Title <String>] [-LayoutType <PageLayoutType>] [-PromoteAs <PagePromoteType>] [-CommentsEnabled] [-Publish] [-HeaderType <PageHeaderType>] [-HeaderLayoutType <PageHeaderLayoutType>] [-ScheduledPublishDate <DateTime>] [-RemoveScheduledPublish] [-ContentType <ContentTypePipeBind>] [-ThumbnailUrl <String>] [-ShowPublishDate <Boolean>] [-Translate][-TranslationLanguageCodes <Int[][]>] [-Connection <PnPConnection>] DESCRIPTION Sets parameters of a page. All pages must be located inside the Site Pages library. EXAMPLES EXAMPLE 1 Set-PnPPage -Identity \"MyPage\" -LayoutType Home -Title \"My Page\" Updates the properties of the page named 'MyPage'. EXAMPLE 2 Set-PnPPage -Identity \"MyPage\" -CommentsEnabled Enables the comments on the page named 'MyPage'. EXAMPLE 3 Set-PnPPage -Identity \"MyPage\" -CommentsEnabled:$false Disables the comments on the page named 'MyPage'. EXAMPLE 4 Set-PnPPage -Identity \"hr/MyPage\" -HeaderType Default Sets the header of the page called MyPage located in the folder hr inside the Site Pages library to the default header. EXAMPLE 5 Set-PnPPage -Identity \"MyPage\" -HeaderType None Removes the header of the page. EXAMPLE 6 Set-PnPPage -Identity \"MyPage\" -HeaderType Custom -ServerRelativeImageUrl \"/sites/demo1/assets/myimage.png\" -TranslateX 10.5 -TranslateY 11.0 Sets the header of the page to custom header, using the specified image and translates the location of the image in the header given the values specified. EXAMPLE 7 Set-PnPPage -Identity \"MyPage\" -ScheduledPublishDate (Get-Date).AddHours(1) Schedules the page \"MyPage\" to be published in one hour from now. EXAMPLE 8 Set-PnPPage -Identity \"MyPage\" -Translate Creates the necessary translated pages for all the supported languages in the site collection. EXAMPLE 9 Set-PnPPage -Identity \"MyPage\" -Translate -TranslationLanguageCodes 1043 Creates the necessary translated page for the specified language in the site collection. In this case, it will create the translated page for Dutch language. If the Dutch language is not enabled, it will enable the language and then create the translated page. EXAMPLE 10 Set-PnPPage -Identity \"MyPage\" -Translate -TranslationLanguageCodes 1043,1035 Creates the necessary translated page for the specified languages in the site collection. In this case, it will create the translated pages for Dutch and Finnish languages. If these languages are not enabled, it will enable these languages and then create the translated pages for the specified languages. EXAMPLE 11 Set-PnPPage -Identity \"MyPage\" -ShowPublishDate $true -Publish Display the date when the page was published in the header section of the page. EXAMPLE 12 Set-PnPPage -Identity \"MyPage.aspx\" -Like Likes the page. EXAMPLE 11 Set-PnPPage -Identity \"MyPage.aspx\" -Like:$false Unlikes the page. PARAMETERS -CommentsEnabled Enables or disables the comments on the page. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType Specify either the name, ID or an actual content type. Type: ContentTypePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DemoteNewsArticle Demotes an existing news post to a regular page. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderType Sets the page header type. Type: PageHeaderType Parameter Sets: (All) Accepted values: None, Default, Custom Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderLayoutType Sets the page header layout type. Type: PageHeaderLayoutType Parameter Sets: (All) Accepted values: ColorBlock, CutInShape, FullWidthImage, NoImage Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name/identity of the page. This can be a page instance or the filename of the page. I.e. if the page is called MyPage.aspx and is located in the root of the Site Pages library, provide \"MyPage\" or \"MyPage.aspx\". If the page is called MyOtherPage.aspx and is located inside a subfolder called HR located in the root of the Site Pages library, provide \"HR/MyOtherPage\" or \"HR/MyOtherPage.aspx\". Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -LayoutType Sets the layout type of the page. Type: PageLayoutType Parameter Sets: (All) Accepted values: Article, Home, SingleWebPartAppPage, RepostPage, HeaderlessSearchResults, Spaces, Topic Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Sets the name of the page. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PromoteAs Allows to promote the page for a specific purpose (None | HomePage | NewsArticle | Template). Type: PagePromoteType Parameter Sets: (All) Accepted values: None, HomePage, NewsArticle, Template Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Publish Publishes the page once it is saved. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThumbnailUrl Specifies the URL of a thumbnail image. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowPublishDate Shows Published Date in the header. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Sets the title of the page. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ScheduledPublishDate If provided, the page will be scheduled to be published on the provided date and time. It will enable page scheduling on the Site Pages library if not already enabled. If not provided, the publishing of the page will not be scheduled. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveScheduledPublish If provided, the page publish schedule will be removed, if it has been set. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Translate Creates multilingual pages for all the languages specified in the site collection. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TranslationLanguageCodes Creates multilingual pages for specified languages. Type: Integer array Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Like Likes the page, if parameter is set to false then it Unlikes the page. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPageTextPart.html": {
    "href": "cmdlets/Set-PnPPageTextPart.html",
    "title": "Set-PnPPageTextPart | PnP PowerShell",
    "keywords": "Set-PnPPageTextPart SYNOPSIS Sets text part properties. SYNTAX Set-PnPPageTextPart -Page <PagePipeBind> -InstanceId <Guid> -Text <String> [-Connection <PnPConnection>] DESCRIPTION Sets the rendered text in existing client side text component. EXAMPLES EXAMPLE 1 Set-PnPPageTextPart -Page Home -InstanceId a2875399-d6ff-43a0-96da-be6ae5875f82 -Text \"MyText\" Sets the text of the client side text component. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InstanceId The instance id of the text component. Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Page The name of the page. Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Text Text to set. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPageWebPart.html": {
    "href": "cmdlets/Set-PnPPageWebPart.html",
    "title": "Set-PnPPageWebPart | PnP PowerShell",
    "keywords": "Set-PnPPageWebPart SYNOPSIS Sets web part properties. SYNTAX Set-PnPPageWebPart -Page <PagePipeBind> -Identity <WebPartPipeBind> [-Title <String>] [-PropertiesJson <String>] [-Connection <PnPConnection>] DESCRIPTION Sets specific client side web part properties. Notice that the title parameter will only set the -internal- title of web part. The title which is shown in the UI will, if possible, have to be set using the PropertiesJson parameter. Use Get-PnPPageComponent to retrieve the instance id and properties of a web part. EXAMPLES EXAMPLE 1 Set-PnPPageWebPart -Page Home -Identity a2875399-d6ff-43a0-96da-be6ae5875f82 -PropertiesJson \"`\"Property1`\"=`\"Value1`\"\" Sets the properties of the client side web part. EXAMPLE 2 Set-PnPPageWebPart -Page Home -Identity a2875399-d6ff-43a0-96da-be6ae5875f82 -PropertiesJson $myproperties Sets the properties of the client side web part given in the $myproperties variable. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the web part. This can be the web part instance id or the title of a web part. Type: WebPartPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Page The name of the page. Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -PropertiesJson Sets the properties as a JSON string. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Title Sets the internal title of the web part. Notice that this will NOT set a visible title. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPlannerBucket.html": {
    "href": "cmdlets/Set-PnPPlannerBucket.html",
    "title": "Set-PnPPlannerBucket | PnP PowerShell",
    "keywords": "Set-PnPPlannerBucket SYNOPSIS Required Permissions Microsoft Graph API: One of Tasks.ReadWrite, Tasks.ReadWrite.All, Group.ReadWrite.All Updates an existing Planner bucket. SYNTAX By Group Set-PnPPlannerBucket -Bucket <PlannerBucketPipeBind> -Group <PlannerGroupPipeBind> -Plan <PlannerPlanPipeBind> -Name <String> By Plan Id Set-PnPPlannerBucket -Bucket <PlannerBucketPipeBind> -PlanId <String> -Name <String> DESCRIPTION This cmdlet updates an existing Planner bucket. EXAMPLES EXAMPLE 1 Set-PnPPlannerBucket -Bucket \"Todos\" -Group \"Marketing\" -Plan \"Conference Plan\" -Name \"Pre-conf Todos\" This example renames the bucket called \"Todos\" to \"Pre-conf Todos\". PARAMETERS -Bucket Specify the bucket or bucket id to update. Type: PlannerBucketPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Specify the group id or name of the group owning the plan. Type: PlannerGroupPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Specify the new name of the bucket. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Plan Specify the name or id of the plan to retrieve the buckets for. Type: PlannerPlanPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PlanId The id of the plan to find the bucket in. Type: String Parameter Sets: By Plan Id Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPlannerConfiguration.html": {
    "href": "cmdlets/Set-PnPPlannerConfiguration.html",
    "title": "Set-PnPPlannerConfiguration | PnP PowerShell",
    "keywords": "Set-PnPPlannerConfiguration SYNOPSIS Required Permissions Azure: tasks.office.com Allows the Microsoft Planner configuration of the tenant to be set. SYNTAX Set-PnPPlannerConfiguration [-IsPlannerAllowed <boolean>] [-AllowRosterCreation <boolean>] [-AllowTenantMoveWithDataLoss <boolean>] [-AllowTenantMoveWithDataMigration <boolean>] [-AllowPlannerMobilePushNotifications <boolean>] [-AllowCalendarSharing <boolean>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows the Microsoft Planner tenant configuration to be changed. EXAMPLES EXAMPLE 1 Set-PnPPlannerConfiguration -AllowRosterCreation:$false -IsPlannerAllowed:$true This example configures Microsoft Planner to be enabled and disallows Roster plans to be created. EXAMPLE 2 Set-PnPPlannerConfiguration -AllowPlannerMobilePushNotifications $false This example disallows direct push notifications. PARAMETERS -IsPlannerAllowed Allows configuring if Microsoft Planner is enabled on the tenant. Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowRosterCreation Allows configuring whether the creation of Roster containers (Planner plans without Microsoft 365 Groups) is allowed. Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowTenantMoveWithDataLoss Allows configuring whether a tenant move into a new region is currently authorized. Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowTenantMoveWithDataMigration Allows configuring whether a tenant move with data migration is authorized. Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowPlannerMobilePushNotifications Allows configuring whether the direct push notifications are enabled where contents of the push notification are being sent directly through Apple's or Google's services to get to the iOS or Android client. Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCalendarSharing Allows configuring whether Outlook calendar sync is enabled. Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPlannerPlan.html": {
    "href": "cmdlets/Set-PnPPlannerPlan.html",
    "title": "Set-PnPPlannerPlan | PnP PowerShell",
    "keywords": "Set-PnPPlannerPlan SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Updates an existing Planner plan. SYNTAX By Group Set-PnPPlannerPlan -Group <PlannerGroupPipeBind> -Plan <PlannerPlanPipeBind> -Title <String> [-Connection <PnPConnection>] By Plan Id Set-PnPPlannerPlan -PlanId <String> -Title <String> [-Connection <PnPConnection>] DESCRIPTION This cmdlet updates an existing planner plan. EXAMPLES EXAMPLE 1 Set-PnPPlannerPlan -Group \"Marketing\" -Plan \"Conference\" -Title \"Conference 2020\" This example renames the \"Conference\" plan to \"Conference 2020\". PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Specify the group id or name of the group owning the plan. Type: PlannerGroupPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Plan Specify the id or name of the plan to update. Type: PlannerPlanPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PlanId Specify the id of the plan to update. Type: String Parameter Sets: By Plan Id Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The new title of the plan. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPlannerTask.html": {
    "href": "cmdlets/Set-PnPPlannerTask.html",
    "title": "Set-PnPPlannerTask | PnP PowerShell",
    "keywords": "Set-PnPPlannerTask SYNOPSIS Required Permissions Microsoft Graph API: One of Tasks.ReadWrite, Tasks.ReadWrite.All, Group.ReadWrite.All Updates an existing task. SYNTAX Set-PnPPlannerTask -TaskId <String> [-Title <String>] [-Bucket <PlannerBucketPipeBind>] [-PercentComplete <Int32>] [-DueDateTime <DateTime>] [-StartDateTime <DateTime>] [-AssignedTo <String[]] [-Priority <Int32>] [-Description <String>] [-Connection <PnPConnection>] DESCRIPTION This cmdlets allows you to update an existing task in a Planner plan. EXAMPLES EXAMPLE 1 Set-PnPPlannerTask -TaskId RSNNbc4HM0e7jt-btAKtTZYAFAf0 -Title \"New Title\" -StartDateTime 2020-10-01 This updates the task with the specified id and sets the title to \"New Title\" and sets the start date to the first of October 2020. EXAMPLE 2 Set-PnPPlannerTask -TaskId RSNNbc4HM0e7jt-btAKtTZYAFAf0 -Title \"New Title\" -Bucket \"To do\" This updates the task with the specified id and moves to the bucket \"To do\". EXAMPLE 3 Set-PnPPlannerTask -TaskId RSNNbc4HM0e7jt-btAKtTZYAFAf0 -AssignedTo \"user@contoso.com\",\"manager@contoso.com\" This updates the task with the specified id and replaces the assigned users with the ones specified. PARAMETERS -AssignedTo Specify the email(s) of the user to assign the task to. Notice that this will replace existing assignments with the ones specified here. Type: String[] Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Bucket Specify the bucket name or ID to move the task to. Type: PlannerBucketPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Sets the description (notes) of the task. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DueDateTime Specify the due date. Type: DateTime Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PercentComplete Defines the percentage of completeness of the task. Type: Int32 Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Priority Sets the priority of the task. Value should be a number between 0 and 10. values 0 and 1 are interpreted as Urgent values 2, 3 and 4 are interpreted as Important values 5, 6 and 7 are interpreted as Medium values 8, 9 and 10 are interpreted as Low Type: Int32 Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartDateTime Defines the start date of the task. Type: DateTime Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TaskId The Id of the task to update. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Sets the new title of the task. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPlannerUserPolicy.html": {
    "href": "cmdlets/Set-PnPPlannerUserPolicy.html",
    "title": "Set-PnPPlannerUserPolicy | PnP PowerShell",
    "keywords": "Set-PnPPlannerUserPolicy SYNOPSIS Required Permissions Azure: tasks.office.com Allows a Microsoft Planner user policy to be set for a specific user. SYNTAX Set-PnPPlannerUserPolicy -Identity <string> [-BlockDeleteTasksNotCreatedBySelf <boolean>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows a Microsoft Planner user policy to be set for the provided user. EXAMPLES EXAMPLE 1 Set-PnPPlannerUserPolicy -Identity \"johndoe@contoso.onmicrosoft.com\" Sets the Microsoft Planner user policy for the provided user. PARAMETERS -Identity Azure Active Directory user identifier or user principal name of the user to create the Microsoft Planner policy for. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BlockDeleteTasksNotCreatedBySelf Allows the user for which the policy gets created to be blocked from deleting tasks that have not been created by the user itself. Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPowerAppByPassConsent.html": {
    "href": "cmdlets/Set-PnPPowerAppByPassConsent.html",
    "title": "Set-PnPPowerAppByPassConsent | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPPowerAppByPassConsent SYNOPSIS Required Permissions Azure: management.azure.com Sets the consent bypass flag of a Power Apps for a given environment SYNTAX Set-PnPPowerAppByPassConsent [-Environment <PowerPlatformEnvironmentPipeBind>] [-Identity <PowerAppPipeBind> -ByPassConsent <Boolean>] [-Connection <PnPConnection>] [-Verbose] DESCRIPTION This command can be used to set the bypassConsent flag of an PowerApps to true or false. Set the value as true so users aren't required to authorize API connections for the targeted app. To Remove the consent set the value false so users are required to authorize API connections for the targeted app EXAMPLES Example 1 Set-PnPPowerAppByPassConsent -Environment (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") -Identity fba63225-baf9-4d76-86a1-1b42c917a182 -ByPassConsent true This sets the bypassConsent flag on the specified Power App in the provided environment to true Example 2 Set-PnPPowerAppByPassConsent -Identity fba63225-baf9-4d76-86a1-1b42c917a182 -ByPassConsent false This sets the bypassConsent flag on the specified Power App in the default environment PARAMETERS -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Identity The Id of the app to retrieve. Type: PowerAppPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ByPassConsent The value to set for the bypassConsent flag of the app. Type: Boolean Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Set-AdminPowerAppApisToBypassConsent Clear-AdminPowerAppApisToBypassConsent Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPropertyBagValue.html": {
    "href": "cmdlets/Set-PnPPropertyBagValue.html",
    "title": "Set-PnPPropertyBagValue | PnP PowerShell",
    "keywords": "Set-PnPPropertyBagValue SYNOPSIS Adds a new or updates an existing property bag value. SYNTAX Web Set-PnPPropertyBagValue -Key <String> -Value <String> [-Indexed] [-Force] [-Connection <PnPConnection>] Folder Set-PnPPropertyBagValue -Key <String> -Value <String> [-Folder <String>] [-Force] [-Connection <PnPConnection>] DESCRIPTION Updates an existing property bag value or adds it as a new key\\value pair if it doesn't exist yet. If working with a modern SharePoint Online site or having noscript enabled, you will have to disable this yourself temporarily using Set-PnPTenantSite -Url <url> -NoScriptSite:$false to be able to make the change. EXAMPLES EXAMPLE 1 Set-PnPPropertyBagValue -Key MyKey -Value MyValue This sets or adds a value to the current web property bag. EXAMPLE 2 Set-PnPPropertyBagValue -Key MyKey -Value MyValue -Folder / This sets or adds a value to the root folder of the current web. EXAMPLE 3 Set-PnPPropertyBagValue -Key MyKey -Value MyValue -Folder /MyFolder This sets or adds a value to the folder MyFolder which is located in the root folder of the current web. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder Site relative url of the folder. See examples for use. Type: String Parameter Sets: Folder Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Indexed Sets the key to be indexed, which makes the property bag value searchable. Type: SwitchParameter Parameter Sets: Web Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Key of the property to set. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Value Value to set. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to remove the value from the property bag. It will also temporarily enable scripts on the site and then disable it after setting property bag value. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPRequestAccessEmails.html": {
    "href": "cmdlets/Set-PnPRequestAccessEmails.html",
    "title": "Set-PnPRequestAccessEmails | PnP PowerShell",
    "keywords": "Set-PnPRequestAccessEmails SYNOPSIS Sets Request Access Email on a web SYNTAX Set-PnPRequestAccessEmails [-Emails <String[]>] [-Disabled] [-Connection <PnPConnection>] DESCRIPTION Enables or disables access requests to be sent and configures which e-mail address should receive these requests. The web you apply this on must have unique rights. EXAMPLES EXAMPLE 1 Set-PnPRequestAccessEmails -Emails someone@example.com This will enable requesting access and send the requests to the provided e-mail address EXAMPLE 2 Set-PnPRequestAccessEmails -Disabled This will disable the ability to request access to the site EXAMPLE 3 Set-PnPRequestAccessEmails -Disabled:$false This will enable the ability to request access to the site and send the requests to the default owners of the site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Disabled Enables or disables access to be requested Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Emails Email address to send the access requests to Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPRetentionLabel.html": {
    "href": "cmdlets/Set-PnPRetentionLabel.html",
    "title": "Set-PnPRetentionLabel | PnP PowerShell",
    "keywords": "Set-PnPRetentionLabel SYNOPSIS Sets a retention label on the specified list or library, or on specified items within a list or library. Use Reset-PnPRetentionLabel to remove the label again. SYNTAX Set on a list Set-PnPRetentionLabel [-List] <ListPipeBind> -Label <String> [-SyncToItems <Boolean>] [-BlockDeletion <Boolean>] [-BlockEdit <Boolean>] [-Connection <PnPConnection>] Set on items in bulk Set-PnPRetentionLabel [-List] <ListPipeBind> -Label <String> -ItemIds <List<Int32>> [-BatchSize <Int32>] [-Connection <PnPConnection>] [-Verbose] DESCRIPTION Allows setting a retention label on a list or library and its items, or sets the retention label for specified items in a list or a library. Does not work for sensitivity labels. When setting retention label to specified items, cmdlet allows passing of unlimited number of items - items will be split and processed in batches (CSOM method SetComplianceTagOnBulkItems has a hard count limit on number of processed items in one go). If needed, batch size may be adjusted with BatchSize parameter. EXAMPLES EXAMPLE 1 Set-PnPRetentionLabel -List \"Demo List\" -Label \"Project Documentation\" This sets an O365 label on the specified list or library. EXAMPLE 2 Set-PnPRetentionLabel -List \"Demo List\" -Label \"Project Documentation\" -SyncToItems $true This sets an O365 label on the specified list or library and sets the label to all the items in the list and library as well. EXAMPLE 3 Set-PnPRetentionLabel -List \"Demo List\" -ItemIds @(1,2,3) -Label \"My demo label\" Sets \"My demo label\" retention label for items with ids 1, 2 and 3 on a list \"Demo List\". PARAMETERS -BatchSize Optional batch size when setting a label on specified items. Type: Int32 Parameter Sets: (BulkItems) Required: True Position: Named Default value: 25 Accept pipeline input: False Accept wildcard characters: False -BlockDeletion Block deletion of items in the library. This parameter has been deprecated because overriding Purview retention label settings has been deprecated in SharePoint Online. This parameter will be removed in the next major release. Type: Boolean Parameter Sets: (List) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BlockEdit Block editing of items in the library. This parameter has been deprecated because overriding Purview retention label settings has been deprecated in SharePoint Online. This parameter will be removed in the next major release. Type: Boolean Parameter Sets: (List) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ItemIds List of item IDs to set label. Type: List<Int32> Parameter Sets: (BulkItems) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Label The name of the retention label. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -SyncToItems Apply label to existing items in the library. Type: Boolean Parameter Sets: (List) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False ## RELATED LINKS [Microsoft 365 Patterns and Practices](https://aka.ms/m365pnp) [Microsoft Learn article on applying retention labels](https://learn.microsoft.com/en-us/sharepoint/dev/apis/csom-methods-for-applying-retention-labels)"
  },
  "cmdlets/Set-PnPRoleDefinition.html": {
    "href": "cmdlets/Set-PnPRoleDefinition.html",
    "title": "Set-PnPRoleDefinition | PnP PowerShell",
    "keywords": "Set-PnPRoleDefinition SYNOPSIS Updates an existing Role Definition (Permission Level) in the site collection in the current context. SYNTAX Set-PnPRoleDefinition -Identity <RoleDefinitionPipeBind> [-NewRoleName <String>] [-Description <String>] [-Order <Int32>] [-SelectAll] [-ClearAll] [-Select <PermissionKind[]>] [-Clear <PermissionKind[]>] [-Connection <PnPConnection>] DESCRIPTION Allows updating an existing Role Definition (Permission Level) in the site collection in the current context. EXAMPLES EXAMPLE 1 Set-PnPRoleDefinition -Identity \"CustomPerm\" -Clear EditListItems Removes the EditListItems flag from an existing permission level. EXAMPLE 2 Set-PnPRoleDefinition -Identity \"NoDelete\" -SelectAll -Clear DeleteListItems Selects all flags for an existing permission level except DeleteListItems. EXAMPLE 3 Set-PnPRoleDefinition -Identity \"CustomPerm\" -NewRoleName \"NoDelete\" -Description \"Contribute without delete\" Changes the name and description of an existing permission level. EXAMPLE 4 Set-PnPRoleDefinition -Identity \"CustomPerm\" -Order 500 Changes the order in which the permission level is displayed. PARAMETERS -Clear Specifies permission flag(s) to disable. Please visit https://learn.microsoft.com/previous-versions/office/sharepoint-csom/ee536458(v%3Doffice.15) for the PermissionKind enum. Type: PermissionKind[] Parameter Sets: (All) Accepted values: EmptyMask, ViewListItems, AddListItems, EditListItems, DeleteListItems, ApproveItems, OpenItems, ViewVersions, DeleteVersions, CancelCheckout, ManagePersonalViews, ManageLists, ViewFormPages, AnonymousSearchAccessList, Open, ViewPages, AddAndCustomizePages, ApplyThemeAndBorder, ApplyStyleSheets, ViewUsageData, CreateSSCSite, ManageSubwebs, CreateGroups, ManagePermissions, BrowseDirectories, BrowseUserInfo, AddDelPrivateWebParts, UpdatePersonalWebParts, ManageWeb, AnonymousSearchAccessWebLists, UseClientIntegration, UseRemoteAPIs, ManageAlerts, CreateAlerts, EditMyUserInfo, EnumeratePermissions, FullMask Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClearAll Clears ​all permission flags. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The new description for the permission level. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the role definition, either a RoleDefinition object or the name of the RoleDefinition. Type: RoleDefinitionPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -NewRoleName The new name for the permission level. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Order Sets the order of the permission level. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Select Specifies permission flag(s) to enable. Please visit https://learn.microsoft.com/previous-versions/office/sharepoint-csom/ee536458(v%3Doffice.15) for the PermissionKind enum. Type: PermissionKind[] Parameter Sets: (All) Accepted values: EmptyMask, ViewListItems, AddListItems, EditListItems, DeleteListItems, ApproveItems, OpenItems, ViewVersions, DeleteVersions, CancelCheckout, ManagePersonalViews, ManageLists, ViewFormPages, AnonymousSearchAccessList, Open, ViewPages, AddAndCustomizePages, ApplyThemeAndBorder, ApplyStyleSheets, ViewUsageData, CreateSSCSite, ManageSubwebs, CreateGroups, ManagePermissions, BrowseDirectories, BrowseUserInfo, AddDelPrivateWebParts, UpdatePersonalWebParts, ManageWeb, AnonymousSearchAccessWebLists, UseClientIntegration, UseRemoteAPIs, ManageAlerts, CreateAlerts, EditMyUserInfo, EnumeratePermissions, FullMask Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SelectAll Sets all permission flags. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSearchConfiguration.html": {
    "href": "cmdlets/Set-PnPSearchConfiguration.html",
    "title": "Set-PnPSearchConfiguration | PnP PowerShell",
    "keywords": "Set-PnPSearchConfiguration SYNOPSIS Sets the search configuration. SYNTAX Config Set-PnPSearchConfiguration -Configuration <String> [-Scope <SearchConfigurationScope>] [-Connection <PnPConnection>] Path Set-PnPSearchConfiguration -Path <String> [-Scope <SearchConfigurationScope>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet sets the search configuration for a single web, site collection or a tenant, using a file or a configuration string. EXAMPLES EXAMPLE 1 Set-PnPSearchConfiguration -Configuration $config Sets the search configuration for the current web. EXAMPLE 2 Set-PnPSearchConfiguration -Configuration $config -Scope Site Sets the search configuration for the current site collection. EXAMPLE 3 Set-PnPSearchConfiguration -Configuration $config -Scope Subscription Sets the search configuration for the current tenant. EXAMPLE 4 Set-PnPSearchConfiguration -Path searchconfig.xml -Scope Subscription Reads the search configuration from the specified XML file and sets it for the current tenant. PARAMETERS -Configuration Search configuration string. Type: String Parameter Sets: Config Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Path to a search configuration. Type: String Parameter Sets: Path Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Scope to apply the setting to. The default is Web. Type: SearchConfigurationScope Parameter Sets: (All) Accepted values: Web, Site, Subscription Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSearchExternalConnection.html": {
    "href": "cmdlets/Set-PnPSearchExternalConnection.html",
    "title": "Set-PnPSearchExternalConnection | PnP PowerShell",
    "keywords": "Set-PnPSearchExternalConnection SYNOPSIS Required Permissions Microsoft Graph API : One of ExternalConnection.ReadWrite.OwnedBy, ExternalConnection.ReadWrite.All Updates a connection to an external datasource for Microsoft Search SYNTAX Set-PnPSearchExternalConnection -Identity <SearchExternalConnectionPipeBind> [-Name <String>] [-Description <String>] [-AuthorizedAppIds <String[]>] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet can be used to update an external datasource connection that is being indexed into Microsoft Search through a custom connector. Use New-PnPSearchExternalConnection to create a new connector. EXAMPLES EXAMPLE 1 Set-PnPSearchExternalConnection -Identity \"pnppowershell\" -Name \"PnP PowerShell Rocks\" This will update just the name of the external connection with the provided identity to the value provided. The description will remain unchanged. EXAMPLE 2 Set-PnPSearchExternalConnection -Identity \"pnppowershell\" -Name \"PnP PowerShell Rocks\" -Description \"External content ingested using PnP PowerShell which rocks\" This will update the name and description of the external connection with the provided identity to the values provided. EXAMPLE 3 Set-PnPSearchExternalConnection -Identity \"pnppowershell\" -AuthorizedAppIds \"00000000-0000-0000-0000-000000000000\",\"11111111-1111-1111-1111-111111111111\" This will replace the application registration identifiers of which the client Ids have been provided that can add items to the index for this connection. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Unique identifier or an instance of the external connection in Microsoft Search that needs to be updated. Type: SearchExternalConnectionPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -Name The display name of the connection to be displayed in the Microsoft 365 admin center. Maximum length of 128 characters. Only provide when it needs to change. Type: String Parameter Sets: (All) Required: False Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Description of the connection displayed in the Microsoft 365 admin center. Only provide when it needs to change. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AuthorizedAppIds The client Ids of the application registrations that are allowed to add items to the index for this connection. Only provide when it needs to change. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSearchExternalItem.html": {
    "href": "cmdlets/Set-PnPSearchExternalItem.html",
    "title": "Set-PnPSearchExternalItem | PnP PowerShell",
    "keywords": "Set-PnPSearchExternalItem SYNOPSIS Required Permissions Microsoft Graph API : One of ExternalItem.ReadWrite.OwnedBy, ExternalItem.ReadWrite.All Adds or updates an external item in Microsoft Search SYNTAX Set-PnPSearchExternalItem -ItemId <String> -ConnectionId <SearchExternalConnectionPipeBind> -Properties <Hashtable> [-ContentValue <String>] [-ContentType <SearchExternalItemContentType>] [-GrantUsers <AzureADUserPipeBind[]>] [-GrantGroups <AzureADGroupPipeBind[]>] [-DenyUsers <AzureADUserPipeBind[]>] [-DenyGroups <AzureADGroupPipeBind[]>] [-GrantExternalGroups <String[]>] [-DenyExternalGroups <String[]>] [-GrantEveryone <SwitchParameter>] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet can be used to add or update an external item in Microsoft Search on custom connectors. The cmdlet will create a new external item if the item does not exist yet. If the item already exists, it will be updated. EXAMPLES EXAMPLE 1 Set-PnPSearchExternalItem -ConnectionId \"pnppowershell\" -ItemId \"12345\" -Properties @{ \"Test1\"= \"Test of this PnP PowerShell Connector\"; \"Test2\" = \"Red\",\"Blue\"; \"Test3\" = ([System.DateTime]::Now)} -ContentValue \"Sample value\" -ContentType Text -GrantEveryone This will add an item in the external Microsoft Search index with the properties as provided and grants everyone access to find the item back through Microsoft Search. It shows three types of properties you can set for an external item in the index, being a simple text, an array and a date/time value. EXAMPLE 2 Set-PnPSearchExternalItem -ConnectionId \"pnppowershell\" -ItemId \"12345\" -Properties @{ \"Test1\"= \"Test of this PnP PowerShell Connector\"; \"Test2\" = \"Red\",\"Blue\"; \"Test3\" = ([System.DateTime]::Now)} -ContentValue \"Sample value\" -ContentType Text -GrantUsers \"user@contoso.onmicrosoft.com\" This will add an item in the external Microsoft Search index with the properties as provided and grants only the user with the specified UPN access to find the item back through Microsoft Search. It shows three types of properties you can set for an external item in the index, being a simple text, an array and a date/time value. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ItemId Unique identifier of the external item in Microsoft Search. You can provide any identifier you want to identity this item. This identifier will be used to update the item if it already exists. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ConnectionId The Connection ID or connection instance of the custom connector to use. This is the ID that was entered when registering the custom connector and will indicate for which custom connector this external item is being added to the Microsoft Search index. Type: SearchExternalConnectionPipeBind Parameter Sets: (All) Required: True Default value: None Accept pipeline input: True Accept wildcard characters: False -Properties A hashtable with all the managed properties you want to provide for this external item. The key of the hashtable is the name of the managed property, the value is the value you want to provide for this managed property. The value can be a string, a string array or a DateTime object. Type: Hashtable Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentValue A summary of the content that is being indexed. Can be used to display in the search result. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType Defines the type of content used in the ContentValue attribue. Defaults to Text. Type: SearchExternalItemContentType Parameter Sets: (All) Accepted values: Text, Html Required: False Position: Named Default value: Text Accept pipeline input: False Accept wildcard characters: False -GrantUsers When provided, the external item will only be shown to the users provided through this parameter. It can contain one or multiple users by providing AzureADUser objects, user principal names or Entra user IDs. Type: AzureADUserPipeBind[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GrantGroups When provided, the external item will only be shown to the users which are members of the groups provided through this parameter. It can contain one or multiple groups by providing AzureADGroup objects, group names or Entra group IDs. Type: AzureADGroupPipeBind[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DenyUsers When provided, the external item not be shown to the users provided through this parameter. It can contain one or multiple users by providing AzureADUser objects, user principal names or Entra user IDs. Type: AzureADUserPipeBind[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DenyGroups When provided, the external item will not be shown to the users which are members of the groups provided through this parameter. It can contain one or multiple groups by providing AzureADGroup objects, group names or Entra group IDs. Type: AzureADGroupPipeBind[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GrantExternalGroups When provided, the external item will be shown to the groups provided through this parameter. It can contain one or multiple users by providing the external group identifiers. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DenyExternalGroups When provided, the external item will not be shown to the groups provided through this parameter. It can contain one or multiple users by providing the external group identifiers. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GrantEveryone When provided, the external item will be shown to everyone. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSearchExternalSchema.html": {
    "href": "cmdlets/Set-PnPSearchExternalSchema.html",
    "title": "Set-PnPSearchExternalSchema | PnP PowerShell",
    "keywords": "Set-PnPSearchExternalSchema SYNOPSIS Required Permissions Microsoft Graph API : One of ExternalConnection.ReadWrite.OwnedBy, ExternalConnection.ReadWrite.All Updates the schema set on a connection to an external datasource belonging to Microsoft Search SYNTAX By textual schema Set-PnPSearchExternalSchema -ConnectionId <SearchExternalConnectionPipeBind> -SchemaAsText <String> [-Verbose] [-Connection <PnPConnection>] By schema instance Set-PnPSearchExternalSchema -ConnectionId <SearchExternalConnectionPipeBind> -Schema <Model.Graph.MicrosoftSearch.ExternalSchema> [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet can be used to initially set or update the current schema set on a connection to an external datasource that is being indexed into Microsoft Search through a custom connector. The URL returned can be queried in Microsoft Graph to check on the status of the schema update. EXAMPLES EXAMPLE 1 Set-PnPSearchExternalSchema -ConnectionId \"pnppowershell\" -SchemaAsText '{ \"baseType\": \"microsoft.graph.externalItem\", \"properties\": [ { \"name\": \"ticketTitle\", \"type\": \"String\", \"isSearchable\": \"true\", \"isRetrievable\": \"true\", \"labels\": [ \"title\" ] }, { \"name\": \"priority\", \"type\": \"String\", \"isQueryable\": \"true\", \"isRetrievable\": \"true\", \"isSearchable\": \"false\" }, { \"name\": \"assignee\", \"type\": \"String\", \"isRetrievable\": \"true\" } ] }' This will set the provided JSON schema to be used for the external search connection with the provided name EXAMPLE 2 $schema = Get-PnPSearchExternalSchema -ConnectionId \"pnppowershell1\" Set-PnPSearchExternalSchema -ConnectionId \"pnppowershell2\" -Schema $schema This will take the current schema set on the external search connection named 'pnppowershell1' and sets the same schema on the external search connection named 'pnppowershell2' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ConnectionId Unique identifier or instance of the external connection in Microsoft Search to set the schema for Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -SchemaAsText The textual representation of the schema to set on the external connection Type: String Parameter Sets: By textual schema Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Schema An instance of a schema to set on the external connection Type: String Parameter Sets: By schema instance Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSearchSettings.html": {
    "href": "cmdlets/Set-PnPSearchSettings.html",
    "title": "Set-PnPSearchSettings | PnP PowerShell",
    "keywords": "Set-PnPSearchSettings SYNOPSIS Sets search settings for a site. SYNTAX Set-PnPSearchSettings [-SearchBoxInNavBar <SearchBoxInNavBarType>] [-SearchPageUrl <String>] [-SearchBoxPlaceholderText <String>] [-SearchScope <SearchScopeType>] [-Scope <SearchSettingsScope>] [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows to modify search settings for a site. EXAMPLES EXAMPLE 1 Set-PnPSearchSettings -SearchBoxInNavBar Hidden -Scope Site This example hides the suite bar search box on all pages and sites in the site collection. EXAMPLE 2 Set-PnPSearchSettings -SearchBoxInNavBar Hidden -Scope Web Example 2 hides the suite bar search box on all pages in the current site. EXAMPLE 3 Set-PnPSearchSettings -SearchPageUrl \"https://contoso.sharepoint.com/sites/mysearch/SitePages/search.aspx\" Redirects the suite bar search box in the site to a custom URL EXAMPLE 4 Set-PnPSearchSettings -SearchPageUrl \"\" This example clears the suite bar search box redirect URL and reverts to the default behavior. EXAMPLE 5 Set-PnPSearchSettings -SearchPageUrl \"https://contoso.sharepoint.com/sites/mysearch/SitePages/search.aspx\" -Scope Site Redirects classic search to a custom URL. EXAMPLE 6 Set-PnPSearchSettings -SearchScope Tenant Example 6 sets default behavior of the suite bar search box to show tenant wide results instead of site or hub scoped results. EXAMPLE 7 Set-PnPSearchSettings -SearchScope Hub Sets default behavior of the suite bar search box to show hub results instead of site results on an associated hub site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Do not ask for confirmation. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Scope to apply the setting to. Possible values: Web (default), Site. For a root site, the scope does not matter. Type: SearchSettingsScope Parameter Sets: (All) Accepted values: Site, Web Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SearchBoxInNavBar Set the scope of which the suite bar search box shows. Possible values: Inherit, AllPages, ModernOnly, Hidden. Type: SearchBoxInNavBarType Parameter Sets: (All) Accepted values: Inherit, AllPages, ModernOnly, Hidden Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SearchBoxPlaceholderText Set the placeholder text displayed in the search box. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SearchPageUrl Set the URL where the search box should redirect to. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SearchScope Set the search scope of the suite bar search box. Possible values: DefaultScope, Tenant, Hub, Site. Type: SearchScopeType Parameter Sets: (All) Accepted values: DefaultScope, Tenant, Hub, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSite.html": {
    "href": "cmdlets/Set-PnPSite.html",
    "title": "Set-PnPSite | PnP PowerShell",
    "keywords": "Set-PnPSite SYNOPSIS Sets site collection properties. SYNTAX Set Properties Set-PnPSite [-Identity <String>] [-Classification <String>] [-DisableFlows] [-LogoFilePath <String>] [-Sharing <SharingCapabilities>] [-StorageMaximumLevel <Int64>] [-StorageWarningLevel <Int64>] [-AllowSelfServiceUpgrade] [-NoScriptSite] [-Owners <System.Collections.Generic.List<[System.String]>] [-CommentsOnSitePagesDisabled] [-DefaultLinkPermission <SharingPermissionType>] [-DefaultSharingLinkType <SharingLinkType>] [-DefaultLinkToExistingAccess <Boolean>] [-DefaultLinkToExistingAccessReset] [-DisableAppViews <AppViewsPolicy>] [-DisableCompanyWideSharingLinks <CompanyWideSharingLinksPolicy>] [-DisableSharingForNonOwners] [-LocaleId <UInt32>] [-RestrictedToGeo <RestrictedToRegion>] [-SocialBarOnSitePagesDisabled] [-AnonymousLinkExpirationInDays <Int32>] [-RequestFilesLinkExpirationInDays <Int32>] [-OverrideTenantAnonymousLinkExpirationPolicy] [-MediaTranscription <MediaTranscriptionPolicyType>] [-SensitivityLabel <Guid>] [-RequestFilesLinkEnabled <Boolean>] [-ScriptSafeDomainName <string>] [-BlockDownloadPolicy <Boolean>] [-ExcludeBlockDownloadPolicySiteOwners <Boolean>] [-ExcludedBlockDownloadGroupIds <Guid[]>] [-ListsShowHeaderAndNavigation <Boolean>] [-RestrictContentOrgWideSearch <Boolean>] [-CanSyncHubSitePermissions <SwitchParameter>] [-Connection <PnPConnection>] Set Lock State Set-PnPSite [-Identity <String>] [-LockState <SiteLockState>] [-Wait] [-Connection <PnPConnection>] DESCRIPTION Allows to modify a site properties. EXAMPLES EXAMPLE 1 Set-PnPSite -Classification \"HBI\" Sets the current site classification tag to HBI EXAMPLE 2 Set-PnPSite -Classification $null Un-sets the current site classification tag EXAMPLE 3 Set-PnPSite -DisableFlows Disables Microsoft Flow for this site, and also hides the Flow button from the ribbon EXAMPLE 4 Set-PnPSite -DisableFlows:$false Enables Microsoft Flow for this site EXAMPLE 5 Set-PnPSite -LogoFilePath c:\\images\\mylogo.png Sets the logo if the site is a modern team site without a Microsoft 365 Group behind it. Check the notes below for options for other types of sites. EXAMPLE 6 Set-PnPSite -NoScriptSite $false Allows custom script on a specific site. See Allow or prevent custom script for more information. PARAMETERS -AllowSelfServiceUpgrade Specifies if the site administrator can upgrade the site collection. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AnonymousLinkExpirationInDays Specifies all anonymous/anyone links that have been created (or will be created) will expire after the set number of days. Only applies if OverrideTenantAnonymousLinkExpirationPolicy is set to true. To remove the expiration requirement, set the value to zero (0). Type: Int32 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequestFilesLinkExpirationInDays Specifies the number of days before a Request Files link expires for the site. The value can be from 0 to 730 days. Type: Int32 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Classification The classification tag to set. This is the old classification/labeling method. Set it to $null to remove the classification entirely. Type: String Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SensitivityLabel The Microsoft Purview sensitivity label to set. This is the new classification/labeling method. Type: String Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommentsOnSitePagesDisabled Specifies if comments on site pages are enabled or disabled. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultLinkPermission Specifies the default link permission for the site collection. None - Respect the organization default link permission. View - Sets the default link permission for the site to \"view\" permissions. Edit - Sets the default link permission for the site to \"edit\" permissions Type: SharingPermissionType Parameter Sets: Set Properties Accepted values: None, View, Edit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultSharingLinkType Specifies the default link type for the site collection. None - Respect the organization default sharing link type. AnonymousAccess - Sets the default sharing link for this site to an Anonymous Access or Anyone link. Internal - Sets the default sharing link for this site to the \"organization\" link or company shareable link. Direct - Sets the default sharing link for this site to the \"Specific people\" link Type: SharingLinkType Parameter Sets: Set Properties Accepted values: None, Direct, Internal, AnonymousAccess Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultLinkToExistingAccess When set to $true, the DefaultSharingLinkType will be overridden and the default sharing link will be All People with Existing Access link (which does not modify permissions). When set to $false (the default), the default sharing link type is controlled by the DefaultSharingLinkType parameter Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -DisableAppViews Determines whether the App Views feature is disabled in the site collection. Type: AppViewsPolicy Parameter Sets: Set Properties Accepted values: Unknown, Disabled, NotDisabled Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableCompanyWideSharingLinks Determines whether company-wide sharing links are disabled in collection. Type: CompanyWideSharingLinksPolicy Parameter Sets: Set Properties Accepted values: Unknown, Disabled, NotDisabled Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableFlows Disables Microsoft Flow for this site. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableSharingForNonOwners Specifies whether non-owners should be prevented from inviting new users to the site. Setting this will also disable Access Request Emails. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HidePeoplePreviewingFiles Allows hiding of the presence indicators of users simultaneously editing files. Type: String Parameter Sets: (All) Aliases: Url Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The url of the site collection. Type: String Parameter Sets: (All) Aliases: Url Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LocaleId Specifies the language of this site collection. Type: UInt32 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LockState Sets the lockState of a site collection. Type: SiteLockState Parameter Sets: Set Lock State Accepted values: Unlock, NoAccess, ReadOnly Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LogoFilePath Sets the logo of the site if it is a modern team site without a Microsoft 365 Group behind it. Provide a full path to a local image file on your disk which you want to use as the site logo. The logo will be uploaded automatically to SharePoint. If you want to set the logo for a classic site, use Set-PnPWeb -SiteLogoUrl instead. If the modern site has a Microsoft 365 Group behind it, use Set-PnPWebHeader -SiteLogoUrl instead. Type: String Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoScriptSite Specifies if a site allows custom script or not. See Allow or prevent custom script for more information. Type: SwitchParameter Parameter Sets: Set Properties Aliases: DenyAndAddCustomizePages Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OverrideTenantAnonymousLinkExpirationPolicy Specifies whether to use company-wide or a site collection level anonymous links expiration policy. Set it to true to get advantage of AnonymousLinkExpirationInDays. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners Specifies owner(s) to add as site collection administrators. They will be added as additional site collection administrators. Existing administrators will stay. Can be both users and groups. Type: System.Collections.Generic.List`1[System.String] Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RestrictedToGeo Specifies the Geo/Region restrictions of this site. Type: RestrictedToRegion Parameter Sets: Set Properties Accepted values: NoRestriction, BlockMoveOnly, BlockFull, Unknown Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Sharing Specifies what the sharing capabilities are for the site. Possible values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly Type: SharingCapabilities Parameter Sets: Set Properties Accepted values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SocialBarOnSitePagesDisabled Disables or enables the Social Bar for site collection. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StorageMaximumLevel Specifies the storage quota for this site collection in megabytes. This value must not exceed the company's available quota. Type: Int64 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StorageWarningLevel Specifies the warning level for the storage quota in megabytes. This value must not exceed the values set for the StorageMaximumLevel parameter Type: Int64 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MediaTranscription When the feature is enabled, videos can have transcripts generated on demand or generated automatically in certain scenarios. This is the default because the policy is default on. If a video owner decides they don’t want the transcript, they can always hide or delete it from that video. Type: MediaTranscriptionPolicyType Parameter Sets: Set Properties Accepted values: Enabled, Disabled Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequestFilesLinkEnabled Allows configuring whether users will be able to create anonymous requests for people to upload files regardless of the Share with anyone link configuration setting for this particular site collection. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ScriptSafeDomainName Allow contributors to insert iframe only from the specified domains only Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RestrictedAccessControl To enable restricted access control on a group-connected or Teams-connected site Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RestrictContentOrgWideSearch Allows for applying the Restricted Content Discoverability (RCD) setting to a site Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BlockDownloadPolicy Set this to true to block download of files from SharePoint sites or OneDrive Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludeBlockDownloadPolicySiteOwners Set this to true to exempts site owners from the block download policy so that they can fully download any content for the site. Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludedBlockDownloadGroupIds Exempts users from the mentioned groups from this policy and they can fully download any content for the site. Type: GUID[] Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListsShowHeaderAndNavigation Set a property on a site collection to make all lists always load with the site elements intact. Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CanSyncHubSitePermissions Sets value if syncing hub site permissions to this associated site is allowed. Type: Switch Parameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait Wait for the operation to complete Type: SwitchParameter Parameter Sets: Set Lock State Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSiteArchiveState.html": {
    "href": "cmdlets/Set-PnPSiteArchiveState.html",
    "title": "Set-PnPSiteArchiveState | PnP PowerShell",
    "keywords": "Set-PnPSiteArchiveState SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Sets the archived state of the site. Can be used to archive and reactivate sites. SYNTAX Set-PnPSiteArchiveState -Identity <SPOSitePipeBind> -ArchiveState <SPOArchiveState> [-NoWait] [-Force] DESCRIPTION Use this cmdlet to change the archive status of the site. You must be a SharePoint Online administrator or Global administrator and be a site collection administrator to run the cmdlet. Microsoft 365 Archive needs to be enabled for the organization to be able to use this feature. EXAMPLES Example 1 Set-PnPSiteArchiveState https://contoso.sharepoint.com/sites/Marketing -ArchiveState Archived This example marks the site as Archived. For seven days after the operation, the site will remain in a \"RecentlyArchived\" state, where any reactivations will be free and instantaneous. If a site is reactivated after seven days, any reactivations will be charged and will take time. Example 2 Set-PnPSiteArchiveState https://contoso.sharepoint.com/sites/Marketing -ArchiveState Active This example triggers the reactivation of a site. If the site is reactivated from the \"RecentlyArchived\" state, it will become available instantaneously. If the site is reactivated from the \"FullyArchived\" state, it may take time for it to be reactivated. PARAMETERS -Identity Specifies the full URL of the SharePoint Online site collection that needs to be renamed. Type: SPOSitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -ArchiveState Sets the archived state of the site. Valid values are Archived, Active. Type: SPOArchiveState Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoWait If specified the task will return immediately after creating the archive state site job. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked for changing the archive state. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSiteClassification.html": {
    "href": "cmdlets/Set-PnPSiteClassification.html",
    "title": "Set-PnPSiteClassification | PnP PowerShell",
    "keywords": "Set-PnPSiteClassification SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.Read.All, Directory.ReadWrite.All (see description below) Allows placing a classic site classification on the current site. SYNTAX Set-PnPSiteClassification -Identity <String> [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows for setting a classic site classification on the currently connected to site. If the site has a Microsoft 365 Group behind it, the classification will be placed on the Microsoft 365 Group and will require either Directory.Read.All or Directory.ReadWrite.All application permissions on Microsoft Graph. If it does not have a Microsoft 365 Group behind it, it will set the site classification on the SharePoint Online site and will not require Microsoft Graph permissions. Use Get-PnPAvailableSiteClassification to get an overview of the available site classifications on the tenant. For the new Microsoft Purview sensitivity labels, use Set-PnPSiteSensitivityLabel instead. EXAMPLES EXAMPLE 1 Set-PnPSiteClassification -Identity \"LBI\" Sets the \"LBI\" site classification on the current site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the name of the classification tag. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSiteClosure.html": {
    "href": "cmdlets/Set-PnPSiteClosure.html",
    "title": "Set-PnPSiteClosure | PnP PowerShell",
    "keywords": "Set-PnPSiteClosure SYNOPSIS Opens or closes a site which has a site policy applied SYNTAX Set-PnPSiteClosure -State <ClosureState> [-Connection <PnPConnection>] DESCRIPTION Allows to open or close a site which has a site policy applied. EXAMPLES EXAMPLE 1 Set-PnPSiteClosure -State Open This opens a site which has been closed and has a site policy applied. EXAMPLE 2 Set-PnPSiteClosure -State Closed This closes a site which is open and has a site policy applied. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -State The state of the site Type: ClosureState Parameter Sets: (All) Accepted values: Open, Closed Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSiteDesign.html": {
    "href": "cmdlets/Set-PnPSiteDesign.html",
    "title": "Set-PnPSiteDesign | PnP PowerShell",
    "keywords": "Set-PnPSiteDesign SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Updates a site design on the current tenant. SYNTAX Set-PnPSiteDesign -Identity <TenantSiteDesignPipeBind> [-Title <String>] [-SiteScriptIds <GuidPipeBind[]>] [-Description <String>] [-IsDefault] [-PreviewImageAltText <String>] [-PreviewImageUrl <String>] [-WebTemplate <SiteWebTemplate>] [-Version <Int32>] [-ThumbnailUrl <String>] [-DesignPackageId <Guid>] [-Connection <PnPConnection>] DESCRIPTION Allows to update a site design on the current tenant. EXAMPLES EXAMPLE 1 Set-PnPSiteDesign -Identity 046e2e76-67ba-46ca-a5f6-8eb418a7821e -Title \"My Updated Company Design\" Updates an existing site design and sets a new title. EXAMPLE 2 $design = Get-PnPSiteDesign -Identity 046e2e76-67ba-46ca-a5f6-8eb418a7821e Set-PnPSiteDesign -Identity $design -Title \"My Updated Company Design\" Updates an existing site design and sets a new title. EXAMPLE 3 Set-PnPSiteDesign -Identity 046e2e76-67ba-46ca-a5f6-8eb418a7821e -Title \"My Company Design\" -Description \"My description\" -ThumbnailUrl \"https://contoso.sharepoint.com/sites/templates/my images/logo.png\" Updates an existing site design, providing a new title, description and logo to be shown in the template picker. Notice that when the location for the ThumbnailUrl contains a space, it should be provided URL decoded, so i.e. no %20 for spaces. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site design. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DesignPackageId Sets the design package Id of this site design. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The guid or an object representing the site design. Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsDefault Specifies if the site design is a default site design. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PreviewImageAltText Sets the text for the preview image. This was used in the old site designs approach and currently has no function anymore. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PreviewImageUrl Sets the url to the preview image. This was used in the old site designs approach and currently has no function anymore. Use ThumbnailUrl instead. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteScriptIds An array of guids of site scripts. Type: Guid[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThumbnailUrl The full URL of a thumbnail image, i.e. https://contoso.sharepoint/siteassets/image.png. If none is specified, SharePoint uses a generic image. Recommended size is 400 x 300 pixels. This is the image that will be shown when selecting a template through \"Apply a site template\" or \"Browse templates\" shown in \"Start designing your site\" shown when creating a new site. If there are spaces in the URL, do not URL encode them, so i.e. do not use %20 where there is a space, but instead just provide the link with the space inside. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the site design. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Version Specifies the version of the design. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebTemplate Specifies the type of site to which this design applies. Type: SiteWebTemplate Parameter Sets: (All) Accepted values: TeamSite, CommunicationSite, GrouplessTeamSite, ChannelSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSiteGroup.html": {
    "href": "cmdlets/Set-PnPSiteGroup.html",
    "title": "Set-PnPSiteGroup | PnP PowerShell",
    "keywords": "Set-PnPSiteGroup SYNOPSIS Updates the SharePoint Online owner and permission levels on a group inside a site collection. SYNTAX Set-PnPSiteGroup -Identity <String> [-Name <String>] [-Owner <String>] [-PermissionLevelsToAdd <String[]>] [-PermissionLevelsToRemove <String[]>] [-Site <PipeBind>] [-Connection <PnPConnection>] DESCRIPTION For permissions and the most current information about Windows PowerShell for SharePoint Online, see the online documentation at Intro to SharePoint Online Management Shell. EXAMPLES EXAMPLE 1 Set-PnPSiteGroup -Site \"https://contoso.sharepoint.com/sites/siteA\" -Identity \"ProjectViewers\" -PermissionLevelsToRemove \"Full Control\" -PermissionLevelsToAdd \"View Only\" Example 1 changes permission level of the ProjectViewers group inside site collection https://contoso.sharepoint.com/sites/siteA from Full Control to View Only. EXAMPLE 2 Set-PnPSiteGroup -Site \"https://contoso.sharepoint.com\" -Identity \"ProjectViewers\" -Owner user@domain.com Example 2 sets user@domain.com as the owner of the ProjectViewers group. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the name of the group. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Specifies the new name of the group. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner Specifies the owner (individual or a security group) of the group to be set. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PermissionLevelsToAdd Specifies the permission levels to grant to the group. Note Permission levels are defined by SharePoint Online administrators from SharePoint Online Administration Center. Type: String[] Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PermissionLevelsToRemove Specifies the permission levels to remove from the group. Note Permission levels are defined by SharePoint Online administrators from SharePoint Online Administration Center. Type: String[] Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Specifies the site collection the group belongs to. If not defined, the currently connected site will be used. Type: SitePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSitePolicy.html": {
    "href": "cmdlets/Set-PnPSitePolicy.html",
    "title": "Set-PnPSitePolicy | PnP PowerShell",
    "keywords": "Set-PnPSitePolicy SYNOPSIS Sets a site policy SYNTAX Set-PnPSitePolicy -Name <String> [-Connection <PnPConnection>] DESCRIPTION Allows to modify a site policy. EXAMPLES EXAMPLE 1 Set-PnPSitePolicy -Name \"Contoso HBI\" This applies a site policy with the name \"Contoso HBI\" to the current site. The policy needs to be available in the site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The name of the site policy to apply Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSiteScript.html": {
    "href": "cmdlets/Set-PnPSiteScript.html",
    "title": "Set-PnPSiteScript | PnP PowerShell",
    "keywords": "Set-PnPSiteScript SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Updates an existing site script on the current tenant. SYNTAX Set-PnPSiteScript -Identity <TenantSiteScriptPipeBind> [-Title <String>] [-Description <String>] [-Content <String>] [-Version <Int32>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet updates an existing site script. EXAMPLES EXAMPLE 1 Set-PnPSiteScript -Identity f1d55d9b-b116-4f54-bc00-164a51e7e47f -Title \"My Site Script\" Updates an existing site script and changes the title. EXAMPLE 2 $script = Get-PnPSiteScript -Identity f1d55d9b-b116-4f54-bc00-164a51e7e47f Set-PnPSiteScript -Identity $script -Title \"My Site Script\" Updates an existing site script and changes the title. EXAMPLE 3 $content = Get-PnPSiteScriptFromWeb -Url https://contoso.sharepoint.com/sites/SampleSite -IncludeAll Set-PnPSiteScript -Identity f1d55d9b-b116-4f54-bc00-164a51e7e47f -Content $content Updates an existing site script and its components. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Content A JSON string containing the site script. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site script. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The guid or an object representing the site script. Type: TenantSiteScriptPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the site script. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Version Specifies the version of the site script. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSiteScriptPackage.html": {
    "href": "cmdlets/Set-PnPSiteScriptPackage.html",
    "title": "Set-PnPSiteScriptPackage | PnP PowerShell",
    "keywords": "Set-PnPSiteScriptPackage SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Updates an existing Site Script Package on the current tenant. SYNTAX Set-PnPSiteScriptPackage -Identity <TenantSiteScriptPipeBind> [-Title <String>] [-Description <String>] [-ContentPath <String>] [-Version <Int32>] [-Connection <PnPConnection>] DESCRIPTION Allows to update an existing Site Script Package on the current tenant. EXAMPLES EXAMPLE 1 Set-PnPSiteScriptPackage -Identity f1d55d9b-b116-4f54-bc00-164a51e7e47f -Title \"My Site Script\" Updates an existing Site Script Package and changes the title. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentPath The path to the locally stored Site Script Package to upload to SharePoint Online Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site script package Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The guid or an object representing the site script package Type: TenantSiteScriptPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the site script package Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Version Specifies the version of the site script package Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSiteSensitivityLabel.html": {
    "href": "cmdlets/Set-PnPSiteSensitivityLabel.html",
    "title": "Set-PnPSiteSensitivityLabel | PnP PowerShell",
    "keywords": "Set-PnPSiteSensitivityLabel SYNOPSIS Required Permissions Microsoft Graph API : Delegate token of Group.ReadWrite.All, Directory.ReadWrite.All (see description below) Allows placing a Microsoft Purview sensitivity label on the current site SYNTAX Set-PnPSiteSensitivityLabel -Identity <String> [-Connection <PnPConnection>] [-Verbose] DESCRIPTION This cmdlet allows for setting a Microsoft Purview sensitivity label on the currently connected to site. If the site has a Microsoft 365 Group behind it, the label will be placed on the Microsoft 365 Group and will require either Group.ReadWrite.All or Directory.ReadWrite.All delegate permissions on Microsoft Graph. This currently cannot be done using App Only permissions due to a limitation in Microsoft Graph. If it does not have a Microsoft 365 Group behind it, it will set the label on the SharePoint Online site and will not require Microsoft Graph permissions and will work with both delegate as well as app only logins. If you're looking to set a sensitivity label on a Microsoft 365 Group backed site in an App Only context, you can use Set-PnPTenantSite -SensitivityLabel instead to do so. It may take up to a few minutes for a change to the sensitivity label to become visible in SharePoint Online and Entra ID / Azure Active Directory. Use Get-PnPAvailableSensitivityLabel to get an overview of the available Microsoft Purview sensitivity labels on the tenant. For the classic classification labels, use Set-PnPSiteClassification instead. EXAMPLES EXAMPLE 1 Set-PnPSiteSensitivityLabel -Identity \"Top Secret\" Sets the Microsoft Purview sensitivity label with the name \"Top Secret\" on the current site EXAMPLE 2 Set-PnPSiteSensitivityLabel -Identity a1888df2-84c2-4379-8d53-7091dd630ca7 Sets the Microsoft Purview sensitivity label with the Id a1888df2-84c2-4379-8d53-7091dd630ca7 on the current site PARAMETERS -Identity Id or name of the Microsoft Purview sensitivity label to apply Type: String Parameter Sets: (All) Required: True Position: Named Default value: True Accept pipeline input: True Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while going through the execution of this cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Set-PnPSiteTemplateMetadata.html": {
    "href": "cmdlets/Set-PnPSiteTemplateMetadata.html",
    "title": "Set-PnPSiteTemplateMetadata | PnP PowerShell",
    "keywords": "Set-PnPSiteTemplateMetadata SYNOPSIS Sets metadata of a provisioning template. SYNTAX Set-PnPSiteTemplateMetadata [-Path] <String> [-TemplateDisplayName <String>] [-TemplateImagePreviewUrl <String>] [-TemplateProperties <Hashtable>] [-TemplateProviderExtensions <ITemplateProviderExtension[]>] [-Connection <PnPConnection>] DESCRIPTION Allows to modify metadata of a provisioning template. EXAMPLES EXAMPLE 1 Set-PnPSiteTemplateMetadata -Path template.xml -TemplateDisplayName \"DisplayNameValue\" Sets the DisplayName property of a site template in XML format. EXAMPLE 2 Set-PnPSiteTemplateMetadata -Path template.pnp -TemplateDisplayName \"DisplayNameValue\" Sets the DisplayName property of a site template in Office Open XML format. EXAMPLE 3 Set-PnPSiteTemplateMetadata -Path template.xml -TemplateImagePreviewUrl \"Full URL of the Image Preview\" This example sets the image preview URL for a SharePoint site template stored in the file template.xml in Office Open XML format. EXAMPLE 4 Set-PnPSiteTemplateMetadata -Path template.pnp -TemplateImagePreviewUrl \"Full URL of the Image Preview\" This example sets the image preview URL for a SharePoint site template stored in the file template.pnp in Office Open XML format. EXAMPLE 5 Set-PnPSiteTemplateMetadata -Path template.xml -TemplateProperties @{\"Property1\" = \"Test Value 1\"; \"Property2\"=\"Test Value 2\"} Sets the property 'Property1' to the value 'Test Value 1' of a site template in XML format. EXAMPLE 6 Set-PnPSiteTemplateMetadata -Path template.pnp -TemplateProperties @{\"Property1\" = \"Test Value 1\"; \"Property2\"=\"Test Value 2\"} Sets the property 'Property1' to the value 'Test Value 1' of a site template in Office Open XML format. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Path to the xml or pnp file containing the site template. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByPropertyName, ByValue) Accept wildcard characters: False -TemplateDisplayName It can be used to specify the DisplayName of the template file that will be updated. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateImagePreviewUrl It can be used to specify the ImagePreviewUrl of the template file that will be updated. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProperties It can be used to specify custom Properties for the template file that will be updated. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while extracting a template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSiteVersionPolicy.html": {
    "href": "cmdlets/Set-PnPSiteVersionPolicy.html",
    "title": "Set-PnPSiteVersionPolicy | PnP PowerShell",
    "keywords": "Set-PnPSiteVersionPolicy SYNOPSIS Sets file version policy related properties on the site. Required Permissions Type API/ Permission Name Admin consent required Delegated AllSites.FullControl yes SYNTAX Set-PnPSiteVersionPolicy [-EnableAutoExpirationVersionTrim <Boolean>] [-ExpireVersionsAfterDays <UInt32>] [-MajorVersions <UInt32>] [-MajorWithMinorVersions <UInt32>] [-InheritFromTenant] [-ApplyToNewDocumentLibraries] [-ApplyToExistingDocumentLibraries] [-CancelForExistingDocumentLibraries] [-Connection <PnPConnection>] DESCRIPTION Configures the versioning policy for a SharePoint Online site collection. EXAMPLES EXAMPLE 1 Set-PnPSiteVersionPolicy -EnableAutoExpirationVersionTrim $true This example sets AutoExpiration file version trim mode for a site. The new document libraries will use this version setting. Also creates a request to set the file version trim mode as AutoExpiration for existing document libraries that enabled versioning. EXAMPLE 2 Set-PnPSiteVersionPolicy -EnableAutoExpirationVersionTrim $false -MajorVersions 100 -MajorWithMinorVersions 10 -ExpireVersionsAfterDays 200 This example sets ExpireAfter file version trim mode for a site. The new document libraries will use this version setting. Also creates a request to set the file version trim mode as ExpireAfter for existing document libraries that enabled versioning. EXAMPLE 3 Set-PnPSiteVersionPolicy -EnableAutoExpirationVersionTrim $false -MajorVersions 300 -MajorWithMinorVersions 20 -ExpireVersionsAfterDays 0 Example 3 sets NoExpiration file version trim mode for a site. The new document libraries will use this version setting. Also creates a request to set the file version trim mode as NoExpiration for existing document libraries that enabled versioning. EXAMPLE 4 Set-PnPSiteVersionPolicy -InheritFromTenant Example 4 clears the file version setting on a site. The new document libraries will use the tenant level setting. EXAMPLE 5 Set-PnPSiteVersionPolicy -EnableAutoExpirationVersionTrim $true -ApplyToNewDocumentLibraries This example sets AutoExpiration file version trim mode for a site. The new document libraries will use this version setting. EXAMPLE 6 Set-PnPSiteVersionPolicy -EnableAutoExpirationVersionTrim $false -MajorVersions 100 -ExpireVersionsAfterDays 200 -ApplyToNewDocumentLibraries This example sets ExpireAfter file version trim mode for a site. The new document libraries will use this version setting. EXAMPLE 7 Set-PnPSiteVersionPolicy -EnableAutoExpirationVersionTrim $false -MajorVersions 300 -ExpireVersionsAfterDays 0 -ApplyToNewDocumentLibraries Example 7 sets NoExpiration file version trim mode for a site. The new document libraries will use this version setting. EXAMPLE 8 Set-PnPSiteVersionPolicy -EnableAutoExpirationVersionTrim $true -ApplyToExistingDocumentLibraries Example 8 creates a request to set the file version trim mode as AutoExpiration for existing document libraries that enabled versioning. EXAMPLE 9 Set-PnPSiteVersionPolicy -EnableAutoExpirationVersionTrim $false -MajorVersions 100 -MajorWithMinorVersions 5 -ExpireVersionsAfterDays 200 -ApplyToExistingDocumentLibraries This example creates a request to set the file version trim mode as ExpireAfter for existing document libraries that enabled versioning. EXAMPLE 10 Set-PnPSiteVersionPolicy -EnableAutoExpirationVersionTrim $false -MajorVersions 100 -MajorWithMinorVersions 5 -ExpireVersionsAfterDays 0 -ApplyToExistingDocumentLibraries Example 10 creates a request to set the file version trim mode as NoExpiration for existing document libraries that enabled versioning. EXAMPLE 11 Set-PnPSiteVersionPolicy -CancelForExistingDocumentLibraries This example cancels the existing request which sets the file version trim mode for existing document libraries on a site. PARAMETERS -ApplyToNewDocumentLibraries Sets site version policy for new document libraries. Works with parameters EnableAutoExpirationVersionTrim, ExpireVersionsAfterDays, MajorVersions and MajorWithMinorVersions. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ApplyToExistingDocumentLibraries Creates a request to set the file version trim mode for existing document libraries that enabled versioning. Works with parameters EnableAutoExpirationVersionTrim, ExpireVersionsAfterDays, MajorVersions and MajorWithMinorVersions. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CancelForExistingDocumentLibraries Cancels the existing request which sets the file version trim mode for existing document libraries on a site. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableAutoExpirationVersionTrim Enables or disables AutoExpiration version trim for the document libraries on the site. Set to $true to enable, $false to disable. Parameter ExpireVersionsAfterDays is required when EnableAutoExpirationVersionTrim is false. Set it to 0 for NoExpiration, set it to greater or equal to 30 for ExpireAfter. Parameter MajorVersions is required when EnableAutoExpirationVersionTrim is false. Parameter MajorWithMinorVersions is required when EnableAutoExpirationVersionTrim is false and the setting is for document libraries that including existing ones. It is used when minor version is enabled on the document libraries. Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExpireVersionsAfterDays Expires the version after the days. Works with parameter EnableAutoExpirationVersionTrim. Please see description in EnableAutoExpirationVersionTrim. Type: UInt32 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InheritFromTenant Clears the file version setting on a site. The new document libraries will use the tenant level setting. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MajorVersions Maximum major versions to keep. Works with parameter EnableAutoExpirationVersionTrim. Please see description in EnableAutoExpirationVersionTrim. Type: UInt32 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MajorWithMinorVersions Maximum major versions for which to keep minor versions. Works with parameter EnableAutoExpirationVersionTrim. Please see description in EnableAutoExpirationVersionTrim. Type: UInt32 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPStorageEntity.html": {
    "href": "cmdlets/Set-PnPStorageEntity.html",
    "title": "Set-PnPStorageEntity | PnP PowerShell",
    "keywords": "Set-PnPStorageEntity SYNOPSIS Set Storage Entities / Farm Properties in either the tenant scoped app catalog or the site collection app catalog. SYNTAX Set-PnPStorageEntity -Key <String> -Value <String> [-Comment <String>] [-Description <String>] [-Scope <StorageEntityScope>] [-Connection <PnPConnection>] DESCRIPTION Allows to set Storage Entities / Farm Properties in either the tenant scoped app catalog or the site collection app catalog. EXAMPLES EXAMPLE 1 Set-PnPStorageEntity -Key MyKey -Value \"MyValue\" -Comment \"My Comment\" -Description \"My Description\" Sets an existing or adds a new storage entity / farm property at the tenant level. EXAMPLE 2 Set-PnPStorageEntity -Scope Site -Key MyKey -Value \"MyValue\" -Comment \"My Comment\" -Description \"My Description\" Sets an existing or adds a new storage entity at the site collection level. PARAMETERS -Comment Specifies additional comments related to the storage entity being set. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description to set. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key The key of the value to set. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Defines the scope of the storage entity. Defaults to Tenant. Type: StorageEntityScope Parameter Sets: (All) Accepted values: Site, Tenant Required: False Position: Named Default value: Tenant Accept pipeline input: False Accept wildcard characters: False -Value The value to set. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPStructuralNavigationCacheSiteState.html": {
    "href": "cmdlets/Set-PnPStructuralNavigationCacheSiteState.html",
    "title": "Set-PnPStructuralNavigationCacheSiteState | PnP PowerShell",
    "keywords": "Set-PnPStructuralNavigationCacheSiteState SYNOPSIS Enable or disable caching for all webs in a site collection. SYNTAX Set-PnPStructuralNavigationCacheSiteState -IsEnabled <Boolean> [-SiteUrl <String>] [-Connection <PnPConnection>] DESCRIPTION The Set-PnPStructuralNavigationCacheSiteState cmdlet can be used to enable or disable caching for all webs in a site collection. If the SiteUrl parameter has not been specified the currently connected to site will be used. EXAMPLES EXAMPLE 1 Set-PnPStructuralNavigationCacheSiteState -IsEnabled $true -SiteUrl \"https://contoso.sharepoint.com/sites/product/\" This example enables caching for all webs in the site collection https://contoso.sharepoint.com/sites/product/. EXAMPLE 2 Set-PnPStructuralNavigationCacheSiteState -IsEnabled $false -SiteUrl \"https://contoso.sharepoint.com/sites/product/\" This example disables caching for all webs in the site collection https://contoso.sharepoint.com/sites/product/. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsEnabled $true to enable caching, $false to disable caching. Type: Boolean Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteUrl Specifies the absolute URL for the site collection's root web that needs its caching state to be set. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPStructuralNavigationCacheWebState.html": {
    "href": "cmdlets/Set-PnPStructuralNavigationCacheWebState.html",
    "title": "Set-PnPStructuralNavigationCacheWebState | PnP PowerShell",
    "keywords": "Set-PnPStructuralNavigationCacheWebState SYNOPSIS Enable or disable caching for a web. SYNTAX Set-PnPStructuralNavigationCacheWebState -IsEnabled <Boolean> [-WebUrl <String>] [-Connection <PnPConnection>] DESCRIPTION The Set-PnPStructuralNavigationCacheWebState cmdlet can be used to enable or disable caching for a web. If the WebUrl parameter has not been specified the currently connected to web will be used. EXAMPLES EXAMPLE 1 Set-PnPStructuralNavigationCacheWebState -IsEnabled $true -WebUrl \"https://contoso.sharepoint.com/sites/product/electronics\" This example enables caching for the web https://contoso.sharepoint.com/sites/product/electronics. EXAMPLE 2 Set-PnPStructuralNavigationCacheWebState -IsEnabled $false -WebUrl \"https://contoso.sharepoint.com/sites/product/electronics\" This example disables caching for the web https://contoso.sharepoint.com/sites/product/electronics. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsEnabled $true to enable caching, $false to disable caching. Type: Boolean Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebUrl Specifies the absolute URL for the web that needs its caching state set. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTaxonomyFieldValue.html": {
    "href": "cmdlets/Set-PnPTaxonomyFieldValue.html",
    "title": "Set-PnPTaxonomyFieldValue | PnP PowerShell",
    "keywords": "Set-PnPTaxonomyFieldValue SYNOPSIS Sets a taxonomy term value in a listitem field SYNTAX ITEM (Default) Set-PnPTaxonomyFieldValue -ListItem <ListItem> -InternalFieldName <String> -TermId <Guid> [-Label <String>] [-Connection <PnPConnection>] PATH Set-PnPTaxonomyFieldValue -ListItem <ListItem> -InternalFieldName <String> -TermPath <String> [-Connection <PnPConnection>] ITEMS Set-PnPTaxonomyFieldValue -ListItem <ListItem> -InternalFieldName <String> [-Terms <Hashtable>] [-Connection <PnPConnection>] DESCRIPTION Allows to update taxonomy term value in a listitem field. EXAMPLES EXAMPLE 1 Set-PnPTaxonomyFieldValue -ListItem $item -InternalFieldName 'Department' -TermId 863b832b-6818-4e6a-966d-2d3ee057931c Sets the field called 'Department' to the value of the term with the ID specified EXAMPLE 2 Set-PnPTaxonomyFieldValue -ListItem $item -InternalFieldName 'Department' -TermPath 'CORPORATE|DEPARTMENTS|HR' Sets the field called 'Department' to the term called HR which is located in the DEPARTMENTS termset, which in turn is located in the CORPORATE termgroup. EXAMPLE 3 Set-PnPTaxonomyFieldValue -ListItem $item -InternalFieldName 'Department' -Terms @{\"TermId1\"=\"Label1\";\"TermId2\"=\"Label2\"} Sets the field called 'Department' with multiple terms by ID and label. You can refer to those terms with the {ID:label} token. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InternalFieldName The internal name of the field Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Label The Label value of the term Type: String Parameter Sets: ITEM Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListItem The list item to set the field value to Type: ListItem Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermId The Id of the Term Type: Guid Parameter Sets: ITEM Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermPath A path in the form of GROUPLABEL|TERMSETLABEL|TERMLABEL Type: String Parameter Sets: PATH Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Terms Allows you to specify terms with key value pairs that can be referred to in the template by means of the {id:label} token. See examples on how to use this parameter. Type: Hashtable Parameter Sets: ITEMS Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTeamifyPromptHidden.html": {
    "href": "cmdlets/Set-PnPTeamifyPromptHidden.html",
    "title": "Set-PnPTeamifyPromptHidden | PnP PowerShell",
    "keywords": "Set-PnPTeamifyPromptHidden SYNOPSIS Hides the teamify prompt for a site. SYNTAX Set-PnPTeamifyPromptHidden [-Connection <PnPConnection>] DESCRIPTION This cmdlet hides the teamify prompt for the current site. EXAMPLES Example 1 Set-PnPTeamifyPromptHidden This example hides the teamify prompt for the currently connected site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTeamsChannel.html": {
    "href": "cmdlets/Set-PnPTeamsChannel.html",
    "title": "Set-PnPTeamsChannel | PnP PowerShell",
    "keywords": "Set-PnPTeamsChannel SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Updates an existing Teams Channel. SYNTAX Set-PnPTeamsChannel -Team <TeamsTeamPipeBind> -Identity <TeamsChannelPipeBind> [-DisplayName <String>] [-Description <String>] [-IsFavoriteByDefault <Boolean>] [-AllowNewMessageFromBots <Boolean>] [-AllowNewMessageFromConnectors <Boolean>] [-ReplyRestriction <TeamChannelModerationSettingReplyRestriction>] [-UserNewMessageRestriction <TeamChannelModerationSettingNewMessageRestriction>] [-Connection <PnPConnection>] DESCRIPTION Allows to update an existing Teams Channel. EXAMPLES EXAMPLE 1 Set-PnPTeamsChannel -Team \"MyTeam\" -Channel \"MyChannel\" -DisplayName \"My Channel\" Updates the channel called 'MyChannel' to have the display name set to 'My Channel'. EXAMPLE 2 Set-PnPTeamsChannel -Team \"MyTeam\" -Channel \"MyChannel\" -IsFavoriteByDefault $true Updates the channel called 'MyChannel' to make it visible to members. PARAMETERS -AllowNewMessageFromBots Allows configuring if bots are allowed to post messages in the channel. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowNewMessageFromConnectors Allows configuring if connectors are allowed to post messages in the channel. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Changes the description of the specified channel. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName Changes the display name of the specified channel. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the channel id or display name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -IsFavoriteByDefault Allows you to specify if the channel is by default visible for members. Type: Boolean Parameter Sets: Public channel Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ReplyRestriction Allows configuring who can reply to posts in the channel. Type: TeamChannelModerationSettingReplyRestriction Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -UserNewMessageRestriction Allows configuring who can post new messages in the channel. Type: TeamChannelModerationSettingNewMessageRestriction Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTeamsTab.html": {
    "href": "cmdlets/Set-PnPTeamsTab.html",
    "title": "Set-PnPTeamsTab | PnP PowerShell",
    "keywords": "Set-PnPTeamsTab SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Updates Teams tab settings. SYNTAX Set-PnPTeamsTab -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> [-Identity <TeamsTabPipeBind>] [-DisplayName <String>] [-Connection <PnPConnection>] DESCRIPTION Allows to update Teams tab settings. EXAMPLES EXAMPLE 1 Set-PnPTeamsTab -Team \"MyTeam\" -Channel \"My Channel\" -Identity \"Wiki\" -DisplayName \"Channel Wiki\" Updates the tab named 'Wiki' and changes the display name of the tab to 'Channel Wiki'. PARAMETERS -Channel Specify the channel id or display name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The new name of the tab. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Identity of the tab. Type: TeamsTabPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTeamsTag.html": {
    "href": "cmdlets/Set-PnPTeamsTag.html",
    "title": "Set-PnPTeamsTag | PnP PowerShell",
    "keywords": "Set-PnPTeamsTag SYNOPSIS Required Permissions Microsoft Graph API: TeamworkTag.ReadWrite, Group.Read.All Sets the Microsoft Teams tag in a Team. SYNTAX Set-PnPTeamsTag -Team <TeamsTeamPipeBind> -Identity <TeamsTagPipeBind> -DisplayName <String> DESCRIPTION Allows to set a Teams tag in Microsoft Teams. EXAMPLES EXAMPLE 1 Set-PnPTeamsTag -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -Identity \"ZmY1ZjdmMjctZDhiNy00MWRkLTk2ZDQtYzcyYmVhMWIwOGYxIyM3ZTVhNGRmZS1kNWNlLTRkOTAtODM4MC04ZDIxM2FkYzYzOGIjI3RiVlVpR01rcg==\" -DisplayName \"Updated Tag\" Sets the tag with the specified Id from the Teams team. PARAMETERS -DisplayName The updated display name of the Teams tag. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the id of the Tag. Type: TeamsTagPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTeamsTeam.html": {
    "href": "cmdlets/Set-PnPTeamsTeam.html",
    "title": "Set-PnPTeamsTeam | PnP PowerShell",
    "keywords": "Set-PnPTeamsTeam SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Updates an existing Team. SYNTAX Set-PnPTeamsTeam -Identity <TeamsTeamPipeBind> [-DisplayName <String>] [-Description <String>] [-Visibility <TeamVisibility>] [-AllowAddRemoveApps <Boolean>] [-AllowChannelMentions <Boolean>] [-AllowCreateUpdateChannels <Boolean>] [-AllowCreateUpdateRemoveConnectors <Boolean>] [-AllowCreateUpdateRemoveTabs <Boolean>] [-AllowCustomMemes <Boolean>] [-AllowDeleteChannels <Boolean>] [-AllowGiphy <Boolean>] [-AllowGuestCreateUpdateChannels <Boolean>] [-AllowGuestDeleteChannels <Boolean>] [-AllowOwnerDeleteMessages <Boolean>] [-AllowStickersAndMemes <Boolean>] [-AllowTeamMentions <Boolean>] [-AllowUserDeleteMessages <Boolean>] [-AllowUserEditMessages <Boolean>] [-GiphyContentRating <TeamGiphyContentRating>] [-ShowInTeamsSearchAndSuggestions <Boolean>] [-Classification <String>] DESCRIPTION Allows to update team settings. EXAMPLES EXAMPLE 1 Set-PnPTeamsTeam -Identity 'MyTeam' -DisplayName 'My Team' Updates the team called 'MyTeam' to have the display name set to 'My Team'. EXAMPLE 2 Set-PnPTeamsTeam -Identity \"baba9192-55be-488a-9fb7-2e2e76edbef2\" -Visibility Public Updates the team by using id to have the visibility Public. EXAMPLE 3 Set-PnPTeamsTeam -Identity \"My Team\" -AllowTeamMentions $false -AllowChannelMentions $true -AllowDeleteChannels $false Updates the team 'My Team' to disallow Team @mentions, allow Channel @mentions and disallow members from deleting channels. EXAMPLE 4 Set-PnPTeamsTeam -Identity \"My Team\" -GiphyContentRating Moderate Updates the team 'My Team' to have a Moderate level of sensitivity for giphy usage. PARAMETERS -AllowAddRemoveApps Boolean value that determines whether or not members (not only owners) are allowed to add apps to the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowChannelMentions Boolean value that determines whether or not channels in the team can be @ mentioned so that all users who follow the channel are notified. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCreateUpdateChannels Setting that determines whether or not members (and not just owners) are allowed to create channels. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCreateUpdateRemoveConnectors Setting that determines whether or not members (and not only owners) can manage connectors in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCreateUpdateRemoveTabs Setting that determines whether or not members (and not only owners) can manage tabs in channels. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCustomMemes Setting that determines whether or not members can use the custom memes functionality in teams. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowDeleteChannels Setting that determines whether or not members (and not only owners) can delete channels in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowGiphy Setting that determines whether or not giphy can be used in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowGuestCreateUpdateChannels Setting that determines whether or not guests can create channels in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowGuestDeleteChannels Setting that determines whether or not guests can delete in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowOwnerDeleteMessages Setting that determines whether or not owners can delete messages that they or other members of the team have posted. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowStickersAndMemes Setting that determines whether stickers and memes usage is allowed in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowTeamMentions Setting that determines whether the entire team can be @ mentioned (which means that all users will be notified) Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowUserDeleteMessages Setting that determines whether or not members can delete messages that they have posted. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowUserEditMessages Setting that determines whether or not users can edit messages that they have posted. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Classification Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Changes the description of the specified team. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName Changes the display name of the specified team. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GiphyContentRating Setting that determines the level of sensitivity of giphy usage that is allowed in the team. Accepted values are \"Strict\" or \"Moderate\" Type: TeamGiphyContentRating Parameter Sets: (All) Accepted values: moderate, strict Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ShowInTeamsSearchAndSuggestions Setting that determines whether or not private teams should be searchable from Teams clients for users who do not belong to that team. Set to $false to make those teams not discoverable from Teams clients. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Visibility Changes the visibility of the specified team. Type: TeamVisibility Parameter Sets: (All) Accepted values: Private, Public Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTeamsTeamArchivedState.html": {
    "href": "cmdlets/Set-PnPTeamsTeamArchivedState.html",
    "title": "Set-PnPTeamsTeamArchivedState | PnP PowerShell",
    "keywords": "Set-PnPTeamsTeamArchivedState SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All Sets the archived state of a team. SYNTAX Set-PnPTeamsTeamArchivedState -Identity <TeamsTeamPipeBind> -Archived <Boolean> [-SetSiteReadOnlyForMembers <Boolean>] [-Connection <PnPConnection>] DESCRIPTION Allows to update the archived state of a team. EXAMPLES EXAMPLE 1 Set-PnPTeamsTeamArchivedState -Identity \"My Team\" -Archived $true Archives the team as identified. EXAMPLE 2 Set-PnPTeamsTeamArchivedState -Identity \"My Team\" -Archived $false Un-archives the team as identified. EXAMPLE 3 Set-PnPTeamsTeamArchivedState -Identity \"My Team\" -Archived $true -SetSiteReadOnlyForMembers $true Archives the team as identified and sets the underlying SharePoint Online Site Collection as read only for members. PARAMETERS -Archived Setting that determines whether the Team is archived. Type: Boolean Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SetSiteReadOnlyForMembers Setting that determines whether the connected SharePoint site is set to read only. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTeamsTeamPicture.html": {
    "href": "cmdlets/Set-PnPTeamsTeamPicture.html",
    "title": "Set-PnPTeamsTeamPicture | PnP PowerShell",
    "keywords": "Set-PnPTeamsTeamPicture SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Sets the picture of an existing team. SYNTAX Set-PnPTeamsTeamPicture -Team <TeamsTeamPipeBind> -Path <String> [-Connection <PnPConnection>] DESCRIPTION Notice that this cmdlet will immediately return but it can take a few hours before the changes are reflected in Microsoft Teams. EXAMPLES EXAMPLE 1 Set-PnPTeamsTeamPicture -Team \"MyTeam\" -Path \"c:\\myimage.jpg\" Updates a picture for the team called 'MyTeam' with the available at \"c:\\myimage.jpg\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path The path to the image file. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTemporarilyDisableAppBar.html": {
    "href": "cmdlets/Set-PnPTemporarilyDisableAppBar.html",
    "title": "Set-PnPTemporarilyDisableAppBar | PnP PowerShell",
    "keywords": "Set-PnPTemporarilyDisableAppBar SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Allows the SharePoint Online App Bar to be disabled. It may take some time for the change to be reflected in SharePoint Online. Support for this may be dropped after March 31st, 2023 after which the SharePoint Online App Bar will become visible anyway. See the Message Center Announcement on this for more information. SYNTAX Set-PnPTemporarilyDisableAppBar -Enabled <Boolean> [-Connection <PnPConnection>] DESCRIPTION Allows to disable/enable SharePoint Online App Bar. EXAMPLES EXAMPLE 1 Set-PnPTemporarilyDisableAppBar $true Hides the SharePoint Online App Bar. EXAMPLE 2 Set-PnPTemporarilyDisableAppBar $false Shows the SharePoint Online App Bar. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Enabled Specifies whether to show or hide SharePoint Online App Bar. Type: Boolean Parameter Sets: (All) Required: True Position: Named Default value: True Accept pipeline input: True Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTenant.html": {
    "href": "cmdlets/Set-PnPTenant.html",
    "title": "Set-PnPTenant | PnP PowerShell",
    "keywords": "Set-PnPTenant SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Sets organization-level tenant properties SYNTAX Set-PnPTenant [-SpecialCharactersStateInFileFolderNames <SpecialCharactersState>] [-MinCompatibilityLevel <Int32>] [-MaxCompatibilityLevel <Int32>] [-ExternalServicesEnabled <Boolean>] [-NoAccessRedirectUrl <String>] [-SharingCapability <SharingCapabilities>] [-DisplayStartASiteOption <Boolean>] [-StartASiteFormUrl <String>] [-ShowEveryoneClaim <Boolean>] [-ShowAllUsersClaim <Boolean>] [-ShowEveryoneExceptExternalUsersClaim <Boolean>] [-SearchResolveExactEmailOrUPN <Boolean>] [-OfficeClientADALDisabled <Boolean>] [-LegacyAuthProtocolsEnabled <Boolean>] [-RequireAcceptingAccountMatchInvitedAccount <Boolean>] [-ProvisionSharedWithEveryoneFolder <Boolean>] [-SignInAccelerationDomain <String>] [-EnableGuestSignInAcceleration <Boolean>] [-UsePersistentCookiesForExplorerView <Boolean>] [-BccExternalSharingInvitations <Boolean>] [-BccExternalSharingInvitationsList <String>] [-UserVoiceForFeedbackEnabled <Boolean>] [-PublicCdnEnabled <Boolean>] [-PublicCdnAllowedFileTypes <String>] [-RequireAnonymousLinksExpireInDays <Int32>] [-SharingAllowedDomainList <String>] [-SharingBlockedDomainList <String>] [-SharingDomainRestrictionMode <SharingDomainRestrictionModes>] [-OneDriveStorageQuota <Int64>] [-OneDriveForGuestsEnabled <Boolean>] [-IPAddressEnforcement <Boolean>] [-IPAddressAllowList <String>] [-IPAddressWACTokenLifetime <Int32>] [-UseFindPeopleInPeoplePicker <Boolean>] [-DefaultSharingLinkType <SharingLinkType>] [-ODBMembersCanShare <SharingState>] [-ODBAccessRequests <SharingState>] [-PreventExternalUsersFromReSharing <Boolean>] [-ShowPeoplePickerSuggestionsForGuestUsers <Boolean>] [-FileAnonymousLinkType <AnonymousLinkType>] [-FolderAnonymousLinkType <AnonymousLinkType>] [-NotifyOwnersWhenItemsReShared <Boolean>] [-NotifyOwnersWhenInvitationsAccepted <Boolean>] [-NotificationsInOneDriveForBusinessEnabled <Boolean>] [-NotificationsInSharePointEnabled <Boolean>] [-OwnerAnonymousNotification <Boolean>] [-CommentsOnSitePagesDisabled <Boolean>] [-SocialBarOnSitePagesDisabled <Boolean>] [-OrphanedPersonalSitesRetentionPeriod <Int32>] [-DisallowInfectedFileDownload <Boolean>] [-DefaultLinkPermission <SharingPermissionType>] [-ConditionalAccessPolicy <SPOConditionalAccessPolicyType>] [-AllowDownloadingNonWebViewableFiles <Boolean>] [-AllowEditing <Boolean>] [-ApplyAppEnforcedRestrictionsToAdHocRecipients <Boolean>] [-FilePickerExternalImageSearchEnabled <Boolean>] [-EmailAttestationRequired <Boolean>] [-EmailAttestationReAuthDays <Int32>] [-HideDefaultThemes <Boolean>] [-DisabledWebPartIds <Guid[]>] [-EnableAIPIntegration <Boolean>] [-DisableCustomAppAuthentication <Boolean>] [-EnableAutoNewsDigest <Boolean>] [-CommentsOnListItemsDisabled <Boolean>] [-CommentsOnFilesDisabled <Boolean>] [-AllowCommentsTextOnEmailEnabled <Boolean>] [-DisableBackToClassic <Boolean>] [-InformationBarriersSuspension <Boolean>] [-AllowFilesWithKeepLabelToBeDeletedODB <Boolean>] [-AllowFilesWithKeepLabelToBeDeletedSPO <Boolean>] [-ExternalUserExpirationRequired <Boolean>] [-ExternalUserExpireInDays <Boolean>] [-OneDriveRequestFilesLinkEnabled <Boolean>] [-EnableRestrictedAccessControl <Boolean>] [-EnableAzureADB2BIntegration <Boolean>] [-CoreRequestFilesLinkEnabled <Boolean>] [-CoreRequestFilesLinkExpirationInDays <Int32>] [-LabelMismatchEmailHelpLink <String>] [-DisableDocumentLibraryDefaultLabeling <Boolean>] [-IsEnableAppAuthPopUpEnabled <Boolean>] [-ExpireVersionsAfterDays <Int32>] [-MajorVersionLimit <Int32>] [-EnableAutoExpirationVersionTrim <Boolean>] [-OneDriveLoopSharingCapability <SharingCapabilities>] [-OneDriveLoopDefaultSharingLinkScope <SharingScope>] [-OneDriveLoopDefaultSharingLinkRole <Role>] [-CoreLoopSharingCapability <SharingCapabilities>] [-CoreLoopDefaultSharingLinkScope <SharingScope>] [-CoreLoopDefaultSharingLinkRole <Role>] [-DisableVivaConnectionsAnalytics <Boolean>] [-CoreDefaultLinkToExistingAccess <Boolean>] [-HideSyncButtonOnTeamSite <Boolean>] [-CoreBlockGuestsAsSiteAdmin <SharingState>] [-IsWBFluidEnabled <Boolean>] [-IsCollabMeetingNotesFluidEnabled <Boolean>] [-AllowAnonymousMeetingParticipantsToAccessWhiteboards <SharingState>] [-IBImplicitGroupBased <Boolean>] [-ShowOpenInDesktopOptionForSyncedFiles <Boolean>] [-ShowPeoplePickerGroupSuggestionsForIB <Boolean>] [-BlockDownloadFileTypePolicy <Boolean>] [-BlockDownloadFileTypeIds <SPBlockDownloadFileTypeId[]>] [-ExcludedBlockDownloadGroupIds <GUID[]>] [-ArchiveRedirectUrl <String>] [-StopNew2013Workflows <Boolean>] [-MediaTranscription <MediaTranscriptionPolicyType>] [-MediaTranscriptionAutomaticFeatures <MediaTranscriptionAutomaticFeaturesPolicyType>] [-SiteOwnerManageLegacyServicePrincipalEnabled <Boolean>] [-ReduceTempTokenLifetimeEnabled <Boolean>] [-ReduceTempTokenLifetimeValue <Int32>] [-ViewersCanCommentOnMediaDisabled <Boolean>] [-AllowGuestUserShareToUsersNotInSiteCollection <Boolean>] [-ConditionalAccessPolicyErrorHelpLink <String>] [-CustomizedExternalSharingServiceUrl <String>] [-IncludeAtAGlanceInShareEmails <Boolean>] [-MassDeleteNotificationDisabled <Boolean>] [-BusinessConnectivityServiceDisabled <Boolean>] [-EnableSensitivityLabelForPDF <Boolean>] [-IsDataAccessInCardDesignerEnabled <Boolean>] [-CoreSharingCapability <SharingCapabilities>] [-BlockUserInfoVisibilityInOneDrive <TenantBrowseUserInfoPolicyValue>] [-AllowOverrideForBlockUserInfoVisibility <Boolean>] [-AllowEveryoneExceptExternalUsersClaimInPrivateSite <Boolean>] [-AIBuilderEnabled <Boolean>] [-AllowSensitivityLabelOnRecords <Boolean>] [-AnyoneLinkTrackUsers <Boolean>] [-EnableSiteArchive <Boolean>] [-ESignatureEnabled <Boolean>] [-BlockUserInfoVisibilityInSharePoint <TenantBrowseUserInfoPolicyValue>] [-MarkNewFilesSensitiveByDefault <SensitiveByDefaultState>] [-OneDriveDefaultShareLinkScope <SharingScope>] [-OneDriveDefaultShareLinkRole <Role>] [-OneDriveDefaultLinkToExistingAccess <Boolean>] [-OneDriveBlockGuestsAsSiteAdmin <SharingState>] [-RecycleBinRetentionPeriod <Int32>] [-IsSharePointAddInsDisabled <Boolean>] [-CoreDefaultShareLinkScope <SharingScope>] [-CoreDefaultShareLinkRole <Role>] [-GuestSharingGroupAllowListInTenantByPrincipalIdentity <string[]>] [-OneDriveSharingCapability <SharingCapabilities>] [-AllowWebPropertyBagUpdateWhenDenyAddAndCustomizePagesIsEnabled <Boolean>] [-SelfServiceSiteCreationDisabled <Boolean>] [-SyncAadB2BManagementPolicy] [-ExtendPermissionsToUnprotectedFiles <Boolean>] [-Force] [-Connection <PnPConnection>] DESCRIPTION Sets organization-level tenant properties which impact the entire tenant. You must have the SharePoint Online admin or Global admin role to run the cmdlet. EXAMPLES EXAMPLE 1 Set-PnPTenantSite -Identity \"https://contoso.sharepoint.com/sites/team1\" -LockState NoAccess Set-PnPTenant -NoAccessRedirectUrl \"http://www.contoso.com\" This example blocks access to https://contoso.sharepoint.com/sites/team1 and redirects traffic to http://www.contoso.com. EXAMPLE 2 Set-PnPTenant -ShowEveryoneExceptExternalUsersClaim $false This example hides the \"Everyone Except External Users\" claim in People Picker. EXAMPLE 3 Set-PnPTenant -ShowAllUsersClaim $false This example hides the \"All Users\" claim group in People Picker. EXAMPLE 4 Set-PnPTenant -UsePersistentCookiesForExplorerView $true This example enables the use of special persisted cookie for Open with Explorer. EXAMPLE 5 Set-PnPTenant -GuestSharingGroupAllowListInTenantByPrincipalIdentity {c:0o.c|federateddirectoryclaimprovider|ee0f40fc-b2f7-45c7-b62d-11b90dd2ea8e} This example sets the guest sharing group allow list in the tenant to the specified principal identity. EXAMPLE 6 Set-PnPTenant -GuestSharingGroupAllowListInTenantByPrincipalIdentity {} This example clears the guest sharing group allow list in the tenant. PARAMETERS -AllowDownloadingNonWebViewableFiles Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowEditing Prevents users from editing Office files in the browser and copying and pasting Office file contents out of the browser window. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowWebPropertyBagUpdateWhenDenyAddAndCustomizePagesIsEnabled Enables or disables web property bag update when DenyAddAndCustomizePages is enabled. When AllowWebPropertyBagUpdateWhenDenyAddAndCustomizePagesIsEnabled is set to $true, web property bag can be updated even if DenyAddAndCustomizePages is turned on when the user had AddAndCustomizePages (prior to DenyAddAndCustomizePages removing it). Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ApplyAppEnforcedRestrictionsToAdHocRecipients When the feature is enabled, all guest users are subject to conditional access policy. By default guest users who are accessing SharePoint Online files with pass code are exempt from the conditional access policy. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ArchiveRedirectUrl Can be used to configure a custom page to show when a user is navigating to a SharePoint Online site that has been archived using Microsoft Syntex Archiving. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BccExternalSharingInvitations When the feature is enabled, all external sharing invitations that are sent will blind copy the e-mail messages listed in the BccExternalSharingInvitationsList. The valid values are: False (default) - BCC for external sharing is disabled. True - All external sharing invitations that are sent will blind copy the e-mail messages listed in the BccExternalSharingInvitationsList. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BccExternalSharingInvitationsList Specifies a list of e-mail addresses to be BCC'd when the BCC for External Sharing feature is enabled. Multiple addresses can be specified by creating a comma separated list with no spaces. The valid values are: \"\" (default) - Blank by default, this will also clear any value that has been set. Single or Multiple e-mail addresses - joe@contoso.com or joe@contoso.com,bob@contoso.com Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BlockSendLabelMismatchEmail Allows blocking of the automated e-mail being sent when somebody uploads a document to a site that's protected with a sensitivity label and their document has a higher priority sensitivity label than the sensitivity label applied to the site. More information. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BusinessConnectivityServiceDisabled Allows blocking of Business Connectivity Services to be used on SharePoint Online. This feature is set to be retired on September 30, 2024. More information. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableSensitivityLabelForPDF Allows turning on support for PDFs with sensitivity labels for the following scenarios: Applying a sensitivity label in Office for the web. Uploading a labeled document, and then extracting and displaying that sensitivity label. Search, eDiscovery, and data loss prevention. Auto-labeling policies and default sensitivity labels for SharePoint document libraries. The valid values are: True - Enables support for PDFs. False (default) - Disables support for PDFs. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommentsOnSitePagesDisabled Disables or enables the commenting functionality on all site pages in the tenant. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ConditionalAccessPolicy Blocks or limits access to SharePoint and OneDrive content from un-managed devices. Type: SPOConditionalAccessPolicyType Parameter Sets: (All) Accepted values: AllowFullAccess, AllowLimitedAccess, BlockAccess, ProtectionLevel Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultLinkPermission Sets the default permission of the link in the sharing dialog box in OneDrive for Business and SharePoint Online. This applies to anonymous access, internal and direct links. Type: SharingPermissionType Parameter Sets: (All) Accepted values: None, View, Edit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultSharingLinkType Lets administrators choose what type of link appears is selected in the \"Get a link\" sharing dialog box in OneDrive for Business and SharePoint Online. For additional information about how to change the default link type, see Change the default link type when users get links for sharing. Note: Setting this value to \"none\" will default \"get a link\" to the most permissive link available. If anonymous links are enabled, the default link will be anonymous access; if they are disabled, then the default link will be internal. Type: SharingLinkType Parameter Sets: (All) Accepted values: None, Direct, Internal, AnonymousAccess Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableBackToClassic Disables the back to classic link for libraries and lists. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableCustomAppAuthentication Configure if ACS-based app-only authentication should be disabled or not. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisabledWebPartIds Guids of out of the box modern web part id's to disallow from being added to pages and remove from pages where they already have been used. Currently only the following web parts can be disabled in such a way: Amazon Kindle: 46698648-fcd5-41fc-9526-c7f7b2ace919 YouTube: 544dd15b-cf3c-441b-96da-004d5a8cea1d Twitter: f6fdf4f8-4a24-437b-a127-32e66a5dd9b4 Embed: 490d7c76-1824-45b2-9de3-676421c997fa Microsoft Bookings: d24a7165-c455-4d43-8bc8-fedb04d6c1b5 Stream: 275c0095-a77e-4f6d-a2a0-6a7626911518 To block one of them, simply pass in the GUID behind the parameter. To disable more than one, separate the GUIDs with a comma. To unblock web parts, just set this property leaving out the one(s) you wish to unblock, leaving the ones that you would like to remain blocked. To unblock all web parts, use -DisabledWebPartIds @(). To see which one(s) are currently blocked, use Get-PnPTenant | Select DisabledWebPartIds. Type: Guid[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisallowInfectedFileDownload Prevents the Download button from being displayed on the Virus Found warning page. Accepts a value of true (enabled) to hide the Download button or false (disabled) to display the Download button. By default this feature is set to false. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayStartASiteOption Determines whether tenant users see the Start a Site menu option. The valid values are: True (default) - Tenant users will see the Start a Site menu option. False - Start a Site is hidden from the menu. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EmailAttestationReAuthDays Sets the number of days for email attestation re-authentication. Value can be from 1 to 365 days. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EmailAttestationRequired Sets email attestation to required. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableAIPIntegration Boolean indicating if Azure Information Protection (AIP) should be enabled on the tenant. For more information, see https://learn.microsoft.com/microsoft-365/compliance/sensitivity-labels-sharepoint-onedrive-files#use-powershell-to-enable-support-for-sensitivity-labels Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableGuestSignInAcceleration Accelerates guest-enabled site collections as well as member-only site collections when the SignInAccelerationDomain parameter is set. Note: If enabled, your identity provider must be capable of authenticating guest users. If it is not, guest users will be unable to log in and access content that was shared with them. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExternalServicesEnabled Enables external services for a tenant. External services are defined as services that are not in the Office 365 data centers. The valid values are: True (default) - External services are enabled for the tenant. False - External services that are outside of the Office 365 data centers cannot interact with SharePoint. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FileAnonymousLinkType Sets whether anonymous access links can allow recipients to only view or view and edit. The value can be set separately for folders and separately for files. Type: AnonymousLinkType Parameter Sets: (All) Accepted values: None, View, Edit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FilePickerExternalImageSearchEnabled Sets whether webparts that support inserting images, like for example Image or Hero webpart, the Web search (Powered by Bing) should allow choosing external images. The default is enabled. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FolderAnonymousLinkType Sets whether anonymous access links can allow recipients to only view or view and edit. The value can be set separately for folders and separately for files. Type: AnonymousLinkType Parameter Sets: (All) Accepted values: None, View, Edit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideDefaultThemes Defines if the default themes are visible or hidden. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IPAddressAllowList Configures multiple IP addresses or IP address ranges (IPv4 or IPv6). Use commas to separate multiple IP addresses or IP address ranges. Verify there are no overlapping IP addresses and ensure IP ranges use Classless Inter-Domain Routing (CIDR) notation. For example, 172.16.0.0, 192.168.1.0/27. Note: The IPAddressAllowList parameter only lets administrators set IP addresses or ranges that are recognized as trusted. To only grant access from these IP addresses or ranges, set the IPAddressEnforcement parameter to $true. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IPAddressEnforcement Allows access from network locations that are defined by an administrator. The values are $true and $false. The default value is $false which means the setting is disabled. Before the IPAddressEnforcement parameter is set, make sure you add a valid IPv4 or IPv6 address to the IPAddressAllowList parameter. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IPAddressWACTokenLifetime Allows to set the session timeout. If you are a tenant administrator and you begin IP address enforcement for OneDrive for Business in Office 365, this enforcement automatically activates a tenant parameter IPAddressWACTokenLifetime. The default value is 15 minutes, when IP Address Enforcement is True. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsDataAccessInCardDesignerEnabled Allows turning on support for data access in the Viva Connections Adaptive Card Designer. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsSharePointAddInsDisabled When the feature is enabled, all the add-ins features will be disabled. The valid values are: False (default) - All the add-ins features are supported. True - All the add-ins features will be disabled. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LegacyAuthProtocolsEnabled By default this value is set to $true. Setting this parameter prevents Office clients using non-modern authentication protocols from accessing SharePoint Online resources. A value of $true - Enables Office clients using non-modern authentication protocols(such as, Forms-Based Authentication (FBA) or Identity Client Runtime Library (IDCRL)) to access SharePoint resources. A value of $false - Prevents Office clients using non-modern authentication protocols from accessing SharePoint Online resources. Note: This may also prevent third-party apps from accessing SharePoint Online resources.Also, this will also block apps using the SharePointOnlineCredentials class to access SharePoint Online resources.For additional information about SharePointOnlineCredentials, see SharePointOnlineCredentials class. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MaxCompatibilityLevel Specifies the upper bound on the compatibility level for new sites. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MinCompatibilityLevel Specifies the lower bound on the compatibility level for new sites. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoAccessRedirectUrl Specifies the URL of the redirected site for those site collections which have the locked state \"NoAccess\" The valid values are: \"\"(default) - Blank by default, this will also remove or clear any value that has been set. Full URL - Example: https://contoso.sharepoint.com/Pages/Locked.aspx Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NotificationsInOneDriveForBusinessEnabled Enables or disables notifications in OneDrive for Business. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NotificationsInSharePointEnabled Enables or disables notifications in SharePoint. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NotifyOwnersWhenInvitationsAccepted When this parameter is set to $true and when an external user accepts an invitation to a resource in a user's OneDrive for Business, the OneDrive for Business owner is notified by e-mail. For additional information about how to configure notifications for external sharing, see Configure notifications for external sharing for OneDrive for Business. The values are $true and $false. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NotifyOwnersWhenItemsReShared When this parameter is set to $true and another user re-shares a document from a user's OneDrive for Business, the OneDrive for Business owner is notified by e-mail. For additional information about how to configure notifications for external sharing, see Configure notifications for external sharing for OneDrive for Business. The values are $true and $false. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ODBAccessRequests Lets administrators set policy on access requests and requests to share in OneDrive for Business. Values: On- Users without permission to share can trigger sharing requests to the OneDrive for Business owner when they attempt to share. Also, users without permission to a file or folder can trigger access requests to the OneDrive for Business owner when they attempt to access an item they do not have permissions to. Off- Prevent access requests and requests to share on OneDrive for Business. Unspecified- Let each OneDrive for Business owner enable or disable access requests and requests to share on their OneDrive. Type: SharingState Parameter Sets: (All) Accepted values: Unspecified, On, Off Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ODBMembersCanShare Lets administrators set policy on re-sharing behavior in OneDrive for Business. Values: On- Users with edit permissions can re-share. Off- Only OneDrive for Business owner can share. The value of ODBAccessRequests defines whether a request to share gets sent to the owner. Unspecified- Let each OneDrive for Business owner enable or disable re-sharing behavior on their OneDrive. Type: SharingState Parameter Sets: (All) Accepted values: Unspecified, On, Off Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OfficeClientADALDisabled When set to true this will disable the ability to use Modern Authentication that leverages ADAL across the tenant. The valid values are: False (default) - Modern Authentication is enabled/allowed. True - Modern Authentication via ADAL is disabled. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OneDriveForGuestsEnabled Lets OneDrive for Business creation for administrator managed guest users. Administrator managed Guest users use credentials in the resource tenant to access the resources. The valid values are the following: $true-Administrator managed Guest users can be given OneDrives, provided needed licenses are assigned. $false- Administrator managed Guest users can't be given OneDrives as functionality is turned off. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OneDriveStorageQuota Sets a default OneDrive for Business storage quota for the tenant. It will be used for new OneDrive for Business sites created. A typical use will be to reduce the amount of storage associated with OneDrive for Business to a level below what the License entitles the users. For example, it could be used to set the quota to 10 gigabytes (GB) by default. If value is set to 0, the parameter will have no effect. If the value is set larger than the Maximum allowed OneDrive for Business quota, it will have no effect. Type: Int64 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OrphanedPersonalSitesRetentionPeriod Specifies the number of days after a user's Active Directory account is deleted that their OneDrive for Business content will be deleted. The value range is in days, between 30 and 3650. The default value is 30. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OwnerAnonymousNotification Specifies whether an email notification should be sent to the OneDrive for Business owners when an anonymous links are created or changed. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PreventExternalUsersFromReSharing Prevents external users from resharing files, folders, and sites that they do not own. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ProvisionSharedWithEveryoneFolder Creates a Shared with Everyone folder in every user's new OneDrive for Business document library. The valid values are: True (default) - The Shared with Everyone folder is created. False - No folder is created when the site and OneDrive for Business document library is created. The default behavior of the Shared with Everyone folder changed in August 2015. For additional information about the change, see Provision the Shared with Everyone folder in OneDrive for Business (https://support.office.com/article/Provision-the-Shared-with-Everyone-folder-in-OneDrive-for-Business-6bb02c91-fd0b-42ba-9457-3921cb6dc5b2) Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PublicCdnAllowedFileTypes Sets public CDN allowed file types, if the public CDN is enabled. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PublicCdnEnabled Enables or disables the public CDN. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequireAcceptingAccountMatchInvitedAccount Ensures that an external user can only accept an external sharing invitation with an account matching the invited email address. Administrators who desire increased control over external collaborators should consider enabling this feature. Note, this only applies to new external users accepting new sharing invitations. Also, the resource owner must share with an organizational or Microsoft account or the external user will be unable to access the resource. The valid values are: False (default) - When a document is shared with an external user, bob@contoso.com, it can be accepted by any user with access to the invitation link in the original e-mail. True - User must accept this invitation with bob@contoso.com. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequireAnonymousLinksExpireInDays Specifies all anonymous links that have been created (or will be created) will expire after the set number of days . To remove the expiration requirement, set the value to zero (0). Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SearchResolveExactEmailOrUPN Removes the search capability from People Picker. Note, recently resolved names will still appear in the list until browser cache is cleared or expired. SharePoint Administrators will still be able to use starts with or partial name matching when enabled. The valid values are: False (default) - Starts with / partial name search functionality is available. True - Disables starts with / partial name search functionality for all SharePoint users, except SharePoint Admins. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingAllowedDomainList Specifies a list of email domains that is allowed for sharing with the external collaborators. Use the space character as the delimiter for entering multiple values. For example, \"contoso.com fabrikam.com\". For additional information about how to restrict a domain sharing, see Restricted Domains Sharing in Office 365 SharePoint Online and OneDrive for Business Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingBlockedDomainList Specifies a list of email domains that is blocked or prohibited for sharing with the external collaborators. Use space character as the delimiter for entering multiple values. For example, \"contoso.com fabrikam.com\". For additional information about how to restrict a domain sharing, see Restricted Domains Sharing in Office 365 SharePoint Online and OneDrive for Business Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingCapability Determines what level of sharing is available for the site. The valid values are: ExternalUserAndGuestSharing (default) : External user sharing (share by email) and guest link sharing are both enabled. Disabled : External user sharing (share by email) and guest link sharing are both disabled. ExternalUserSharingOnly : External user sharing (share by email) is enabled, but guest link sharing is disabled. ExistingExternalUserSharingOnly : Only guests already in your organization's directory. For more information about sharing, see Manage external sharing for your SharePoint online environment (https://learn.microsoft.com/sharepoint/turn-external-sharing-on-or-off). Type: SharingCapabilities Parameter Sets: (All) Accepted values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingDomainRestrictionMode Specifies the external sharing mode for domains. The following values are: None AllowList BlockList For additional information about how to restrict a domain sharing, see Restricted Domains Sharing in Office 365 SharePoint Online and OneDrive for Business. Type: SharingDomainRestrictionModes Parameter Sets: (All) Accepted values: None, AllowList, BlockList Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowAllUsersClaim Enables the administrator to hide the All Users claim groups in People Picker. When users share an item with \"All Users (x)\", it is accessible to all organization members in the tenant's Azure Active Directory who have authenticated with via this method. When users share an item with \"All Users (x)\" it is accessible to all organization members in the tenant that used NTLM to authentication with SharePoint. Note, the All Users(authenticated) group is equivalent to the Everyone claim, and shows as Everyone.To change this, see - ShowEveryoneClaim. The valid values are: True(default) - The All Users claim groups are displayed in People Picker. False - The All Users claim groups are hidden in People Picker. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowEveryoneClaim Enables the administrator to hide the Everyone claim in the People Picker. When users share an item with Everyone, it is accessible to all authenticated users in the tenant's Azure Active Directory, including any active external users who have previously accepted invitations. Note, that some SharePoint system resources such as templates and pages are required to be shared to Everyone and this type of sharing does not expose any user data or metadata. The valid values are: True (default) - The Everyone claim group is displayed in People Picker. False - The Everyone claim group is hidden from the People Picker. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowEveryoneExceptExternalUsersClaim Enables the administrator to hide the \"Everyone except external users\" claim in the People Picker. When users share an item with \"Everyone except external users\", it is accessible to all organization members in the tenant's Azure Active Directory, but not to any users who have previously accepted invitations. The valid values are: True(default) - The Everyone except external users is displayed in People Picker. False - The Everyone except external users claim is not visible in People Picker. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowPeoplePickerSuggestionsForGuestUsers Shows people picker suggestions for guest users. To enable the option to search for existing guest users at Tenant Level, set this parameter to $true. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SignInAccelerationDomain Specifies the home realm discovery value to be sent to Azure Active Directory (AAD) during the user sign-in process. When the organization uses a third-party identity provider, this prevents the user from seeing the Azure Active Directory Home Realm Discovery web page and ensures the user only sees their company's Identity Provider's portal. This value can also be used with Azure Active Directory Premium to customize the Azure Active Directory login page. Acceleration will not occur on site collections that are shared externally. This value should be configured with the login domain that is used by your company (that is, example@contoso.com). If your company has multiple third-party identity providers, configuring the sign-in acceleration value will break sign-in for your organization. The valid values are: \"\" (default) - Blank by default, this will also remove or clear any value that has been set. Login Domain - For example: \"contoso.com\" Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SocialBarOnSitePagesDisabled Disables or enables the Social Bar which appears on all modern SharePoint pages with the exception of the home page of a site. It gives users the ability to like a page, see the number of views, likes, and comments on a page, and see the people who have liked a page. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SpecialCharactersStateInFileFolderNames Permits the use of special characters in file and folder names in SharePoint Online and OneDrive for Business document libraries. The only two characters that can be managed at this time are the # and % characters. Type: SpecialCharactersState Parameter Sets: (All) Accepted values: NoPreference, Allowed, Disallowed Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartASiteFormUrl Specifies URL of the form to load in the Start a Site dialog. The valid values are: \"\" (default) - Blank by default, this will also remove or clear any value that has been set. Full URL - Example: \"https://contoso.sharepoint.com/path/to/form\" Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UseFindPeopleInPeoplePicker Note: When set to $true, users aren't able to share with security groups or SharePoint groups. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UsePersistentCookiesForExplorerView Lets SharePoint issue a special cookie that will allow this feature to work even when \"Keep Me Signed In\" is not selected. \"Open with Explorer\" requires persisted cookies to operate correctly. When the user does not select \"Keep Me Signed in\" at the time of sign -in, \"Open with Explorer\" will fail. This special cookie expires after 30 minutes and cannot be cleared by closing the browser or signing out of SharePoint Online.To clear this cookie, the user must log out of their Windows session. The valid values are: False(default) - No special cookie is generated and the normal Office 365 sign -in length / timing applies. True - Generates a special cookie that will allow \"Open with Explorer\" to function if the \"Keep Me Signed In\" box is not checked at sign -in. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UserVoiceForFeedbackEnabled Enables or disables the User Voice Feedback button shown at the bottom of all modern SharePoint Online pages. The \"Feedback\" link allows the end user to fill out a feedback form inside SharePoint Online which then creates an entry in the public SharePoint UserVoice topic. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableAutoNewsDigest Boolean indicating if a news digest should automatically be sent to end users to inform them about news that they may have missed. On by default. For more information see https://aka.ms/autonewsdigest Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommentsOnListItemsDisabled Disables or enables commenting functionality on list items. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommentsOnFilesDisabled Disables or enables commenting functionality on files. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCommentsTextOnEmailEnabled When this parameter is set to true, an email notification that user receives when is mentioned, includes the surrounding document context. Set it to false to disable this feature. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InformationBarriersSuspension Allows suspension of the information barriers feature in a Microsoft 365 tenant. Setting this to $true will disable information barriers, setting this to $false will enable information barriers. For more information, see https://learn.microsoft.com/sharepoint/information-barriers. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowFilesWithKeepLabelToBeDeletedSPO Allows configuration on if files located on SharePoint Online having retention labels on them blocking them from deletion ($false) or if they can be deleted which will move the file to the preservation hold library ($true) Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: $true Accept pipeline input: False Accept wildcard characters: False -AllowFilesWithKeepLabelToBeDeletedODB Allows configuration on if files located on OneDrive for Business having retention labels on them blocking them from deletion ($false) or if they can be deleted which will move the file to the preservation hold library ($true) Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: $true Accept pipeline input: False Accept wildcard characters: False -DisableAddToOneDrive Allows configuration on Add shortcut to OneDrive feature in SharePoint document libraries. If set to $true, then this feature will be disabled on all sites in the tenant. If set to $false, it will be enabled on all sites in the tenant. Type: Boolean Parameter Sets: (All) Aliases: DisableAddShortcutsToOneDrive Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsFluidEnabled Allows configuration on whether Fluid components are enabled or disabled in the tenant. If set to $true, then this feature will be enabled on all sites in the tenant. If set to $false, it will be disabled on all sites in the tenant. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisablePersonalListCreation Allows configuring whether personal lists created within the OneDrive for Business site of the user is enabled or disabled in the tenant. If set to $false, personal lists will be allowed to be created in the tenant. If set to $true, it will be disabled in the tenant. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisabledModernListTemplateIds Guids of out of the box modern list templates to hide when creating a new list Type: Guid[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableModernListTemplateIds Guids of out of the box modern list templates to show when creating a new list Template Template Id Media library 7fdc8cba-3e07-4851-a7ac-b747040ff1ce Learning 2a31cc9a-a7a2-4978-8104-6b7c0c0ff1ce Invoices cb3f4b1a-d4d8-40b3-a3e8-c39c470ff1ce Type: Guid[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExternalUserExpirationRequired When set to true, it will set enable expiration date for external users. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExternalUserExpireInDays When a value is set, it means that the access of the external user will expire in those many number of days. Type: Int Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayNamesOfFileViewers Allows configuring whether display name of people who view the file are visible in the property pane of the site in OneDrive for business sites. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayNamesOfFileViewersInSpo Allows configuring whether display name of people who view the file are visible in the property pane of the site in SharePoint site collection. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsLoopEnabled Allows configuring whether loop components are enabled or disabled in the tenant. If set to $true, loop components will be allowed to be created in the tenant. If set to $false, it will be disabled in the tenant. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OneDriveRequestFilesLinkEnabled Allows configuring whether users will be able to create anonymous requests for people to upload files regardless of the Share with anyone link configuration setting. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableRestrictedAccessControl To enable restricted access control in SharePoint Online. You need to wait approximately 1 hour before managing restricted access control for a site collection. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableAzureADB2BIntegration Allows enablement of SharePoint and OneDrive integration with Azure AD B2B. See this article for more information. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CoreRequestFilesLinkEnabled Enable or disable the Request files link on the core partition for all SharePoint sites (not including OneDrive sites). If this value is not set, Request files will only show for OneDrives with Anyone links enabled. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CoreRequestFilesLinkExpirationInDays Specifies the number of days before a Request files link expires for all SharePoint sites (not including OneDrive sites). The value can be from 0 to 730 days. Type: Integer Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LabelMismatchEmailHelpLink This parameter allows tenant admins to customize the \"Help Link\" in email with the subject \"Incompatible sensitivity label detected.\" When a sensitivity label mismatch occurs between the label on the document uploaded and the label on the site, SharePoint Online captures an audit record and sends an Incompatible sensitivity label detected email notification to the person who uploaded the document and the site owner. The notification contains details of the document which caused the problem and the label assigned to the document and to the site. The comparison happens between the priority of these two labels. More information. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CoreLoopSharingCapability Gets or sets collaboration type for fluid on core partition The valid values are: ExternalUserAndGuestSharing (default) : External user sharing (share by email) and guest link sharing are both enabled. Disabled : External user sharing (share by email) and guest link sharing are both disabled. ExternalUserSharingOnly : External user sharing (share by email) is enabled, but guest link sharing is disabled. ExistingExternalUserSharingOnly : Only guests already in your organization's directory. Type: SharingCapabilities Parameter Sets: (All) Accepted values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OneDriveLoopSharingCapability When sharing a whiteboard in a Teams meeting, Whiteboard creates a sharing link that’s accessible by anyone within the organization and automatically shares the whiteboard with any in-tenant users in the meeting. There’s an additional capability for temporary collaboration by external and shared device accounts during a meeting. This allows these users to temporarily view and collaborate on whiteboards when they’re shared in a Teams meeting, similar to PowerPoint Live sharing. If you have the external sharing for OneDrive for Business allowed, no further action is required. If you have external sharing for OneDrive for Business disabled, you can leave it disabled but you must enable this new setting. The setting will not take effect until the SharingCapability 'ExternalUserAndGuestSharing' is also enabled at Tenant level. For more information, see Enable Microsoft Whiteboard for your organization. The valid values are: ExternalUserAndGuestSharing (default) : External user sharing (share by email) and guest link sharing are both enabled. Disabled : External user sharing (share by email) and guest link sharing are both disabled. ExternalUserSharingOnly : External user sharing (share by email) is enabled, but guest link sharing is disabled. ExistingExternalUserSharingOnly : Only guests already in your organization's directory. Type: SharingCapabilities Parameter Sets: (All) Accepted values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OneDriveLoopDefaultSharingLinkScope Gets or sets default share link scope for fluid on OneDrive sites. The valid values are: Anyone Organization SpecificPeople Uninitialized Type: SharingScope Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CoreLoopDefaultSharingLinkScope Gets or sets default share link scope for fluid on SharePoint sites. The valid values are: Anyone Organization SpecificPeople Uninitialized Type: SharingScope Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CoreLoopDefaultSharingLinkRole Gets or sets default share link role for fluid on SharePoint sites. The valid values are: Edit None RestrictedView Review View Type: Role Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsWBFluidEnabled Sets whether Whiteboard is enabled or disabled for OneDrive for Business users. Whiteboard on OneDrive for Business is automatically enabled for applicable Microsoft 365 tenants but can be disabled. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsCollabMeetingNotesFluidEnabled Gets or sets a value to specify whether CollabMeetingNotes Fluid Framework is enabled. If IsFluidEnabled disabled, IsCollabMeetingNotesFluidEnabled will be disabled automatically. If IsFluidEnabled enabled, IsCollabMeetingNotesFluidEnabled will be enabled automatically. IsCollabMeetingNotesFluidEnabled can be enabled only when IsFluidEnabled is already enabled. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowAnonymousMeetingParticipantsToAccessWhiteboards When you share a whiteboard in a Teams meeting, Whiteboard creates a sharing link. This link is accessible by anyone within the organization. The whiteboard is also shared with any in-tenant users in the meeting. Whiteboards are shared using company-shareable links, regardless of the default setting. Support for the default sharing link type is planned. There's more capability for temporary collaboration by external and shared device accounts during a Teams meeting. Users can temporarily view and collaborate on whiteboards that are shared in a meeting, in a similar way to PowerPoint Live sharing. In this case, Whiteboard provides temporary viewing and collaboration on the whiteboard during the Teams meeting only. A share link isn't created and Whiteboard doesn't grant access to the file. If you have external sharing enabled for OneDrive for Business, no further action is required. If you restrict external sharing for OneDrive for Business, you can keep it restricted, and just enable this new setting in order for external and shared device accounts to work. For more information, see Manage sharing for Microsoft Whiteboard. Type: SharingState Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IBImplicitGroupBased Gets or sets IBImplicitGroupBased value Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowOpenInDesktopOptionForSyncedFiles The ShowOpenInDesktopOptionForSyncedFiles setting (set to false by default) displays the \"Open in desktop\" option when users go to SharePoint or OneDrive on the web and open the shortcut menu for a file that they're syncing with the OneDrive sync app. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowPeoplePickerGroupSuggestionsForIB The ShowPeoplePickerGroupSuggestionsForIB setting (defaulted to false) allows showing group suggestions for information barriers (IBs) in the People Picker. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CoreBlockGuestsAsSiteAdmin Type: SharingState Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideSyncButtonOnTeamSite To enable or disable Sync button on Team sites. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CoreDefaultLinkToExistingAccess Gets or sets default share link to existing access on core partition Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableVivaConnectionsAnalytics Use this parameter to disable/enable Viva connection analytics. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OneDriveLoopDefaultSharingLinkRole Gets or sets default share link role for fluid on OneDrive sites. The valid values are: Edit None RestrictedView Review View Type: Role Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MajorVersionLimit When Version History Limits are managed Manually (EnableAutoExpirationVersionTrim $false), admins will need to set the limits to the number of major versions (MajorVersionLimit) and the time period the versions are stored (ExpireVersionsAfterDays). Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExpireVersionsAfterDays When Version History Limits are managed Manually (EnableAutoExpirationVersionTrim $false), admins will need to set the limits to the number of major versions (MajorVersionLimit) and the time period the versions are stored (ExpireVersionsAfterDays). Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableAutoExpirationVersionTrim Enable or disable AutoExpiration version trim for the document library. Set to $true to enable, $false to disable. Parameter ExpireVersionsAfterDays is required when EnableAutoExpirationVersionTrim is false. Set ExpireVersionsAfterDays to 0 for NoExpiration, set it to greater or equal 30 for ExpireAfter. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsEnableAppAuthPopUpEnabled Enables or disables users in the organization to authenticate SharePoint applications using popups. This parameter affects the way code in SharePoint interacts with Azure AD to get tokens to access APIs. In scenarios where third-party cookies are disabled (such as Safari browsers with ITP feature enabled), any code that requires a token to access an API automatically triggers a full page refresh. When IsEnableAppAuthPopUpEnabled is set to $true, SharePoint will instead surface a popup in this scenario. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OneDriveRequestFilesLinkExpirationInDays Specifies the number of days before a Request files link expires for all OneDrive sites. The value can be from 0 to 730 days. To remove the expiration requirement, set the value to zero (0). Type: Int Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableDocumentLibraryDefaultLabeling Use this turn off setting the default sensitivity label for a document library. For more information on this feature, please take a look here Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BlockDownloadFileTypePolicy You can block the download of Teams meeting recording files from SharePoint or OneDrive. This allows users to remain productive while addressing the risk of accidental data loss. Users have browser-only access to play the meeting recordings with no ability to download or sync files or access them through apps. This policy applies to new meeting recordings across the entire organization. You can exempt people who are members of specified security groups from the policy. This allows you to specify governance or compliance specialists who should have download access to meeting recordings. After the policy is turned on, any new Teams meeting recording files created by the Teams service and saved in SharePoint and OneDrive are blocked from download. Because this policy affects meeting recordings stored in OneDrive and SharePoint, you must be a SharePoint administrator to configure it. Note that this policy doesn't apply to manually uploaded meeting recording files. For more details, see Block the download of Teams meeting recording files from SharePoint or OneDrive. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BlockDownloadFileTypeIds The File Type IDs which need to specified to prevent download. Type: SPBlockDownloadFileTypeId[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludedBlockDownloadGroupIds This parameter exempts users in the specified security groups from this policy so that they can download meeting recording files. Type: GUID[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StopNew2013Workflows This parameter allows disablement of creation of new SharePoint 2013 workflows in the tenant Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MediaTranscription When the feature is enabled, videos can have transcripts generated on demand or generated automatically in certain scenarios. This is the default because the policy is default on. If a video owner decides they don’t want the transcript, they can always hide or delete it from that video. Possible values: Enabled, Disabled. Type: MediaTranscriptionPolicyType Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MediaTranscriptionAutomaticFeatures When the feature is enabled, videos can have transcripts generated automatically on upload. The policy is default on. If a tenant admin decides to disable the feature, he can do so by disabling the policy at tenant level. This feature can not be enabled or disabled at site level. Possible values: Enabled, Disabled. Type: MediaTranscriptionAutomaticFeaturesPolicyType Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteOwnerManageLegacyServicePrincipalEnabled This parameter allows site owners to create or update the service principal. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ReduceTempTokenLifetimeEnabled Enables reduced session timeout for temporary URLs used by apps for document download scenarios. Reduction occurs when an app redeeming an IP address does not match the original requesting IP. The default value is 15 minutes if ReduceTempTokenLifetimeValue is not set. Note: Reducing this value may bring degradation in end-user experience by requiring frequent authentication prompts to users. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ReduceTempTokenLifetimeValue Optional parameter to set the session timeout value for temporary URLs. The value can be set between 5 and 15 minutes and the default value is 15 minutes. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ViewersCanCommentOnMediaDisabled Controls whether viewers commenting on media items is disabled or not. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowGuestUserShareToUsersNotInSiteCollection The AllowGuestUserShareToUsersNotInSiteCollection settings (defaulted to false) will allow guests to share to users not in the site. The valid values are: False (default) - Guest users will only be able to share to users that exist within the current site. True - Guest users will be able to find user accounts in the directory by typing in the exact email address match. Note: When the value is set to True, you will also need to enable SharePoint and OneDrive integration with Azure AD B2B for the functionality to work. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ConditionalAccessPolicyErrorHelpLink A Link for help when Conditional Access Policy blocks a user. This should be in a valid URL format. A valid URL format that begins with http:// or https://. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CustomizedExternalSharingServiceUrl Specifies a URL that will be appended to the error message that is surfaced when a user is blocked from sharing externally by policy. This URL can be used to direct users to internal portals to request help or to inform them about your organization's policies. An example value is https://www.contoso.com/sharingpolicies. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeAtAGlanceInShareEmails Enables or disables the At A Glance feature in sharing e-mails. This provides the key points and time to read for the shared item if available. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MassDeleteNotificationDisabled Enables or disables the mass delete detection feature. When MassDeleteNotificationDisabled is set to $true, tenant admins can perform mass deletion operations without triggering notifications. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AppBypassInformationBarriers Enables of disables applications running in app-only mode to access IB sites. For more information about information barriers, see Use information barriers with SharePoint for your SharePoint Online environment. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultOneDriveInformationBarrierMode The DefaultOneDriveInformationBarrierMode sets the information barrier mode for all OneDrive sites. The valid values are: Open Explicit Implicit OwnerModerated Mixed For more information about information barriers, see Use information barriers with SharePoint for your SharePoint Online environment. Type: InformationBarriersMode Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CoreSharingCapability Sets what level of sharing is available for SharePoint sites (not including OneDrive sites). The valid values are: ExternalUserAndGuestSharing (default) : External user sharing (share by email) and guest link sharing are both enabled. Disabled : External user sharing (share by email) and guest link sharing are both disabled. ExternalUserSharingOnly : External user sharing (share by email) is enabled, but guest link sharing is disabled. ExistingExternalUserSharingOnly : Only guests already in your organization's directory. Type: SharingCapabilities Parameter Sets: (All) Accepted values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BlockUserInfoVisibilityInOneDrive Blocks users from accessing User Info if they have Limited Access permission only to the OneDrive. The policy applies to all OneDrives in the organization. The valid values are: ApplyToNoUsers (default) - No users are prevented from accessing User Info when they have Limited Access permission only. ApplyToAllUsers - All users (internal or external) are prevented from accessing User Info if they have Limited Access permission only. ApplyToGuestAndExternalUsers - Only external or guest users are prevented from accessing User Info if they have Limited Access permission only. ApplyToInternalUsers - Only internal users are prevented from accessing User Info if they have Limited Access permission only. Type: TenantBrowseUserInfoPolicyValue Parameter Sets: (All) Accepted values: ApplyToNoUsers (default), ApplyToAllUsers, ApplyToGuestAndExternalUsers, ApplyToInternalUsers Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BlockUserInfoVisibilityInSharePoint Blocks users from accessing User Info if they have Limited Access permission only to a SharePoint site. The policy applies to all SharePoint sites in the organization. The valid values are: ApplyToNoUsers (default) - No users are prevented from accessing User Info when they have Limited Access permission only to a SharePoint site. ApplyToAllUsers - All users (internal or external) are prevented from accessing User Info if they have Limited Access permission only to a SharePoint site. ApplyToGuestAndExternalUsers - Only external or guest users are prevented from accessing User Info if they have Limited Access permission only to a SharePoint site. ApplyToInternalUsers - Only internal users are prevented from accessing User Info if they have Limited Access permission only to a SharePoint site. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowOverrideForBlockUserInfoVisibility Allow organization level policy for Block User Info Visibility to be overridden for a SharePoint site or OneDrive. The valid values are: False (default) - Do not allow the Block User Info Visibility policy to be overridden for a SharePoint site or OneDrive. True - Allow the Block User Info Visibility policy to be overridden for a SharePoint site or OneDrive. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowEveryoneExceptExternalUsersClaimInPrivateSite When this parameter is true, the \"Everyone except external users\" claim is available in the People Picker of a private site. Set it to false to disable this feature. The valid values are: True - The \"Everyone except external users\" claim is available in People Picker of a private site. False (default) - The \"Everyone except external users\" claim is not available in People Picker of a private site. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AIBuilderEnabled Enables or disables AI Builder. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowSensitivityLabelOnRecords Allows sensitivity label on records. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AnyoneLinkTrackUsers Enables or disables tracking of users with anyone link. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableSiteArchive Enables or disables site archive. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ESignatureEnabled Enables or disables eSignature. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MarkNewFilesSensitiveByDefault Marks new files as sensitive by default before DLP policies are applied. Type: SensitiveByDefaultState Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OneDriveDefaultShareLinkScope Sets the default sharing link scope for OneDrive. The valid values are: Anyone : Anyone with the link can access the content. Organization : Only people within the organization can access the content. SpecificPeople : Only specific individuals (specified by the user) can access the content. Uninitialized : The default value, indicating that the default share link scope is not explicitly set Type: SharingScope Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OneDriveDefaultShareLinkRole Sets the default sharing link role for OneDrive. It replaces the DefaultSharingLinkType. Valid values are : None: No permissions granted. View: View-only permissions. Edit: Edit permissions. Review: Review permissions. RestrictedView: Restricted view permissions. Type: Role Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OneDriveDefaultLinkToExistingAccess Sets whether OneDrive default links should grant access to existing users. It replaces the DefaultLinkPermission. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OneDriveBlockGuestsAsSiteAdmin Sets the sharing state for blocking guests as site admin in OneDrive. Valid values are On Off Unspecified Type: SharingState Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RecycleBinRetentionPeriod Sets the retention period for the recycle bin. The value of Recycle Bin Retention Period must be between 14 and 93. By default it is set to 93. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CoreDefaultShareLinkScope Sets the default sharing link scope for SharePoint sites. It replaces the DefaultSharingLinkType. The valid values are: Anyone : Anyone with the link can access the content. Organization : Only people within the organization can access the content. SpecificPeople : Only specific individuals (specified by the user) can access the content. Uninitialized : The default value, indicating that the default share link scope is not explicitly set Type: SharingScope Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CoreDefaultShareLinkRole Sets the default sharing link role for SharePoint sites. It replaces the DefaultLinkPermission. Valid values are : None: No permissions granted. View: View-only permissions. Edit: Edit permissions. Review: Review permissions. RestrictedView: Restricted view permissions. Type: Role Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OneDriveSharingCapability Determines what level of sharing is available for OneDrive for Business. The valid values are: ExternalUserAndGuestSharing (default) : External user sharing (share by email) and guest link sharing are both enabled. Disabled : External user sharing (share by email) and guest link sharing are both disabled. ExternalUserSharingOnly : External user sharing (share by email) is enabled, but guest link sharing is disabled. ExistingExternalUserSharingOnly : Only guests already in your organization's directory. For more information about sharing, see Manage external sharing for your SharePoint online environment (https://learn.microsoft.com/sharepoint/turn-external-sharing-on-or-off). Type: SharingCapabilities Parameter Sets: (All) Accepted values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GuestSharingGroupAllowListInTenantByPrincipalIdentity Sets the guest sharing group allow list in the tenant by principal identity. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SelfServiceSiteCreationDisabled Sets whether self-service site creation is disabled. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SyncAadB2BManagementPolicy This feature allows SharePoint Online to synchronize several Entra B2B collaboration settings Guest user access restriction and collaboration restriction, and store them on SharePoint Online tenant store. On sharing, SharePoint checks whether those synchronized settings are blocking sharing before sending invitation requests to Entra B2B invitation manager. The sync might take up to 24 hours to complete if you change those Entra B2B collaboration settings. To make the change effective on SharePoint Online immediately, run 'Set-PnPTenant -SyncAadB2BManagementPolicy' and it forces a sync from Microsoft Entra. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExtendPermissionsToUnprotectedFiles This property can be used to turn on/off the capability called \"Extended SharePoint permissions to unprotected files\". To learn more about this feature check here Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be requested and the action will be performed Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTenantAppCatalogUrl.html": {
    "href": "cmdlets/Set-PnPTenantAppCatalogUrl.html",
    "title": "Set-PnPTenantAppCatalogUrl | PnP PowerShell",
    "keywords": "Set-PnPTenantAppCatalogUrl SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Sets the url of the tenant scoped app catalog SYNTAX Set-PnPTenantAppCatalogUrl -Url <String> [-Connection <PnPConnection>] DESCRIPTION This cmdlet sets the tenant scoped app catalog to the specified url. EXAMPLES EXAMPLE 1 Set-PnPTenantAppCatalogUrl -Url \"https://yourtenant.sharepoint.com/sites/appcatalog\" Sets the tenant scoped app catalog to the provided site collection url PARAMETERS -Url The url of the site to set as the tenant scoped app catalog Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTenantCdnEnabled.html": {
    "href": "cmdlets/Set-PnPTenantCdnEnabled.html",
    "title": "Set-PnPTenantCdnEnabled | PnP PowerShell",
    "keywords": "Set-PnPTenantCdnEnabled SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Enables or disables the public or private Office 365 Content Delivery Network (CDN). SYNTAX Set-PnPTenantCdnEnabled [-NoDefaultOrigins] -Enable <Boolean> -CdnType <CdnType> [-Connection <PnPConnection>] DESCRIPTION Enables or disables the public or private Office 365 Content Delivery Network (CDN) for the tenant. EXAMPLES EXAMPLE 1 Set-PnPTenantCdnEnabled -CdnType Public -Enable $true This example sets the Public CDN enabled. EXAMPLE 2 Set-PnPTenantCdnEnabled -CdnType Private -Enable $false This example disables the Private CDN for the tenant. EXAMPLE 3 Set-PnPTenantCdnEnabled -CdnType Public -Enable $true -NoDefaultOrigins This example enables the Public CDN for the tenant, but skips the provisioning of the default origins. PARAMETERS -CdnType The type of CDN to enable or disable Type: CdnType Parameter Sets: (All) Accepted values: Public, Private, Both Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Enable Specify to enable or disable Type: Boolean Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoDefaultOrigins If specified, the default origins for the specified CDN type will not be provisioned. See Default CDN origins for information about the origins that are provisioned by default when you enable the Office 365 CDN, and the potential impact of skipping the setup of default origins. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTenantCdnPolicy.html": {
    "href": "cmdlets/Set-PnPTenantCdnPolicy.html",
    "title": "Set-PnPTenantCdnPolicy | PnP PowerShell",
    "keywords": "Set-PnPTenantCdnPolicy SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Sets the CDN Policies for the specified CDN (Public | Private). SYNTAX Set-PnPTenantCdnPolicy -CdnType <SPOTenantCdnType> -PolicyType <SPOTenantCdnPolicyType> -PolicyValue <String> [-Connection <PnPConnection>] DESCRIPTION Sets the CDN Policies for the specified CDN (Public | Private). EXAMPLES EXAMPLE 1 Set-PnPTenantCdnPolicy -CdnType Public -PolicyType IncludeFileExtensions -PolicyValue \"CSS,EOT,GIF,ICO,JPEG,JPG,JS,MAP,PNG,SVG,TTF,WOFF\" This example sets the IncludeFileExtensions policy to the specified value. EXAMPLE 2 Set-PnPTenantCdnPolicy -CdnType Public -PolicyType ExcludeRestrictedSiteClassifications -PolicyValue \"Confidential,Restricted\" This example sets the ExcludeRestrictedSiteClassifications policy for the selected CdnType to a policy value of listed excluded site classifications. PARAMETERS -CdnType The type of cdn to set the policies for. Type: SPOTenantCdnType Parameter Sets: (All) Accepted values: Public, Private Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PolicyType The type of the policy to set. Type: SPOTenantCdnPolicyType Parameter Sets: (All) Accepted values: IncludeFileExtensions, ExcludeRestrictedSiteClassifications, ExcludeIfNoScriptDisabled Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PolicyValue The value of the policy to set. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTenantRestrictedSearchMode.html": {
    "href": "cmdlets/Set-PnPTenantRestrictedSearchMode.html",
    "title": "Set-PnPTenantRestrictedSearchMode | PnP PowerShell",
    "keywords": "Set-PnPTenantRestrictedSearchMode SYNOPSIS Required Permissions Global Administrator or SharePoint Administrator Returns Restricted Search mode. SYNTAX Set-PnPTenantRestrictedSearchMode -Mode <RestrictedSearchMode> [-Connection <PnPConnection>] DESCRIPTION Returns Restricted Search mode. Restricted SharePoint Search is disabled by default. EXAMPLES EXAMPLE 1 Set-PnPTenantRestrictedSearchMode -Mode Enabled Sets or enables the Restricted Tenant Search mode for the tenant. EXAMPLE 2 Set-PnPTenantRestrictedSearchMode -Mode Disabled Disables the Restricted Tenant Search mode for the tenant. PARAMETERS -Mode Sets the mode for the Restricted Tenant Search. Type: RestrictedSearchMode Parameter Sets: (All) Accepted values: Enabled, Disabled Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTenantSite.html": {
    "href": "cmdlets/Set-PnPTenantSite.html",
    "title": "Set-PnPTenantSite | PnP PowerShell",
    "keywords": "Set-PnPTenantSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Updates settings of a site collection SYNTAX Set Properties Set-PnPTenantSite [-Identity] <String> [-Title <String>] [-LocaleId <UInt32>] [-AllowSelfServiceUpgrade] [-PrimarySiteCollectionAdmin <String>] [-Owners <String[]>] [-DenyAddAndCustomizePages] [-SharingCapability <SharingCapabilities>] [-StorageQuota <Int64>] [-StorageQuotaWarningLevel <Int64>] [-StorageQuotaReset] [-BlockDownloadLinksFileType <BlockDownloadLinksFileTypes>] [-ResourceQuota <Double>] [-ResourceQuotaWarningLevel <Double>] [-EnablePWA <Boolean>] [-DefaultLinkPermission <SharingPermissionType>] [-DefaultSharingLinkType <SharingLinkType>] [-DefaultLinkToExistingAccess <Boolean>] [-ExternalUserExpirationInDays <Int32>] [-SharingAllowedDomainList <String>] [-SharingBlockedDomainList <String>] [-ShowPeoplePickerSuggestionsForGuestUsers <Boolean>] [-AllowDownloadingOfNonWebViewableFiles] [-LimitedAccessFileType <SPOLimitedAccessFileType>] [-AllowEditing <Boolean>] [-SharingDomainRestrictionMode <SharingDomainRestrictionModes>] [-CommentsOnSitePagesDisabled] [-DisableAppViews <AppViewsPolicy>] [-DisableCompanyWideSharingLinks <CompanyWideSharingLinksPolicy>] [-DisableFlows <FlowsPolicy>] [-AnonymousLinkExpirationInDays <Int32>] [-SensitivityLabel <String>] [-RemoveLabel] [-AddInformationSegment <Guid[]>] [-RemoveInformationSegment <Guid[]>] [-OverrideTenantAnonymousLinkExpirationPolicy] [-InformationBarriersMode <InformationBarriersMode>] [-MediaTranscription <MediaTranscriptionPolicyType>] [-BlockDownloadPolicy <Boolean>] [-ExcludeBlockDownloadPolicySiteOwners <Boolean>] [-ExcludedBlockDownloadGroupIds <Guid[]>] [-ListsShowHeaderAndNavigation <Boolean>] [-DefaultLinkToExistingAccessReset <SwitchParameter>] [-DefaultShareLinkRole <Role>] [-DefaultShareLinkScope <SharingScope>] [-LoopDefaultSharingLinkRole <Role>] [-LoopDefaultSharingLinkScope <SharingScope>] [-RestrictContentOrgWideSearch <Boolean>] [-ReadOnlyForUnmanagedDevices <Boolean>] [-RequestFilesLinkExpirationInDays <Int32>] [-RequestFilesLinkEnabled <Boolean>] [-OverrideSharingCapability <Boolean>] [-RestrictedAccessControl <Boolean>] [-ClearRestrictedAccessControl <SwitchParameter>] [-RestrictedAccessControlGroups <Guid[]>] [-AddRestrictedAccessControlGroups <Guid[]>] [-RemoveRestrictedAccessControlGroups <Guid[]>][-InheritVersionPolicyFromTenant <SwitchParameter>] [-Wait] [-Connection <PnPConnection>] Set Lock State Set-PnPTenantSite [-Identity] <String> [-LockState <SiteLockState>] [-Wait] [-Connection <PnPConnection>] DESCRIPTION Allows settings of a site collection to be updated EXAMPLES EXAMPLE 1 Set-PnPTenantSite -Identity \"https://contoso.sharepoint.com\" -Title \"Contoso Website\" -SharingCapability Disabled This will set the title of the site collection with the URL 'https://contoso.sharepoint.com' to 'Contoso Website' and disable sharing on this site collection. EXAMPLE 2 Set-PnPTenantSite -Identity \"https://contoso.sharepoint.com\" -Title \"Contoso Website\" -StorageWarningLevel 8000 -StorageMaximumLevel 10000 This will set the title of the site collection with the URL 'https://contoso.sharepoint.com' to 'Contoso Website', set the storage warning level to 8GB and set the storage maximum level to 10GB. EXAMPLE 3 Set-PnPTenantSite -Identity \"https://contoso.sharepoint.com/sites/sales\" -Owners \"user@contoso.onmicrosoft.com\" This will add user@contoso.onmicrosoft.com as an additional site collection owner at 'https://contoso.sharepoint.com/sites/sales'. EXAMPLE 4 Set-PnPTenantSite -Identity \"https://contoso.sharepoint.com/sites/sales\" -Owners @(\"user1@contoso.onmicrosoft.com\", \"user2@contoso.onmicrosoft.com\") This will add user1@contoso.onmicrosoft.com and user2@contoso.onmicrosoft.com as additional site collection owners at 'https://contoso.sharepoint.com/sites/sales'. EXAMPLE 5 Set-PnPTenantSite -Identity \"https://contoso.sharepoint.com/sites/sales\" -DenyAddAndCustomizePages:$false This will enable script support for the site 'https://contoso.sharepoint.com/sites/sales' PARAMETERS -AddInformationSegment This parameter allows you to add a segment to a SharePoint site. This parameter is only applicable for tenants who have enabled Microsoft 365 Information barriers capability. Please read https://learn.microsoft.com/sharepoint/information-barriers documentation to understand Information barriers in SharePoint Online. Type: Guid[] Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowSelfServiceUpgrade Specifies if the site administrator can upgrade the site collection. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowEditing Prevents users from editing Office files in the browser and copying and pasting Office file contents out of the browser window. Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AnonymousLinkExpirationInDays Specifies all anonymous/anyone links that have been created (or will be created) will expire after the set number of days. Only applies if OverrideTenantAnonymousLinkExpirationPolicy is set to true. To remove the expiration requirement, set the value to zero (0). Type: Int32 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowDownloadOfNonViewableFiles Specifies if non web viewable files can be downloaded. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BlockDownloadLinksFileType The valid values are: WebPreviewableFiles ServerRenderedFilesOnly Note: ServerRendered (Office Only) and WebPreviewable (All supported files). The site value is compared with the tenant level setting and the stricter one wins. For example, if the tenant is set to ServerRenderedFilesOnly then that will be used even if the site is set to WebPreviewableFiles. Type: BlockDownloadLinksFileTypes Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommentsOnSitePagesDisabled Specifies if comments on site pages are enabled. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultLinkPermission Specifies the default link permission for the site collection. None - Respect the organization default link permission. View - Sets the default link permission for the site to \"view\" permissions. Edit - Sets the default link permission for the site to \"edit\" permissions Type: SharingPermissionType Parameter Sets: Set Properties Accepted values: None, View, Edit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultSharingLinkType Specifies the default link type for the site collection. None - Respect the organization default sharing link type. AnonymousAccess - Sets the default sharing link for this site to an Anonymous Access or Anyone link. Internal - Sets the default sharing link for this site to the \"organization\" link or company shareable link. Direct - Sets the default sharing link for this site to the \"Specific people\" link Type: SharingLinkType Parameter Sets: Set Properties Accepted values: None, Direct, Internal, AnonymousAccess Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultLinkToExistingAccess When set to $true, the DefaultSharingLinkType will be overridden and the default sharing link will be All People with Existing Access link (which does not modify permissions). When set to $false (the default), the default sharing link type is controlled by the DefaultSharingLinkType parameter Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -DenyAddAndCustomizePages Determines whether the Add And Customize Pages right is denied in the site collection. For more information about permission levels, see User permissions and permission levels in SharePoint. Type: SwitchParameter Parameter Sets: Set Properties Aliases: NoScriptSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableAppViews Determines whether the App Views feature is disabled in the site collection. Type: AppViewsPolicy Parameter Sets: Set Properties Accepted values: Unknown, Disabled, NotDisabled Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableSharingForNonOwners Specifies whether non-owners should be prevented from inviting new users to the site. Setting this will also disable Access Request Emails. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableCompanyWideSharingLinks Determines whether company-wide sharing links are disabled in collection. Type: CompanyWideSharingLinksPolicy Parameter Sets: Set Properties Accepted values: Unknown, Disabled, NotDisabled Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableFlows Determines whether flows are disabled in the site collection. Type: FlowsPolicy Parameter Sets: Set Properties Accepted values: Unknown, Disabled, NotDisabled Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExternalUserExpirationInDays Specifies number of days the external users remain active on the site. Type: Int32 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnablePWA Determines whether site can include Project Web App. For more information about Project Web App, see Plan SharePoint groups in Project Server. Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LimitedAccessFileType The following parameters can be used with -ConditionalAccessPolicy AllowLimitedAccess for both the organization-wide setting and the site-level setting. OfficeOnlineFilesOnly: Allows users to preview only Office files in the browser. This option increases security but may be a barrier to user productivity. WebPreviewableFiles (default): Allows users to preview Office files and other file types (such as PDF files and images) in the browser. Note that the contents of file types other than Office files are handled in the browser. This option optimizes for user productivity but offers less security for files that aren't Office files. OtherFiles: Allows users to download files that can't be previewed, such as .zip and .exe. This option offers less security. Type: SPOLimitedAccessFileType Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LocaleId Specifies the language of this site collection. For more information, see Locale IDs supported by SharePoint at https://github.com/pnp/PnP-PowerShell/wiki/Supported-LCIDs-by-SharePoint. To get the list of supported languages on a SharePoint environment use: (Get-PnPWeb -Includes RegionalSettings.InstalledLanguages).RegionalSettings.InstalledLanguages. Type: UInt32 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LockState Sets the lockState of a site Type: SiteLockState Parameter Sets: Set Lock State Accepted values: Unlock, NoAccess, ReadOnly Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OverrideTenantAnonymousLinkExpirationPolicy Specifies whether to use company-wide or a site collection level anonymous links expiration policy. Set it to true to get advantage of AnonymousLinkExpirationInDays. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PrimarySiteCollectionAdmin Specifies the user to set as the primary site collection administrator. Will replace the current primary site collection administrator. To add additional site collection administrators, use the -Owners parameter. Type: PnP.PowerShell.Commands.Base.PipeBinds.UserPipeBind Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners Specifies owner(s) to add as secondary site collection administrators. They will be added as additional secondary site collection administrators. Existing administrators will stay. Can be both users and groups. Type: System.Collections.Generic.List`1[System.String] Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SensitivityLabel Set the sensitivity label. Type: String Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveLabel Remove the assigned sensitivity label of a site. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingAllowedDomainList Specifies a list of email domains that is allowed for sharing with the external collaborators. Use the \",\" (comma) character as the delimiter for entering multiple values. For example, \"contoso.com, fabrikam.com\". Effective when SharingDomainRestrictionMode is set to AllowList. Type: String Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingBlockedDomainList Specifies a list of email domains that is blocked for sharing with the external collaborators. Use the space character as the delimiter for entering multiple values. For example, \"contoso.com fabrikam.com\". Effective when SharingDomainRestrictionMode is set to BlockList. Type: String Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingCapability Specifies what the sharing capabilities are for the site. Possible values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly Type: SharingCapabilities Parameter Sets: Set Properties Aliases: Sharing Accepted values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingDomainRestrictionMode Specifies the external sharing mode for domains. Type: SharingDomainRestrictionModes Parameter Sets: Set Properties Accepted values: None, AllowList, BlockList Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowPeoplePickerSuggestionsForGuestUsers To enable the option to search for existing guest users at Site Collection Level, set this parameter to $true. Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StorageQuota Specifies the storage quota for this site collection in megabytes. This value must not exceed the company's available quota. Type: Int64 Parameter Sets: Set Properties Aliases: StorageMaximumLevel Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StorageQuotaWarningLevel Specifies the warning level for the storage quota in megabytes. This value must not exceed the values set for the StorageQuota parameter. Type: Int64 Parameter Sets: Set Properties Aliases: StorageQuotaMaximumLevel Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StorageQuotaReset Resets the OneDrive for Business storage quota to the tenant's new default storage space Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveInformationSegment This parameter allows you to remove a segment from a SharePoint site. This parameter is only applicable for tenants who have enabled Microsoft 365 Information barriers capability. Please read https://learn.microsoft.com/sharepoint/information-barriers documentation to understand Information barriers with SharePoint Online. Type: Guid[] Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceQuota Specifies the resource quota in megabytes of the site collection. The default value is 0. Type: Double Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceQuotaWarningLevel Specifies the warning level in megabytes of the site collection to warn the site collection administrator that the site is approaching the resource quota. Type: Double Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InformationBarriersMode Specifies the information barrier mode which helps strengthen access, sharing, and membership of a site based on its information barrier mode and segments associated with the site. Expected values are Open, OwnerModerated , Implicit and Explicit. For more information, see https://learn.microsoft.com/sharepoint/information-barriers#information-barriers-modes-and-sharepoint-sites Type: InformationBarriersMode Parameter Sets: Set Properties Accepted values: Open, OwnerModerated, Implicit, Explicit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Specifies the title of the site. Type: String Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the URL of the site. Type: String Parameter Sets: (All) Aliases: Url Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -MediaTranscription When the feature is enabled, videos can have transcripts generated on demand or generated automatically in certain scenarios. This is the default because the policy is default on. If a video owner decides they don’t want the transcript, they can always hide or delete it from that video. Type: MediaTranscriptionPolicyType Parameter Sets: Set Properties Accepted values: Enabled, Disabled Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BlockDownloadPolicy Set this to true to block download of files from SharePoint sites or OneDrive Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludeBlockDownloadPolicySiteOwners Set this to true to exempts site owners from the block download policy so that they can fully download any content for the site. Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludedBlockDownloadGroupIds Exempts users from the mentioned groups from this policy and they can fully download any content for the site. Type: GUID[] Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListsShowHeaderAndNavigation Set a property on a site collection to make all lists always load with the site elements intact. Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RestrictedAccessControl To apply restricted access control to a group-connected or Teams-connected site. Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClearRestrictedAccessControl To reset restricted access control configuration for a site. Type: Switch Parameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveRestrictedAccessControlGroups You can remove the specified security group from restricted access control configuration. Members of the security group are no longer be able to access site content while the policy is enforced on the site. Type: GUID [] Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AddRestrictedAccessControlGroups You can add the specified security groups for restricted access control configuration. Type: GUID [] Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RestrictedAccessControlGroups To edit a restricted access control group for a non-group site Type: GUID [] Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultLinkToExistingAccessReset To reset the default link to existing access configuration for a site. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultShareLinkRole To set the default share link role. Available values are None, Edit, Review, RestrictedView and View. Type: Role Parameter Sets: Set Properties Accepted values: None, Edit, Review, RestrictedView, View Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultShareLinkScope To set the default sharing link scope. Available values are Anyone, Organization, SpecificPeople, Uninitialized. Type: SharingScope Parameter Sets: Set Properties Accepted values: Anyone, Organization, SpecificPeople, Uninitialized Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LoopDefaultSharingLinkRole To set the loop default sharing link role. Available values are None, Edit, Review, RestrictedView and View. Type: Role Parameter Sets: Set Properties Accepted values: None, Edit, Review, RestrictedView, View Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LoopDefaultSharingLinkScope To set the loop default sharing link scope. Available values are Anyone, Organization, SpecificPeople, Uninitialized. Type: SharingScope Parameter Sets: Set Properties Accepted values: Anyone, Organization, SpecificPeople, Uninitialized Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RestrictContentOrgWideSearch To restrict content from being searchable organization-wide and Copilot. Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ReadOnlyForUnmanagedDevices To set the site as read-only for unmanaged devices. Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InheritVersionPolicyFromTenant Clears the file version setting at site level. Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequestFilesLinkExpirationInDays Specifies the number of days after which the request files link will expire. The value can be from 0 to 730 days. Type: Int32 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OverrideSharingCapability Specifies whether to override the sharing capability for the site. Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequestFilesLinkEnabled Enables or disables the Request Files link on the site. Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait Wait for the operation to complete Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTenantSyncClientRestriction.html": {
    "href": "cmdlets/Set-PnPTenantSyncClientRestriction.html",
    "title": "Set-PnPTenantSyncClientRestriction | PnP PowerShell",
    "keywords": "Set-PnPTenantSyncClientRestriction SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Sets organization-level sync client restriction properties SYNTAX Set-PnPTenantSyncClientRestriction [-BlockMacSync] [-DisableReportProblemDialog] [-DomainGuids <System.Collections.Generic.List`1[System.Guid]>] [-Enable] [-ExcludedFileExtensions <System.Collections.Generic.List`1[System.String]>] [-GrooveBlockOption <GrooveBlockOption>] [-Connection <PnPConnection>] DESCRIPTION Sets organization-level sync client restriction properties such as BlockMacSync, OptOutOfGroveBlock, and DisableReportProblemDialog. You must have the SharePoint Online admin or Global admin role to run the cmdlet. EXAMPLES EXAMPLE 1 Set-PnPTenantSyncClientRestriction -BlockMacSync:$false This example blocks access to Mac sync clients for OneDrive file synchronization EXAMPLE 2 Set-PnPTenantSyncClientRestriction -ExcludedFileExtensions \"pptx;docx;xlsx\" This example blocks syncing of PowerPoint, Word, and Excel file types using the new sync client (OneDrive.exe). PARAMETERS -BlockMacSync Block Mac sync clients-- the Beta version and the new sync client (OneDrive.exe). The values for this parameter are $true and $false. The default value is $false. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableReportProblemDialog Specifies if the Report Problem Dialog is disabled or not. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DomainGuids Sets the domain GUID to add to the safe recipient list. Requires a minimum of 1 domain GUID. The maximum number of domain GUIDs allowed are 125. I.e. 634c71f6-fa83-429c-b77b-0dba3cb70b93,4fbc735f-0ac2-48ba-b035-b1ae3a480887. Type: System.Collections.Generic.List`1[System.Guid] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Enable Enables the feature to block sync originating from domains that are not present in the safe recipients list. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludedFileExtensions Blocks certain file types from syncing with the new sync client (OneDrive.exe). Provide as one string separating the extensions using a semicolon (;). I.e. \"docx;pptx\" Type: System.Collections.Generic.List`1[System.String] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GrooveBlockOption Controls whether or not a tenant's users can sync OneDrive for Business libraries with the old OneDrive for Business sync client. The valid values are OptOut, HardOptin, and SoftOptin. GrooveBlockOption is planned to be deprecated. Please refrain from using the parameter. Type: GrooveBlockOption Parameter Sets: (All) Accepted values: OptOut, HardOptin, SoftOptin Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTerm.html": {
    "href": "cmdlets/Set-PnPTerm.html",
    "title": "Set-PnPTerm | PnP PowerShell",
    "keywords": "Set-PnPTerm SYNOPSIS Updates a term. SYNTAX By Term Id Set-PnPTerm -Identity <Guid> [-Name <String>] [-Lcid <Int32>] [-Description <String>] [-CustomProperties <Hashtable>] [-LocalCustomProperties <Hashtable>] [-DeleteAllCustomProperties] [-DeleteAllLocalCustomProperties] [-Deprecated <bool>] [-AvailableForTagging <bool>] [-TermStore <TaxonomyTermStorePipeBind>] [-Connection <PnPConnection>] By Term Name Set-PnPTerm -Identity <String> [-Name <String>] [-Lcid <Int32>] [-Description <String>] [-CustomProperties <Hashtable>] [-LocalCustomProperties <Hashtable>] [-DeleteAllCustomProperties] [-DeleteAllLocalCustomProperties] [-Deprecated <bool>] [-AvailableForTagging <bool>] -TermSet <TaxonomyTermSetPipeBind> -TermGroup <TaxonomyTermGroupPipeBind> [-TermStore <TaxonomyTermStorePipeBind>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows you to update an existing term. EXAMPLES Example 1 Set-PnPTerm -Identity 3d9e60e8-d89c-4cd4-af61-a010cf93b380 -Name \"New Name\" Replaces the name of an existing term. Example 2 Set-PnPTerm -Identity \"Marketing\" -TermSet \"Departments\" -TermGroup \"Corporate\" -Name \"Finance\" -CustomProperties @{\"IsCorporate\"=\"True\"} Adds a new custom property to an existing term. Example 3 Set-PnPTerm -Identity \"Marketing\" -TermSet \"Departments\" -TermGroup \"Corporate\" -Name \"Finance\" -DeleteAllCustomProperties -CustomProperties @{\"IsCorporate\"=\"True\"} Removes all custom properties and adds a new custom property to an existing term. Example 4 Set-PnPTerm -Identity \"Marketing\" -TermSet \"Departments\" -TermGroup \"Corporate\" -Deprecated $true Marks an existing term as deprecated, hiding it from users. PARAMETERS -AvailableForTagging Sets a term to be available for tagging or not. Type: boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CustomProperties Sets custom properties. Type: Hashtable Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DeleteAllCustomProperties Removes all custom properties. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DeleteAllLocalCustomProperties Removes all local custom properties. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Sets the description for a term. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Deprecated Sets a term as deprecated or not. Type: boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Identity of term to update. Either a name or a GUID. Type: TaxonomyTermPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid Optional language code to use when setting the description. Defaults to the default term store language. Type: Int32 Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LocalCustomProperties Sets local custom properties. Type: Hashtable Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The new name for the term. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermGroup The term group to find the term in. Type: TaxonomyTermGroupPipeBind Parameter Sets: By Term Name Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermSet The termset to find the term in. Type: TaxonomyTermSetPipeBind Parameter Sets: By Term Name Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore The termstore to find the term in. If not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTermGroup.html": {
    "href": "cmdlets/Set-PnPTermGroup.html",
    "title": "Set-PnPTermGroup | PnP PowerShell",
    "keywords": "Set-PnPTermGroup SYNOPSIS Updates an existing term group. SYNTAX Set-PnPTermGroup -Identity <TaxonomyTermGroupPipeBind> [-Name <String>] [-Description <String>] [-TermStore <TaxonomyTermStorePipeBind>] [-Connection <PnPConnection>] [-Contributors <string []>] [-Managers <string []>] DESCRIPTION The cmdlet allows you to update an existing term group. EXAMPLES Example 1 Set-PnPTermGroup -Identity \"Departments\" -Name \"Company Units\" Renames the Departments termgroup to \"Company Units\". Example 2 Set-PnPTermGroup -Identity \"Departments\" -Name \"Company Units\" -Contributors @(\"i:0#.f|membership|pradeepg@gautamdev.onmicrosoft.com\",\"i:0#.f|membership|adelev@gautamdev.onmicrosoft.com\") -Managers @(\"i:0#.f|membership|alexw@gautamdev.onmicrosoft.com\",\"i:0#.f|membership|diegos@gautamdev.onmicrosoft.com\") Renames the Departments termgroup to \"Company Units\" and adds contributors and managers of the term group. The user names for contributors and managers need to be encoded claim for the specified login names. PARAMETERS -Description Optional description of the term group. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The term group to update. Either name or a GUID. Type: TaxonomyTermGroupPipeBind Parameter Sets: (All) Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Name The new name for the term group. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermStore The termstore to use. If not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Managers The manager of the term group who can create/edit term sets in the group as well as add/remove contributors. The user names for managers need to be encoded claim for the specified login names. Type: string[] Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Contributors The contributor to the term group who can create/edit term sets in the group. The user names for contributors need to be encoded claim for the specified login names. Type: string[] Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTermSet.html": {
    "href": "cmdlets/Set-PnPTermSet.html",
    "title": "Set-PnPTermSet | PnP PowerShell",
    "keywords": "Set-PnPTermSet SYNOPSIS Updates an existing term set. SYNTAX Set-PnPTermSet -Identity <TaxonomyTermSetPipeBind> [-TermGroup] <TaxonomyTermGroupPipeBind> [-TermStore <TaxonomyTermStorePipeBind>] [-Name <String>] [-Description <String>] [-Owner <String>] [-Contact <String>] [-CustomProperties <Hashtable>] [-StakeholderToAdd <String>] [-StakeholderToDelete <String>] [-IsAvailableForTagging <Boolean>] [-IsOpenForTermCreation <Boolean>] [-UseForSiteNavigation <Boolean>] [-UseForFacetedNavigation <Boolean>] [-SetTargetPageForTerms <String>] [-RemoveTargetPageForTerms] [-SetCatalogItemPageForCategories <String>] [-RemoveCatalogItemPageForCategories] [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows you to update an existing term set. EXAMPLES Example 1 Set-PnPTermSet -Identity \"Departments\" -TermGroup \"Corporate\" -Name \"Business Units\" This example changes the name of a the \"Departments\" term set to \"Business Units\". Example 2 Set-PnPTermSet -Identity \"Departments\" -TermGroup \"Corporate\" -UseForSiteNavigation $true This example allows the terms in the term set \"Departments\" to be used for site navigation links. Example 3 Set-PnPTermSet -Identity \"Departments\" -TermGroup \"Corporate\" -IsAvailableForTagging $false This example makes the terms in the term set \"Departments\" unavailable to end users and content editors. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Contact The contact information. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CustomProperties Any custom properties to set for the term set. e.g. -CustomProperties @{\"propA\"=\"valueA\"} Type: Hashtable Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the term set. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The term set to change. Type: TaxonomyTermSetPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsAvailableForTagging Sets the term set as available for tagging. Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsOpenForTermCreation Opens the term set for creation of terms by users. Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The new name for the term set. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner Sets the owner of the term set. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveCatalogItemPageForCategories Removes catalog item page settings for the term set. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveTargetPageForTerms Removes target page settings for the term set. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SetCatalogItemPageForCategories Specifies the page to load when you navigate to a catalog item under a category in this term set. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SetTargetPageForTerms Specifies page to load when the user navigates to the friendly-URL for a term in this term set. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StakeholderToAdd Adds a new stake holder. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StakeholderToDelete Removes a stake holder. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermGroup The term group to find the term set in. Type: TaxonomyTermGroupPipeBind Parameter Sets: (All) Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore The term store to use. If not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UseForFacetedNavigation Specifies whether users can use refiners based on managed metadata from the search index to quickly browse to specific content. Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UseForSiteNavigation Specifies whether the terms in this term set can be used for site navigation links with friendly URLs and dynamic content. Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTheme.html": {
    "href": "cmdlets/Set-PnPTheme.html",
    "title": "Set-PnPTheme | PnP PowerShell",
    "keywords": "Set-PnPTheme SYNOPSIS Sets the theme of the current web. SYNTAX Set-PnPTheme [-ColorPaletteUrl <String>] [-FontSchemeUrl <String>] [-BackgroundImageUrl <String>] [-ResetSubwebsToInherit] [-UpdateRootWebOnly] [-Connection <PnPConnection>] DESCRIPTION Sets the theme of the current web. If any of the attributes is not set, that value will be set to null. EXAMPLES EXAMPLE 1 Set-PnPTheme Removes the current theme and resets it to the default. EXAMPLE 2 Set-PnPTheme -ColorPaletteUrl _catalogs/theme/15/company.spcolor EXAMPLE 3 Set-PnPTheme -ColorPaletteUrl _catalogs/theme/15/company.spcolor -BackgroundImageUrl 'style library/background.png' EXAMPLE 4 Set-PnPTheme -ColorPaletteUrl _catalogs/theme/15/company.spcolor -BackgroundImageUrl 'style library/background.png' -ResetSubwebsToInherit Sets the theme to the web, and updates all subwebs to inherit the theme from this web. PARAMETERS -BackgroundImageUrl Specifies the Background Image Url based on the site or server relative url. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ColorPaletteUrl Specifies the Color Palette Url based on the site or server relative url. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FontSchemeUrl Specifies the Font Scheme Url based on the site or server relative url. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResetSubwebsToInherit Resets subwebs to inherit the theme from the rootweb. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UpdateRootWebOnly Updates only the rootweb, even if subwebs are set to inherit the theme. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPUserOneDriveQuota.html": {
    "href": "cmdlets/Set-PnPUserOneDriveQuota.html",
    "title": "Set-PnPUserOneDriveQuota | PnP PowerShell",
    "keywords": "Set-PnPUserOneDriveQuota SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Sets the quota on the OneDrive for Business site for a specific user. SYNTAX Set-PnPUserOneDriveQuota [-Account] <String> [-Quota] <Int64> [-QuotaWarning] <Int64> [-Connection <PnPConnection>] DESCRIPTION This command allows you to set the quota on the OneDrive for Business site of a specific user. You must connect to the tenant admin website (https://<tenant>-admin.sharepoint.com) with Connect-PnPOnline in order to use this cmdlet. EXAMPLES EXAMPLE 1 Set-PnPUserOneDriveQuota -Account 'user@domain.com' -Quota 5368709120 -QuotaWarning 4831838208 Sets the quota on the OneDrive for Business site for the specified user to 5GB (5368709120 bytes) and sets a warning to be shown at 4.5 GB (4831838208). PARAMETERS -Account The account of the user, formatted either as a login name, or as a claims identity, e.g. i:0#.f|membership|user@domain.com Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Quota The quota to set on the OneDrive for Business site of the user, in bytes. Type: Int64 Parameter Sets: (All) Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -QuotaWarning The quota to set on the OneDrive for Business site of the user when to start showing warnings about the drive nearing being full, in bytes. Type: Int64 Parameter Sets: (All) Required: True Position: 2 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPUserProfilePhoto.html": {
    "href": "cmdlets/Set-PnPUserProfilePhoto.html",
    "title": "Set-PnPUserProfilePhoto | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPUserProfilePhoto SYNOPSIS Required Permissions Microsoft Graph API: One of ProfilePhoto.ReadWrite.All, User.ReadWrite or User.ReadWrite.All Sets the profile picture of a user. SYNTAX Set-PnPUserProfilePhoto -Identity <AzureADUserPipeBind> -Path <String> [-Connection <PnPConnection>] DESCRIPTION Notice that this cmdlet will immediately return but it can take a few hours before the changes are reflected in profile picture of the user everywhere in M365. EXAMPLES EXAMPLE 1 Set-PnPUserProfilePhoto -Identity \"john@contoso.onmicrosoft.com\" -Path \"c:\\myimage.jpg\" Updates a picture for the user with the image available from file system. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path The path to the image file. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the user to remove. This can be the UPN, the GUID or an instance of the user. Type: AzureADUserPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPUserProfileProperty.html": {
    "href": "cmdlets/Set-PnPUserProfileProperty.html",
    "title": "Set-PnPUserProfileProperty | PnP PowerShell",
    "keywords": "Set-PnPUserProfileProperty SYNOPSIS Required Permissions SharePoint: Sites.FullControl.All, TermStore.ReadWrite.All, User.ReadWrite.All Microsoft Graph: User.Read Uses the tenant API to retrieve site information. You must connect to the tenant admin website (https://<tenant>-admin.sharepoint.com) with Connect-PnPOnline in order to use this command. SYNTAX Single Set-PnPUserProfileProperty -Account <String> -PropertyName <String> -Value <String> [-Connection <PnPConnection>] Multi Set-PnPUserProfileProperty -Account <String> -PropertyName <String> -Values <String[]> [-Connection <PnPConnection>] DESCRIPTION Updates the value of a specific user profile property for a single user profile in the SharePoint Online environment. Requires a connection to the SharePoint Tenant Admin site. EXAMPLES EXAMPLE 1 Set-PnPUserProfileProperty -Account 'john@domain.com' -Property 'SPS-Location' -Value 'Stockholm' Sets the SPS-Location property to 'Stockholm' for the user john@domain.com. EXAMPLE 2 Set-PnPUserProfileProperty -Account 'john@domain.com' -Property 'MyProperty' -Values 'Value 1','Value 2' Sets the MyProperty multi value property for the user john@domain.com. PARAMETERS -Account The account of the user, formatted either as a login name, or as a claims identity, e.g. i:0#.f|membership|user@domain.com Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PropertyName The property to set, for instance SPS-Skills or SPS-Location. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Value The value to set in the case of a single value property. Type: String Parameter Sets: Single Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Values The values set in the case of a multi value property, e.g. \"Value 1\",\"Value 2\" Type: String[] Parameter Sets: Multi Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPView.html": {
    "href": "cmdlets/Set-PnPView.html",
    "title": "Set-PnPView | PnP PowerShell",
    "keywords": "Set-PnPView SYNOPSIS Change view properties. SYNTAX Set-PnPView [[-List] <ListPipeBind>] -Identity <ViewPipeBind> [-Values <Hashtable>] [-Fields <String[]>] [-Aggregations <String>] [-Connection <PnPConnection>] DESCRIPTION Sets one or more properties of an existing view, see here https://learn.microsoft.com/previous-versions/office/sharepoint-server/ee543328(v=office.15) for the list of view properties. EXAMPLES EXAMPLE 1 Set-PnPView -List \"Tasks\" -Identity \"All Tasks\" -Values @{JSLink=\"hierarchytaskslist.js|customrendering.js\";Title=\"My view\"} Updates the \"All Tasks\" view on list \"Tasks\" to use hierarchytaskslist.js and customrendering.js for the JSLink and changes the title of the view to \"My view\". EXAMPLE 2 Get-PnPList -Identity \"Tasks\" | Get-PnPView | Set-PnPView -Values @{JSLink=\"hierarchytaskslist.js|customrendering.js\"} Updates all views on list \"Tasks\" to use hierarchytaskslist.js and customrendering.js for the JSLink. EXAMPLE 3 Set-PnPView -List \"Documents\" -Identity \"Corporate Documents\" -Fields \"Title\",\"Created\" Updates the Corporate Documents view on the Documents library to have two fields. EXAMPLE 4 Set-PnPView -List \"Documents\" -Identity \"Corporate Documents\" -Fields \"Title\",\"Created\" -Aggregations \"<FieldRef Name='Title' Type='COUNT'/>\" Updates the Corporate Documents view on the Documents library and sets the totals (aggregations) to Count on the Title field. EXAMPLE 5 Set-PnPView -List \"Documents\" -Identity \"Dept Documents\" -Fields \"Title,\"Created\" -Values @{Paged=$true;RowLimit=[UInt32]\"100\"} Updates the Dept Documents view on the Documents library to show items paged in batches of 100, note the type casting on the value to prevent warnings. PARAMETERS -Aggregations A valid XML fragment containing one or more Aggregations. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Fields An array of fields to use in the view. Notice that specifying this value will remove the existing fields. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Id, Title or instance of the view. Type: ViewPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The Id, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Values Hashtable of properties to update on the view. Use the syntax @{property1=\"value\";property2=\"value\"}. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPVivaConnectionsDashboardACE.html": {
    "href": "cmdlets/Set-PnPVivaConnectionsDashboardACE.html",
    "title": "Update-PnPVivaConnectionsDashboardACE | PnP PowerShell",
    "keywords": "Set-PnPVivaConnectionsDashboardACE SYNOPSIS Update the Adaptive card extension in the Viva Connections dashboard page. This requires that you connect to a SharePoint Home site and have configured the Viva Connections page. SYNTAX Update using typed properties (Default) Update-PnPVivaConnectionsDashboardACE -Identity <VivaACEPipeBind> [-Title <string>] [-Properties <object>] [-Description <string>] [-IconProperty <string>] [-Order <Int>][-CardSize <CardSize>] [-Connection <PnPConnection>] Update using JSON properties Update-PnPVivaConnectionsDashboardACE -Identity <VivaACEPipeBind> [-Title <string>] [-PropertiesJSON <string>] [-Description <string>] [-IconProperty <string>] [-Order <Int>][-CardSize <CardSize>] [-Connection <PnPConnection>] DESCRIPTION Allows to update the Adaptive card extension in the Viva Connections dashboard page. EXAMPLES EXAMPLE 1 Set-PnPVivaConnectionsDashboardACE -Identity \"58108715-185e-4214-8786-01218e7ab9ef\" -Title \"Update title\" -Description \"Update Description\" -IconProperty \"https://cdn.hubblecontent.osi.office.net/m365content/publish/002f8bf9-b8ee-4689-ae97-e411b756099d/691108002.jpg\" -Order 4 -CardSize Large -PropertiesJSON $myProperties Update the adaptive card extensions with Instance Id 58108715-185e-4214-8786-01218e7ab9ef in the Viva connections dashboard page. It will update the Title, Description, IconProperty, Order , CardSize and PropertiesJSON of the ACE. EXAMPLE 2 Set-PnPVivaConnectionsDashboardACE -Identity \"58108715-185e-4214-8786-01218e7ab9ef\" -Title \"Update title\" -Description \"Update Description\" Update the adaptive card extensions with Instance Id 58108715-185e-4214-8786-01218e7ab9ef in the Viva Connections dashboard page. It will update the Title and Description of the ACE. EXAMPLE 3 Set-PnPVivaConnectionsDashboardACE -Identity \"58108715-185e-4214-8786-01218e7ab9ef\" -IconProperty \"https://cdn.hubblecontent.osi.office.net/m365content/publish/002f8bf9-b8ee-4689-ae97-e411b756099d/691108002.jpg\" -Order 4 Update the adaptive card extensions with Instance Id 58108715-185e-4214-8786-01218e7ab9ef in the Viva Connections dashboard page. It will update the IconProperty and Order of the ACE. EXAMPLE 4 Set-PnPVivaConnectionsDashboardACE -Identity \"58108715-185e-4214-8786-01218e7ab9ef\" -CardSize Large Update the adaptive card extensions with Instance Id 58108715-185e-4214-8786-01218e7ab9ef in the Viva Connections dashboard page. It will update the CardSize to large. EXAMPLE 5 $ace = Get-PnPVivaConnectionsDashboardACE -Identity 58108715-185e-4214-8786-01218e7ab9ef $ace.Properties.QuickViews[0].Data = '{ \"items\": [ { \"title\": \"Sample 1\", \"image\": \"https://contoso.sharepoint.com/SiteAssets/image1.png\" }, { \"title\": \"Sample 2\", \"image\": \"https://contoso.sharepoint.com/SiteAssets/image2.png\" } ]}' Update-PnPVivaConnectionsDashboardACE -Identity $ace.InstanceId -Properties $ace.Properties Update the default quickview data of the adaptive card extension with Instance Id 58108715-185e-4214-8786-01218e7ab9ef in the Viva Connections dashboard page to the provided JSON structure. EXAMPLE 6 $ace = Get-PnPVivaConnectionsDashboardACE -Identity 58108715-185e-4214-8786-01218e7ab9ef $ace.Properties.QuickViews[0].Template = '{ \"type\": \"AdaptiveCard\", \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\", \"version\": \"1.3\", \"body\": [ ... ]}' Set-PnPVivaConnectionsDashboardACE -Identity $ace.InstanceId -Properties $ace.Properties Update the default quickview Adaptive Cards template of the adaptive card extension with Instance Id 58108715-185e-4214-8786-01218e7ab9ef in the Viva Connections dashboard page to the provided JSON structure. PARAMETERS -CardSize The size of the Adaptive Card extension present on the Viva connections dashboard page. The available values are Large or Medium. Type: CardSize Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The Description of the Adaptive Card extension present on the Viva connections dashboard page. Type: string Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IconProperty The Icon used by Adaptive Card extension present on the Viva connections dashboard page. Type: string Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The instance Id of the Adaptive Card extension present on the Viva connections dashboard page. You can retrieve the value for this parameter by executing Get-PnPVivaConnectionsDashboardACE cmdlet. This parameter takes either the Instance Id, the Id or the Title property. But as the latter two are not necessarily unique within the dashboard, the preferred value is to use the Instance Id of the ACE. Type: VivaACEPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Order The Order of appearance of the Adaptive Card extension present on the Viva connections dashboard page. Type: Int Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Properties The typed properties of the Adaptive Card extension present on the Viva connections dashboard page. These can be retrieved and changed through the Get-PnPVivaConnectionsDashboardACE cmdlet and using its Properties property. Type: string Parameter Sets: Update using typed properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PropertiesJSON The properties of the Adaptive Card extension present on the Viva connections dashboard page in JSON format. Type: string Parameter Sets: Update using JSON properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The Title of the Adaptive Card extension present on the Viva connections dashboard page. Type: string Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPVivaEngageCommunity.html": {
    "href": "cmdlets/Set-PnPVivaEngageCommunity.html",
    "title": "Set-PnPVivaEngageCommunity | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPVivaEngageCommunity SYNOPSIS Updates the Viva engage community in the tenant. SYNTAX Set-PnPVivaEngageCommunity [[-Identity] <string>] [[-DisplayName] <string>] [[-Description] <string>][[-Privacy] <CommunityPrivacy>] [-Connection <PnPConnection>] DESCRIPTION Updates the Viva engage community. EXAMPLES EXAMPLE 1 Set-PnPVivaEngageCommunity -Identity \"eyJfdHlwZSI6Ikdyb3VwIiwiaWQiOiIyMTI0ODA3MTI3MDQifQ\" -DisplayName \"New Viva Community\" This will update the display name of the Viva Engage community in the tenant with the specified Id. EXAMPLE 2 Set-PnPVivaEngageCommunity -Identity \"eyJfdHlwZSI6Ikdyb3VwIiwiaWQiOiIyMTI0ODA3MTI3MDQifQ\" -DisplayName \"New Viva Community\" -Description \"Updated description\" -Privacy Private This will update the display name, description and privacy setting of the Viva Engage community in the tenant with the specified Id. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Id of the Viva engage community. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -DisplayName The updated display name of the Viva engage community. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Description The updated description of the Viva engage community. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Privacy The updated privacy setting of the Viva engage community. Available values are Public and Private. Type: CommunityPrivacy Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPWeb.html": {
    "href": "cmdlets/Set-PnPWeb.html",
    "title": "Set-PnPWeb | PnP PowerShell",
    "keywords": "Set-PnPWeb SYNOPSIS Sets properties on a web SYNTAX Set-PnPWeb [-SiteLogoUrl <String>] [-AlternateCssUrl <String>] [-Title <String>] [-Description <String>] [-MasterUrl <String>] [-CustomMasterUrl <String>] [-QuickLaunchEnabled] [-MembersCanShare] [-NoCrawl] [-HeaderLayout <HeaderLayoutType>] [-HeaderEmphasis <SPVariantThemeType>] [-NavAudienceTargetingEnabled] [-MegaMenuEnabled] [-DisablePowerAutomate] [-CommentsOnSitePagesDisabled] [-HideTitleInHeader] [-HorizontalQuickLaunch] [-Connection <PnPConnection>] DESCRIPTION Allows setting various properties on a web EXAMPLES EXAMPLE 1 Set-PnPWeb -CommentsOnSitePagesDisabled:$true Disables the page comments to be shown below each page in the current web by default EXAMPLE 2 Set-PnPWeb -QuickLaunchEnabled:$false Hides the quick launch from being shown in the current web EXAMPLE 3 Set-PnPWeb -HeaderEmphasis Strong -HeaderLayout Compact Sets the header style in the current web. EXAMPLE 4 Set-PnPWeb -NoCrawl:$true Prevents the current web from being returned in search results PARAMETERS -AlternateCssUrl Sets the AlternateCssUrl of the web. Only works for classic pages. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommentsOnSitePagesDisabled Defines if comments on modern site pages should be enabled by default ($false) or they should be hidden ($true) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CustomMasterUrl Sets the CustomMasterUrl of the web. Only works for classic pages. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Sets the description of the web Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisablePowerAutomate Defines if Power Automate should be available on lists and document libraries ($false) or if the option should be hidden ($true) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderEmphasis Defines the tone of color used for the bar shown at the top of the site with the site name and logo Type: SPVariantThemeType Parameter Sets: (All) Accepted values: None, Neutral, Soft, Strong Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderLayout Defines the layout type of the site header Type: HeaderLayoutType Parameter Sets: (All) Accepted values: None, Standard, Compact, Minimal, Extended Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MasterUrl Sets the MasterUrl of the web. Only works for classic pages. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MegaMenuEnabled Defines if the navigation menu should be shown as the mega menu ($true) or the smaller sized menu ($false) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MembersCanShare Indicates if members of this site can share the site and its content with others ($true) or only owners can do this ($false) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NavAudienceTargetingEnabled Defines if the navigation menu on a modern site should be enabled for modern audience targeting ($true) or not ($false) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoCrawl Indicates if this site should not be returned in search results ($true) or if it should be ($false) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -QuickLaunchEnabled Defines if the quick launch menu on the left side of modern Team Sites should be shown ($true) or hidden ($false) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteLogoUrl Sets the logo of the web to the current url. If you want to set the logo to a modern team site, use Set-PnPSite -LogoFilePath. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Sets the title of the web Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideTitleInHeader Toggle the title visibility in the header. Set -HideTitleInHeader:$false to show the header Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HorizontalQuickLaunch Change navigation orientation to horizontal Set -HorizontalQuickLaunch :$false to change navigation to vertical Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPWebHeader.html": {
    "href": "cmdlets/Set-PnPWebHeader.html",
    "title": "Set-PnPWebHeader | PnP PowerShell",
    "keywords": "Set-PnPWebHeader SYNOPSIS Allows configuration of the \"Change the look\" Header SYNTAX Set-PnPWebHeader [-SiteLogoUrl <string>] [-SiteThumbnailUrl <string>] [-HeaderLayout <HeaderLayoutType>] [-HeaderEmphasis <SPVariantThemeType>] [-HideTitleInHeader] [-HeaderBackgroundImageUrl <string>] [-HeaderBackgroundImageFocalX <double>] [-HeaderBackgroundImageFocalY <double>] [-LogoAlignment <LogoAlignment>] [-Connection <PnPConnection>] DESCRIPTION Through this cmdlet the various options offered through \"Change the look\" Header can be configured. EXAMPLES EXAMPLE 1 Set-PnPWebHeader -HeaderBackgroundImageUrl \"/sites/hrdepartment/siteassets/background.png\" -HeaderLayout Extended Sets the background image of the heading of the site to the provided image EXAMPLE 2 Set-PnPWebHeader -HeaderEmphasis Strong Sets the site to use a strong colored bar at the top of the site EXAMPLE 3 Set-PnPWebHeader -LogoAlignment Middle Sets the site title and logo to be displayed in the middle of the screen PARAMETERS -LogoAlignment Allows configuring the site title and logo to be shown on the left (default), in the middle or on the right. Type: LogoAlignment Parameter Sets: (All) Accepted values: Left, Middle, Right Required: False Position: Named Default value: Left Accept pipeline input: False Accept wildcard characters: False -HeaderBackgroundImageUrl Allows providing a server relative URL to an image that should be used as the background of the header of the site, i.e. /sites/hrdepartment/siteassets/background.png. HeaderLayout must be set to Extended for the image to show up. Provide \"\" or $null to remove the current background image. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderBackgroundImageFocalX When having HeaderLayout set to Extended and when providing a background image to show in the header through HeaderBackgroundImageUrl, this property allows for defining the X coordinate of the image how it should be shown. Type: Double Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderBackgroundImageFocalY When having HeaderLayout set to Extended and when providing a background image to show in the header through HeaderBackgroundImageUrl, this property allows for defining the Y coordinate of the image how it should be shown. Type: Double Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderEmphasis Defines the tone of color used for the bar at shown at the top of the site under the site name and logo Type: SPVariantThemeType Parameter Sets: (All) Accepted values: None, Neutral, Soft, Strong Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderLayout Defines how the header of the site should be layed out Type: HeaderLayoutType Parameter Sets: (All) Accepted values: None, Standard, Compact, Minimal, Extended Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteLogoUrl Sets the logo of the site shown at the top left to the provided server relative url, i.e. /sites/hrdepartment/siteassets/logo.png. Provide \"\" or $null to remove the logo. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteThumbnailUrl Sets the thumbnail of the site shown at the top left to the provided server relative url, i.e. /sites/hrdepartment/siteassets/thumbnail.png. Provide \"\" or $null to remove the thumbnail. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideTitleInHeader Toggle the title visibility in the header. Set -HideTitleInHeader:$false to show the header Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPWebPartProperty.html": {
    "href": "cmdlets/Set-PnPWebPartProperty.html",
    "title": "Set-PnPWebPartProperty | PnP PowerShell",
    "keywords": "Set-PnPWebPartProperty SYNOPSIS Sets a web part property. SYNTAX Set-PnPWebPartProperty -ServerRelativePageUrl <String> -Identity <Guid> -Key <String> -Value <PSObject> [-Connection <PnPConnection>] DESCRIPTION Allows to modify web part property. EXAMPLES EXAMPLE 1 Set-PnPWebPartProperty -ServerRelativePageUrl /sites/demo/sitepages/home.aspx -Identity ccd2c98a-c9ae-483b-ae72-19992d583914 -Key \"Title\" -Value \"New Title\" Sets the title property of the web part. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Guid of the web part. Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Name of a single property to be set. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl Full server relative url of the web part page, e.g. /sites/demo/sitepages/home.aspx Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Value Value of the property to be set. Type: PSObject Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPWebPermission.html": {
    "href": "cmdlets/Set-PnPWebPermission.html",
    "title": "Set-PnPWebPermission | PnP PowerShell",
    "keywords": "Set-PnPWebPermission SYNOPSIS Sets web permissions. SYNTAX Set group permissions Set-PnPWebPermission -Group <GroupPipeBind> [-Identity <WebPipeBind>] [-AddRole <String[]>] [-RemoveRole <String[]>] [-Connection <PnPConnection>] Set user permissions Set-PnPWebPermission -User <String> [-Identity <WebPipeBind>] [-AddRole <String[]>] [-RemoveRole <String[]>] [-Connection <PnPConnection>] DESCRIPTION This cmdlet adds permissions to a user or a group or removes permissions from a user or a group. EXAMPLES EXAMPLE 1 Set-PnPWebPermission -User \"user@contoso.com\" -AddRole \"Contribute\" Adds the \"Contribute\" permission role to the specified user in the current web. EXAMPLE 2 Set-PnPWebPermission -Group \"Project Managers\" -AddRole \"Contribute\" Adds the \"Contribute\" permission role to the \"Project Managers\" group in the current web. EXAMPLE 3 Set-PnPWebPermission -Identity projectA -User \"user@contoso.com\" -AddRole \"Contribute\" Adds the \"Contribute\" permission role to the user \"user@contoso.com\" in the subweb of the current web with site relative url \"projectA\". EXAMPLE 4 Set-PnPWebPermission -User \"user@contoso.com\" -AddRole \"Custom Role 1\",\"Custom Role 2\" Adds the specified permission roles to the user \"user@contoso.com\" in the current web. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User The name of the user. Type: String Parameter Sets: Set user permissions Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The name of the group. Type: String Parameter Sets: Set group permissions Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AddRole The name of the permission level to add to the specified user or group. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveRole The name of the permission level to remove from the specified user or group. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The guid or site relative url of the web to use. Type: WebPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPWebTheme.html": {
    "href": "cmdlets/Set-PnPWebTheme.html",
    "title": "Set-PnPWebTheme | PnP PowerShell",
    "keywords": "Set-PnPWebTheme SYNOPSIS Sets the theme of the current web. SYNTAX Set-PnPWebTheme [[-Theme] <ThemePipeBind>] [-WebUrl <String>] [-Connection <PnPConnection>] DESCRIPTION Sets the theme of the current web. * Requires SharePoint Online Administrator Rights * EXAMPLES EXAMPLE 1 Set-PnPWebTheme -Theme MyTheme Sets the theme named \"MyTheme\" to the current web. EXAMPLE 2 Get-PnPTenantTheme -Name \"MyTheme\" | Set-PnPWebTheme Sets the theme named \"MyTheme\" to the current web. EXAMPLE 3 Set-PnPWebTheme -Theme \"MyCompanyTheme\" -WebUrl https://contoso.sharepoint.com/sites/MyWeb Sets the theme named \"MyCompanyTheme\" to MyWeb. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Theme The name or ID of the theme that should be applied to the SharePoint site. Type: ThemePipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WebUrl The URL of the web to apply the theme to. If not specified it will default to the current web based upon the URL specified with Connect-PnPOnline. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPWebhookSubscription.html": {
    "href": "cmdlets/Set-PnPWebhookSubscription.html",
    "title": "Set-PnPWebhookSubscription | PnP PowerShell",
    "keywords": "Set-PnPWebhookSubscription SYNOPSIS Updates a Webhook subscription SYNTAX Set-PnPWebhookSubscription [-Subscription] <WebhookSubscriptionPipeBind> [-List <ListPipeBind>] [-NotificationUrl <String>] [-ExpirationDate <DateTime>] [-Connection <PnPConnection>] DESCRIPTION Allows to update Webhook subscription. EXAMPLES EXAMPLE 1 Set-PnPWebhookSubscription -List MyList -Subscription ea1533a8-ff03-415b-a7b6-517ee50db8b6 -NotificationUrl https://my-func.azurewebsites.net/webhook Updates an existing Webhook subscription with the specified id on the list MyList with a new Notification Url EXAMPLE 2 Set-PnPWebhookSubscription -List MyList -Subscription ea1533a8-ff03-415b-a7b6-517ee50db8b6 -NotificationUrl https://my-func.azurewebsites.net/webhook -ExpirationDate \"2017-09-01\" Updates an existing Webhook subscription with the specified id on the list MyList with a new Notification Url and a new expiration date EXAMPLE 3 $subscriptions = Get-PnPWebhookSubscriptions -List MyList $updated = $subscriptions[0] $updated.ExpirationDate = \"2017-10-01\" Set-PnPWebhookSubscription -List MyList -Subscription $updated Updates the Webhook subscription from the list MyList with a modified subscription object. Note: The date will be converted to Universal Time PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExpirationDate The date at which the Webhook subscription will expire. (Default: 6 months from today) Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name from which the Webhook subscription will be modified Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NotificationUrl The URL of the Webhook endpoint that will be notified of the change Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Subscription The identity of the Webhook subscription to update Type: WebhookSubscriptionPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPWikiPageContent.html": {
    "href": "cmdlets/Set-PnPWikiPageContent.html",
    "title": "Set-PnPWikiPageContent | PnP PowerShell",
    "keywords": "Set-PnPWikiPageContent SYNOPSIS Sets the contents of a wiki page. SYNTAX STRING Set-PnPWikiPageContent -Content <String> -ServerRelativePageUrl <String> [-Connection <PnPConnection>] FILE Set-PnPWikiPageContent -Path <String> -ServerRelativePageUrl <String> [-Connection <PnPConnection>] DESCRIPTION This cmdlet updates the content of the specified wiki page to the value specified either in a string or a file. EXAMPLES EXAMPLE 1 Set-PnPWikiPageContent -ServerRelativePageUrl /sites/PnPWikiCollection/SitePages/OurWikiPage.aspx -Path .\\sampleblog.html Sets the content of OurWikiPage to the content of sampleblog.html file. EXAMPLE 2 $htmlContent = \"<div>test</div>\" Set-PnPWikiPageContent -ServerRelativePageUrl /sites/PnPWikiCollection/SitePages/OurWikiPage.aspx -Content $htmlContent Sets the content of OurWikiPage as \"test\". The existing content of the wiki page will be replaced with the new content provided. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Content HTML markup that represents the desired content of the wiki page. The HTML markup can include text, images, links, tables, formatting elements, and any other HTML elements supported by SharePoint's wiki pages. Type: String Parameter Sets: STRING Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path The local file path of the HTML file containing the content for the wiki page. Type: String Parameter Sets: FILE Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl The server-relative URL of the wiki page whose content should be updated. Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnpTeamsChannelUser.html": {
    "href": "cmdlets/Set-PnpTeamsChannelUser.html",
    "title": "Set-PnPTeamsChannelUser | PnP PowerShell",
    "keywords": "Set-PnPTeamsChannelUser SYNOPSIS Required Permissions Microsoft Graph API: ChannelMember.ReadWrite.All Updates the role of a user in an existing Microsoft Teams private channel. SYNTAX Set-PnPTeamsChannelUser -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> -Identity <TeamsChannelMemberPipeBind> -Role <String> [-Connection <PnPConnection>] DESCRIPTION Allows to update the role of a user in an existing Microsoft Teams private channel. EXAMPLES EXAMPLE 1 Set-PnPTeamsChannelUser -Team 4efdf392-8225-4763-9e7f-4edeb7f721aa -Channel \"19:796d063b63e34497aeaf092c8fb9b44e@thread.skype\" -Identity MCMjMiMjMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwIyMxOTowMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMEB0aHJlYWQuc2t5cGUjIzAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMA== -Role Owner Updates the user with specific membership ID as owner of the specified Teams private channel. EXAMPLE 2 Set-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Private Channel\" -Identity john@doe.com -Role Member Updates the user john@doe.com as member of the specified Teams private channel. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Channel The id or name of the channel to retrieve. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify membership id, UPN or user ID of the channel member. Type: TeamsChannelMemberPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Role Specify the role of the user. Type: String Parameter Sets: (All) Accepted values: Owner, Member Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Start-PnPTraceLog.html": {
    "href": "cmdlets/Start-PnPTraceLog.html",
    "title": "Set-PnPTraceLog | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Start-PnPTraceLog SYNOPSIS Starts log tracing SYNTAX Start-PnPTraceLog [-Path <String>] [-Level <LogLevel>] [-AutoFlush <Boolean>] DESCRIPTION Starts .NET tracelogging. Many cmdlets output detailed trace information when executed. Turn on the trace log with this cmdlet, optionally specify the level. By default the level is set to 'Information', but you will receive more detail by setting the level to 'Debug'. EXAMPLES EXAMPLE 1 Set-PnPTraceLog -Path ./TraceOutput.txt This turns on trace logging to the file 'TraceOutput.txt' and will capture events of at least 'Information' level. EXAMPLE 2 Set-PnPTraceLog -Path ./TraceOutput.txt -Level Debug This turns on trace logging to the file 'TraceOutput.txt' and will capture debug events. PARAMETERS -AutoFlush Auto flush the trace log. Defaults to true. Type: Boolean Parameter Sets: On Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Level The level of events to capture. Possible values are 'Debug', 'Error', 'Warning', 'Information'. Defaults to 'Information'. Type: LogLevel Parameter Sets: On Accepted values: Debug, Error, Warning, Information Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path The path and filename of the file to write the trace log to. Type: String Parameter Sets: On Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Stop-PnPFlowRun.html": {
    "href": "cmdlets/Stop-PnPFlowRun.html",
    "title": "Stop-PnPFlowRun | PnP PowerShell",
    "keywords": "Stop-PnPFlowRun SYNOPSIS Required Permissions Azure: management.azure.com Stops/cancels a specific run of a Microsoft flow. SYNTAX Stop-PnPFlowRun [-Environment <PowerAutomateEnvironmentPipeBind>] -Flow <PowerAutomateFlowPipeBind> -Identity <PowerAutomateFlowRunPipeBind> [-Force] [-Connection <PnPConnection>] DESCRIPTION This cmdlet cancels a running Power Automate flow run. EXAMPLES Example 1 Stop-PnPFlowRun -Flow fba63225-baf9-4d76-86a1-1b42c917a182 -Identity 08585531682024670884771461819CU230 This cancels the specified flow run of the specified flow located in the default environment. Example 2 Stop-PnPFlowRun -Environment (Get-PnPPowerPlatformEnvironment -Identity \"myenvironment\") -Flow fba63225-baf9-4d76-86a1-1b42c917a182 -Identity 08585531682024670884771461819CU230 -Force This cancels the specified flow run located in the specified environment of the specified flow without confirmation. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Environment The name of the Power Platform environment or an Environment instance. If omitted, the default environment will be used. Type: PowerPlatformEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: The default environment Accept pipeline input: True Accept wildcard characters: False -Flow The Name/Id of the flow to retrieve the available flow runs for. Type: PowerAutomateFlowPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Name/Id of the flow run to cancel. Type: PowerAutomateFlowRunPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Stop-PnPTraceLog.html": {
    "href": "cmdlets/Stop-PnPTraceLog.html",
    "title": "Set-PnPTraceLog | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Stops-PnPTraceLog SYNOPSIS Stops log tracing and flushes the log buffer if any items in there. SYNTAX Stop-PnPTraceLog DESCRIPTION Stops .NET tracelogging. Many cmdlets output detailed trace information when executed. Turn on the trace log with Start-PnPTraceLog, optionally specify the level. By default the level is set to 'Information', but you will receive more detail by setting the level to 'Debug'. EXAMPLES EXAMPLE 1 Stop-PnPTraceLog This turns off trace logging RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Submit-PnPSearchQuery.html": {
    "href": "cmdlets/Submit-PnPSearchQuery.html",
    "title": "Submit-PnPSearchQuery | PnP PowerShell",
    "keywords": "Submit-PnPSearchQuery SYNOPSIS Executes an arbitrary search query against the SharePoint search index. Required Permissions Type API/ Permission Name Admin consent required Application sharepoint/Sites.Read.All, sharepoint/Sites.ReadWrite.All, sharepoint/Sites.Manage.All or sharepoint/Sites.FullControl.All yes Delegated sharepoint/Sites.Search.All yes SYNTAX Limit (Default) Submit-PnPSearchQuery [-Query] <String> [-StartRow <Int32>] [-MaxResults <Int32>] [-TrimDuplicates <Boolean>] [-Properties <Hashtable>] [-Refiners <String>] [-Culture <Int32>] [-QueryTemplate <String>] [-SelectProperties <String[]>] [-RefinementFilters <String[]>] [-SortList <Hashtable>] [-RankingModelId <String>] [-ClientType <String>] [-CollapseSpecification <String>] [-HiddenConstraints <String>] [-TimeZoneId <Int32>] [-EnablePhonetic <Boolean>] [-EnableStemming <Boolean>] [-EnableQueryRules <Boolean>] [-SourceId <Guid>] [-ProcessBestBets <Boolean>] [-ProcessPersonalFavorites <Boolean>] [-RelevantResults] [-Connection <PnPConnection>] [-RetryCount <Int32>] [-Verbose] All Submit-PnPSearchQuery [-Query] <String> [-All] [-TrimDuplicates <Boolean>] [-Properties <Hashtable>] [-Refiners <String>] [-Culture <Int32>] [-QueryTemplate <String>] [-SelectProperties <String[]>] [-RefinementFilters <String[]>] [-SortList <Hashtable>] [-RankingModelId <String>] [-ClientType <String>] [-CollapseSpecification <String>] [-HiddenConstraints <String>] [-TimeZoneId <Int32>] [-EnablePhonetic <Boolean>] [-EnableStemming <Boolean>] [-EnableQueryRules <Boolean>] [-SourceId <Guid>] [-ProcessBestBets <Boolean>] [-ProcessPersonalFavorites <Boolean>] [-RelevantResults] [-Connection <PnPConnection>] [-RetryCount <Int32>] [-Verbose] DESCRIPTION Allows to run an arbitrary search query against the SharePoint search index. EXAMPLES EXAMPLE 1 Submit-PnPSearchQuery -Query \"finance\" Returns the top 500 items with the term finance. EXAMPLE 2 Submit-PnPSearchQuery -Query \"Title:Intranet*\" -MaxResults 10 Returns the top 10 items indexed by SharePoint Search of which the title starts with the word Intranet. EXAMPLE 3 Submit-PnPSearchQuery -Query \"Title:Intranet*\" -All Returns absolutely all items indexed by SharePoint Search of which the title starts with the word Intranet. EXAMPLE 4 Submit-PnPSearchQuery -Query \"Title:Intranet*\" -Refiners \"contentclass,FileType(filter=6/0/*)\" Returns absolutely all items indexed by SharePoint Search of which the title starts with the word Intranet, and return refiners for contentclass and FileType managed properties. EXAMPLE 5 Submit-PnPSearchQuery -Query \"contentclass:STS_ListItem_DocumentLibrary\" -SelectProperties ComplianceTag,InformationProtectionLabelId -All Returns absolutely all items indexed by SharePoint Search which represent a document in a document library and instructs explicitly to return the managed properties InformationProtectionLabelId and ComplianceTag which will give insight into the sensitivity and retention labels assigned to the documents. EXAMPLE 6 Submit-PnPSearchQuery -Query \"contentclass:STS_ListItem_DocumentLibrary\" -SortList @{\"filename\" = \"ascending\"} -All Returns absolutely all items indexed by SharePoint Search which represent a document in a document library and sorts the items by file name in ascending order. PARAMETERS -All Automatically page results until the end to get more than 500. Use with caution! Type: SwitchParameter Parameter Sets: All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientType Specifies the name of the client which issued the query. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CollapseSpecification Limit the number of items per the collapse specification. See https://learn.microsoft.com/sharepoint/dev/general-development/customizing-search-results-in-sharepoint#collapse-similar-search-results-using-the-collapsespecification-property for more information. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Culture The locale for the query. Uses LCID's as per this documentation. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnablePhonetic Specifies whether the phonetic forms of the query terms are used to find matches. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableQueryRules Specifies whether Query Rules are enabled for this query. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableStemming Specifies whether stemming is enabled. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HiddenConstraints The keyword query's hidden constraints. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MaxResults Maximum amount of search results to return. Default and max per page is 500 search results. Type: Int32 Parameter Sets: Limit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ProcessBestBets Determines whether Best Bets are enabled. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ProcessPersonalFavorites Determines whether personal favorites data is processed or not. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Properties Extra query properties. Can for example be used for Office Graph queries. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Query Search query in Keyword Query Language (KQL). Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -QueryTemplate Specifies the query template that is used at run time to transform the query based on user input. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RankingModelId The identifier (ID) of the ranking model to use for the query. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RefinementFilters The set of refinement filters used, separated by a comma. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Refiners The list of refiners to be returned in a search result, separated by a comma. I.e. contentclass,ContentType(filter=7/0/*). Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RelevantResults Specifies whether only relevant results are returned. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RetryCount How many times to retry for a failed query. Default is 0 (no retries). Will wait 5 seconds between each retry. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: 0 Accept pipeline input: False Accept wildcard characters: False -SelectProperties The list of properties to return in the search results, separated by a comma. I.e. ComplianceTag,InformationProtectionLabelId. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SortList The list of properties by which the search results are ordered as a hashtable, i.e. each property needs to be a key and the associated value either \"Ascending\" or \"Descending\" based on the wanted sort order, or \"FQLFormula\" if you want to use a formula to define the sort order. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceId Specifies the identifier (ID or name) of the result source to be used to run the query. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartRow Search result item to start returning the results from. Useful for paging. Leave at 0 to return all results. Type: Int32 Parameter Sets: Limit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TimeZoneId The identifier for the search query time zone. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TrimDuplicates Specifies whether near duplicate items should be removed from the search results. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while executing the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Submit-PnPTeamsChannelMessage.html": {
    "href": "cmdlets/Submit-PnPTeamsChannelMessage.html",
    "title": "Submit-PnPTeamsChannelMessage | PnP PowerShell",
    "keywords": "Submit-PnPTeamsChannelMessage SYNOPSIS Required Permissions Microsoft Graph API: API required one of: Teamwork.Migrate.All, ChannelMessage.Send or Group.ReadWrite.All. Sends a message to a Microsoft Teams Channel. SYNTAX Submit-PnPTeamsChannelMessage -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> -Message <String> [-ContentType <TeamChannelMessageContentType>] [-Important] DESCRIPTION Allows to send a message to a Microsoft Teams Channel. EXAMPLES EXAMPLE 1 Submit-PnPTeamsChannelMessage -Team MyTestTeam -Channel \"My Channel\" -Message \"A new message\" Sends \"A new message\" to the specified channel EXAMPLE 2 Submit-PnPTeamsChannelMessage -Team MyTestTeam -Channel \"My Channel\" -Message \"<strong>A bold new message</strong>\" -ContentType Html Sends the message, formatted as html to the specified channel PARAMETERS -Channel Specify the group id, mailNickname or display name of the team to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType Specify to set the content type of the message, either Text or Html. Type: TeamChannelMessageContentType Parameter Sets: (All) Accepted values: Text, Html Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Important Specify to make this an important message. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Message The message to send to the channel. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Sync-PnPAppToTeams.html": {
    "href": "cmdlets/Sync-PnPAppToTeams.html",
    "title": "Sync-PnPAppToTeams | PnP PowerShell",
    "keywords": "Sync-PnPAppToTeams SYNOPSIS Synchronize an app from the tenant app catalog to the Microsoft Teams app catalog. SYNTAX Sync-PnPAppToTeams [-Identity] <AppMetadataPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to synchronize an app from the tenant app catalog to the Microsoft Teams app catalog. EXAMPLES EXAMPLE 1 Sync-PnPAppToTeams -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will synchronize the given app with the Microsoft Teams app catalog. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the Id of the Add-In Instance. Type: AppMetadataPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Sync-PnPSharePointUserProfilesFromAzureActiveDirectory.html": {
    "href": "cmdlets/Sync-PnPSharePointUserProfilesFromAzureActiveDirectory.html",
    "title": "Sync-PnPSharePointUserProfilesFromAzureActiveDirectory | PnP PowerShell",
    "keywords": "Sync-PnPSharePointUserProfilesFromAzureActiveDirectory SYNOPSIS Required Permissions SharePoint: Sites.FullControl.All, TermStore.ReadWrite.All, User.ReadWrite.All Microsoft Graph: User.Read ACS: No longer needed Synchronizes user profiles from Entra ID into the SharePoint Online User Profiles SYNTAX Upload file Sync-PnPSharePointUserProfilesFromAzureActiveDirectory -UserProfilePropertyMapping <Hashtable> [-IdType <Enum>] [-Users <Array>] [-Folder <String>] [-Wait] [-Verbose] [-Connection <PnPConnection>] [-WhatIf] DESCRIPTION This cmdlet allows synchronizing user profiles from Entra ID to their SharePoint Online User Profile equivalents. Note that certain properties are already synced by default. A list of these can be found here: https://learn.microsoft.com/sharepoint/user-profile-sync#properties-that-are-synced-into-sharepoint-user-profiles For other properties not listed on this page, you can use this cmdlet to synchronize them. You can provide the property name(s) in Entra ID and specify its equivalent property in SharePoint Online for the values to be mapped to. Note that SharePoint Online User Profile properties you wish to sync to must have the checkbox unchecked for \"Allow users to edit values for this property\" in the user profile property in the SharePoint User Profile service application. It also must have \"User can override\" checked under Policy Settings of the user profile property in the SharePoint User Profile service application. When running this cmdlet, it will upload a file named userprofilesyncdata-<timestamp>-<guid>.json to the document library of the SharePoint Online site you are connected to. From there an asynchronous process will be started that processes the JSON file and updates the user profiles on the SharePoint Online side. The time before this process starts varies. Once that process is done and only if something failed, you will find a new folder created in the same document library of which the folder name starts with the same name as the filename. It will contain a .log file in which you can find the results of it trying to update the user profiles in SharePoint Online which were specified in the JSON file. If all the user profile properties have been updated successfully, it will not create such a folder and log file. You can also query the import job status using Get-PnPUPABulkImportStatus -JobId <jobid>. The jobid will be returned upon running this cmdlet and can be fed into this cmdlet to get the actual status. It will show State: Submitted after running this cmdlet and before processing it and State: Succeeded once its done and was successful or State: Error if it failed. It will also return full details on the file it will use to update the user profiles and the location of the log file once its done processing and only if it failed. For documentation on all the possible states it can be in, see https://learn.microsoft.com/sharepoint/dev/solution-guidance/bulk-user-profile-update-api-for-sharepoint-online#parameters-2. When not providing -Users, it will fetch all the users and the properties defined in the mapping from Entra ID itself. You can also opt to query for a subset of Entra ID users to update using i.e. Get-PnPAzureAdUser and feed the outcome of that to the -Users parameter. In this case you must ensure that the user objects you supply contain the properties you wish to sync towards SharePoint Online. When not providing -Folder, it will assume a document library named \"Shared Documents\" is present within the site collection you're currently connected to. In case you are not using an English site collection, this name may be different and localized. In that case use the -Folder parameter passing in the localized name of the document library you wish to upload the mapping file to. Required Permissions It is no longer needed to use ACS permissions for this cmdlet to work. The following permissions, granted through an Entra ID application registration, should suffice. It can also be used using a Managed Identity within Azure using the same permissions. SharePoint: Sites.FullControl.All, TermStore.ReadWrite.All, User.ReadWrite.All Microsoft Graph: User.Read EXAMPLES EXAMPLE 1 Sync-PnPSharePointUserProfilesFromAzureActiveDirectory -UserProfilePropertyMapping @{\"HomePhone\"=\"phone\";\"CustomProperty\"=\"DisplayName\"} This will retrieve all users in Entra ID and take its phone property to update in the HomePhone field in the SharePoint Online user profiles for each of these users. Similarly it will set the SharePoint Online User Profile property named CustomProperty to the value of the DisplayName as set in Entra ID on the user object. It will upload the JSON file with the instructions for the update to the 'Shared Documents' library of the site currently connected to. EXAMPLE 2 $users = Get-PnPAzureADUser -Filter \"jobTitle eq 'IT Administrator'\" Sync-PnPSharePointUserProfilesFromAzureActiveDirectory -UserProfilePropertyMapping @{\"CostCenter\"=\"extension_b0b5aaa58a0a4287acd826c5b8330e48_CostCenter\"} -Users $users This will update the CostCenter SharePoint Online User Profile property with the value of the property extension_b0b5aaa58a0a4287acd826c5b8330e48_CostCenter coming from Entra ID for the users getting returned by the Get-PnPAzureADUser query. It will upload the JSON file with the instructions for the update to the 'Shared Documents' library of the site currently connected to. EXAMPLE 3 $delta = Get-PnPAzureADUser -Delta -DeltaToken $delta.DeltaToken Sync-PnPSharePointUserProfilesFromAzureActiveDirectory -UserProfilePropertyMapping @{\"CostCenter\"=\"extension_b0b5aaa58a0a4287acd826c5b8330e48_CostCenter\"} -Users $delta.Users This will retrieve all the users from Entra ID and includes a DeltaToken in the response. Using the DeltaToken you can retrieve only those users which have had changes done to their attributes since the DeltaToken was given out. This makes it ideal to use with the profile sync as this way you only will sync those users that have had changes to their profiles. Only for those users this will update the CostCenter SharePoint Online User Profile property with the value of the property extension_b0b5aaa58a0a4287acd826c5b8330e48_CostCenter coming from Entra ID. It will upload the JSON file with the instructions for the update to the 'Shared Documents' library of the site currently connected to. EXAMPLE 4 Sync-PnPSharePointUserProfilesFromAzureActiveDirectory -UserProfilePropertyMapping @{\"CostCenter\"=\"extension_b0b5aaa58a0a4287acd826c5b8330e48_CostCenter\"} -Folder \"User Profile Sync\" This will retrieve all users in Entra ID and take its extension property named CostCenter to update in the CostCenter field in the SharePoint Online user profiles for each of these users. It will upload the JSON file with the instructions for the update to a library named 'User Profile Sync' in the site currently connected to. EXAMPLE 5 Sync-PnPSharePointUserProfilesFromAzureActiveDirectory -UserProfilePropertyMapping @{\"CostCenter\"=\"extension_b0b5aaa58a0a4287acd826c5b8330e48_CostCenter\"} -Folder \"User Profile Sync\\Jobs\" -Wait -Verbose This will retrieve all users in Entra ID and take its extension property named CostCenter to update in the CostCenter field in the SharePoint Online user profiles for each of these users. It will upload the JSON file with the instructions for the update to the folder Jobs inside a library named 'User Profile Sync' in the site currently connected to. It will wait with continuing the execution of the remainder of your script until the synchronization process has either completed or failed. It will output verbose logging to provide input on its status while executing. Notice that it may very well take 10 minutes or more for the synchronization to complete. PARAMETERS -Users Through this parameter you can pass in users coming forward from a query through Get-PnPAzureADUser that need to have their SharePoint Online User profiles updated Type: System.Collections.Generic.List`1[PnP.Framework.Graph.Model.User] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The site relative name of the folder or document library to upload the JSON files containing the user profiles to be updated. I.e. 'Shared Documents' to upload it to the root of the default Documents library in a Team site. If you want to specify a folder inside the document library, you can use i.e. 'Shared Documents\\Somefolder'. If you are not using a site collection in the English language, be sure to provide this parameter passing in the localized name of your library instead. Type: String Parameter Sets: (All) Required: False Position: Named Default value: \"Shared Documents\" Accept pipeline input: False Accept wildcard characters: False -UserProfilePropertyMapping A hashtable containing the SharePoint Online User Profile property to update as the key and as the value the Entra ID user profile property from which the value should be copied. It is possible to copy one Entra ID user profile property to multiple SharePoint Online User Profile property fields. It is also possible to provide multiple mappings at once. For SharePoint Online, please be sure to take the actual property name as shown on the User Profile property page at https://tenant-admin.sharepoint.com/_layouts/15/TenantProfileAdmin/MgrProperty.aspx?ProfileType=User&ApplicationID=00000000%2D0000%2D0000%2D0000%2D000000000000 and not its display name as these can easily be mixed up. I.e. @{\"SharePointUserProfileProperty1\"=\"AzureADUserProperty1\";\"SharePointUserProfileProperty2\"=\"AzureADUserProperty2\"} Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IdType The type of profile identifier (Email/CloudId/PrincipalName). Defaults to CloudId. Ensure that if you use this in combination with -Users that all of the user objects you're passing in are having their Mail property populated when choosing IdType Email, Id property for IdType CloudId or UserPrincipalName for IdType PrincipalName. Type: ImportProfilePropertiesUserIdType Parameter Sets: (All) Accepted values: Email, CloudId, PrincipalName Required: False Default value: CloudId Accept pipeline input: False Accept wildcard characters: False -WhatIf Will retrieve the users from Entra ID and create and upload the mappings JSON file, but will not invoke a request to SharePoint Online to queue the import process. This way you can examine the mappings JSON file on SharePoint Online first to ensure the mappings are being done correctly. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait Adding this parameter will cause the script to start the user profile sync operation and wait with proceeding with the rest of the script until the user profiles have been imported into the SharePoint Online user profile. It can take a long time for the user profile sync operation to complete. It will check every 30 seconds for the current status of the job, to avoid getting throttled. The check interval is non configurable. Add -Verbose as well to be notified about the progress while waiting. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while going through the user profile sync steps. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Test-PnPListItemIsRecord.html": {
    "href": "cmdlets/Test-PnPListItemIsRecord.html",
    "title": "Test-PnPListItemIsRecord | PnP PowerShell",
    "keywords": "Test-PnPListItemIsRecord SYNOPSIS Checks if a list item is a record SYNTAX Test-PnPListItemIsRecord [-List] <ListPipeBind> -Identity <ListItemPipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to check if the specified list item is a record. EXAMPLES EXAMPLE 1 Test-PnPListItemIsRecord -List \"Documents\" -Identity 4 Returns true if the document in the documents library with id 4 is a record PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Test-PnPMicrosoft365GroupAliasIsUsed.html": {
    "href": "cmdlets/Test-PnPMicrosoft365GroupAliasIsUsed.html",
    "title": "Test-PnPMicrosoft365GroupAliasIsUsed | PnP PowerShell",
    "keywords": "Test-PnPMicrosoft365GroupAliasIsUsed SYNOPSIS Tests if a given alias is already used. SYNTAX Test-PnPMicrosoft365GroupAliasIsUsed -Alias <String> [-Connection <PnPConnection>] DESCRIPTION This command allows you to test if a provided alias is used or free, helps decide if it can be used as part of connecting an Microsoft 365 group to an existing classic site collection. EXAMPLES EXAMPLE 1 Test-PnPMicrosoft365GroupAliasIsUsed -Alias \"MyGroup\" This will test if the alias MyGroup is already used PARAMETERS -Alias Specifies the alias of the group. Cannot contain spaces. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Test-PnPSite.html": {
    "href": "cmdlets/Test-PnPSite.html",
    "title": "Test-PnPSite | PnP PowerShell",
    "keywords": "Test-PnPSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Checks the site collection and its contents. SYNTAX Test-PnPSite -Identity <SitePipeBind> [-RuleId <Guid>] [-Connection <PnPConnection>] DESCRIPTION The Test-PnPSite cmdlet runs one or all site collection health checks on the site collection and its contents. Tests are intended not to make any changes except in repair mode, which can be initiated by running the Repair-PnPSite cmdlet. This cmdlet reports the rules together with a summary of the results. EXAMPLES EXAMPLE 1 Test-PnPSite -Identity \"https://contoso.sharepoint.com/sites/marketing\" This example runs all the site collection health checks on the https://contoso.sharepoint.com/sites/marketing site collection. EXAMPLE 2 Test-PnPSite -Identity \"https://contoso.sharepoint.com/sites/marketing\" -RuleID \"ee967197-ccbe-4c00-88e4-e6fab81145e1\" This example runs the Missing Galleries Check rule in test mode on the https://contoso.sharepoint.com/sites/marketing site collection. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the SharePoint Online site collection on which to run the repairs. Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RuleId Specifies a health check rule to run. For example: \"ee967197-ccbe-4c00-88e4-e6fab81145e1\" for Missing Galleries. \"befe203b-a8c0-48c2-b5f0-27c10f9e1622\" for Conflicting Content Types. \"a9a6769f-7289-4b9f-ae7f-5db4b997d284\" for Missing Parent Content Types. \"5258ccf5-e7d6-4df7-b8ae-12fcc0513ebd\" for Missing Site Templates. \"99c946f7-5751-417c-89d3-b9c8bb2d1f66\" for Unsupported Language Pack References. \"6da06aab-c539-4e0d-b111-b1da4408859a\" for Unsupported MUI References. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Test-PnPTenantTemplate.html": {
    "href": "cmdlets/Test-PnPTenantTemplate.html",
    "title": "Test-PnPTenantTemplate | PnP PowerShell",
    "keywords": "Test-PnPTenantTemplate SYNOPSIS Tests a tenant template for invalid references. SYNTAX Test-PnPTenantTemplate -Template <ProvisioningHierarchy> [-Connection <PnPConnection>] DESCRIPTION Allows to check if the tenant template has invalid references. EXAMPLES EXAMPLE 1 Test-PnPTenantTemplate -Template $myTemplate Checks for valid template references. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template The in-memory template to test. Type: ProvisioningHierarchy Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Undo-PnPFileCheckedOut.html": {
    "href": "cmdlets/Undo-PnPFileCheckedOut.html",
    "title": "Undo-PnPFileCheckedOut | PnP PowerShell",
    "keywords": "Undo-PnPFileCheckedOut SYNOPSIS Discards changes to a file. SYNTAX Undo-PnPFileCheckedOut [-Url] <String> [-Connection <PnPConnection>] DESCRIPTION This cmdlet discards changes to a single file. EXAMPLES EXAMPLE 1 Undo-PnPFileCheckedOut -Url \"/sites/PnP/Shared Documents/Contract.docx\" Discards changes in the file \"Contract.docx\" in the \"Documents\" library PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The server relative url of the file to discard changes. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Uninstall-PnPApp.html": {
    "href": "cmdlets/Uninstall-PnPApp.html",
    "title": "Uninstall-PnPApp | PnP PowerShell",
    "keywords": "Uninstall-PnPApp SYNOPSIS Uninstalls an available add-in from the site SYNTAX Uninstall-PnPApp [-Identity] <AppMetadataPipeBind> [-Scope <AppCatalogScope>] [-Connection <PnPConnection>] DESCRIPTION Allows to uninstall an available add-in from the site. EXAMPLES EXAMPLE 1 Uninstall-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will uninstall the specified app from the current site. EXAMPLE 2 Uninstall-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Site This will uninstall the specified app from the current site. Notice that the app was original installed from the site collection appcatalog. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the Id of the Add-In Instance Type: AppMetadataPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Defines which app catalog to use. Defaults to Tenant Type: AppCatalogScope Parameter Sets: (All) Accepted values: Tenant, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Unlock-PnPSensitivityLabelEncryptedFile.html": {
    "href": "cmdlets/Unlock-PnPSensitivityLabelEncryptedFile.html",
    "title": "Unlock-PnPSensitivityLabelEncryptedFile | PnP PowerShell",
    "keywords": "Unlock-PnPSensitivityLabelEncryptedFile SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site SYNTAX Unlock-PnPSensitivityLabelEncryptedFile -Url <String> -JustificationText <string> [-Connection <PnPConnection>] DESCRIPTION It removes encryption on a Sensitivity label encrypted file in SharePoint Online. EXAMPLES EXAMPLE 1 Unlock-PnPSensitivityLabelEncryptedFile -Url \"https://contoso.com/sites/Marketing/Shared Documents/Doc1.docx\" -JustificationText \"Need to access file\" This example will remove a regular label with admin defined encryption from the file Doc1.docx and also make an entry in audit logs. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Full URL for the file Type: string. Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -JustificationText Text that explains the reason to run this cmdlet on the given file. Type: string. Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Unpublish-PnPApp.html": {
    "href": "cmdlets/Unpublish-PnPApp.html",
    "title": "Unpublish-PnPApp | PnP PowerShell",
    "keywords": "Unpublish-PnPApp SYNOPSIS Unpublishes/retracts an available add-in from the app catalog. SYNTAX Unpublish-PnPApp [-Identity] <AppMetadataPipeBind> [-Scope <AppCatalogScope>] [-Connection <PnPConnection>] [-Force <SwitchParameter>] DESCRIPTION Allows to unpublish an available add-in from the site collection app catalog or tenant app catalog. EXAMPLES EXAMPLE 1 Unpublish-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will retract, but not remove, the specified app from the tenant app catalog. EXAMPLE 2 Unpublish-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Site This will retract, but not remove, the specified app from the site collection app catalog. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the Id of the Addin Instance. Type: AppMetadataPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Defines which app catalog to use. Defaults to Tenant. Type: AppCatalogScope Parameter Sets: (All) Accepted values: Tenant, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to change no-script setting. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Unpublish-PnPContentType.html": {
    "href": "cmdlets/Unpublish-PnPContentType.html",
    "title": "Unpublish-PnPContentType | PnP PowerShell",
    "keywords": "Unpublish-PnPContentType SYNOPSIS Required Permissions Fullcontrol permission on the content type hub site. Unpublishes a content type present on content type hub site. SYNTAX Unpublish-PnPContentType -ContentType <ContentTypePipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to unpublish a content type present on content type hub site. EXAMPLES EXAMPLE 1 Unpublish-PnPContentType -ContentType 0x0101 This will unpublish the content type with the given id. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The content type object in the content type hub site which is to be unpublished. Type: ContentType Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Unpublish-PnPSyntexModel.html": {
    "href": "cmdlets/Unpublish-PnPSyntexModel.html",
    "title": "Unpublish-PnPSyntexModel | PnP PowerShell",
    "keywords": "Unpublish-PnPSyntexModel SYNOPSIS Unpublishes a Microsoft Syntex model from a list. This cmdlet only works when you've connected to a Syntex Content Center site. SYNTAX Single Unpublish-PnPSyntexModel -Model <SyntexModelPipeBind> -ListWebUrl <string> -List <ListPipeBind> [-Connection <PnPConnection>] Batched Unpublish-PnPSyntexModel -Model <SyntexModelPipeBind> -TargetSiteUrl <string> -TargetWebServerRelativeUrl <string> -TargetLibraryServerRelativeUrl <string> -Batch <PnPBatch> [-Connection <PnPConnection>] DESCRIPTION This command unpublishes a Syntex document processing model from a list. EXAMPLES EXAMPLE 1 Unpublish-PnPSyntexModel -Model \"Invoice model\" -ListWebUrl \"https://contoso.sharepoint.com/sites/finance\" -List \"Documents\" Unpublishes the Syntex document processing model named \"Invoice model\" from the list named \"Documents\" in the /sites/finance web. EXAMPLE 2 Unpublish-PnPSyntexModel -Model \"Invoice model\" -TargetSiteUrl \"https://contoso.sharepoint.com/sites/finance\" -TargetWebServerRelativeUrl \"/sites/finance\" -TargetLibraryServerRelativeUrl \"/sites/finance/shared%20documents\" -Batch $batch Adds the unpublishing of the document processing model named \"Invoice model\" from the \"Shared Documents\" library into the PnPBatch $batch. Use Invoke-PnPBatch -Batch $batch to execute the batch, use $batch = New-PnPBatch to create a batch. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Model The name or id of the Syntex model. Type: SyntexModelPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ListWebUrl Url of the web hosting the list to unpublish the model from. Type: String Parameter Sets: Single Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The name or id of the list to unpublish the model from. Type: ListPipeBind Parameter Sets: Single Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetSiteUrl The fully qualified URL of the site collection hosting the library to unpublish the model from. Type: String Parameter Sets: Batched Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetWebServerRelativeUrl The server relative url of the web hosting the library to unpublish the model from. Type: String Parameter Sets: Batched Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetLibraryServerRelativeUrl The server relative url of the library to unpublish the model from. Type: String Parameter Sets: Batched Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Batch The batch to add this unpublish request to. Type: PnPBatch Parameter Sets: Batched Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Unregister-PnPHubSite.html": {
    "href": "cmdlets/Unregister-PnPHubSite.html",
    "title": "Unregister-PnPHubSite | PnP PowerShell",
    "keywords": "Unregister-PnPHubSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Unregister a site as a hubsite. SYNTAX Unregister-PnPHubSite -Site <SitePipeBind> [-Connection <PnPConnection>] DESCRIPTION Allows to unregister a site as a hubsite. EXAMPLES EXAMPLE 1 Unregister-PnPHubSite -Site \"https://tenant.sharepoint.com/sites/myhubsite\" This example unregisters the specified site as a hubsite. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site The site to unregister as a hubsite. Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Update-PnPApp.html": {
    "href": "cmdlets/Update-PnPApp.html",
    "title": "Update-PnPApp | PnP PowerShell",
    "keywords": "Update-PnPApp SYNOPSIS Updates an available app from the app catalog. SYNTAX Update-PnPApp [-Identity] <AppMetadataPipeBind> [-Scope <AppCatalogScope>] [-Connection <PnPConnection>] DESCRIPTION Allows to update an available app from the app catalog. EXAMPLES EXAMPLE 1 Update-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will update an already installed app if a new version is available in the tenant app catalog. Retrieve a list of all available apps and the installed and available versions with Get-PnPApp. EXAMPLE 2 Update-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Site This will update an already installed app if a new version is available in the site collection app catalog. Retrieve a list of all available apps and the installed and available versions with Get-PnPApp -Scope Site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the Id or an actual app metadata instance. Type: AppMetadataPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Defines which app catalog to use. Defaults to Tenant. Type: AppCatalogScope Parameter Sets: (All) Accepted values: Tenant, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Update-PnPAvailableSiteClassification.html": {
    "href": "cmdlets/Update-PnPAvailableSiteClassification.html",
    "title": "Update-PnPAvailableSiteClassification | PnP PowerShell",
    "keywords": "Update-PnPAvailableSiteClassification SYNOPSIS Required Permissions Microsoft Graph API: Directory.ReadWrite.All Updates available classic Site Classifications for the tenant SYNTAX Settings Update-PnPAvailableSiteClassification -Settings <SiteClassificationsSettings> Specific Update-PnPAvailableSiteClassification [-Classifications <System.Collections.Generic.List`1[System.String]>] [-DefaultClassification <String>] [-UsageGuidelinesUrl <String>] DESCRIPTION This cmdlet allows for updating the configuration of the classic site classifications configured within the tenant. EXAMPLES EXAMPLE 1 Update-PnPAvailableSiteClassification -Classifications \"HBI\",\"Top Secret\" Replaces the existing values of the site classification settings EXAMPLE 2 Update-PnPAvailableSiteClassification -DefaultClassification \"LBI\" Sets the default classification value to \"LBI\". This value needs to be present in the list of classification values. EXAMPLE 3 Update-PnPAvailableSiteClassification -UsageGuidelinesUrl https://aka.ms/m365pnp sets the usage guidelines URL to the specified URL PARAMETERS -Classifications A list of classifications, separated by commas. E.g. \"HBI\",\"LBI\",\"Top Secret\" Type: System.Collections.Generic.List`1[System.String] Parameter Sets: Specific Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultClassification The default classification to be used. The value needs to be present in the list of possible classifications Type: String Parameter Sets: Specific Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Settings A settings object retrieved by Get-PnPSiteClassification Type: SiteClassificationsSettings Parameter Sets: Settings Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UsageGuidelinesUrl The UsageGuidelinesUrl. Set to \"\" to clear. Type: String Parameter Sets: Specific Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Update-PnPSiteDesignFromWeb.html": {
    "href": "cmdlets/Update-PnPSiteDesignFromWeb.html",
    "title": "Update-PnPSiteDesignFromWeb | PnP PowerShell",
    "keywords": "Update-PnPSiteDesignFromWeb SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Updates an existing Site Design on the current tenant based on the site provided through -Url or the currently connected to site if -Url is omitted. SYNTAX Specific components Update-PnPSiteDesignFromWeb -Identity <TenantSiteDesignPipeBind> -Url <String> [-Lists <String[]>] [-IncludeBranding <SwitchParameter>] [-IncludeLinksToExportedItems <SwitchParameter>] [-IncludeRegionalSettings <SwitchParameter>] [-IncludeSiteExternalSharingCapability <SwitchParameter>] [-IncludeTheme <SwitchParameter>] [-Connection <PnPConnection>] All components Update-PnPSiteDesignFromWeb -Identity <TenantSiteDesignPipeBind> -Url <String> [-Lists <String[]>] [-IncludeAll <SwitchParameter>] [-Connection <PnPConnection>] DESCRIPTION Updates an existing Site Design on the current tenant based on the site provided through -Url or the currently connected to site if -Url is omitted. It combines the steps of Get-PnPSiteScriptFromWeb and Set-PnPSiteScript to generate a site script from a web and update an existing site script with it into one cmdlet. The information returned from running the cmdlet is the information of the Site Design that has been updated. EXAMPLES EXAMPLE 1 Update-PnPSiteDesignFromWeb -Identity \"Contoso Project\" -IncludeAll Generates a site script based on all the components of the currently connected to site, excluding its lists and libraries and based on the generated script it will update the site script in the site design with the provided name. EXAMPLE 2 Update-PnPSiteDesignFromWeb -Identity \"Contoso Project\" -IncludeAll -Lists (\"/lists/Issue list\", \"Shared Documents) Generates a site script based on all the components of the currently connected to site, including the list \"Issue list\" and the default document library \"Shared Documents\" and based on the generated script it will update the site script in the site design with the provided name. EXAMPLE 3 Update-PnPSiteDesignFromWeb -Url https://contoso.sharepoint.com/sites/template -Identity \"Contoso Project\" -Lists \"/lists/Issue list\" Generates a site script based on the list \"Issue list\" in the site provided through Url. Based on the generated script it will update the site script in the site design with the provided name. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeAll If specified will include all supported components into the Site Script except for the lists and document libraries, these need to be explicitly be specified through -Lists Type: SwitchParameter Parameter Sets: All components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeBranding If specified will include the branding of the site into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeLinksToExportedItems If specified will include navigation links into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeRegionalSettings If specified will include the regional settings into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSiteExternalSharingCapability If specified will include the external sharing configuration into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeTheme If specified will include the branding of the site into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lists Allows specifying one or more site relative URLs of lists that should be included into the Site Script, i.e. \"Shared Documents\",\"List\\MyList\" Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Specifies the URL of the site to generate a Site Script from. If omitted, the currently connected to site will be used. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Update-PnPTeamsApp.html": {
    "href": "cmdlets/Update-PnPTeamsApp.html",
    "title": "Update-PnPTeamsApp | PnP PowerShell",
    "keywords": "Update-PnPTeamsApp SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Updates an existing app in the Teams App Catalog. SYNTAX Update-PnPTeamsApp -Identity <TeamsAppPipeBind> -Path <String> DESCRIPTION Allows to update an existing app in the Teams App Catalog. EXAMPLES EXAMPLE 1 Update-PnPTeamsApp -Identity 4efdf392-8225-4763-9e7f-4edeb7f721aa -Path c:\\myapp.zip Updates the specified app in the teams app catalog with the contents of the referenced zip file. PARAMETERS -Identity Specify the name, id or external id of the app. Type: TeamsAppPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path The path pointing to the packaged/zip file containing the app Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Update-PnPTeamsUser.html": {
    "href": "cmdlets/Update-PnPTeamsUser.html",
    "title": "Update-PnPTeamsUser | PnP PowerShell",
    "keywords": "Update-PnPTeamsUser SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Updates a user's role in an existing Microsoft Teams instance. SYNTAX Update-PnPTeamsUser -Team <TeamsTeamPipeBind> -User <String> -Role <String> DESCRIPTION This cmdlet updates the role of the specified user in the selected Teams instance to Member or Owner. EXAMPLES EXAMPLE 1 Update-PnPTeamsUser -Team MyTeam -User john@doe.com -Role Owner Updates a user as an owner of the team. EXAMPLE 2 Update-PnPTeamsUser -Team MyTeam -User john@doe.com -Role Member Updates a user as a member of the team. EXAMPLE 3 Update-PnPTeamsUser -Team a0c0a395-4ba6-4fff-958a-000000506d18 -User john@doe.com -Role Member -Force Updates john@doe.com user as a member of the team and skips the confirmation question. PARAMETERS -Role Specify the role of the user Type: String Parameter Sets: (All) Accepted values: Owner, Member Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User Specify the UPN (e.g. john@doe.com) Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Update-PnPTodoList.html": {
    "href": "cmdlets/Update-PnPTodoList.html",
    "title": "Update-PnPTodoList | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Update-PnPTodoList SYNOPSIS Required Permissions Microsoft Graph API : Tasks.ReadWrite Updates a new todo list. SYNTAX Update-PnPTodoList [[-Identity] <String>] [[-DisplayName] <String>] [-[User] <AzureADUserPipeBind>] DESCRIPTION Use the cmdlet to update display name of a Todo list. EXAMPLES EXAMPLE 1 Update-PnPTodoList -Identity \"AAMkAGU4MGE1OTRiLTUzMGEtNDRjZi05ZmVmLWFiMTkyYmQxODRjOQAuAAAAAACQV8RStyZCQJ4ydzjIK5HmAQD2LFcxdwYMRqbupn47nEYYAASYG0vWAAA=\" -DisplayName \"Travel items\" This will update a todo list's display name associated with your (logged-in user) account. EXAMPLE 2 Update-PnPTodoList -Identity \"AAMkAGU4MGE1OTRiLTUzMGEtNDRjZi05ZmVmLWFiMTkyYmQxODRjOQAuAAAAAACQV8RStyZCQJ4ydzjIK5HmAQD2LFcxdwYMRqbupn47nEYYAASYG0vWAAA=\" -User john@doe.com -DisplayName \"Travel Items\" This will update the display name of a todo list associated with John's account. PARAMETERS -Identity Id of the Todo list. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName Display name of the Todo list. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User The UPN, Id or instance of an Azure AD user for which you would like to create the todo list. Type: AzureADUserPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Update-PnPUserType.html": {
    "href": "cmdlets/Update-PnPUserType.html",
    "title": "Update-PnPUserType | PnP PowerShell",
    "keywords": "Update-PnPUserType SYNOPSIS Updates a user's UserType across all SharePoint Online sites. SYNTAX Update-PnPUserType -LoginName <String> DESCRIPTION This cmdlet retrieves the UserType value of the specified user and updates the UserType across all SharePoint Online sites in the SharePoint Online tenant. This can be used, for example, to convert a Guest user to a standard (Member) user if the user's UserType was previously updated in Azure AD. EXAMPLES EXAMPLE 1 Update-PnPUserType -LoginName jdoe@contoso.com Updates the jdoe@contoso.com's UserType on all SharePoint Online sites in the tenant based on the UserType value in Azure AD. PARAMETERS -LoginName The login name of the target user to update across SharePoint Online. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Update-PnPVivaConnectionsDashboardACE.html": {
    "href": "cmdlets/Update-PnPVivaConnectionsDashboardACE.html",
    "title": "Update-PnPVivaConnectionsDashboardACE | PnP PowerShell",
    "keywords": "Update-PnPVivaConnectionsDashboardACE SYNOPSIS This is an alias for Set-PnPVivaConnectionsDashboardACE. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Update-SiteClassification.html": {
    "href": "cmdlets/Update-SiteClassification.html",
    "title": "Update-SiteClassification | PnP PowerShell",
    "keywords": "Update-SiteClassification SYNOPSIS This is an alias for Update-PnPAvailableSiteClassification. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/index.html": {
    "href": "cmdlets/index.html",
    "title": "PnP PowerShell cmdlets | PnP PowerShell",
    "keywords": "PnP PowerShell cmdlets PnP PowerShell exists out of 753 cmdlets which can help you in setting up, configuring, maintaining and using various Microsoft 365 products from one single connection. Each of the cmdlets is documented to aid in learning how to use it. Find the available cmdlets below. 1: Only available in the latest nightly build. All the others can also be used using the latest stable release. 2: Cmdlet is an alias of another cmdlet, used to provide backwards compatibility. Add Add-PnPAdaptiveScopeProperty 2 Add-PnPAlert Add-PnPApp Add-PnPApplicationCustomizer Add-PnPAvailableSiteClassification Add-PnPAzureADGroupMember Add-PnPAzureADGroupOwner Add-PnPAzureADServicePrincipalAppRole Add-PnPContentType Add-PnPContentTypesFromContentTypeHub Add-PnPContentTypeToDocumentSet Add-PnPContentTypeToList Add-PnPCustomAction Add-PnPDataRowsToSiteTemplate Add-PnPDocumentSet Add-PnPEntraIDGroupMember 2 Add-PnPEntraIDGroupOwner 2 Add-PnPEntraIDServicePrincipalAppRole 2 Add-PnPEventReceiver Add-PnPField Add-PnPFieldFromXml Add-PnPFieldToContentType Add-PnPFile Add-PnPFileAnonymousSharingLink Add-PnPFileOrganizationalSharingLink Add-PnPFileSensitivityLabel 1 Add-PnPFileSharingInvite Add-PnPFileToSiteTemplate Add-PnPFileUserSharingLink Add-PnPFlowOwner Add-PnPFolder Add-PnPFolderAnonymousSharingLink Add-PnPFolderOrganizationalSharingLink Add-PnPFolderSharingInvite Add-PnPFolderUserSharingLink Add-PnPGroupMember Add-PnPHomeSite Add-PnPHtmlPublishingPageLayout Add-PnPHubSiteAssociation Add-PnPHubToHubAssociation Add-PnPIndexedProperty Add-PnPJavaScriptBlock Add-PnPJavaScriptLink Add-PnPListDesign Add-PnPListFoldersToSiteTemplate Add-PnPListItem Add-PnPListItemAttachment Add-PnPListItemComment Add-PnPMasterPage Add-PnPMicrosoft365GroupMember Add-PnPMicrosoft365GroupOwner Add-PnPMicrosoft365GroupToSite Add-PnPNavigationNode Add-PnPOrgAssetsLibrary Add-PnPOrgNewsSite Add-PnPPage Add-PnPPageImageWebPart Add-PnPPageSection Add-PnPPageTextPart Add-PnPPageWebPart Add-PnPPlannerBucket Add-PnPPlannerRoster Add-PnPPlannerRosterMember Add-PnPPlannerTask Add-PnPPropertyBagValue 2 Add-PnPPublishingImageRendition Add-PnPPublishingPage Add-PnPPublishingPageLayout Add-PnPRoleDefinition Add-PnPSiteClassification 2 Add-PnPSiteCollectionAdmin Add-PnPSiteCollectionAppCatalog Add-PnPSiteDesign Add-PnPSiteDesignFromWeb Add-PnPSiteDesignTask Add-PnPSiteScript Add-PnPSiteScriptPackage Add-PnPSiteTemplate Add-PnPStoredCredential Add-PnPTaxonomyField Add-PnPTeamsChannel Add-PnpTeamsChannelUser Add-PnPTeamsTab Add-PnPTeamsTeam Add-PnPTeamsUser Add-PnPTenantCdnOrigin Add-PnPTenantRestrictedSearchAllowedList 1 Add-PnPTenantSequence Add-PnPTenantSequenceSite Add-PnPTenantSequenceSubSite Add-PnPTenantTheme Add-PnPTermToTerm Add-PnPView Add-PnPViewsFromXML Add-PnPVivaConnectionsDashboardACE Add-PnPWebhookSubscription Add-PnPWebPartToWebPartPage Add-PnPWebPartToWikiPage Add-PnPWikiPage Approve Approve-PnPTenantServicePrincipalPermissionRequest Clear Clear-PnPAzureADGroupMember Clear-PnPAzureADGroupOwner Clear-PnPDefaultColumnValues Clear-PnPEntraIDGroupMember 2 Clear-PnPEntraIDGroupOwner 2 Clear-PnPListItemAsRecord Clear-PnPMicrosoft365GroupMember Clear-PnPMicrosoft365GroupOwner Clear-PnpRecycleBinItem Clear-PnPTenantAppCatalogUrl Clear-PnPTenantRecycleBinItem Connect Connect-PnPOnline Convert Convert-PnPFile Convert-PnPFolderToSiteTemplate Convert-PnPSiteTemplate Convert-PnPSiteTemplateToMarkdown ConvertTo ConvertTo-PnPPage Copy Copy-PnPFile Copy-PnPFolder Copy-PnPItemProxy Copy-PnPList Copy-PnPTeamsTeam Deny Deny-PnPTenantServicePrincipalPermissionRequest Disable Disable-PnPFeature Disable-PnPFlow Disable-PnPPageScheduling Disable-PnPPowerShellTelemetry Disable-PnPSharingForNonOwnersOfSite Disable-PnPSiteClassification Disable-PnPTenantServicePrincipal Disconnect Disconnect-PnPOnline Enable Enable-PnPCommSite Enable-PnPFeature Enable-PnPFlow Enable-PnPPageScheduling Enable-PnPPowerShellTelemetry Enable-PnPPriviledgedIdentityManagement 1 Enable-PnPSiteClassification Enable-PnPTenantServicePrincipal Export Export-PnPFlow Export-PnPListToSiteTemplate Export-PnPPage Export-PnPPageMapping Export-PnPPowerApp Export-PnPTaxonomy Export-PnPTermGroupToXml Export-PnPUserInfo Export-PnPUserProfile Find Find-PnPFile Get Get-PnPAccessToken Get-PnPAlert Get-PnPApp Get-PnPAppErrors Get-PnPAppInfo Get-PnPApplicationCustomizer Get-PnPAuditing Get-PnPAuthenticationRealm Get-PnPAvailableLanguage Get-PnPAvailableSensitivityLabel Get-PnPAvailableSiteClassification Get-PnPAzureACSPrincipal Get-PnPAzureADActivityReportDirectoryAudit Get-PnPAzureADActivityReportSignIn Get-PnPAzureADApp Get-PnPAzureADAppPermission Get-PnPAzureADAppSitePermission Get-PnPAzureADGroup Get-PnPAzureADGroupMember Get-PnPAzureADGroupOwner Get-PnPAzureADServicePrincipal Get-PnPAzureADServicePrincipalAssignedAppRole Get-PnPAzureADServicePrincipalAvailableAppRole Get-PnPAzureADUser Get-PnPAzureCertificate Get-PnPBrowserIdleSignout Get-PnPBuiltInDesignPackageVisibility Get-PnPBuiltInSiteTemplateSettings Get-PnPChangeLog Get-PnPClientSidePage 2 Get-PnPCompatibleHubContentTypes Get-PnPConnection Get-PnPContainer Get-PnPContainerType Get-PnPContainerTypeConfiguration Get-PnPContentType Get-PnPContentTypePublishingHubUrl Get-PnPContentTypePublishingStatus Get-PnPContext Get-PnPCopilotAdminLimitedMode 1 Get-PnPCopilotAgent 1 Get-PnPCustomAction Get-PnPDefaultColumnValues Get-PnPDeletedContainer Get-PnPDeletedFlow 1 Get-PnPDeletedMicrosoft365Group Get-PnPDeletedTeam Get-PnPDiagnostics Get-PnPDisableSpacesActivation Get-PnPDocumentSetTemplate Get-PnPEntraIDActivityReportDirectoryAudit 2 Get-PnPEntraIDActivityReportSignIn 2 Get-PnPEntraIDApp 2 Get-PnPEntraIDAppPermission 2 Get-PnPEntraIDAppSitePermission 2 Get-PnPEntraIDGroup 2 Get-PnPEntraIDGroupMember 2 Get-PnPEntraIDGroupOwner 2 Get-PnPEntraIDServicePrincipal 2 Get-PnPEntraIDServicePrincipalAssignedAppRole 2 Get-PnPEntraIDServicePrincipalAvailableAppRole 2 Get-PnPEntraIDUser 2 Get-PnPEventReceiver Get-PnPException Get-PnPExternalUser Get-PnPFeature Get-PnPField Get-PnPFile Get-PnPFileAnalyticsData Get-PnPFileInFolder Get-PnPFileRetentionLabel 1 Get-PnPFileSensitivityLabel 1 Get-PnPFileSensitivityLabelInfo Get-PnPFileSharingLink Get-PnPFileVersion Get-PnPFlow Get-PnPFlowOwner Get-PnPFlowRun Get-PnPFolder Get-PnPFolderInFolder Get-PnPFolderItem Get-PnPFolderSharingLink Get-PnPFolderStorageMetric Get-PnPFooter Get-PnPGraphSubscription Get-PnPGroup Get-PnPGroupMember Get-PnPGroupPermissions Get-PnPHideDefaultThemes Get-PnPHomePage Get-PnPHomeSite Get-PnPHubSite Get-PnPHubSiteChild Get-PnPIndexedPropertyKeys Get-PnPInPlaceRecordsManagement Get-PnPIsSiteAliasAvailable Get-PnPJavaScriptLink Get-PnPKnowledgeHubSite Get-PnPLargeListOperationStatus Get-PnPLibraryFileVersionBatchDeleteJobStatus Get-PnPLibraryFileVersionExpirationReportJobStatus Get-PnPList Get-PnPListDesign Get-PnPListInformationRightsManagement Get-PnPListItem Get-PnPListItemAttachment Get-PnPListItemComment Get-PnPListItemPermission Get-PnPListItemVersion Get-PnPListPermissions Get-PnPListRecordDeclaration Get-PnPManagedAppId 1 Get-PnPMasterPage Get-PnPMessageCenterAnnouncement Get-PnPMicrosoft365ExpiringGroup Get-PnPMicrosoft365Group Get-PnPMicrosoft365GroupEndpoint Get-PnPMicrosoft365GroupMember Get-PnPMicrosoft365GroupMembers 2 Get-PnPMicrosoft365GroupOwner Get-PnPMicrosoft365GroupOwners 2 Get-PnPMicrosoft365GroupSettings Get-PnPMicrosoft365GroupSettingTemplates Get-PnPMicrosoft365GroupTeam Get-PnPMicrosoft365GroupYammerCommunity Get-PnPNavigationNode Get-PnPOrgAssetsLibrary Get-PnPOrgNewsSite Get-PnPPage Get-PnPPageComponent Get-PnPPageLikedByInformation Get-PnPPageSchedulingEnabled Get-PnPPlannerBucket Get-PnPPlannerConfiguration Get-PnPPlannerPlan Get-PnPPlannerRosterMember Get-PnPPlannerRosterPlan Get-PnPPlannerTask Get-PnPPlannerUserPolicy Get-PnPPowerApp Get-PnPPowerPlatformCustomConnector Get-PnPPowerPlatformEnvironment Get-PnPPowerPlatformSolution Get-PnPPowerShellTelemetryEnabled Get-PnPPriviledgedIdentityManagementEligibleAssignment 1 Get-PnPPriviledgedIdentityManagementRole 1 Get-PnPProfileCardProperty 1 Get-PnPProperty Get-PnPPropertyBag Get-PnPPublishingImageRendition Get-PnPRecycleBinItem Get-PnPRequestAccessEmails Get-PnPRetentionLabel Get-PnPRoleDefinition Get-PnPSearchConfiguration Get-PnPSearchCrawlLog Get-PnPSearchExternalConnection Get-PnPSearchExternalItem 1 Get-PnPSearchExternalSchema Get-PnPSearchSettings Get-PnPServiceCurrentHealth Get-PnPServiceHealthIssue Get-PnPSharePointAddIn Get-PnPSharingForNonOwnersOfSite Get-PnPSite Get-PnPSiteAnalyticsData Get-PnPSiteClassification 2 Get-PnPSiteClosure Get-PnPSiteCollectionAdmin Get-PnPSiteCollectionAppCatalog Get-PnPSiteCollectionTermStore Get-PnPSiteDesign Get-PnPSiteDesignRights Get-PnPSiteDesignRun Get-PnPSiteDesignRunStatus Get-PnPSiteDesignTask Get-PnPSiteFileVersionBatchDeleteJobStatus Get-PnPSiteFileVersionExpirationReportJobStatus Get-PnPSiteGroup Get-PnPSitePolicy Get-PnPSiteScript Get-PnPSiteScriptFromList Get-PnPSiteScriptFromWeb Get-PnPSiteSearchQueryResults Get-PnPSiteSensitivityLabel Get-PnPSiteTemplate Get-PnPSiteUserInvitations Get-PnPSiteVersionPolicy Get-PnPSiteVersionPolicyStatus Get-PnPStorageEntity Get-PnPStoredCredential Get-PnPStructuralNavigationCacheSiteState Get-PnPStructuralNavigationCacheWebState Get-PnPSubWeb Get-PnPSyntexModel Get-PnPSyntexModelPublication Get-PnPTaxonomyItem Get-PnPTaxonomySession Get-PnPTeamsApp Get-PnPTeamsChannel Get-PnPTeamsChannelFilesFolder Get-PnPTeamsChannelMessage Get-PnPTeamsChannelMessageReply Get-PnPTeamsChannelUser Get-PnPTeamsPrimaryChannel Get-PnPTeamsTab Get-PnPTeamsTag Get-PnPTeamsTeam Get-PnPTeamsUser Get-PnPTemporarilyDisableAppBar Get-PnPTenant Get-PnPTenantAppCatalogUrl Get-PnPTenantCdnEnabled Get-PnPTenantCdnOrigin Get-PnPTenantCdnPolicies Get-PnPTenantDeletedSite Get-PnPTenantId Get-PnPTenantInfo Get-PnPTenantInstance Get-PnPTenantInternalSetting Get-PnPTenantRecycleBinItem Get-PnPTenantRestrictedSearchAllowedList Get-PnPTenantRestrictedSearchMode Get-PnPTenantRetentionLabel Get-PnPTenantSequence Get-PnPTenantSequenceSite Get-PnPTenantServicePrincipal Get-PnPTenantServicePrincipalPermissionGrants Get-PnPTenantServicePrincipalPermissionRequests Get-PnPTenantSite Get-PnPTenantSyncClientRestriction Get-PnPTenantTemplate Get-PnPTenantTheme Get-PnPTerm Get-PnPTermGroup Get-PnPTermLabel Get-PnPTermSet Get-PnPTheme Get-PnPTimeZoneId Get-PnPTodoList 1 Get-PnPUnfurlLink Get-PnPUnifiedAuditLog Get-PnPUPABulkImportStatus Get-PnPUser Get-PnPUserOneDriveQuota Get-PnPUserProfilePhoto 1 Get-PnPUserProfileProperty Get-PnPView Get-PnPVivaConnectionsDashboardACE Get-PnPVivaEngageCommunity 1 Get-PnPWeb Get-PnPWebHeader Get-PnPWebhookSubscription Get-PnPWebhookSubscriptions 2 Get-PnPWebPart Get-PnPWebPartProperty Get-PnPWebPartXml Get-PnPWebPermission Get-PnPWebTemplates Get-PnPWikiPageContent Grant Grant-PnPAzureADAppSitePermission Grant-PnPEntraIDAppSitePermission 2 Grant-PnPHubSiteRights Grant-PnPSiteDesignRights Grant-PnPTenantServicePrincipalPermission Import Import-PnPTaxonomy Import-PnPTermGroupFromXml Import-PnPTermSet Install Install-PnPApp Invoke Invoke-PnPBatch Invoke-PnPGraphMethod Invoke-PnPListDesign Invoke-PnPQuery Invoke-PnPSearchQuery 2 Invoke-PnPSiteDesign Invoke-PnPSiteScript Invoke-PnPSiteSwap Invoke-PnPSiteTemplate Invoke-PnPSPRestMethod Invoke-PnPTenantTemplate Invoke-PnPWebAction Measure Measure-PnPList Measure-PnPWeb Merge Merge-PnPTerm Move Move-PnPClientSideComponent 2 Move-PnPFile Move-PnPFolder Move-PnPListItemToRecycleBin Move-PnPPageComponent Move-PnpRecycleBinItem Move-PnPTerm Move-PnPTermSet New New-PnPAzureADGroup New-PnPAzureADUserTemporaryAccessPass New-PnPAzureCertificate New-PnPBatch New-PnPContainerType New-PnPEntraIDGroup 2 New-PnPEntraIDUserTemporaryAccessPass 2 New-PnPExtensibilityHandlerObject New-PnPGraphSubscription New-PnPGroup New-PnPLibraryFileVersionBatchDeleteJob New-PnPLibraryFileVersionExpirationReportJob New-PnPList New-PnPMicrosoft365Group New-PnPMicrosoft365GroupSettings New-PnPPersonalSite New-PnPPlannerPlan New-PnpProfileCardProperty 1 New-PnPSdnProvider New-PnPSearchExternalConnection New-PnPSite New-PnPSiteCollectionTermStore New-PnPSiteFileVersionBatchDeleteJob New-PnPSiteFileVersionExpirationReportJob New-PnPSiteGroup New-PnPSiteTemplate New-PnPSiteTemplateFromFolder New-PnPTeamsApp New-PnPTeamsTeam New-PnPTenantSequence New-PnPTenantSequenceCommunicationSite New-PnPTenantSequenceTeamNoGroupSite New-PnPTenantSequenceTeamNoGroupSubSite New-PnPTenantSequenceTeamSite New-PnPTenantSite New-PnPTenantTemplate New-PnPTerm New-PnPTermGroup New-PnPTermLabel New-PnPTermSet New-PnPTodoList 1 New-PnPUPABulkImportJob New-PnPUser New-PnPVivaEngageCommunity 1 New-PnPWeb Publish Publish-PnPApp Publish-PnPContentType Publish-PnPSyntexModel Read Read-PnPSiteTemplate Read-PnPTenantTemplate Receive Receive-PnPCopyMoveJobStatus Register Register-PnPAppCatalogSite Register-PnPAzureADApp Register-PnPEntraIDApp 2 Register-PnPEntraIDAppForInteractiveLogin Register-PnPHubSite Register-PnPManagementShellAccess Remove Remove-PnPAdaptiveScopeProperty Remove-PnPAlert Remove-PnPApp Remove-PnPApplicationCustomizer Remove-PnPAvailableSiteClassification Remove-PnPAzureADApp Remove-PnPAzureADGroup Remove-PnPAzureADGroupMember Remove-PnPAzureADGroupOwner Remove-PnPAzureADServicePrincipalAssignedAppRole Remove-PnPAzureADUser Remove-PnPClientSidePage 2 Remove-PnPContainer Remove-PnPContainerType Remove-PnPContentType Remove-PnPContentTypeFromDocumentSet Remove-PnPContentTypeFromList Remove-PnPCustomAction Remove-PnPDeletedMicrosoft365Group Remove-PnPEntraIDApp 2 Remove-PnPEntraIDGroup 2 Remove-PnPEntraIDGroupMember 2 Remove-PnPEntraIDGroupOwner 2 Remove-PnPEntraIDServicePrincipalAssignedAppRole 2 Remove-PnPEntraIDUser 2 Remove-PnPEventReceiver Remove-PnPExternalUser Remove-PnPField Remove-PnPFieldFromContentType Remove-PnPFile Remove-PnPFileFromSiteTemplate Remove-PnPFileSharingLink Remove-PnPFileVersion Remove-PnPFlow Remove-PnPFlowOwner Remove-PnPFolder Remove-PnPFolderSharingLink Remove-PnPGraphSubscription Remove-PnPGroup Remove-PnPGroupMember Remove-PnPHomeSite Remove-PnPHubSiteAssociation Remove-PnPHubToHubAssociation Remove-PnPIndexedProperty Remove-PnPJavaScriptLink Remove-PnPKnowledgeHubSite Remove-PnPLibraryFileVersionBatchDeleteJob Remove-PnPList Remove-PnPListDesign Remove-PnPListItem Remove-PnPListItemAttachment Remove-PnPListItemComments 1 Remove-PnPListItemVersion Remove-PnPManagedAppId 1 Remove-PnPMicrosoft365Group Remove-PnPMicrosoft365GroupMember Remove-PnPMicrosoft365GroupOwner Remove-PnPMicrosoft365GroupPhoto Remove-PnPMicrosoft365GroupSettings Remove-PnPNavigationNode Remove-PnPOrgAssetsLibrary Remove-PnPOrgNewsSite Remove-PnPPage Remove-PnPPageComponent Remove-PnPPlannerBucket Remove-PnPPlannerPlan Remove-PnPPlannerRoster Remove-PnPPlannerRosterMember Remove-PnPPlannerTask Remove-PnPProfileCardProperty 1 Remove-PnPPropertyBagValue Remove-PnPPublishingImageRendition Remove-PnPRoleDefinition Remove-PnPSdnProvider Remove-PnPSearchConfiguration Remove-PnPSearchExternalConnection Remove-PnPSearchExternalItem 1 Remove-PnPSiteCollectionAdmin Remove-PnPSiteCollectionAppCatalog Remove-PnPSiteCollectionTermStore Remove-PnPSiteDesign Remove-PnPSiteDesignTask Remove-PnPSiteFileVersionBatchDeleteJob Remove-PnPSiteGroup Remove-PnPSiteScript Remove-PnPSiteUserInvitations Remove-PnPStorageEntity Remove-PnPStoredCredential Remove-PnPTaxonomyItem Remove-PnPTeamsApp Remove-PnPTeamsChannel Remove-PnPTeamsChannelUser Remove-PnPTeamsTab Remove-PnPTeamsTag Remove-PnPTeamsTeam Remove-PnPTeamsUser Remove-PnPTenantCdnOrigin Remove-PnPTenantDeletedSite Remove-PnPTenantRestrictedSearchAllowedList 1 Remove-PnPTenantSite Remove-PnPTenantSyncClientRestriction Remove-PnPTenantTheme Remove-PnPTerm Remove-PnPTermGroup Remove-PnPTermLabel Remove-PnPTodoList 1 Remove-PnPUser Remove-PnPUserInfo Remove-PnPUserProfile Remove-PnPUserProfilePhoto 1 Remove-PnPView Remove-PnPVivaConnectionsDashboardACE Remove-PnPVivaEngageCommunity 1 Remove-PnPWeb Remove-PnPWebhookSubscription Remove-PnPWebPart Remove-PnPWikiPage Rename Rename-PnPFile Rename-PnPFolder Rename-PnPTenantSite Repair Repair-PnPSite Request Request-PnPPersonalSite Request-PnPReIndexList Request-PnPReIndexWeb Request-PnPSyntexClassifyAndExtract Reset Reset-PnPDocumentId 1 Reset-PnPFileVersion Reset-PnPMicrosoft365GroupExpiration Reset-PnPRetentionLabel Reset-PnPUserOneDriveQuotaToDefault Resolve Resolve-PnPFolder Restart Restart-PnPFlowRun Restore Restore-PnPDeletedContainer Restore-PnPDeletedMicrosoft365Group Restore-PnPFileVersion Restore-PnPFlow 1 Restore-PnPListItemVersion Restore-PnPRecycleBinItem Restore-PnPTenantRecycleBinItem Restore-PnPTenantSite Revoke Revoke-PnPAzureADAppSitePermission Revoke-PnPEntraIDAppSitePermission 2 Revoke-PnPHubSiteRights Revoke-PnPSiteDesignRights Revoke-PnPTenantServicePrincipalPermission Revoke-PnPUserSession Save Save-PnPPageConversionLog Save-PnPSiteTemplate Save-PnPTenantTemplate Send Send-PnPMail Set Set-PnPAdaptiveScopeProperty Set-PnPApplicationCustomizer Set-PnPAppSideLoading Set-PnPAuditing Set-PnPAvailablePageLayouts Set-PnPAzureADAppSitePermission Set-PnPAzureADGroup Set-PnPBrowserIdleSignout Set-PnPBuiltInDesignPackageVisibility Set-PnPBuiltInSiteTemplateSettings Set-PnPClientSidePage 2 Set-PnPContentType Set-PnPContext Set-PnPCopilotAdminLimitedMode 1 Set-PnPDefaultColumnValues Set-PnPDefaultContentTypeToList Set-PnPDefaultPageLayout Set-PnPDisableSpacesActivation Set-PnPDocumentSetField Set-PnPEntraIDAppSitePermission 2 Set-PnPEntraIDGroup 2 Set-PnPField Set-PnPFileCheckedIn Set-PnPFileCheckedOut Set-PnPFolderPermission Set-PnPFooter Set-PnPGraphSubscription Set-PnPGroup Set-PnPGroupPermissions Set-PnPHideDefaultThemes Set-PnPHomePage Set-PnPHomeSite Set-PnPHubSite Set-PnPImageListItemColumn Set-PnPIndexedProperties Set-PnPInPlaceRecordsManagement Set-PnPKnowledgeHubSite Set-PnPList Set-PnPListInformationRightsManagement Set-PnPListItem Set-PnPListItemAsRecord Set-PnPListItemPermission Set-PnPListPermission Set-PnPListRecordDeclaration Set-PnPManagedAppId 1 Set-PnPMasterPage Set-PnPMessageCenterAnnouncementAsArchived Set-PnPMessageCenterAnnouncementAsFavorite Set-PnPMessageCenterAnnouncementAsNotArchived Set-PnPMessageCenterAnnouncementAsNotFavorite Set-PnPMessageCenterAnnouncementAsRead Set-PnPMessageCenterAnnouncementAsUnread Set-PnPMicrosoft365Group Set-PnPMicrosoft365GroupSettings Set-PnPOrgAssetsLibrary 1 Set-PnPPage Set-PnPPageTextPart Set-PnPPageWebPart Set-PnPPlannerBucket Set-PnPPlannerConfiguration Set-PnPPlannerPlan Set-PnPPlannerTask Set-PnPPlannerUserPolicy Set-PnPPowerAppByPassConsent 1 Set-PnPPropertyBagValue Set-PnPRequestAccessEmails Set-PnPRetentionLabel Set-PnPRoleDefinition Set-PnPSearchConfiguration Set-PnPSearchExternalConnection Set-PnPSearchExternalItem Set-PnPSearchExternalSchema Set-PnPSearchSettings Set-PnPSite Set-PnPSiteArchiveState Set-PnPSiteClassification Set-PnPSiteClosure Set-PnPSiteDesign Set-PnPSiteGroup Set-PnPSitePolicy Set-PnPSiteScript Set-PnPSiteScriptPackage Set-PnPSiteSensitivityLabel Set-PnPSiteTemplateMetadata Set-PnPSiteVersionPolicy Set-PnPStorageEntity Set-PnPStructuralNavigationCacheSiteState Set-PnPStructuralNavigationCacheWebState Set-PnPTaxonomyFieldValue Set-PnPTeamifyPromptHidden Set-PnPTeamsChannel Set-PnpTeamsChannelUser Set-PnPTeamsTab Set-PnPTeamsTag Set-PnPTeamsTeam Set-PnPTeamsTeamArchivedState Set-PnPTeamsTeamPicture Set-PnPTemporarilyDisableAppBar Set-PnPTenant Set-PnPTenantAppCatalogUrl Set-PnPTenantCdnEnabled Set-PnPTenantCdnPolicy Set-PnPTenantRestrictedSearchMode Set-PnPTenantSite Set-PnPTenantSyncClientRestriction Set-PnPTerm Set-PnPTermGroup Set-PnPTermSet Set-PnPTheme Set-PnPUserOneDriveQuota Set-PnPUserProfilePhoto 1 Set-PnPUserProfileProperty Set-PnPView Set-PnPVivaConnectionsDashboardACE Set-PnPVivaEngageCommunity 1 Set-PnPWeb Set-PnPWebHeader Set-PnPWebhookSubscription Set-PnPWebPartProperty Set-PnPWebPermission Set-PnPWebTheme Set-PnPWikiPageContent Start Start-PnPTraceLog 1 Stop Stop-PnPFlowRun Stop-PnPTraceLog 1 Submit Submit-PnPSearchQuery Submit-PnPTeamsChannelMessage Sync Sync-PnPAppToTeams Sync-PnPSharePointUserProfilesFromAzureActiveDirectory Test Test-PnPListItemIsRecord Test-PnPMicrosoft365GroupAliasIsUsed Test-PnPSite Test-PnPTenantTemplate Undo Undo-PnPFileCheckedOut Uninstall Uninstall-PnPApp Unlock Unlock-PnPSensitivityLabelEncryptedFile Unpublish Unpublish-PnPApp Unpublish-PnPContentType Unpublish-PnPSyntexModel Unregister Unregister-PnPHubSite Update Update-PnPApp Update-PnPAvailableSiteClassification Update-PnPSiteDesignFromWeb Update-PnPTeamsApp Update-PnPTeamsUser Update-PnPTodoList 1 Update-PnPUserType Update-PnPVivaConnectionsDashboardACE 2 Update-SiteClassification 2"
  },
  "consent.html": {
    "href": "consent.html",
    "title": "Consent results | PnP PowerShell",
    "keywords": "Consent results var queryString = window.location.search; var urlParams = new URLSearchParams(queryString); var success = urlParams.get('admin_consent') if(success.toLowerCase() === 'true') { document.write(\"You consented successfully for your newly created Azure AD Application. You may close this browser now.\"); } else { document.write(\"You did not consent successfully for your newly created Azure AD Application. Please navigate to your Azure AD, find the application and provide consent there.\"); }"
  },
  "index.html": {
    "href": "index.html",
    "title": "PnP PowerShell | PnP PowerShell",
    "keywords": "PnP PowerShell PnP PowerShell is a cross-platform PowerShell Module providing over 700 cmdlets that work with Microsoft 365 environments and products such as SharePoint Online, Microsoft Teams, Microsoft Planner, Microsoft Power Platform, Microsoft Entra, Microsoft Purview, Microsoft Search, and more. It runs on Windows, Linux and MacOS. Note As of September 9th, 2024, as part of a focus on improving the security posture, the multi-tenant PnP Management Shell Entra ID app (with Client/ApplicationID: 31359c7f-bd7e-475c-86db-fdb8c937548e) has been deleted. It impacts credentials(username + password), Interactive auth flow and Device login flow if it depended on the said multi-tenant app. It has always been a recommended practice to register your own Entra ID Application with minimal permissions required for your scripts to use with PnP PowerShell. This has become a mandatory step now. The linked post has more details and it will guide you through how to do so and get your scripts back up & running with minimal code changes. Getting up and running Starting to use PnP PowerShell consists out of 3 steps: Installing the PnP.PowerShell module Registering your own Entra ID Application Connecting and authenticating Once you're set up, check out the cmdlets section to discover what you can do and how to use the cmdlets. Have a look at the articles section covering various topics how to get the most out of using PnP PowerShell. I've found a bug, where do I need to log an issue or create a PR You can create an issue at https://github.com/pnp/powershell/issues, but please consider first if asking a question at https://github.com/pnp/powershell/discussions is more appropriate. We would like to focus the issues on actual bugs whereas PnP PowerShell related questions can be asked in the discussions section. As some of the code being PnP PowerShell is actually coming from other PnP repositories, we can move your issue over to that specific repository. You will be notified by email about that. Before you start to work on code change consider starting a discussion in the repository first. It could potentially save you a lot of time if someone is about to submit a change with exactly the same functionality. It will also allow you to discuss a possible change with the maintainers of the repository before you start to work on it. Contributing to PnP PowerShell Follow the getting started contributing guidelines to help out. Sharing is caring! Supportability and SLA This library is open-source and community provided library with active community providing support for it. This is not Microsoft provided module so there's no SLA or direct support for this open-source component from Microsoft. Please report any issues using the issues list. This project has adopted the Microsoft Open Source Code of Conduct. For more information see the Code of Conduct FAQ or contact opencode@microsoft.com with any additional questions or comments."
  }
}